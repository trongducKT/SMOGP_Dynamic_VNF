{"1": [{"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.3643122676579926, "obj2": 0.5017700828011633}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe * MUM ) - MUC ) ,( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,BR ) ,( FirstVNF_Mem - RRS ) )", "choosing": "( Max( CS,MUR ) / Max( DS,MLU ) )", "obj1": 0.29182156133828996, "obj2": 0.6523700062351131}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,PN ) - ( RRS + ( Const - PN ) ) ) + Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( ( MUC / MUR ),RCSe ) )", "obj1": 0.5892193308550185, "obj2": 0.37544266266429177}, {"determining": "( ( ACS - PN ) * ( DDR * ARS ) )", "choosing": "Min( ( MUM - RMSe ) ,Max( CS,CS ) )", "obj1": 0.17286245353159851, "obj2": 0.7212423634061148}, {"determining": "( Min( BR ,ACS ) * ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( RCSe,RRSe ) )", "obj1": 0.3587360594795539, "obj2": 0.5680946533932606}, {"determining": "( Max( FirstVNF_CPU,MRS ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + DS ) / Min( DS ,RMSe ) )", "obj1": 0.05762081784386617, "obj2": 0.8606461619364653}, {"determining": "Min( Min( FirstVNF_CPU ,ACS ) ,( FirstVNF_RAM + DDR ) )", "choosing": "Min( ( MLU + RRSe ) ,( CS + DS ) )", "obj1": 0.3252788104089219, "obj2": 0.6689193735772603}, {"determining": "( Min( CRS ,ACS ) + Min( ARS ,DDR ) )", "choosing": "( ( RMSe * MUR ) * ( RRSe + CS ) )", "obj1": 0.3104089219330855, "obj2": 0.6276458424919271}, {"determining": "Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( MLU ,MLU ) )", "obj1": 0.11524163568773234, "obj2": 0.7763386136262201}, {"determining": "Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) )", "choosing": "Max( ( RCSe / ( MUR - RRSe ) ),( MUR * DS ) )", "obj1": 0.22676579925650558, "obj2": 0.6768726456902892}, {"determining": "Max( ( FirstVNF_Mem * ( BR * ( MRS - BR ) ) ),( Max( Min( ( ( Min( DDR ,RRS ) + Min( BR ,FirstVNF_RAM ) ) + ( ( Max( RRS,FirstVNF_RAM ) + Min( DDR ,FirstVNF_CPU ) ) / FirstVNF_Mem ) ) ,Min( DDR ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR * ( ( ( Min( MUM ,( ( CS / RMSe ) * MUR ) ) + RMSe ) * MLU ) - Min( RRSe ,MUR ) ) ) / Min( ( Max( ( ( RRSe - MUM ) / MUM ),( ( CS - Max( Min( RCSe ,DS ),Min( RMSe ,RMSe ) ) ) * Max( Max( RRSe,( RRSe + MUC ) ),Min( RRSe ,RMSe ) ) ) ) / ( Min( RRSe ,MLU ) - ( MUM - RCSe ) ) ) ,MLU ) )", "obj1": 0.28066914498141265, "obj2": 0.6290687576281805}, {"determining": "( ( PN + ACS ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( MUC - RRSe ) )", "obj1": 0.28066914498141265, "obj2": 0.6582561686648974}, {"determining": "( Max( PN,AMS ) - Max( Const,RRS ) )", "choosing": "( Min( MUM ,MUR ) + ( RCSe * RMSe ) )", "obj1": 0.30111524163568776, "obj2": 0.612419097178886}, {"determining": "Max( ( AMS + RRS ),( PN * PN ) )", "choosing": "Max( ( RCSe - DS ),Min( RCSe ,MUM ) )", "obj1": 0.31784386617100374, "obj2": 0.5932059111038726}, {"determining": "Min( Max( FirstVNF_RAM,ACS ) ,( BR - BR ) )", "choosing": "( ( MLU - RCSe ) * ( RMSe / RCSe ) )", "obj1": 0.24907063197026022, "obj2": 0.6961746971681976}, {"determining": "( ( DDR / FirstVNF_RAM ) + Max( FirstVNF_CPU,MRS ) )", "choosing": "Max( ( RRSe + MUM ),( RMSe - MUC ) )", "obj1": 0.3420074349442379, "obj2": 0.5713069056405444}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( ( Min( AMS ,ACS ) / Min( RRS ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM * MDR ) / Max( BR,ACS ) ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( MUC + MUC ) )", "obj1": 0.30855018587360594, "obj2": 0.6022537178592637}, {"determining": "( ( Min( Min( BR ,( FirstVNF_CPU_Server * CRS ) ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( BR * Max( MDR,( Const - DDR ) ) ) ,ACS ) )", "choosing": "Max( ( CS + MUR ),Min( ( Max( RMSe,DS ) * ( MLU * Max( Min( ( ( MUR - MUM ) + Max( RMSe,MLU ) ) ,Max( MUR,DS ) ),RRSe ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + Max( ( ( FirstVNF_Mem_Server * CRS ) - ( Max( BR,FirstVNF_CPU ) * ( MDR * DDR ) ) ),AMS ) ) - Min( ARS ,FirstVNF_Mem ) ) * ( AMS + ( FirstVNF_CPU * CRS ) ) )", "choosing": "Max( ( ( RCSe / DS ) - DS ),Max( MUR,( ( ( RRSe - ( CS + MLU ) ) / MUR ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU ) * ( ( ACS * MDR ) / Const ) )", "choosing": "( ( ( MUC * MLU ) * ( MUR + DS ) ) - Min( Max( MLU,MLU ) ,Min( MLU ,DS ) ) )", "obj1": 0.26579925650557623, "obj2": 0.6539367099074247}, {"determining": "Max( ( ( FirstVNF_Mem + ACS ) - RRS ),( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) )", "choosing": "( ( CS * CS ) / ( RMSe - ( MUR - RRSe ) ) )", "obj1": 0.21189591078066913, "obj2": 0.7832191256400398}, {"determining": "( ( MRS + ARS ) * ( FirstVNF_RAM_Server / PN ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.2899628252788104, "obj2": 0.6219307682966304}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "( ( ( CS / MUM ) / ( RRSe * RCSe ) ) + ( ( CS - MLU ) - ( MUC * MLU ) ) )", "obj1": 0.9330855018587361, "obj2": 0.06528023203357243}, {"determining": "Min( ( AMS + Max( ( PN + Min( MDR ,MRS ) ),( Min( FirstVNF_RAM ,Min( CRS ,Const ) ) * FirstVNF_Mem_Server ) ) ) ,Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( Max( Min( MLU ,MLU ),CS ) + ( MUM + ( MUR * MUC ) ) ) ) ) ) ,Max( RCSe,MUC ) ) )", "obj1": 0.23234200743494424, "obj2": 0.6246133457864458}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) )", "choosing": "Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) )", "obj1": 0.22676579925650558, "obj2": 0.7651645237149838}, {"determining": "Max( Max( ( CRS + FirstVNF_RAM ),( RRS / Const ) ),( Max( ACS,FirstVNF_CPU ) + Max( AMS,ARS ) ) )", "choosing": "Min( Min( Max( RMSe,MUM ) ,Min( MUC ,RMSe ) ) ,( Min( RMSe ,DS ) * ( RRSe - MUR ) ) )", "obj1": 0.16728624535315986, "obj2": 0.7377804467690534}, {"determining": "Min( ( ( FirstVNF_CPU_Server * CRS ) / ACS ) ,( Min( FirstVNF_Mem ,BR ) / FirstVNF_RAM ) )", "choosing": "Min( ( DS + RRSe ) ,( ( CS / MLU ) * DS ) )", "obj1": 0.4479553903345725, "obj2": 0.5227684563555849}, {"determining": "( ( ( FirstVNF_Mem_Server / RRS ) - Min( Const ,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( MUM ,RCSe ) ,RMSe ) - Max( RCSe,MUM ) )", "obj1": 0.25464684014869887, "obj2": 0.6468649574860941}, {"determining": "( ( ARS / BR ) / ( Max( FirstVNF_RAM_Server,DDR ) * Max( CRS,BR ) ) )", "choosing": "( ( ( MUR * MUC ) + Max( RRSe,MUC ) ) + Min( ( MUM * RCSe ) ,( MLU * MUR ) ) )", "obj1": 0.3048327137546468, "obj2": 0.6048109021466131}, {"determining": "( ( ( MRS / ARS ) * AMS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - RMSe ) - Min( RRSe ,DS ) ) / ( Min( MUM ,MUM ) + ( DS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) / ( FirstVNF_Mem_Server * PN ) )", "choosing": "Max( ( ( MUC * RCSe ) + Max( RRSe,RCSe ) ),Min( Max( MUR,RRSe ) ,Min( RRSe ,MLU ) ) )", "obj1": 0.2936802973977695, "obj2": 0.6138620713612553}, {"determining": "( Min( AMS ,( MRS + PN ) ) / Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "Max( Min( MUC ,MLU ),( CS * ( RRSe / CS ) ) )", "obj1": 0.3382899628252788, "obj2": 0.571428429538721}, {"determining": "Min( Max( Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),Min( ( AMS + MRS ) ,( Const - MDR ) ) ) ,( ( ( AMS - ARS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server + DDR ) + ( RRS * MDR ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( MLU - MUC ) ) + ( Max( RMSe,RMSe ) + ( RCSe / RCSe ) ) ) * ( Max( ( MUM * RCSe ),Min( DS ,CS ) ) / ( ( MLU / MUC ) + ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS / CRS ) ,Min( ( FirstVNF_RAM_Server - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( Max( RCSe,RRSe ) ,Max( CS,RCSe ) ) + Max( Max( MUR,RRSe ),( MUM * DS ) ) ) * ( Min( ( MLU / MLU ) ,Min( MUC ,MUC ) ) / ( ( MUR + CS ) + ( DS / RRSe ) ) ) )", "obj1": 0.25650557620817843, "obj2": 0.6254829917199252}, {"determining": "( Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM * CRS ) + Max( ACS,MRS ) ) / Min( ( DDR + CRS ) ,( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RCSe + CS ) ) ,MLU ) + ( Max( RRSe,MUR ) * MUC ) )", "obj1": 0.3215613382899628, "obj2": 0.6100265887611674}, {"determining": "( ( FirstVNF_RAM_Server - BR ) + Min( Min( Max( FirstVNF_RAM_Server,MRS ) ,( MDR * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( ( ( Max( ( CS * RRSe ),Min( RRSe ,( Max( RRSe,RMSe ) - ( MLU - DS ) ) ) ) - RMSe ) - MUC ) / ( Min( MLU ,Min( ( MUC / RMSe ) ,MUC ) ) / MUM ) ) + Max( ( Max( RRSe,Min( MLU ,CS ) ) / DS ),Max( ( MUM / CS ),Min( ( RRSe - ( CS / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8338167335396931}, {"determining": "( ( ( ( MDR * RRS ) + Max( MRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU - PN ) - ARS ) ) + Max( PN,DDR ) )", "choosing": "Min( Min( ( Min( MLU ,MUR ) + ( RRSe + RCSe ) ) ,( ( ( Max( ( CS * RMSe ),Min( MUC ,RRSe ) ) + RCSe ) * ( ( MUR + ( ( CS - MUC ) * ( MUR + DS ) ) ) + Max( Min( Min( RCSe ,RCSe ) ,MUM ),MUR ) ) ) - ( RMSe * MUC ) ) ) ,( MLU + ( DS / CS ) ) )", "obj1": 0.12453531598513011, "obj2": 0.7957130479722587}, {"determining": "Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( FirstVNF_RAM * FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Min( ( RRSe + RMSe ) ,( RRSe + MUC ) ) ,( ( CS * RRSe ) - ( RRSe / RCSe ) ) ),Max( ( Min( RMSe ,MUM ) * ( MUM * DS ) ),( Min( MUR ,MUM ) * ( MUR + RCSe ) ) ) )", "obj1": 0.3048327137546468, "obj2": 0.6052718407463775}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Const ) * ( FirstVNF_CPU + AMS ) ),( ( FirstVNF_Mem - PN ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( ( FirstVNF_CPU_Server - MDR ) - Min( RRS ,FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS + FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( Min( ( MUC / MUR ) ,RRSe ),MUM ) ,( Max( ( RCSe - CS ),( RCSe / RCSe ) ) / RMSe ) )", "obj1": 0.3382899628252788, "obj2": 0.5744486843642472}, {"determining": "( ( PN * RRS ) + ( ACS - ARS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.3828996282527881, "obj2": 0.5390694799620642}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) * ( AMS / AMS ) )", "choosing": "Max( Min( RRSe ,RRSe ),( ( RRSe - MUM ) * MUC ) )", "obj1": 0.3345724907063197, "obj2": 0.5787469830943787}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.48433480542598634}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS + MLU ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) )", "obj1": 0.22676579925650558, "obj2": 0.6325575840483307}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( Max( ( MDR - ARS ),Min( MDR ,AMS ) ) / Min( ( FirstVNF_Mem / RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) * Max( Max( Max( MDR,MDR ),Max( AMS,BR ) ),( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( CS + ( MUR + ( MUC * MUC ) ) ) / Min( RCSe ,RRSe ) )", "obj1": 0.2620817843866171, "obj2": 0.7401121817633385}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( ( RRSe - DS ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.1412639405204461, "obj2": 0.754867323730759}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.23234200743494424, "obj2": 0.6194850103683504}], "2": [{"determining": "( ( PN * RRS ) + ( ACS - ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MRS ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + DS ) / Min( DS ,RMSe ) )", "obj1": 0.05762081784386617, "obj2": 0.8606461619364653}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe * MUM ) - MUC ) ,( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + ( Min( MDR ,ACS ) * ( PN * ( Min( FirstVNF_RAM_Server ,MRS ) * FirstVNF_CPU_Server ) ) ) ) + Max( BR,DDR ) )", "choosing": "( Min( RCSe ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( RMSe,( RCSe * ( ( ( MUR / Max( ( MLU - MUM ),RRSe ) ) * Max( ( ( RRSe * CS ) / ( RMSe / MUR ) ),DS ) ) / ( CS + MLU ) ) ) ) )", "obj1": 0.05762081784386617, "obj2": 0.8606461619364653}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) )", "obj1": 0.8587360594795539, "obj2": 0.13678674818926978}, {"determining": "( Min( RRS ,FirstVNF_Mem ) + ( ACS - ARS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + ( RCSe - CS ) ) / ( MUM + RCSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.2580402388651461}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( RCSe,RRSe ) )", "obj1": 0.604089219330855, "obj2": 0.32176535737567175}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / ( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) - MUR ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6809497585609424}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( Min( AMS ,BR ),( Min( ( AMS * ( FirstVNF_CPU / ( PN + ( CRS * RRS ) ) ) ) ,Const ) - MDR ) )", "choosing": "( ( Max( RRSe,MLU ) / MUC ) / ( MLU * Min( MUM ,CS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.7174873133625088}, {"determining": "Min( ( ACS / CRS ) ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( Max( RCSe,RRSe ) ,Max( CS,RCSe ) ) + Max( Max( MUR,RRSe ),( MUM * DS ) ) ) * ( Min( ( MLU / MLU ) ,Min( MUC ,MUC ) ) / ( ( Min( MUR ,MUC ) + CS ) + ( DS / RRSe ) ) ) )", "obj1": 0.2211895910780669, "obj2": 0.6587783022151886}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) * ( AMS / AMS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13568773234200743, "obj2": 0.754777056767508}, {"determining": "( ( ( PN * RRS ) + ( ACS - ARS ) ) * ( ( ( FirstVNF_CPU_Server - MDR ) - Min( RRS ,FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS + FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( Min( ( MUC / MUR ) ,RRSe ),MUM ) ,( Max( ( RCSe - CS ),( Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) ) / RCSe ) ) / RMSe ) )", "obj1": 0.6617100371747212, "obj2": 0.2985969824302619}, {"determining": "( ( PN * RRS ) + ( ACS - Max( AMS,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) / ( MUM + RCSe ) ) ) )", "obj1": 0.5427509293680297, "obj2": 0.3915189512540827}, {"determining": "( ( PN * RRS ) + ( ACS - ARS ) )", "choosing": "Min( Max( Min( ( MUC / MUR ) ,RRSe ),MUM ) ,( Max( ( RCSe - CS ),( RCSe / RCSe ) ) / RMSe ) )", "obj1": 0.6654275092936803, "obj2": 0.2891026144342068}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,PN ) - ( RRS + ( Const - PN ) ) ) + Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( ( MUC / MUR ),RCSe ) )", "obj1": 0.5892193308550185, "obj2": 0.37544266266429177}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( Max( ( Max( Min( Min( DDR ,Const ) ,FirstVNF_RAM ),RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe - DS ),( ( MUM / RMSe ) - MUR ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7707019953983979}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( FirstVNF_RAM_Server + ( ( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) + FirstVNF_CPU ) ) / ( BR - Const ) )", "choosing": "( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,( ( MUM / MUM ) * ( ( RCSe - RRSe ) - MUR ) ) ) ) / Max( MLU,RRSe ) ) ) )", "obj1": 0.5613382899628253, "obj2": 0.3788453682344551}, {"determining": "( ( Min( ( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( BR * MRS ) ,ACS ) ) ,ACS ) / Min( RRS ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM * MDR ) / Max( BR,ACS ) ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( ( ( RRSe / DS ) - MUM ) + MUC ) )", "obj1": 0.10223048327137546, "obj2": 0.7999666559492306}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.48433480542598634}, {"determining": "( Max( FirstVNF_CPU,MRS ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + DS ) / Min( DS ,RMSe ) )", "obj1": 0.06133828996282528, "obj2": 0.8563193041662023}, {"determining": "( ( ACS * FirstVNF_CPU ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) )", "choosing": "( RRSe / Min( ( ( Max( ( DS / ( ( MUR * MUM ) * ( RMSe + MUC ) ) ),RCSe ) / MUM ) - MUR ) ,RMSe ) )", "obj1": 0.08921933085501858, "obj2": 0.8128725223574271}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS + MLU ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) )", "obj1": 0.22676579925650558, "obj2": 0.6325575840483307}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),ACS ) + ( BR / DDR ) )", "choosing": "( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( MLU - RMSe ),MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) )", "obj1": 0.07434944237918216, "obj2": 0.8265216932689483}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.48433480542598634}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS + MLU ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) )", "obj1": 0.22676579925650558, "obj2": 0.6325575840483307}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),ACS ) + ( BR / PN ) )", "choosing": "( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8338167335396931}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,RCSe ) )", "obj1": 0.5892193308550185, "obj2": 0.37544266266429177}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.08550185873605948, "obj2": 0.8160805645594854}, {"determining": "Max( ( FirstVNF_Mem * ( BR * ( MRS - BR ) ) ),( Max( Min( ( ( Min( DDR ,RRS ) + Min( BR ,FirstVNF_RAM ) ) + ( ( Max( RRS,FirstVNF_RAM ) + Min( DDR ,FirstVNF_CPU ) ) / FirstVNF_Mem ) ) ,Min( DDR ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR * ( ( ( Min( MUM ,( ( CS / RMSe ) * MUR ) ) + RMSe ) * MLU ) - Min( RRSe ,MUR ) ) ) / Min( ( Max( ( ( RRSe - MUM ) / MUM ),( ( CS - Max( Min( RCSe ,DS ),Min( RMSe ,RMSe ) ) ) * Max( Max( RRSe,( RRSe + MUC ) ),Min( RRSe ,RMSe ) ) ) ) / ( Min( RRSe ,MLU ) - ( MUM - RCSe ) ) ) ,MLU ) )", "obj1": 0.08550185873605948, "obj2": 0.8160805645594854}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * MUR ) ,MUR ) )", "obj1": 0.9144981412639405, "obj2": 0.06762106511299272}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.8306347618297832}, {"determining": "( ( FirstVNF_RAM_Server - BR ) + Min( Min( Max( FirstVNF_RAM_Server,MRS ) ,( MDR * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( ( ( Max( ( CS * RRSe ),Min( RRSe ,( Max( RRSe,RMSe ) - ( MLU - DS ) ) ) ) - RMSe ) - MUC ) / ( Min( MLU ,Min( ( MUC / RMSe ) ,MUC ) ) / MUM ) ) + Max( ( Max( RRSe,Min( MLU ,CS ) ) / DS ),Max( ( MUM / CS ),Min( ( RRSe - ( CS / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8338167335396931}, {"determining": "( ( FirstVNF_RAM_Server - BR ) + Min( Min( Max( FirstVNF_RAM_Server,MRS ) ,( MDR * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( ( ( Max( ( CS * RRSe ),Min( RRSe ,( Max( RRSe,RMSe ) - ( MLU - DS ) ) ) ) - RMSe ) - MUC ) / ( Min( MLU ,Min( ( MUC / RMSe ) ,MUC ) ) / MUM ) ) + Max( ( Max( RRSe,Min( MLU ,CS ) ) / DS ),Max( ( MUM / CS ),Min( ( RRSe - ( CS / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.8306347618297832}, {"determining": "( ( Min( Min( BR ,( FirstVNF_CPU_Server * CRS ) ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( BR * Max( MDR,( Const - DDR ) ) ) ,ACS ) )", "choosing": "Max( ( CS + MUR ),Min( ( Max( RMSe,DS ) * ( MLU * Max( Min( ( ( MUR - MUM ) + Max( RMSe,MLU ) ) ,Max( MUR,DS ) ),RRSe ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + Max( ( ( FirstVNF_Mem_Server * CRS ) - ( Max( BR,FirstVNF_CPU ) * ( MDR * DDR ) ) ),AMS ) ) - Min( ARS ,FirstVNF_Mem ) ) * ( AMS + ( FirstVNF_CPU * CRS ) ) )", "choosing": "Max( ( ( RCSe / DS ) - DS ),Max( MUR,( ( ( RRSe - ( CS + MLU ) ) / MUR ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( Max( FirstVNF_Mem_Server,RRS ) ,( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( Min( ( MUR - Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) ) ,MUR ) / Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * RRS ) + ( ACS - ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,ACS ) + Min( ARS ,DDR ) )", "choosing": "( ( MLU + DS ) / Min( DS ,RMSe ) )", "obj1": 0.055762081784386616, "obj2": 0.8585270105294828}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) )", "obj1": 0.8587360594795539, "obj2": 0.13678674818926978}, {"determining": "( Min( RRS ,FirstVNF_Mem ) + ( ACS - ARS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + ( RCSe - CS ) ) / ( MUM + RCSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.2580402388651461}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "( ( PN * RRS ) + ( ACS - ARS ) )", "choosing": "Min( Max( Min( ( MUC / MUR ) ,RRSe ),MUM ) ,( Max( ( RCSe - CS ),( RCSe / RCSe ) ) / RMSe ) )", "obj1": 0.6654275092936803, "obj2": 0.2891026144342068}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( ARS,( ARS / Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,BR ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ) - MUC ) / Min( DS ,MUC ) )", "obj1": 0.14312267657992564, "obj2": 0.7160760593905002}, {"determining": "( ( MDR / Const ) / ( BR - MDR ) )", "choosing": "( Max( MUM,CS ) + Max( ( Max( MUM,CS ) + Max( CS,RCSe ) ),RCSe ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / ( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) - MUR ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6809497585609424}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) + ( ( Max( Max( ( MUM - MUM ),MUC ),( Max( ( RMSe - ( MUM / RCSe ) ),MUC ) - ( RCSe - MLU ) ) ) * MUM ) + ( MUR * DS ) ) )", "obj1": 0.5687732342007435, "obj2": 0.36958489617847223}, {"determining": "( AMS / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,( ( MLU + ( MUM * RMSe ) ) * ( MUC + MUC ) ) )", "obj1": 0.5148698884758365, "obj2": 0.39103977493415654}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / ( ( MDR / Const ) / ( BR - MRS ) ) ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - ( Max( MUM,CS ) + Max( CS,RCSe ) ) ) )", "obj1": 0.27695167286245354, "obj2": 0.5731563165514061}, {"determining": "( ( MDR / ACS ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / ( ( MLU + ( MUM * RMSe ) ) * ( MUC + MUC ) ) ) ,Max( RCSe,RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.4231186638635877}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) * ( AMS / AMS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13568773234200743, "obj2": 0.754777056767508}, {"determining": "Min( ( Const / ( ( Const / ACS ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.22304832713754646, "obj2": 0.63159586136403}, {"determining": "Min( ( Const / ( ( Const / ACS ) / RRS ) ) ,Min( ARS ,DDR ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MLU + DS ) ) ,MUR ) )", "obj1": 0.19888475836431227, "obj2": 0.66521115441863}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( Min( ( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( BR * MRS ) ,ACS ) ) ,ACS ) / Min( RRS ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM * MDR ) / Max( BR,ACS ) ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( ( ( RRSe / DS ) - MUM ) + MUC ) )", "obj1": 0.10223048327137546, "obj2": 0.7999666559492306}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "Max( Max( BR,FirstVNF_Mem_Server ),( ARS / Min( ( ( ARS / ACS ) + ACS ) ,Min( PN ,BR ) ) ) )", "choosing": "( ( ( RCSe / MUC ) - ( RCSe / MUC ) ) / Min( DS ,MUC ) )", "obj1": 0.2100371747211896, "obj2": 0.656085391399929}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( Max( ( Max( Min( Min( DDR ,Const ) ,FirstVNF_RAM ),RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe - DS ),( ( MUM / RMSe ) - MUR ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7707019953983979}, {"determining": "Max( ( Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MLU ) - Min( CS ,MLU ) )", "obj1": 0.25650557620817843, "obj2": 0.5917337272792613}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,( Max( CS,MUR ) / Max( DS,MLU ) ) ) )", "obj1": 0.5594795539033457, "obj2": 0.3710713199778055}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,( Max( CS,MUR ) / Max( DS,MLU ) ) ) )", "obj1": 0.5594795539033457, "obj2": 0.3710713199778055}, {"determining": "( Max( FirstVNF_CPU,MRS ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + DS ) / Min( DS ,RMSe ) )", "obj1": 0.06133828996282528, "obj2": 0.8563193041662023}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,( ARS / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( RCSe / MUC ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.06319702602230483, "obj2": 0.8372725957768363}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.48433480542598634}, {"determining": "Max( Max( FirstVNF_Mem_Server,BR ),( FirstVNF_Mem * Max( FirstVNF_Mem_Server,BR ) ) )", "choosing": "( Min( ( ( Min( MUC ,RRSe ) / Min( DS ,CS ) ) - Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) ) ,MUR ) / Min( DS ,CS ) )", "obj1": 0.07806691449814127, "obj2": 0.8195783929198198}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),ACS ) + ( BR / DDR ) )", "choosing": "( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( MLU - RMSe ),MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) )", "obj1": 0.07434944237918216, "obj2": 0.8265216932689483}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.48433480542598634}, {"determining": "( ( ACS * FirstVNF_CPU ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) )", "choosing": "( RRSe / Min( ( ( Max( ( DS / ( ( MUR * MUM ) * ( RMSe + MUC ) ) ),RCSe ) / MUM ) - MUR ) ,RMSe ) )", "obj1": 0.08921933085501858, "obj2": 0.8128725223574271}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( MRS + ARS ) * ( FirstVNF_RAM_Server / PN ) )", "choosing": "( RRSe / Min( DS ,RMSe ) )", "obj1": 0.08921933085501858, "obj2": 0.8128725223574271}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * MUR ) ,MUR ) )", "obj1": 0.9144981412639405, "obj2": 0.06762106511299272}], "4": [{"determining": "Min( Max( FirstVNF_Mem_Server,RRS ) ,( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( Min( ( MUR - Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) ) ,MUR ) / Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,RRS ) ,( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( Min( ( MUR - Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) ) ,MUR ) / Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( Const / ( FirstVNF_CPU_Server + ACS ) ) ,PN ) ) + Min( ARS ,DDR ) )", "choosing": "( Max( RMSe,MLU ) / Min( RMSe ,DS ) )", "obj1": 0.05390334572490706, "obj2": 0.8602523685761233}, {"determining": "( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,MUR ) / Max( DS,MLU ) ) ) ) )", "obj1": 0.7490706319702602, "obj2": 0.2556989427418875}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) )", "obj1": 0.8587360594795539, "obj2": 0.13678674818926978}, {"determining": "( ( PN * RRS ) + ( ACS - ARS ) )", "choosing": "Min( Max( Min( ( MUC / MUR ) ,RRSe ),MUM ) ,( Max( ( RCSe - CS ),( RCSe / RCSe ) ) / RMSe ) )", "obj1": 0.6654275092936803, "obj2": 0.2891026144342068}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "( Min( RRS ,FirstVNF_Mem ) + ( ACS - ARS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + ( RCSe - CS ) ) / ( MUM + RCSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.2580402388651461}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( MDR / Const ) / ( BR - MDR ) )", "choosing": "( Max( MUM,CS ) + Max( ( Max( MUM,CS ) + Max( CS,RCSe ) ),RCSe ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( CS,( Max( CS,MUR ) / Max( DS,MLU ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.11895769962332502}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / ( ( MDR / Const ) / ( BR - MRS ) ) ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - ( Max( MUM,CS ) + Max( CS,RCSe ) ) ) )", "obj1": 0.27695167286245354, "obj2": 0.5731563165514061}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "Max( ARS,( ARS / Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,BR ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ) - MUC ) / Min( DS ,MUC ) )", "obj1": 0.14312267657992564, "obj2": 0.7160760593905002}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / ( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) - MUR ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6809497585609424}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) * ( AMS / AMS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13568773234200743, "obj2": 0.754777056767508}, {"determining": "Min( ( Const / ( ( Const / ACS ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.22304832713754646, "obj2": 0.63159586136403}, {"determining": "( AMS / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,( ( MLU + ( MUM * RMSe ) ) * ( MUC + MUC ) ) )", "obj1": 0.5148698884758365, "obj2": 0.39103977493415654}, {"determining": "Min( ( Const / ( ( Const / ACS ) / RRS ) ) ,Min( ARS ,DDR ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MLU + DS ) ) ,MUR ) )", "obj1": 0.19888475836431227, "obj2": 0.66521115441863}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "( ( ( MDR / Const ) / ( ( Max( FirstVNF_RAM_Server,( ( CRS - BR ) + ( ( FirstVNF_CPU - MRS ) / ( MRS / BR ) ) ) ) * FirstVNF_Mem_Server ) - MRS ) ) / ( BR - MRS ) )", "choosing": "( Max( MUM,RCSe ) + Max( Max( CS,RCSe ),RCSe ) )", "obj1": 0.5687732342007435, "obj2": 0.35157320417775395}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "Min( ( Min( ( ( ARS / ACS ) + ACS ) ,Min( PN ,BR ) ) + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ),( MUR * Min( DS ,MUC ) ) )", "obj1": 0.15613382899628253, "obj2": 0.699504714698585}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "Max( Max( FirstVNF_Mem_Server,BR ),( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) * BR ) )", "choosing": "( Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) / Min( DS ,CS ) )", "obj1": 0.09665427509293681, "obj2": 0.7984192087274494}, {"determining": "Max( Max( BR,FirstVNF_Mem_Server ),( ARS / Min( ( ( ARS / ACS ) + ACS ) ,Min( PN ,BR ) ) ) )", "choosing": "( ( ( RCSe / MUC ) - ( RCSe / MUC ) ) / Min( DS ,MUC ) )", "obj1": 0.2100371747211896, "obj2": 0.656085391399929}, {"determining": "( ( ( MDR / Const ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 0.5427509293680297, "obj2": 0.377644590595776}, {"determining": "Max( Max( ( Max( Min( Min( DDR ,Const ) ,FirstVNF_RAM ),RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe - DS ),( ( MUM / RMSe ) - MUR ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7707019953983979}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( Max( Max( MLU,Min( MUM ,MUM ) ),CS ) / CS ),MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.7997702601386351}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( ( Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MLU ) - Min( CS ,MLU ) )", "obj1": 0.25650557620817843, "obj2": 0.5917337272792613}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),ACS ) + ( BR / DDR ) )", "choosing": "( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( MLU - RMSe ),MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) )", "obj1": 0.07434944237918216, "obj2": 0.8265216932689483}, {"determining": "( Max( FirstVNF_CPU,MRS ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + DS ) / Min( DS ,RMSe ) )", "obj1": 0.06133828996282528, "obj2": 0.8563193041662023}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( ( ( Max( BR,CRS ) - Const ) / Const ) / ( BR - MRS ) ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,MUM ) / ( Min( CS ,MLU ) / MLU ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.12435576600387142}, {"determining": "( ( ( MDR / Const ) / ( Max( FirstVNF_RAM_Server,( ( CRS - BR ) + ( ( FirstVNF_CPU - MRS ) / ( MRS / BR ) ) ) ) * FirstVNF_Mem_Server ) ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( ( RCSe + Max( CS,RCSe ) ),MUR ) )", "obj1": 0.5631970260223048, "obj2": 0.357232554621774}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,( ARS / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( RCSe / MUC ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.06319702602230483, "obj2": 0.8372725957768363}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.48433480542598634}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_Mem - RRS ) / Const ) ) - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,( Max( ( Max( CS,MUR ) + Max( CS,RCSe ) ),MUR ) / Max( DS,MLU ) ) ) )", "obj1": 0.5576208178438662, "obj2": 0.3775987497412186}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.48433480542598634}], "5": [{"determining": "Min( Max( FirstVNF_Mem_Server,RRS ) ,( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( Min( ( MUR - Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) ) ,MUR ) / Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,RRS ) ,( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( Min( ( MUR - Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) ) ,MUR ) / Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( Const / ( FirstVNF_CPU_Server + ACS ) ) ,PN ) ) + Min( ARS ,DDR ) )", "choosing": "( Max( RMSe,MLU ) / Min( RMSe ,DS ) )", "obj1": 0.05390334572490706, "obj2": 0.8602523685761233}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( ( ( Max( BR,CRS ) - Const ) / Const ) / ( BR - MRS ) ) ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,MUR ) / Max( DS,MLU ) ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.2361340713165213}, {"determining": "( ( PN * RRS ) + ( ACS - ARS ) )", "choosing": "Min( Max( Min( ( MUC / MUR ) ,RRSe ),MUM ) ,( Max( ( RCSe - CS ),( RCSe / RCSe ) ) / RMSe ) )", "obj1": 0.6654275092936803, "obj2": 0.2891026144342068}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "( ( ( FirstVNF_Mem - Const ) / ( ( RRS - MDR ) / Const ) ) / ( BR - Max( AMS,( ( AMS + DDR ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( MUC ,MLU ),CS ) + ( Max( CS,( Max( ( ( RMSe + Min( MUR ,MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( DS ,RCSe ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8438661710037175, "obj2": 0.13524413802305613}, {"determining": "( ( MDR / Const ) / ( BR - MDR ) )", "choosing": "( Max( MUM,CS ) + Max( ( Max( MUM,CS ) + Max( CS,RCSe ) ),RCSe ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "( ( ( FirstVNF_Mem - Const ) / ( ( RRS - MDR ) / Const ) ) / ( BR - Max( AMS,( ( AMS + DDR ) - ( ( ARS + FirstVNF_RAM ) * ( AMS + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( Min( MUC ,MLU ),CS ) + ( Max( CS,( Max( ( ( RMSe + ( CS - MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( DS ,RCSe ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8438661710037175, "obj2": 0.13524413802305613}, {"determining": "( Min( RRS ,FirstVNF_Mem ) + ( ACS - ARS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + ( RCSe - CS ) ) / ( MUM + RCSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.2580402388651461}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / ( ( MDR / Const ) / ( BR - MRS ) ) ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - ( Max( MUM,CS ) + Max( CS,RCSe ) ) ) )", "obj1": 0.27695167286245354, "obj2": 0.5731563165514061}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "Max( ARS,( ARS / Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,BR ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ) - MUC ) / Min( DS ,MUC ) )", "obj1": 0.14312267657992564, "obj2": 0.7160760593905002}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / ( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) - MUR ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6809497585609424}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) * ( AMS / AMS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13568773234200743, "obj2": 0.754777056767508}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( ( ( Max( BR,CRS ) - Const ) / Const ) / ( BR - MRS ) ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,( Max( CS,MUM ) / ( Min( CS ,MLU ) / MLU ) ) ) / ( Min( CS ,MLU ) / MLU ) ) ) ) )", "obj1": 0.70817843866171, "obj2": 0.24539996350022136}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( Const / ( ( Const / ACS ) / ( BR - MRS ) ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( DS,MLU ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5743494423791822, "obj2": 0.30681268620672375}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "( ( ( MDR / Const ) / ( ( Max( FirstVNF_RAM_Server,( ( CRS - BR ) + ( ( FirstVNF_CPU - MRS ) / ( MRS / BR ) ) ) ) * FirstVNF_Mem_Server ) - MRS ) ) / ( BR - MRS ) )", "choosing": "( Max( MUM,RCSe ) + Max( Max( CS,RCSe ),RCSe ) )", "obj1": 0.5687732342007435, "obj2": 0.35157320417775395}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "Min( ( Min( ( ( ARS / ACS ) + ACS ) ,Min( PN ,BR ) ) + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ),( MUR * Min( DS ,MUC ) ) )", "obj1": 0.15613382899628253, "obj2": 0.699504714698585}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "Max( Max( FirstVNF_Mem_Server,BR ),( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) * BR ) )", "choosing": "( Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) / Min( DS ,CS ) )", "obj1": 0.09665427509293681, "obj2": 0.7984192087274494}, {"determining": "( ( ( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( CS,( Max( CS,MUR ) / Max( DS,MLU ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.11895769962332502}, {"determining": "Max( Max( ( Max( Min( Min( DDR ,Const ) ,FirstVNF_RAM ),RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe - DS ),( ( MUM / RMSe ) - MUR ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7707019953983979}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( Max( Max( MLU,Min( MUM ,MUM ) ),CS ) / CS ),MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.7997702601386351}, {"determining": "Min( ( Const / ( ( Const / ACS ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.22304832713754646, "obj2": 0.63159586136403}, {"determining": "( ( ( MDR / Const ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 0.5427509293680297, "obj2": 0.377644590595776}, {"determining": "Max( ( FirstVNF_Mem / BR ),Max( ( DDR + ( ( ( PN / ( ARS / RRS ) ) * Min( ACS ,MRS ) ) / CRS ) ),Min( ACS ,MRS ) ) )", "choosing": "( Min( MUC ,RRSe ) / Min( ( MUR * ( MUM / ( ( RRSe / ( Max( MUC,CS ) * ( MLU - MUM ) ) ) / Min( CS ,CS ) ) ) ) ,MUC ) )", "obj1": 0.1970260223048327, "obj2": 0.6431232432932869}, {"determining": "Max( ( Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MLU ) - Min( CS ,MLU ) )", "obj1": 0.25650557620817843, "obj2": 0.5917337272792613}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( ( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( CS,( Max( CS,MUR ) / Max( DS,MLU ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.11895769962332502}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),ACS ) + ( BR / DDR ) )", "choosing": "( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( MLU - RMSe ),MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) )", "obj1": 0.07434944237918216, "obj2": 0.8265216932689483}, {"determining": "Max( ( FirstVNF_Mem / BR ),Max( ( DDR + ( ( ( PN / ( ARS / RRS ) ) * Min( ACS ,MRS ) ) / CRS ) ),BR ) )", "choosing": "( Min( MUC ,RRSe ) / Min( ( MUR * ( MUM / ( ( RRSe / ( Max( MUC,MLU ) * ( MLU - MUM ) ) ) / Min( CS ,CS ) ) ) ) ,MUC ) )", "obj1": 0.18587360594795538, "obj2": 0.6531046129946694}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( AMS / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,( ( MLU + ( MUM * RMSe ) ) * ( MUC + MUC ) ) )", "obj1": 0.5148698884758365, "obj2": 0.39103977493415654}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,( ARS / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( RCSe / MUC ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.06319702602230483, "obj2": 0.8372725957768363}], "6": [{"determining": "Min( ( ( Min( AMS ,MDR ) - FirstVNF_CPU_Server ) * RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( Min( ( MUR - Max( MUR,( MUC / ( Max( ( MLU + MUC ),( MUR / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( CS * Min( ( RRSe + ( RCSe / RCSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,RRS ) ,( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( Min( ( MUR - Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) ) ,MUR ) / Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / ( FirstVNF_RAM_Server * Max( DDR,PN ) ) )", "choosing": "( Max( MUM,Max( CS,RMSe ) ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8716024094277575}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( ( ( Max( BR,CRS ) - Const ) / Const ) / ( BR - MRS ) ) ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,MUR ) / Max( DS,MLU ) ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.2361340713165213}, {"determining": "( ( ( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.8215613382899628, "obj2": 0.15549699650176058}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "( ( ( FirstVNF_Mem - Const ) / ( ( RRS - MDR ) / Const ) ) / ( BR - Max( AMS,( ( AMS + DDR ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( CS,CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,MUM ) / ( Min( CS ,MLU ) / MLU ) ) ) ) )", "obj1": 0.8605947955390335, "obj2": 0.11759799490796548}, {"determining": "( ( PN * RRS ) + ( ACS - ARS ) )", "choosing": "Min( Max( Min( ( MUC / MUR ) ,RRSe ),MUM ) ,( Max( ( RCSe - CS ),( RCSe / RCSe ) ) / RMSe ) )", "obj1": 0.6654275092936803, "obj2": 0.2891026144342068}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "( ( MDR / Const ) / ( BR - MDR ) )", "choosing": "( Max( MUM,CS ) + Max( ( Max( MUM,CS ) + Max( CS,RCSe ) ),RCSe ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / Const ) ) / Const ) / Const ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5464684014869888, "obj2": 0.3304334496027751}, {"determining": "( ( ( MDR / Const ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 0.5427509293680297, "obj2": 0.377644590595776}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "Max( ARS,( ARS / Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,BR ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ) - MUC ) / Min( DS ,MUC ) )", "obj1": 0.14312267657992564, "obj2": 0.7160760593905002}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) * ( AMS / AMS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13568773234200743, "obj2": 0.754777056767508}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( ( ( Max( BR,CRS ) - Const ) / Const ) / ( BR - MRS ) ) ) / ( BR - MRS ) )", "choosing": "( Max( Min( MUC ,MLU ),CS ) + ( Max( CS,( Max( ( ( RMSe + Min( MUR ,MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( DS ,RCSe ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.6933085501858736, "obj2": 0.2868270454848789}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( ( ( Max( BR,CRS ) - Const ) / Const ) / ( BR - MRS ) ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,( Max( CS,MUM ) / ( Min( CS ,MLU ) / MLU ) ) ) / ( Min( CS ,MLU ) / MLU ) ) ) ) )", "obj1": 0.70817843866171, "obj2": 0.24539996350022136}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( Const / ( ( Const / ACS ) / ( BR - MRS ) ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( DS,MLU ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5743494423791822, "obj2": 0.30681268620672375}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Min( ( Min( ( ( ARS / ACS ) + ACS ) ,Min( PN ,BR ) ) + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ),( MUR * Min( DS ,MUC ) ) )", "obj1": 0.15613382899628253, "obj2": 0.699504714698585}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / ( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) - MUR ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6809497585609424}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "Max( Max( FirstVNF_Mem_Server,BR ),( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) * BR ) )", "choosing": "( Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) / Min( DS ,CS ) )", "obj1": 0.09665427509293681, "obj2": 0.7984192087274494}, {"determining": "( Min( RRS ,FirstVNF_Mem ) + ( ACS - ARS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + ( RCSe - CS ) ) / ( MUM + RCSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.2580402388651461}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,( ARS / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( RCSe / MUC ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.06319702602230483, "obj2": 0.8372725957768363}, {"determining": "Max( Max( ( Max( Min( Min( DDR ,Const ) ,FirstVNF_RAM ),RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe - DS ),( ( MUM / RMSe ) - MUR ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7707019953983979}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / ( ( MDR / Const ) / ( BR - MRS ) ) ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - ( Max( MUM,CS ) + Max( CS,RCSe ) ) ) )", "obj1": 0.27695167286245354, "obj2": 0.5731563165514061}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),ACS ) + ( BR / DDR ) )", "choosing": "( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( MLU - RMSe ),MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) )", "obj1": 0.07434944237918216, "obj2": 0.8265216932689483}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( Max( Max( MLU,Min( MUM ,MUM ) ),CS ) / CS ),MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.7997702601386351}, {"determining": "Max( ( Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MLU ) - Min( CS ,MLU ) )", "obj1": 0.25650557620817843, "obj2": 0.5917337272792613}, {"determining": "Max( ( Max( MRS,( FirstVNF_Mem_Server - PN ) ) / BR ),Min( Max( FirstVNF_Mem_Server,RRS ) ,( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( MUC / ( Max( ( MLU + MUC ),( MUM / MUR ) ) / ( RMSe * MUR ) ) ) ) / Min( RCSe ,CS ) )", "obj1": 0.2899628252788104, "obj2": 0.5715483724144679}, {"determining": "( ( CRS - Min( ( Const / ( FirstVNF_CPU_Server + ACS ) ) ,PN ) ) + Min( ARS ,DDR ) )", "choosing": "( Max( RMSe,MLU ) / Min( RMSe ,DS ) )", "obj1": 0.05390334572490706, "obj2": 0.8602523685761233}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( ( ( FirstVNF_Mem - Const ) / ( ( RRS - MDR ) / Const ) ) / ( BR - Max( AMS,( ( AMS + DDR ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( MUC ,MLU ),CS ) + ( Max( CS,( Max( ( ( RMSe + Min( MUR ,MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( DS ,RCSe ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8438661710037175, "obj2": 0.13524413802305613}, {"determining": "Min( ( Const / ( ( Const / ACS ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.22304832713754646, "obj2": 0.63159586136403}, {"determining": "( ( ( FirstVNF_Mem - Const ) / ( ( RRS - MDR ) / Const ) ) / ( BR - Max( AMS,( ( AMS + DDR ) - ( ( ARS + FirstVNF_RAM ) * ( AMS + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( Min( MUC ,MLU ),CS ) + ( Max( CS,( Max( ( ( RMSe + ( CS - MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( DS ,RCSe ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8438661710037175, "obj2": 0.13524413802305613}], "7": [{"determining": "Min( ( ( Min( AMS ,MDR ) - FirstVNF_CPU_Server ) * RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( Min( ( MUR - Max( MUR,( MUC / ( Max( ( MLU + MUC ),( MUR / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( CS * Min( ( RRSe + ( RCSe / RCSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,MDR ) - FirstVNF_CPU_Server ) * RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( Min( ( MUR - Max( MUR,( MUC / ( Max( ( MLU + MUC ),( MUR / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( CS * Min( ( RRSe + ( RCSe / RCSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / ( FirstVNF_RAM_Server * Max( DDR,PN ) ) )", "choosing": "( Max( MUM,Max( CS,RMSe ) ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8716024094277575}, {"determining": "( ( ( ( BR - MRS ) - Const ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,MUM ) / ( Min( CS ,MLU ) / MLU ) ) ) ) )", "obj1": 0.741635687732342, "obj2": 0.2331806850642142}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7881040892193308, "obj2": 0.13716995406052362}, {"determining": "( ( ( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) ) / ( ( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) + FirstVNF_CPU ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,MUM ) + ( ( MUM / MUM ) * ( ( RCSe - RRSe ) - MUR ) ) )", "obj1": 0.8531598513011153, "obj2": 0.11422584824866655}, {"determining": "( ( PN * RRS ) + ( ACS - ARS ) )", "choosing": "Min( Max( Min( ( MUC / MUR ) ,RRSe ),MUM ) ,( Max( ( RCSe - CS ),( RCSe / RCSe ) ) / RMSe ) )", "obj1": 0.6654275092936803, "obj2": 0.2891026144342068}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "( ( ( MDR / Const ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 0.5427509293680297, "obj2": 0.377644590595776}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / Const ) ) / Const ) / Const ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5464684014869888, "obj2": 0.3304334496027751}, {"determining": "Max( ARS,( ARS / Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,BR ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ) - MUC ) / Min( DS ,MUC ) )", "obj1": 0.14312267657992564, "obj2": 0.7160760593905002}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) * ( AMS / AMS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13568773234200743, "obj2": 0.754777056767508}, {"determining": "( ( ( FirstVNF_Mem - Const ) / ( ( RRS - MDR ) / Const ) ) / ( BR - Max( AMS,( ( AMS + DDR ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( MUC ,MLU ),CS ) + ( Max( CS,( Max( ( ( RMSe + Min( MUR ,MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( DS ,RCSe ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8438661710037175, "obj2": 0.13524413802305613}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) ),MUR ) * CS ) )", "obj1": 0.2211895910780669, "obj2": 0.6158837822391297}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Min( ( Min( ( ( ARS / ACS ) + ACS ) ,Min( PN ,BR ) ) + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ),( MUR * Min( DS ,MUC ) ) )", "obj1": 0.15613382899628253, "obj2": 0.699504714698585}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( ( ( Max( BR,CRS ) - Const ) / Const ) / ( BR - MRS ) ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,( Max( CS,MUM ) / ( Min( CS ,MLU ) / MLU ) ) ) / ( Min( CS ,MLU ) / MLU ) ) ) ) )", "obj1": 0.70817843866171, "obj2": 0.24539996350022136}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / ( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) - MUR ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6809497585609424}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "Max( Max( FirstVNF_Mem_Server,BR ),( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) * BR ) )", "choosing": "( Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) / Min( DS ,CS ) )", "obj1": 0.09665427509293681, "obj2": 0.7984192087274494}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( Min( RRS ,FirstVNF_Mem ) + ( ACS - ARS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + ( RCSe - CS ) ) / ( MUM + RCSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.2580402388651461}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( ( ( Max( BR,CRS ) - Const ) / Const ) / ( BR - MRS ) ) ) / ( BR - MRS ) )", "choosing": "( Max( Min( MUC ,MLU ),CS ) + ( Max( CS,( Max( ( ( RMSe + Min( MUR ,MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( DS ,RCSe ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.6933085501858736, "obj2": 0.2868270454848789}, {"determining": "Max( Max( ( Max( Min( Min( DDR ,Const ) ,FirstVNF_RAM ),RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe - DS ),( ( MUM / RMSe ) - MUR ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7707019953983979}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / ( ( MDR / Const ) / ( BR - MRS ) ) ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - ( Max( MUM,CS ) + Max( CS,RCSe ) ) ) )", "obj1": 0.27695167286245354, "obj2": 0.5731563165514061}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( Max( Max( MLU,Min( MUM ,MUM ) ),CS ) / CS ),MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.7997702601386351}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "Max( ( Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MLU ) - Min( CS ,MLU ) )", "obj1": 0.25650557620817843, "obj2": 0.5917337272792613}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,ACS )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( MUR + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.20074349442379183, "obj2": 0.6488367828059342}, {"determining": "Min( ( DDR + AMS ) ,( ( FirstVNF_RAM + Min( MRS ,ACS ) ) * Min( AMS ,Max( FirstVNF_RAM_Server,( Max( CRS,( ACS - FirstVNF_CPU_Server ) ) + BR ) ) ) ) )", "choosing": "( ( MUR * ( ( ( Min( MUM ,( ( CS / RMSe ) * MUR ) ) + RMSe ) * MLU ) - Min( RRSe ,MUR ) ) ) / Min( ( Max( ( ( RRSe - MUM ) / MUM ),( ( CS - Max( Min( RCSe ,DS ),Min( RMSe ,RMSe ) ) ) * Max( Max( RRSe,( RRSe + MUC ) ),Min( RRSe ,RMSe ) ) ) ) / ( Min( RRSe ,MLU ) - ( MUM - RCSe ) ) ) ,MLU ) )", "obj1": 0.7881040892193308, "obj2": 0.13716995406052362}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "( ( MDR / Const ) / ( BR - MDR ) )", "choosing": "( Max( MUM,CS ) + Max( ( Max( MUM,CS ) + Max( CS,RCSe ) ),RCSe ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,( ARS / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( RCSe / MUC ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.06319702602230483, "obj2": 0.8372725957768363}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}], "8": [{"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( ( FirstVNF_Mem * BR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) / RCSe ) ),MUR ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,MDR ) - FirstVNF_CPU_Server ) * RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( Min( ( MUR - Max( MUR,( MUC / ( Max( ( MLU + MUC ),( MUR / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( CS * Min( ( RRSe + ( RCSe / RCSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( ( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) ) / ( ( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) + FirstVNF_CPU ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,MUM ) + ( ( MUM / MUM ) * ( ( RCSe - RRSe ) - MUR ) ) )", "obj1": 0.8531598513011153, "obj2": 0.11422584824866655}, {"determining": "( ( ( ( ( ( MRS / ACS ) - ( ( ( FirstVNF_CPU_Server + ACS ) - RRS ) / Const ) ) / Const ) / Max( BR,FirstVNF_Mem ) ) * Const ) / ( BR - MRS ) )", "choosing": "( Max( ( MLU + ( ( DS * MUR ) * MUC ) ),CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,MUR ) / Max( DS,MLU ) ) ) ) )", "obj1": 0.775092936802974, "obj2": 0.22960954113386892}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "( ( PN * RRS ) + ( ACS - ARS ) )", "choosing": "Min( Max( Min( ( MUC / MUR ) ,RRSe ),MUM ) ,( Max( ( RCSe - CS ),( RCSe / RCSe ) ) / RMSe ) )", "obj1": 0.6654275092936803, "obj2": 0.2891026144342068}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "( ( ( MDR / Const ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 0.5427509293680297, "obj2": 0.377644590595776}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( RRS / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),RMSe ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.1970260223048327, "obj2": 0.6456842598743812}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.8011152416356877, "obj2": 0.1264498300905316}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( ( ( ( BR - MRS ) - Const ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,MUM ) / ( Min( CS ,MLU ) / MLU ) ) ) ) )", "obj1": 0.741635687732342, "obj2": 0.2331806850642142}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "Max( ARS,( ARS / Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,BR ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ) - MUC ) / Min( DS ,MUC ) )", "obj1": 0.14312267657992564, "obj2": 0.7160760593905002}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) * ( AMS / AMS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13568773234200743, "obj2": 0.754777056767508}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) ),MUR ) * CS ) )", "obj1": 0.2211895910780669, "obj2": 0.6158837822391297}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( ACS ,BR ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( Min( MUC ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.2678155880498764}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / ( ( MDR / Const ) / ( BR - MRS ) ) ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - ( Max( MUM,CS ) + Max( CS,RCSe ) ) ) )", "obj1": 0.27695167286245354, "obj2": 0.5731563165514061}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "Min( ( Min( ( ( ARS / ACS ) + ACS ) ,Min( PN ,BR ) ) + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ),( MUR * Min( DS ,MUC ) ) )", "obj1": 0.15613382899628253, "obj2": 0.699504714698585}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( ( ( Max( BR,CRS ) - Const ) / Const ) / ( BR - MRS ) ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,CS ) + ( Max( MUM,CS ) + Max( CS,( Max( CS,( Max( CS,MUM ) / ( Min( CS ,MLU ) / MLU ) ) ) / ( Min( CS ,MLU ) / MLU ) ) ) ) )", "obj1": 0.70817843866171, "obj2": 0.24539996350022136}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / ( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) - MUR ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6809497585609424}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( Max( Max( MLU,Min( MUM ,MUM ) ),CS ) / CS ),MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.7997702601386351}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "Max( Max( FirstVNF_Mem_Server,BR ),( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) * BR ) )", "choosing": "( Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) / Min( DS ,CS ) )", "obj1": 0.09665427509293681, "obj2": 0.7984192087274494}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "Max( Max( ( Max( Min( Min( DDR ,Const ) ,FirstVNF_RAM ),RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe - DS ),( ( MUM / RMSe ) - MUR ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7707019953983979}, {"determining": "( Min( RRS ,FirstVNF_Mem ) + ( ACS - ARS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + ( RCSe - CS ) ) / ( MUM + RCSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.2580402388651461}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.8306347618297832}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "Min( ( ( ( ( ( MRS * FirstVNF_CPU ) / ( FirstVNF_Mem_Server * RRS ) ) + DDR ) - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) + ACS ) ,Min( ( MRS / CRS ) ,BR ) )", "choosing": "( ( MUR / MUC ) - ( CS * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5810544348713444}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,( ARS / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( RCSe / MUC ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.06319702602230483, "obj2": 0.8372725957768363}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}], "9": [{"determining": "Min( ( ( Min( ( Min( FirstVNF_CPU_Server ,( ( PN * FirstVNF_CPU_Server ) - MRS ) ) - ACS ) ,( Max( AMS,( FirstVNF_RAM - RRS ) ) / Max( FirstVNF_RAM_Server,MRS ) ) ) - ( FirstVNF_RAM_Server - ( BR + BR ) ) ) + ACS ) ,Min( PN ,BR ) )", "choosing": "Max( ( ( ( CS / DS ) + RRSe ) / MUC ),( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( ( FirstVNF_Mem * BR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) / RCSe ) ),MUR ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( ( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) ) / ( ( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) + FirstVNF_CPU ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,MUM ) + ( ( MUM / MUM ) * ( ( RCSe - RRSe ) - MUR ) ) )", "obj1": 0.8531598513011153, "obj2": 0.11422584824866655}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "( ( ( MDR / Const ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 0.5427509293680297, "obj2": 0.377644590595776}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.8011152416356877, "obj2": 0.1264498300905316}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) * ( AMS / AMS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13568773234200743, "obj2": 0.754777056767508}, {"determining": "Max( ARS,( ARS / Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,BR ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ) - MUC ) / Min( DS ,MUC ) )", "obj1": 0.14312267657992564, "obj2": 0.7160760593905002}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( RRS / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),RMSe ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.1970260223048327, "obj2": 0.6456842598743812}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / ( ( MDR / Const ) / ( BR - MRS ) ) ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - ( Max( MUM,CS ) + Max( CS,RCSe ) ) ) )", "obj1": 0.27695167286245354, "obj2": 0.5731563165514061}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( Max( Max( MLU,Min( MUM ,MUM ) ),CS ) / CS ),MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.7997702601386351}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "Max( Max( FirstVNF_Mem_Server,BR ),( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) * BR ) )", "choosing": "( Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) / Min( DS ,CS ) )", "obj1": 0.09665427509293681, "obj2": 0.7984192087274494}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "Max( Max( ( Max( Min( Min( DDR ,Const ) ,FirstVNF_RAM ),RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe - DS ),( ( MUM / RMSe ) - MUR ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7707019953983979}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.2137546468401487, "obj2": 0.6292901394518677}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "Min( ( ( ( ( ( MRS * FirstVNF_CPU ) / ( FirstVNF_Mem_Server * RRS ) ) + DDR ) - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) + ACS ) ,Min( ( MRS / CRS ) ,BR ) )", "choosing": "( ( MUR / MUC ) - ( CS * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5810544348713444}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( ( RCSe / MUC ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8508135165351873}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / ( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM / RMSe ) - MUR ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6809497585609424}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.8306347618297832}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) ),MUR ) * CS ) )", "obj1": 0.2211895910780669, "obj2": 0.6158837822391297}, {"determining": "Min( ( Min( ( ( ARS / ACS ) + ACS ) ,Min( PN ,BR ) ) + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ),( MUR * Min( DS ,MUC ) ) )", "obj1": 0.15613382899628253, "obj2": 0.699504714698585}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,( ARS / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( RCSe / MUC ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.06319702602230483, "obj2": 0.8372725957768363}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( ( RCSe / MUM ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.1524163568773234, "obj2": 0.7007923495005763}, {"determining": "Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( ( FirstVNF_RAM_Server - ( BR + BR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUR / MUC ) / MUC ),( MUR * Min( DS ,MUC ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6761941540794855}, {"determining": "Min( ( Max( AMS,FirstVNF_Mem ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / RCSe ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.79182156133829, "obj2": 0.13405357981320568}], "10": [{"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ( Min( FirstVNF_CPU_Server ,( ( PN * FirstVNF_CPU_Server ) - MRS ) ) - ACS ) ,( Max( AMS,( FirstVNF_RAM - RRS ) ) / Max( FirstVNF_RAM_Server,MRS ) ) ) - ( FirstVNF_RAM_Server - ( BR + BR ) ) ) + ACS ) ,Min( PN ,BR ) )", "choosing": "Max( ( ( ( CS / DS ) + RRSe ) / MUC ),( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( ( MDR / Const ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 0.5427509293680297, "obj2": 0.377644590595776}, {"determining": "( ( ( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) ) / ( ( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) + FirstVNF_CPU ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,MUM ) + ( ( MUM / MUM ) * ( ( RCSe - RRSe ) - MUR ) ) )", "obj1": 0.8531598513011153, "obj2": 0.11422584824866655}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem / MRS ) ) * ( AMS / AMS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( RMSe * RMSe ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13568773234200743, "obj2": 0.754777056767508}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "Max( ARS,( ARS / Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,BR ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * DS ) ) / MUC ) - MUC ) / Min( DS ,MUC ) )", "obj1": 0.14312267657992564, "obj2": 0.7160760593905002}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( RRS / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),RMSe ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.1970260223048327, "obj2": 0.6456842598743812}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) * CS ) )", "obj1": 0.8104089219330854, "obj2": 0.12483619191093026}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "Max( Max( FirstVNF_Mem_Server,BR ),( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) * BR ) )", "choosing": "( Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) / Min( DS ,CS ) )", "obj1": 0.09665427509293681, "obj2": 0.7984192087274494}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( Max( Max( MLU,Min( MUM ,MUM ) ),CS ) / CS ),MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.7997702601386351}, {"determining": "Max( Max( ( Max( Min( Min( DDR ,Const ) ,FirstVNF_RAM ),RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe - DS ),( ( MUM / RMSe ) - MUR ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7707019953983979}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.2137546468401487, "obj2": 0.6292901394518677}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "Min( ( ( ( ( ( MRS * FirstVNF_CPU ) / ( FirstVNF_Mem_Server * RRS ) ) + DDR ) - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) + ACS ) ,Min( ( MRS / CRS ) ,BR ) )", "choosing": "( ( MUR / MUC ) - ( CS * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5810544348713444}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( ( BR * MRS ) / ( Min( ( ( FirstVNF_Mem + ( ( FirstVNF_Mem - RRS ) / Const ) ) / Const ) ,( ( FirstVNF_Mem - ( FirstVNF_CPU_Server * PN ) ) - BR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS / CS ) + ( MUR * Max( Max( Max( RMSe,( MUC - DS ) ),MLU ),MLU ) ) ) / ( CS + CS ) ) + ( MUM / MUC ) )", "obj1": 0.2899628252788104, "obj2": 0.5669061761675467}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( ( RCSe / MUC ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8508135165351873}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( Const * ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - BR ) / Const ) ) / Const ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( Min( MUC ,MLU ),CS ) + ( Max( CS,( Max( ( ( RMSe + Min( MUR ,MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( DS ,MUR ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.007840096214279807}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0724907063197026, "obj2": 0.8299262035654738}, {"determining": "Max( Max( ( MDR / Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ),MDR ),Max( DDR,Const ) )", "choosing": "( Min( ( Max( Max( MLU,Min( MUM ,MUM ) ),CS ) / CS ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.3048327137546468, "obj2": 0.54600443779919}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) ),MUR ) * CS ) )", "obj1": 0.2211895910780669, "obj2": 0.6158837822391297}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "Max( ( FirstVNF_Mem * BR ),FirstVNF_Mem )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) * CS ) )", "obj1": 0.2732342007434944, "obj2": 0.5691898968606436}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}], "11": [{"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Min( MUC ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) / ( Min( ( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Const ) ,( ( FirstVNF_Mem - ( FirstVNF_CPU_Server * PN ) ) - BR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) ) + ( MUR * Max( Max( Max( RMSe,( MUC - DS ) ),MLU ),MLU ) ) ) / ( MUM + CS ) ) + ( MUM / MUC ) )", "obj1": 0.13011152416356878, "obj2": 0.7395809987819892}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "( ( ( MDR / Const ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 0.5427509293680297, "obj2": 0.377644590595776}, {"determining": "( ( ( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) ) / ( ( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) + FirstVNF_CPU ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,MUM ) + ( ( MUM / MUM ) * ( ( RCSe - RRSe ) - MUR ) ) )", "obj1": 0.8531598513011153, "obj2": 0.11422584824866655}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) * CS ) )", "obj1": 0.8104089219330854, "obj2": 0.12483619191093026}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( Max( Max( MLU,Min( MUM ,MUM ) ),CS ) / CS ),MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.7997702601386351}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( ( RCSe / MUC ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8508135165351873}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( ( RRSe + MUC ) * CS ) )", "obj1": 0.2137546468401487, "obj2": 0.6276178166815418}, {"determining": "( ( BR * MRS ) / ( Min( ( ( FirstVNF_Mem + ( ( FirstVNF_Mem - RRS ) / Const ) ) / Const ) ,( ( FirstVNF_Mem - ( FirstVNF_CPU_Server * PN ) ) - BR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS / CS ) + ( MUR * Max( Max( Max( RMSe,( MUC - DS ) ),MLU ),MLU ) ) ) / ( CS + CS ) ) + ( MUM / MUC ) )", "obj1": 0.2899628252788104, "obj2": 0.5669061761675467}, {"determining": "( ( Const * ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - BR ) / Const ) ) / Const ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( Min( MUC ,MLU ),CS ) + ( Max( CS,( Max( ( ( RMSe + Min( MUR ,MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( DS ,MUR ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.007840096214279807}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( RRS / ( PN / FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),RMSe ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.1970260223048327, "obj2": 0.6456842598743812}, {"determining": "Max( Max( FirstVNF_Mem_Server,BR ),( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) * BR ) )", "choosing": "( Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) / Min( DS ,CS ) )", "obj1": 0.09665427509293681, "obj2": 0.7984192087274494}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0724907063197026, "obj2": 0.8299262035654738}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "Max( ( FirstVNF_Mem * BR ),FirstVNF_Mem )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) * CS ) )", "obj1": 0.2732342007434944, "obj2": 0.5691898968606436}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) ),MUR ) * CS ) )", "obj1": 0.2211895910780669, "obj2": 0.6158837822391297}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),Max( MLU,RMSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.20446096654275092, "obj2": 0.6447579044132263}, {"determining": "Max( Max( ( Max( Min( Min( DDR ,Const ) ,FirstVNF_RAM ),RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe - DS ),( ( MUM / RMSe ) - MUR ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7707019953983979}], "12": [{"determining": "( ( RRS - FirstVNF_CPU_Server ) + Min( ( MDR * PN ) ,Min( ( ( RRS / FirstVNF_RAM_Server ) - BR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( RRSe ,MLU ) + ( RRSe + RCSe ) ) + ( ( ( Max( MUM,( CS * RMSe ) ) + RCSe ) * RCSe ) - ( RMSe * MUC ) ) ) ,( Min( RMSe ,Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) / ( ( DS + RRSe ) + ( MUM * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Min( MUC ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) / ( Min( ( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Const ) ,( ( FirstVNF_Mem - ( FirstVNF_CPU_Server * PN ) ) - BR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) ) + ( MUR * Max( Max( Max( RMSe,( MUC - DS ) ),MLU ),MLU ) ) ) / ( MUM + CS ) ) + ( MUM / MUC ) )", "obj1": 0.13011152416356878, "obj2": 0.7395809987819892}, {"determining": "( ( ( MDR / Const ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 0.5427509293680297, "obj2": 0.377644590595776}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) * CS ) )", "obj1": 0.8104089219330854, "obj2": 0.12483619191093026}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) ) / ( ( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) + FirstVNF_CPU ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,MUM ) + ( ( MUM / MUM ) * ( ( RCSe - RRSe ) - MUR ) ) )", "obj1": 0.8531598513011153, "obj2": 0.11422584824866655}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( FirstVNF_Mem * ( MDR / ( FirstVNF_RAM * FirstVNF_CPU ) ) ),Max( DDR,Const ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( Max( MUC,CS ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.16356877323420074, "obj2": 0.6884272418443936}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( ( Max( Max( MLU,Min( MUM ,MUM ) ),CS ) / CS ),MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.7997702601386351}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( ( RCSe / MUC ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8508135165351873}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( ( FirstVNF_Mem - Const ) / ( ( RRS - MDR ) / Const ) ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / Const ) ) / Const ) )", "choosing": "( ( ( ( MUR * MLU ) - CS ) - RCSe ) + ( Max( CS,( Max( ( ( RMSe + Min( MUR ,MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( RCSe ,DS ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8401486988847584, "obj2": 0.12468269361488572}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( ( Const * ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - BR ) / Const ) ) / Const ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( Min( MUC ,MLU ),CS ) + ( Max( CS,( Max( ( ( RMSe + Min( MUR ,MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( DS ,MUR ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.007840096214279807}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Max( Max( FirstVNF_Mem_Server,BR ),( ( ( MDR - FirstVNF_CPU ) - FirstVNF_Mem ) * BR ) )", "choosing": "( Max( MUR,( MUC / ( Min( ( CS / MUC ) ,MUR ) / ( RMSe * MUR ) ) ) ) / Min( DS ,CS ) )", "obj1": 0.09665427509293681, "obj2": 0.7984192087274494}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.0724907063197026, "obj2": 0.8299262035654738}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "Min( ( Max( FirstVNF_RAM,Min( RRS ,Const ) ) + ACS ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8309286590129481}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) ),MUR ) * CS ) )", "obj1": 0.2211895910780669, "obj2": 0.6158837822391297}, {"determining": "Max( ( FirstVNF_Mem * ( AMS / ACS ) ),( BR - DDR ) )", "choosing": "( ( ( ( ( MLU * MLU ) + RMSe ) * ( DS / ( DS * RRSe ) ) ) - MUM ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.24907063197026022, "obj2": 0.5991983108474641}], "13": [{"determining": "( ( RRS - FirstVNF_CPU_Server ) + Min( ( MDR * PN ) ,Min( ( ( RRS / FirstVNF_RAM_Server ) - BR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) + Min( ( MDR * PN ) ,Min( ( ( RRS / FirstVNF_RAM_Server ) - BR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( RRSe ,MLU ) + ( RRSe + RCSe ) ) + ( ( ( Max( MUM,( CS * RMSe ) ) + RCSe ) * RCSe ) - ( RMSe * MUC ) ) ) ,( Min( RMSe ,Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) / ( ( DS + RRSe ) + ( MUM * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "( ( ( MDR / Const ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 0.5427509293680297, "obj2": 0.377644590595776}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) * CS ) )", "obj1": 0.8104089219330854, "obj2": 0.12483619191093026}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( ( ( FirstVNF_Mem - Const ) / Const ) / ( BR - MRS ) ) / ( ( ( ACS - FirstVNF_CPU_Server ) + FirstVNF_CPU ) + FirstVNF_CPU ) ) / ( BR - MRS ) )", "choosing": "( Max( CS,MUM ) + ( ( MUM / MUM ) * ( ( RCSe - RRSe ) - MUR ) ) )", "obj1": 0.8531598513011153, "obj2": 0.11422584824866655}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "Max( ( FirstVNF_Mem * BR ),( ( RRS / FirstVNF_RAM_Server ) - BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( RMSe / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.21561338289962825, "obj2": 0.6338953795395196}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( ( RCSe / MUC ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8508135165351873}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( ( ( FirstVNF_Mem - Const ) / ( ( RRS - MDR ) / Const ) ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / Const ) ) / Const ) )", "choosing": "( ( ( ( MUR * MLU ) - CS ) - RCSe ) + ( Max( CS,( Max( ( ( RMSe + Min( MUR ,MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( RCSe ,DS ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8401486988847584, "obj2": 0.12468269361488572}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.7983872837043439}, {"determining": "( ( Const * ( ( AMS / ARS ) / ( ( Const * ( ( AMS / ARS ) / Max( RRS,ACS ) ) ) / ( FirstVNF_Mem_Server / Const ) ) ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( ( RRSe / CS ),CS ) + ( RRSe / CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5666704495412441}, {"determining": "Max( ( DDR + DDR ),Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / CS ) + Max( RRSe,( Max( MUM,( DS - MUM ) ) / ( Min( MUC ,MUM ) - ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.3345724907063197, "obj2": 0.5329998204154079}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) ),MUR ) * CS ) )", "obj1": 0.2211895910780669, "obj2": 0.6158837822391297}, {"determining": "( ( Const * ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - BR ) / Const ) ) / Const ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( Min( MUC ,MLU ),CS ) + ( Max( CS,( Max( ( ( RMSe + Min( MUR ,MUM ) ) - ( ( RRSe * CS ) + Max( MUR,MLU ) ) ),RRSe ) - ( Min( DS ,MUR ) - Max( MUC,( MUC + MLU ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.007840096214279807}, {"determining": "Min( ( Max( FirstVNF_RAM,Min( RRS ,Const ) ) + ACS ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8309286590129481}], "14": [{"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * RRSe ) / DS ) - RMSe ) ) * Min( MUM ,Max( RRSe,( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) + Min( ( MDR * PN ) ,Min( ( ( RRS / FirstVNF_RAM_Server ) - BR ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( ( ( MDR / Const ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 0.5427509293680297, "obj2": 0.377644590595776}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( ( Const * ( ( AMS / ARS ) / ( ( Const * ( ( AMS / ARS ) / Max( RRS,ACS ) ) ) / ( FirstVNF_Mem_Server / Const ) ) ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( ( RRSe / CS ),CS ) + ( RRSe / CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5666704495412441}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( ( RCSe / MUC ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8508135165351873}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) + Min( ( BR * MRS ) ,ACS ) )", "choosing": "Max( ( ( Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) ) / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.07434944237918216, "obj2": 0.8259307650497819}, {"determining": "Min( ( Max( FirstVNF_RAM,Min( RRS ,Const ) ) + ACS ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8309286590129481}, {"determining": "Max( ( DDR + DDR ),Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / CS ) + Max( RRSe,( Max( MUM,( DS - MUM ) ) / ( Min( MUC ,MUM ) - ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.3345724907063197, "obj2": 0.5329998204154079}, {"determining": "Max( ( FirstVNF_Mem * BR ),( ( RRS / FirstVNF_RAM_Server ) - BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( RMSe / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.21561338289962825, "obj2": 0.6338953795395196}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.7983872837043439}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) ),MUR ) * CS ) )", "obj1": 0.2211895910780669, "obj2": 0.6158837822391297}, {"determining": "Max( BR,( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + ( RRSe + MUC ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.20074349442379183, "obj2": 0.6362604914270985}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ( MRS - FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem ,( ( FirstVNF_RAM - DDR ) - ( ARS / MDR ) ) ) / Const ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( MUM * ( ( RCSe / CS ) - MUC ) ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}], "15": [{"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * RRSe ) / DS ) - RMSe ) ) * Min( MUM ,Max( RRSe,( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * RRSe ) / DS ) - RMSe ) ) * Min( MUM ,Max( RRSe,( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ( MRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / ( BR - MRS ) ) ) / Const ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( CS ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.36374153983322893}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "Max( BR,( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + ( RRSe + MUC ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.20074349442379183, "obj2": 0.6362604914270985}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( Const * ( ( AMS / ARS ) / ( ( Const * ( ( AMS / ARS ) / Max( RRS,ACS ) ) ) / ( FirstVNF_Mem_Server / Const ) ) ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( ( RRSe / CS ),CS ) + ( RRSe / CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5666704495412441}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( ( RCSe / MUC ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8508135165351873}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "Min( ( Max( FirstVNF_RAM,Min( RRS ,Const ) ) + ACS ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8309286590129481}, {"determining": "( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) + Min( ( BR * MRS ) ,ACS ) )", "choosing": "Max( ( ( Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) ) / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.07434944237918216, "obj2": 0.8259307650497819}, {"determining": "Max( ( DDR + DDR ),Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / CS ) + Max( RRSe,( Max( MUM,( DS - MUM ) ) / ( Min( MUC ,MUM ) - ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.3345724907063197, "obj2": 0.5329998204154079}, {"determining": "Max( ( FirstVNF_Mem * BR ),( ( RRS / FirstVNF_RAM_Server ) - BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( RMSe / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.21561338289962825, "obj2": 0.6338953795395196}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) ),MUR ) * CS ) )", "obj1": 0.2211895910780669, "obj2": 0.6158837822391297}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7987784909737732}, {"determining": "( Min( Min( DDR ,Min( ARS ,BR ) ) ,PN ) / ( ( ( Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,( FirstVNF_Mem_Server / BR ) ) / Max( ( BR * BR ),( DDR / FirstVNF_CPU_Server ) ) ) ) / Const ) / ( Max( CRS,Min( ( ( CRS + CRS ) * DDR ) ,MDR ) ) - FirstVNF_Mem_Server ) ) * FirstVNF_Mem ) )", "choosing": "( ( CS * ( MUR / MLU ) ) + Min( MUR ,( MLU - ( Max( RRSe,MUC ) * ( ( MUM + ( RMSe + Max( MUR,RRSe ) ) ) * ( ( MUC - RMSe ) * MLU ) ) ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.0796898527579813}], "16": [{"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * RRSe ) / DS ) - RMSe ) ) * Min( MUM ,Max( RRSe,( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * RRSe ) / DS ) - RMSe ) ) * Min( MUM ,Max( RRSe,( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ( MRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / ( BR - MRS ) ) ) / Const ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( CS ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.36374153983322893}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7987784909737732}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "Max( BR,( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + ( RRSe + MUC ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.20074349442379183, "obj2": 0.6362604914270985}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( ( Const * ( ( AMS / ARS ) / ( ( Const * ( ( AMS / ARS ) / Max( RRS,ACS ) ) ) / ( FirstVNF_Mem_Server / Const ) ) ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( ( RRSe / CS ),CS ) + ( RRSe / CS ) )", "obj1": 0.2862453531598513, "obj2": 0.5666704495412441}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( ( RCSe / MUC ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8508135165351873}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "Min( ( Max( FirstVNF_RAM,Min( RRS ,Const ) ) + ACS ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8309286590129481}, {"determining": "( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) + Min( ( BR * MRS ) ,ACS ) )", "choosing": "Max( ( ( Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) ) / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.07434944237918216, "obj2": 0.8259307650497819}, {"determining": "Max( ( DDR + DDR ),Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / CS ) + Max( RRSe,( Max( MUM,( DS - MUM ) ) / ( Min( MUC ,MUM ) - ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.3345724907063197, "obj2": 0.5329998204154079}, {"determining": "Max( ( FirstVNF_Mem * BR ),( ( RRS / FirstVNF_RAM_Server ) - BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( RMSe / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.21561338289962825, "obj2": 0.6338953795395196}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) ),MUR ) * CS ) )", "obj1": 0.2211895910780669, "obj2": 0.6158837822391297}], "17": [{"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * Min( ( MLU * MUC ) ,Max( MUC,CS ) ) ) / DS ) - RMSe ) ) * Min( MUM ,( RRSe - ( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * RRSe ) / DS ) - RMSe ) ) * Min( MUM ,Max( RRSe,( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Min( MUC ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.7193308550185874, "obj2": 0.20147085806645706}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( Min( ( ( FirstVNF_RAM_Server + ARS ) / ACS ) ,Const ) / ( FirstVNF_Mem_Server / Min( ( ( ( ( ( FirstVNF_RAM + Const ) - RRS ) / Const ) - FirstVNF_Mem ) / Const ) ,( BR - MRS ) ) ) )", "choosing": "( Max( ( ( MUC - CS ) + MLU ),CS ) + ( ( ( CS / MUM ) + ( RRSe / CS ) ) + ( DS * MUC ) ) )", "obj1": 0.6171003717472119, "obj2": 0.28248992936604633}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ( MRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / ( BR - MRS ) ) ) / Const ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( CS ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.36374153983322893}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7987784909737732}, {"determining": "Max( ( Max( MRS,( Min( ( MDR * PN ) ,Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU_Server ) ) - PN ) ) / BR ),( FirstVNF_Mem * BR ) )", "choosing": "( Min( ( MUR - Min( ( ( MLU * Max( ( CS / RCSe ),RRSe ) ) / CS ) ,DS ) ) ,MUR ) / Min( RCSe ,CS ) )", "obj1": 0.17657992565055763, "obj2": 0.6602451060591963}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "Max( BR,( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + ( RRSe + MUC ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.20074349442379183, "obj2": 0.6362604914270985}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.42379182156133827, "obj2": 0.45387119467146997}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( ( RCSe / MUC ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8508135165351873}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Min( ( Max( FirstVNF_RAM,Min( RRS ,Const ) ) + ACS ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8309286590129481}, {"determining": "( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) + Min( ( BR * MRS ) ,ACS ) )", "choosing": "Max( ( ( Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) ) / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.07434944237918216, "obj2": 0.8259307650497819}, {"determining": "Max( ( DDR + DDR ),Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / CS ) + Max( RRSe,( Max( MUM,( DS - MUM ) ) / ( Min( MUC ,MUM ) - ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.3345724907063197, "obj2": 0.5329998204154079}, {"determining": "Max( ( FirstVNF_Mem * BR ),( ( RRS / FirstVNF_RAM_Server ) - BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( RMSe / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.21561338289962825, "obj2": 0.6338953795395196}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}], "18": [{"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * Min( ( MLU * MUC ) ,Max( MUC,CS ) ) ) / DS ) - RMSe ) ) * Min( MUM ,( RRSe - ( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * Min( ( MLU * MUC ) ,Max( MUC,CS ) ) ) / DS ) - RMSe ) ) * Min( MUM ,( RRSe - ( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Min( MUC ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.7193308550185874, "obj2": 0.20147085806645706}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( Min( ( ( FirstVNF_RAM_Server + ARS ) / ACS ) ,Const ) / ( FirstVNF_Mem_Server / Min( ( ( ( ( ( FirstVNF_RAM + Const ) - RRS ) / Const ) - FirstVNF_Mem ) / Const ) ,( BR - MRS ) ) ) )", "choosing": "( Max( ( ( MUC - CS ) + MLU ),CS ) + ( ( ( CS / MUM ) + ( RRSe / CS ) ) + ( DS * MUC ) ) )", "obj1": 0.6171003717472119, "obj2": 0.28248992936604633}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ( MRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / ( BR - MRS ) ) ) / Const ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( CS ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.36374153983322893}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) - ( ( Min( ( ( ( Max( CS,DS ) + DS ) * RCSe ) / RMSe ) ,( MUC + MLU ) ) + CS ) + ( RCSe * DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6512280104285707}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( BR,( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + ( RRSe + MUC ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.20074349442379183, "obj2": 0.6362604914270985}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "Max( ( FirstVNF_Mem * BR ),( ( RRS / FirstVNF_RAM_Server ) - BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( RMSe / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.21561338289962825, "obj2": 0.6338953795395196}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7987784909737732}, {"determining": "( Min( ( ( FirstVNF_RAM_Server + ARS ) / ACS ) ,Const ) / ( FirstVNF_Mem_Server / Min( ( ( ( ( ( BR * FirstVNF_CPU_Server ) - RRS ) / Const ) - Min( Max( RRS,DDR ) ,MDR ) ) / Const ) ,( BR - MRS ) ) ) )", "choosing": "( Max( Min( CS ,Min( ( RMSe / Max( RCSe,( MLU + RMSe ) ) ) ,RCSe ) ),( Max( CS,DS ) * RRSe ) ) + ( Max( MUR,CS ) / Max( MLU,MLU ) ) )", "obj1": 0.9851301115241635, "obj2": 0.00816909127971527}, {"determining": "( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) + Min( ( BR * MRS ) ,ACS ) )", "choosing": "Max( ( ( Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) ) / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.07434944237918216, "obj2": 0.8259307650497819}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( ( RCSe / MUC ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8508135165351873}, {"determining": "Max( ( DDR + DDR ),Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / CS ) + Max( RRSe,( Max( MUM,( DS - MUM ) ) / ( Min( MUC ,MUM ) - ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.3345724907063197, "obj2": 0.5329998204154079}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}], "19": [{"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * Min( ( MLU * MUC ) ,Max( MUC,CS ) ) ) / DS ) - RMSe ) ) * Min( MUM ,( RRSe - ( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * Min( ( MLU * MUC ) ,Max( MUC,CS ) ) ) / DS ) - RMSe ) ) * Min( MUM ,( RRSe - ( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Min( MUC ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.7193308550185874, "obj2": 0.20147085806645706}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( Min( ( ( FirstVNF_RAM_Server + ARS ) / ACS ) ,Const ) / ( FirstVNF_Mem_Server / Min( ( ( ( ( ( FirstVNF_RAM + Const ) - RRS ) / Const ) - FirstVNF_Mem ) / Const ) ,( BR - MRS ) ) ) )", "choosing": "( Max( ( ( MUC - CS ) + MLU ),CS ) + ( ( ( CS / MUM ) + ( RRSe / CS ) ) + ( DS * MUC ) ) )", "obj1": 0.6171003717472119, "obj2": 0.28248992936604633}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ( MRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / ( BR - MRS ) ) ) / Const ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( CS ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.36374153983322893}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) - ( ( Min( ( ( ( Max( CS,DS ) + DS ) * RCSe ) / RMSe ) ,( MUC + MLU ) ) + CS ) + ( RCSe * DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6512280104285707}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( BR,( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + ( RRSe + MUC ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.20074349442379183, "obj2": 0.6362604914270985}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR + Max( Max( Max( RRS,FirstVNF_CPU ),FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Const ) ) )", "choosing": "( Min( ( Min( RCSe ,RCSe ) * ( Max( RMSe,RMSe ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4312267657992565, "obj2": 0.44835900432044345}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "Max( ( FirstVNF_Mem * BR ),( ( RRS / FirstVNF_RAM_Server ) - BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( RMSe / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.21561338289962825, "obj2": 0.6338953795395196}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "Max( ( MDR + Const ),Min( Min( ( ( Const + CRS ) + ( DDR + Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ) ,DDR ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( RCSe ,RCSe ) * ( Max( RMSe,Min( ( MLU * MUC ) ,Max( RRSe,Min( MUC ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * Min( ( MLU * MUC ) ,Max( MUC,CS ) ) ) / DS ) - RMSe ) ) * Min( MUM ,( RRSe - ( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 0.06319702602230483, "obj2": 0.8336029111345353}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( Min( DDR ,( Const + Max( Const,Min( ACS ,FirstVNF_RAM ) ) ) ) / ( ( Max( Const,Min( ACS ,FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,( Const / Max( ( BR * BR ),( DDR / FirstVNF_CPU_Server ) ) ) ) / Const ) ) * FirstVNF_Mem ) )", "choosing": "( Max( ( RCSe - MUM ),MLU ) + ( ( Min( Max( DS,RCSe ) ,MUR ) - DS ) - RCSe ) )", "obj1": 0.06691449814126393, "obj2": 0.8109586621234647}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "( ( PN / FirstVNF_RAM ) + Min( Min( Min( ( FirstVNF_CPU + ACS ) ,Min( PN ,Max( BR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( MUC * RRSe ) ) - RMSe ) - MUM ) / ( RRSe / MUM ) ) + Max( ( ( RCSe / MUC ) / DS ),Max( CS,Min( RRSe ,DS ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8508135165351873}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( MDR + ( ( Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Max( MLU,( Min( Max( DS,RCSe ) ,MUR ) - DS ) ) * ( ( ( ( RRSe + MUR ) * MUM ) + Min( Max( MUC,Max( Max( RCSe,CS ),RCSe ) ) ,RRSe ) ) - CS ) ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Min( MLU ,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.9089219330855018, "obj2": 0.07222527247004182}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "Max( ( DDR + DDR ),Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / CS ) + Max( RRSe,( Max( MUM,( DS - MUM ) ) / ( Min( MUC ,MUM ) - ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.3345724907063197, "obj2": 0.5329998204154079}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}], "20": [{"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * Min( ( MLU * MUC ) ,Max( MUC,CS ) ) ) / DS ) - RMSe ) ) * Min( MUM ,( RRSe - ( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * Min( ( MLU * MUC ) ,Max( MUC,CS ) ) ) / DS ) - RMSe ) ) * Min( MUM ,( RRSe - ( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( Min( ( ( FirstVNF_RAM_Server + ARS ) / ACS ) ,Const ) / ( FirstVNF_Mem_Server / Min( ( ( ( ( ( FirstVNF_RAM + Const ) - RRS ) / Const ) - FirstVNF_Mem ) / Const ) ,( BR - MRS ) ) ) )", "choosing": "( Max( ( ( MUC - CS ) + MLU ),CS ) + ( ( ( CS / MUM ) + ( RRSe / CS ) ) + ( DS * MUC ) ) )", "obj1": 0.6171003717472119, "obj2": 0.28248992936604633}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ( MRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / ( BR - MRS ) ) ) / Const ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( CS ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.36374153983322893}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( ( MUR * Min( MLU ,MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.19445603508325415}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( Min( MLU ,MLU ) ,MLU ) )", "obj1": 0.11895910780669144, "obj2": 0.766624252151505}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) - ( ( Min( ( ( ( Max( CS,DS ) + DS ) * RCSe ) / RMSe ) ,( MUC + MLU ) ) + CS ) + ( RCSe * DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6512280104285707}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( Min( DDR ,( Const + Max( Const,Min( ACS ,FirstVNF_RAM ) ) ) ) / ( ( Max( Const,Min( ACS ,FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,( Const / Max( ( BR * BR ),( DDR / FirstVNF_CPU_Server ) ) ) ) / Const ) ) * FirstVNF_Mem ) )", "choosing": "( Max( ( RCSe - MUM ),MLU ) + ( ( Min( Max( DS,RCSe ) ,MUR ) - DS ) - RCSe ) )", "obj1": 0.06691449814126393, "obj2": 0.8109586621234647}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}, {"determining": "Max( BR,( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + ( RRSe + MUC ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.20074349442379183, "obj2": 0.6362604914270985}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4312267657992565, "obj2": 0.4468830624623393}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "Max( ( FirstVNF_Mem * BR ),( ( RRS / FirstVNF_RAM_Server ) - BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( RMSe / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.21561338289962825, "obj2": 0.6338953795395196}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR + Max( Max( RRS,Min( ( ( Const + CRS ) + RRS ) ,DDR ) ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Const ) ) )", "choosing": "( Min( ( Min( RCSe ,RCSe ) * ( Max( RMSe,Min( ( MLU * MUC ) ,Max( RRSe,Min( MUC ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.41263940520446096, "obj2": 0.46155262287092}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( MDR + ( ( Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Max( MLU,( Min( Max( DS,RCSe ) ,MUR ) - DS ) ) * ( ( ( ( RRSe + MUR ) * MUM ) + Min( Max( MUC,Max( Max( RCSe,CS ),RCSe ) ) ,RRSe ) ) - CS ) ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Min( MLU ,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.9089219330855018, "obj2": 0.07222527247004182}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( PN ,DDR ) ) + Const ) / ( Min( MDR ,( ACS / MDR ) ) - ( ( Min( FirstVNF_Mem ,( Const / Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),RRS ) ) ) / Const ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUC - CS ) + DS ) + CS ) + ( MUM + RCSe ) )", "obj1": 0.9925650557620818, "obj2": 0.0069449152360807126}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "Max( ( DDR + DDR ),Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / CS ) + Max( RRSe,( Max( MUM,( DS - MUM ) ) / ( Min( MUC ,MUM ) - ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.3345724907063197, "obj2": 0.5329998204154079}], "21": [{"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( ( MLU + CS ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - CS ) + Max( CS,RMSe ) ) ) ) ) ) ,MUR ) / ( ( ( RRSe + ( RCSe / RCSe ) ) - ( ( Min( MLU ,( ( MUM / RRSe ) / MUR ) ) / DS ) - RMSe ) ) * Min( MUM ,( ( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( ( ( MUR * Min( ( MLU * MUC ) ,Max( MUC,CS ) ) ) / DS ) - RMSe ) ) * Min( MUM ,( RRSe - ( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( Min( ( ( FirstVNF_RAM_Server + ARS ) / ACS ) ,Const ) / ( FirstVNF_Mem_Server / Min( ( ( ( ( ( FirstVNF_RAM + Const ) - RRS ) / Const ) - FirstVNF_Mem ) / Const ) ,( BR - MRS ) ) ) )", "choosing": "( Max( ( ( MUC - CS ) + MLU ),CS ) + ( ( ( CS / MUM ) + ( RRSe / CS ) ) + ( DS * MUC ) ) )", "obj1": 0.6171003717472119, "obj2": 0.28248992936604633}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ( MRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / ( BR - MRS ) ) ) / Const ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( CS ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.36374153983322893}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( ( MUR * Min( MLU ,MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.7286245353159851, "obj2": 0.19157057310109302}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) + Min( Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( FirstVNF_RAM / ARS ) ) ,( Max( MRS,RRS ) / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( CS * RRSe ) ) - RMSe ) - MUC ) / ( RRSe / MUM ) ) + Max( ( Max( RRSe,Min( MLU ,CS ) ) / DS ),Max( ( DS / CS ),Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8525790046687204}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) - ( ( Min( ( ( ( Max( CS,DS ) + DS ) * RCSe ) / RMSe ) ,( MUC + MLU ) ) + CS ) + ( RCSe * DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6512280104285707}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}, {"determining": "Min( ( AMS + Max( ( Min( MDR ,MRS ) + PN ),( Const * BR ) ) ) ,Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( Min( Max( RCSe,DS ) ,MUR ) - DS ) - RCSe ) )", "obj1": 0.06691449814126393, "obj2": 0.8109586621234647}, {"determining": "Max( BR,( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + ( RRSe + MUC ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.20074349442379183, "obj2": 0.6362604914270985}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4312267657992565, "obj2": 0.4468830624623393}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "Max( ( FirstVNF_Mem * BR ),( ( RRS / FirstVNF_RAM_Server ) - BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( RMSe / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.21561338289962825, "obj2": 0.6338953795395196}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR + Max( Max( RRS,Min( ( ( Const + CRS ) + RRS ) ,DDR ) ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Const ) ) )", "choosing": "( Min( ( Min( RCSe ,RCSe ) * ( Max( RMSe,Min( ( MLU * MUC ) ,Max( RRSe,Min( MUC ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.41263940520446096, "obj2": 0.46155262287092}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,Min( CRS ,RRS ) ) * ( FirstVNF_RAM - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * ( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4591078066914498, "obj2": 0.4240534760602232}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( MDR + ( ( Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Max( MLU,( Min( Max( DS,RCSe ) ,MUR ) - DS ) ) * ( ( ( ( RRSe + MUR ) * MUM ) + Min( Max( MUC,Max( Max( RCSe,CS ),RCSe ) ) ,RRSe ) ) - CS ) ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Min( MLU ,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.9089219330855018, "obj2": 0.07222527247004182}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "Max( ( DDR + DDR ),Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / CS ) + Max( RRSe,( Max( MUM,( DS - MUM ) ) / ( Min( MUC ,MUM ) - ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.3345724907063197, "obj2": 0.5329998204154079}], "22": [{"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( ( ( MUC + MUM ) + CS ) / ( ( ( RRSe + ( RCSe / RCSe ) ) - ( ( Min( ( ( MUM / RRSe ) / MUR ) ,MLU ) / DS ) - RMSe ) ) * Min( MUM ,( ( Max( RMSe,MLU ) + Max( ( MUR - ( MUC / CS ) ),( MUC / ( MLU / MUR ) ) ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( Min( ( MUR - Max( ( ( ( MLU + CS ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - CS ) + Max( CS,RMSe ) ) ) ) ) ) ,MUR ) / ( ( ( RRSe + ( RCSe / RCSe ) ) - ( ( Min( MLU ,( ( MUM / RRSe ) / MUR ) ) / DS ) - RMSe ) ) * Min( MUM ,( ( Max( RMSe,MLU ) + Max( MLU,( MUC / ( MLU / MUR ) ) ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( ( MUR * Min( MLU ,MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.7286245353159851, "obj2": 0.19157057310109302}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( Min( ( ( FirstVNF_RAM_Server + ARS ) / ACS ) ,Const ) / ( FirstVNF_Mem_Server / Min( ( ( ( ( ( FirstVNF_RAM + Const ) - RRS ) / Const ) - FirstVNF_Mem ) / Const ) ,( BR - MRS ) ) ) )", "choosing": "( Max( ( ( MUC - CS ) + MLU ),CS ) + ( ( ( CS / MUM ) + ( RRSe / CS ) ) + ( DS * MUC ) ) )", "obj1": 0.6171003717472119, "obj2": 0.28248992936604633}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ( MRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / ( BR - MRS ) ) ) / Const ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( CS ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.36374153983322893}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "Min( ( AMS + Max( ( Min( MDR ,MRS ) + PN ),( Const * BR ) ) ) ,Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( Min( Max( RCSe,DS ) ,MUR ) - DS ) - RCSe ) )", "obj1": 0.06691449814126393, "obj2": 0.8109586621234647}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) - ( ( Min( ( ( ( Max( CS,DS ) + DS ) * RCSe ) / RMSe ) ,( MUC + MLU ) ) + CS ) + ( RCSe * DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6512280104285707}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) + Min( Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( FirstVNF_RAM / ARS ) ) ,( Max( MRS,RRS ) / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( CS * RRSe ) ) - RMSe ) - MUC ) / ( RRSe / MUM ) ) + Max( ( Max( RRSe,Min( MLU ,CS ) ) / DS ),Max( ( DS / CS ),Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8525790046687204}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}, {"determining": "Max( BR,( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + ( RRSe + MUC ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.20074349442379183, "obj2": 0.6362604914270985}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "Max( ( FirstVNF_Mem * BR ),( ( RRS / FirstVNF_RAM_Server ) - BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( RMSe / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.21561338289962825, "obj2": 0.6338953795395196}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "Max( Min( AMS ,BR ),( Min( ( AMS * ( FirstVNF_CPU / ( PN + ( CRS * RRS ) ) ) ) ,Const ) - MDR ) )", "choosing": "( ( Max( RRSe,MLU ) / MUC ) / ( MLU * Min( MUM ,CS ) ) )", "obj1": 0.2992565055762082, "obj2": 0.5662778102967796}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( MDR + ( ( Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Max( MLU,( Min( Max( DS,RCSe ) ,MUR ) - DS ) ) * ( ( ( ( RRSe + MUR ) * MUM ) + Min( Max( MUC,Max( Max( RCSe,CS ),RCSe ) ) ,RRSe ) ) - CS ) ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Min( MLU ,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.9089219330855018, "obj2": 0.07222527247004182}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4661861176087838}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR + Max( Max( RRS,Min( ( ( Const + CRS ) + RRS ) ,DDR ) ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Const ) ) )", "choosing": "( Min( ( Min( RCSe ,RCSe ) * ( Max( RMSe,Min( ( MLU * MUC ) ,Max( RRSe,Min( MUC ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.41263940520446096, "obj2": 0.46155262287092}, {"determining": "Max( ( DDR + DDR ),Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / CS ) + Max( RRSe,( Max( MUM,( DS - MUM ) ) / ( Min( MUC ,MUM ) - ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.3345724907063197, "obj2": 0.5329998204154079}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4312267657992565, "obj2": 0.4468830624623393}], "23": [{"determining": "( Min( DDR ,( ( FirstVNF_CPU_Server * AMS ) + Min( ( MDR * Max( Max( FirstVNF_Mem,( AMS - DDR ) ),MRS ) ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( FirstVNF_Mem + ( ( ( AMS * ARS ) / Max( RRS,ACS ) ) / Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),RRS ) ) ) / ( FirstVNF_RAM - PN ) ) / ( CRS - ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Min( DS ,( ( RMSe / RRSe ) - MUC ) ) * RCSe ) / MUC ) ) + ( ( ( RCSe / MUM ) + ( RRSe * CS ) ) + ( DS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( ( MRS * Min( ACS ,AMS ) ) ,Max( PN,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * MDR ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( Max( AMS,BR ) / RRS ) )", "choosing": "( ( ( MUC + MUM ) + CS ) / ( ( ( RRSe + ( RCSe / RCSe ) ) - ( ( Min( ( ( MUM / RRSe ) / MUR ) ,MLU ) / DS ) - RMSe ) ) * Min( MUM ,( ( Max( RMSe,MLU ) + Max( ( MUR - ( MUC / CS ) ),( MUC / ( MLU / MUR ) ) ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( Min( ( ( FirstVNF_RAM_Server + ARS ) / ACS ) ,Const ) / ( FirstVNF_Mem_Server / Min( ( ( ( ( ( FirstVNF_RAM + Const ) - RRS ) / Const ) - FirstVNF_Mem ) / Const ) ,( BR - MRS ) ) ) )", "choosing": "( Max( ( ( MUC - CS ) + MLU ),CS ) + ( ( ( CS / MUM ) + ( RRSe / CS ) ) + ( DS * MUC ) ) )", "obj1": 0.6171003717472119, "obj2": 0.28248992936604633}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ( MRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / ( BR - MRS ) ) ) / Const ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( CS ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.36374153983322893}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Min( ( AMS + Max( ( Min( MDR ,MRS ) + PN ),( Const * BR ) ) ) ,Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( Min( Max( RCSe,DS ) ,MUR ) - DS ) - RCSe ) )", "obj1": 0.06691449814126393, "obj2": 0.8109586621234647}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) + Min( Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( FirstVNF_RAM / ARS ) ) ,( Max( MRS,RRS ) / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( CS * RRSe ) ) - RMSe ) - MUC ) / ( RRSe / MUM ) ) + Max( ( Max( RRSe,Min( MLU ,CS ) ) / DS ),Max( ( DS / CS ),Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8525790046687204}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( RCSe ,DS ) * MLU ) ,( RCSe * MLU ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( ( MUR * Min( MLU ,MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.7286245353159851, "obj2": 0.19157057310109302}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) * MRS ) / Const ) / ( BR - MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,Max( ( Max( MUM,CS ) + Max( CS,( Max( CS,Max( MUM,RCSe ) ) / Max( DS,MLU ) ) ) ),RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.42138400178913926}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) * RRS ) )", "choosing": "Max( ( RRSe - ( MUR * CS ) ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.25092936802973975, "obj2": 0.5949407945019098}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4312267657992565, "obj2": 0.4468830624623393}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "Max( ( FirstVNF_Mem * BR ),( ( RRS / FirstVNF_RAM_Server ) - BR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( RMSe / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.21561338289962825, "obj2": 0.6338953795395196}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR + Max( Max( RRS,Min( ( ( Const + CRS ) + RRS ) ,DDR ) ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Const ) ) )", "choosing": "( Min( ( Min( RCSe ,RCSe ) * ( Max( RMSe,Min( ( MLU * MUC ) ,Max( RRSe,Min( MUC ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.41263940520446096, "obj2": 0.46155262287092}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) ,( Const / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( Max( RCSe,RCSe ) / ( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.04991746896948943}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( PN ,DDR ) ) + Const ) / ( Min( MDR ,( ACS / Max( RRS,FirstVNF_CPU_Server ) ) ) - ( Min( FirstVNF_Mem ,( Const / Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),RRS ) ) ) / Const ) ) )", "choosing": "( ( ( MUC / ( Max( MLU,RMSe ) + RCSe ) ) - Min( MLU ,( DS * CS ) ) ) + ( MUM + RCSe ) )", "obj1": 0.9721189591078067, "obj2": 0.02550773544618846}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) - ( ( Min( ( ( ( Max( CS,DS ) + DS ) * RCSe ) / RMSe ) ,( MUC + MLU ) ) + CS ) + ( RCSe * DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6512280104285707}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,Min( CRS ,RRS ) ) * ( FirstVNF_RAM - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * ( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4591078066914498, "obj2": 0.4240534760602232}, {"determining": "Max( Min( AMS ,BR ),( Min( ( AMS * ( FirstVNF_CPU / ( PN + ( CRS * RRS ) ) ) ) ,Const ) - MDR ) )", "choosing": "( ( Max( RRSe,MLU ) / MUC ) / ( MLU * Min( MUM ,CS ) ) )", "obj1": 0.2992565055762082, "obj2": 0.5662778102967796}, {"determining": "Max( ( FirstVNF_Mem * Const ),Min( Min( Min( Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * ( RRSe / RCSe ) ) / ( ( ( RRSe + ( RCSe * RCSe ) ) - ( Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) - CS ) ) * ( MLU + ( MLU + ( RMSe - RCSe ) ) ) ) )", "obj1": 0.18773234200743494, "obj2": 0.646894295464297}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( MDR + ( ( Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Max( MLU,( Min( Max( DS,RCSe ) ,MUR ) - DS ) ) * ( ( ( ( RRSe + MUR ) * MUM ) + Min( Max( MUC,Max( Max( RCSe,CS ),RCSe ) ) ,RRSe ) ) - CS ) ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Min( MLU ,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.9089219330855018, "obj2": 0.07222527247004182}], "24": [{"determining": "( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ) / ( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( ( FirstVNF_CPU_Server * AMS ) + Min( ( MDR * Max( Max( FirstVNF_Mem,( AMS - DDR ) ),MRS ) ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( FirstVNF_Mem + ( ( ( AMS * ARS ) / Max( RRS,ACS ) ) / Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),RRS ) ) ) / ( FirstVNF_RAM - PN ) ) / ( CRS - ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Min( DS ,( ( RMSe / RRSe ) - MUC ) ) * RCSe ) / MUC ) ) + ( ( ( RCSe / MUM ) + ( RRSe * CS ) ) + ( DS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( ( FirstVNF_CPU + ( PN * FirstVNF_RAM_Server ) ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Min( RCSe ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( RMSe,( RCSe * ( ( ( MUR / Max( ( MLU - MUM ),RRSe ) ) * Max( ( ( RRSe * CS ) / ( RMSe / MUR ) ),DS ) ) / ( CS + MLU ) ) ) ) )", "obj1": 0.6003717472118959, "obj2": 0.2779568409928626}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( RCSe ,DS ) * MLU ) ,( RCSe * MLU ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( ( MUR * Min( MLU ,MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.7286245353159851, "obj2": 0.19157057310109302}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( ( ( MRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - RRS ) / ( BR - MRS ) ) ) / Const ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( CS ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.36374153983322893}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "Min( ( AMS + Max( ( Min( MDR ,MRS ) + PN ),( Const * BR ) ) ) ,Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( Min( Max( RCSe,DS ) ,MUR ) - DS ) - RCSe ) )", "obj1": 0.06691449814126393, "obj2": 0.8109586621234647}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) / ( CS * MUM ) )", "obj1": 0.2100371747211896, "obj2": 0.6146302780439804}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) + Min( Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( FirstVNF_RAM / ARS ) ) ,( Max( MRS,RRS ) / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( CS * RRSe ) ) - RMSe ) - MUC ) / ( RRSe / MUM ) ) + Max( ( Max( RRSe,Min( MLU ,CS ) ) / DS ),Max( ( DS / CS ),Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8525790046687204}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( ( FirstVNF_Mem * Const ),Min( Min( Min( Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * ( RRSe / RCSe ) ) / ( ( ( RRSe + ( RCSe * RCSe ) ) - ( Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) - CS ) ) * ( MLU + ( MLU + ( RMSe - RCSe ) ) ) ) )", "obj1": 0.18773234200743494, "obj2": 0.646894295464297}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR + Max( Max( RRS,Min( ( ( Const + CRS ) + RRS ) ,DDR ) ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Const ) ) )", "choosing": "( Min( ( Min( RCSe ,RCSe ) * ( Max( RMSe,Min( ( MLU * MUC ) ,Max( RRSe,Min( MUC ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.41263940520446096, "obj2": 0.46155262287092}, {"determining": "( ( ( ( FirstVNF_RAM - DDR ) - ( MDR + ARS ) ) * ( AMS / ARS ) ) / Min( FirstVNF_Mem_Server ,( ( MRS / MDR ) * Min( ACS ,( ( Min( Max( RRS,MRS ) ,ARS ) / ARS ) - MRS ) ) ) ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( MUM * Min( MLU ,MLU ) ) + CS ) )", "obj1": 0.7713754646840149, "obj2": 0.1707159085810459}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "Max( ( DS - ( RCSe / RRSe ) ),( ( RCSe + RRSe ) - ( DS * CS ) ) )", "obj1": 0.516728624535316, "obj2": 0.38695400043939765}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}, {"determining": "( ( DDR * ( ARS + ( ( Min( MDR ,MRS ) / MRS ) - ( AMS / ACS ) ) ) ) / Min( FirstVNF_Mem_Server ,( Max( Const,Min( PN ,FirstVNF_RAM ) ) / ( RRS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( RCSe ,DS ) * MLU ) ,( RCSe * MLU ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( MUM + ( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.47026022304832715, "obj2": 0.41735331295131123}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4312267657992565, "obj2": 0.4468830624623393}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "Max( Min( AMS ,BR ),( Min( ( AMS * ( FirstVNF_CPU / ( PN + ( CRS * RRS ) ) ) ) ,Const ) - MDR ) )", "choosing": "( ( Max( RRSe,MLU ) / MUC ) / ( MLU * Min( MUM ,CS ) ) )", "obj1": 0.2992565055762082, "obj2": 0.5662778102967796}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( PN ,DDR ) ) + Const ) / ( Min( MDR ,( ACS / Max( RRS,FirstVNF_CPU_Server ) ) ) - ( Min( FirstVNF_Mem ,( Const / Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),RRS ) ) ) / Const ) ) )", "choosing": "( ( ( MUC / ( Max( MLU,RMSe ) + RCSe ) ) - Min( MLU ,( DS * CS ) ) ) + ( MUM + RCSe ) )", "obj1": 0.9721189591078067, "obj2": 0.02550773544618846}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) - ( ( Min( ( ( ( Max( CS,DS ) + DS ) * RCSe ) / RMSe ) ,( MUC + MLU ) ) + CS ) + ( RCSe * DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6512280104285707}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( PN ,DDR ) ) + Const ) / ( Min( MDR ,( ACS / Max( RRS,FirstVNF_CPU_Server ) ) ) - ( DDR / Const ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) / ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * ( MUC + DS ) ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( CS * MLU ) - ( ( MLU * Min( MLU ,MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.9981412639405205, "obj2": 0.0033815831527950987}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( MDR + ( ( Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Max( MLU,( Min( Max( DS,RCSe ) ,MUR ) - DS ) ) * ( ( ( ( RRSe + MUR ) * MUM ) + Min( Max( MUC,Max( Max( RCSe,CS ),RCSe ) ) ,RRSe ) ) - CS ) ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Min( MLU ,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.9089219330855018, "obj2": 0.07222527247004182}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,Min( CRS ,RRS ) ) * ( FirstVNF_RAM - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * ( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4591078066914498, "obj2": 0.4240534760602232}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}], "25": [{"determining": "Min( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( ( ( AMS / MRS ) + FirstVNF_RAM_Server ) - Max( ( ( Const - BR ) - DDR ),FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + ( ( RRS - RRS ) / CRS ) ) )", "choosing": "Max( ( ( MUC - DS ) / MUR ),Min( MUR ,Min( MLU ,( Min( RCSe ,( ( CS / MUC ) + RCSe ) ) + Min( ( CS * ( MUC + ( DS - MUC ) ) ) ,( ( RMSe + DS ) + Max( DS,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ) / ( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( ( FirstVNF_Mem_Server * ( DDR - MDR ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( Max( AMS,( MDR * ( ARS * DDR ) ) ) + Max( ( ( Max( FirstVNF_RAM,AMS ) * Min( DDR ,MDR ) ) / ACS ),CRS ) ) )", "choosing": "( Max( Max( RCSe,MUC ),CS ) + ( ( Max( Max( ( MUM - RMSe ),MUC ),( Max( ( RMSe - ( MUM / RCSe ) ),MUC ) - ( RMSe - MLU ) ) ) * MUM ) + ( MUR * ( Max( ( RMSe - ( ( RCSe * MUM ) / RCSe ) ),MUC ) - ( RCSe - MLU ) ) ) ) )", "obj1": 0.516728624535316, "obj2": 0.3485766469920498}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( ( FirstVNF_CPU + ( PN * FirstVNF_RAM_Server ) ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Min( RCSe ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( RMSe,( RCSe * ( ( ( MUR / Max( ( MLU - MUM ),RRSe ) ) * Max( ( ( RRSe * CS ) / ( RMSe / MUR ) ),DS ) ) / ( CS + MLU ) ) ) ) )", "obj1": 0.6003717472118959, "obj2": 0.2779568409928626}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( RCSe ,DS ) * MLU ) ,( RCSe * MLU ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( ( MUR * Min( MLU ,MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.7286245353159851, "obj2": 0.19157057310109302}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "Min( ( AMS + Max( ( Min( MDR ,MRS ) + PN ),( Const * BR ) ) ) ,Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( Min( Max( RCSe,DS ) ,MUR ) - DS ) - RCSe ) )", "obj1": 0.06691449814126393, "obj2": 0.8109586621234647}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) + Min( Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( FirstVNF_RAM / ARS ) ) ,( Max( MRS,RRS ) / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( CS * RRSe ) ) - RMSe ) - MUC ) / ( RRSe / MUM ) ) + Max( ( Max( RRSe,Min( MLU ,CS ) ) / DS ),Max( ( DS / CS ),Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8525790046687204}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR + Max( Max( RRS,Min( ( ( Const + CRS ) + RRS ) ,DDR ) ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Const ) ) )", "choosing": "( Min( ( Min( RCSe ,RCSe ) * ( Max( RMSe,Min( ( MLU * MUC ) ,Max( RRSe,Min( MUC ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.41263940520446096, "obj2": 0.46155262287092}, {"determining": "( ( ( ( FirstVNF_RAM - DDR ) - ( MDR + ARS ) ) * ( AMS / ARS ) ) / Min( FirstVNF_Mem_Server ,( ( MRS / MDR ) * Min( ACS ,( ( Min( Max( RRS,MRS ) ,ARS ) / ARS ) - MRS ) ) ) ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( MUM * Min( MLU ,MLU ) ) + CS ) )", "obj1": 0.7713754646840149, "obj2": 0.1707159085810459}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "Max( Max( Min( Min( ( AMS * ( BR + FirstVNF_RAM_Server ) ) ,Const ) ,AMS ),( FirstVNF_Mem * BR ) ),Max( RRS,AMS ) )", "choosing": "( ( MUR / MUM ) - Min( ( ( RMSe * MUR ) + MUM ) ,( RCSe + ( ( Min( MUM ,CS ) / MLU ) - ( Max( DS,( ( CS / MUC ) * ( MUR + MLU ) ) ) + ( ( ( RRSe + MLU ) - ( MUC * CS ) ) - MUR ) ) ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7812455281778077}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( ( ( ( CRS - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Min( DDR ,MDR ) ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,CS ) + ( ( MUC * MUM ) + ( MUR * DS ) ) ) + ( ( MUC * MUM ) + ( MUR * DS ) ) )", "obj1": 0.8550185873605948, "obj2": 0.0917240894672898}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( DDR * ( ARS + ( ( Min( MDR ,MRS ) / MRS ) - ( AMS / ACS ) ) ) ) / Min( FirstVNF_Mem_Server ,( Max( Const,Min( PN ,FirstVNF_RAM ) ) / ( RRS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( RCSe ,DS ) * MLU ) ,( RCSe * MLU ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( MUM + ( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.47026022304832715, "obj2": 0.41735331295131123}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4312267657992565, "obj2": 0.4468830624623393}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "Max( Max( ARS,Min( ( Min( FirstVNF_CPU_Server ,( Min( MDR ,( Const + FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) - ACS ) ,( Max( ( FirstVNF_RAM - RRS ),AMS ) / Max( PN,FirstVNF_RAM_Server ) ) ) ),Min( FirstVNF_CPU_Server ,( Min( MDR ,( Const + FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,RRSe ) + MLU ) / ( Min( MUM ,CS ) / MLU ) )", "obj1": 0.20631970260223048, "obj2": 0.6355156578686667}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) / ( CS * MUM ) )", "obj1": 0.2100371747211896, "obj2": 0.6146302780439804}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( FirstVNF_Mem * Const ),Min( Min( Min( Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * ( RRSe / RCSe ) ) / ( ( ( RRSe + ( RCSe * RCSe ) ) - ( Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) - CS ) ) * ( MLU + ( MLU + ( RMSe - RCSe ) ) ) ) )", "obj1": 0.18773234200743494, "obj2": 0.646894295464297}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) - ( ( Min( ( ( ( Max( CS,DS ) + DS ) * RCSe ) / RMSe ) ,( MUC + MLU ) ) + CS ) + ( RCSe * DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6512280104285707}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( MDR + ( ( Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Max( MLU,( Min( Max( DS,RCSe ) ,MUR ) - DS ) ) * ( ( ( ( RRSe + MUR ) * MUM ) + Min( Max( MUC,Max( Max( RCSe,CS ),RCSe ) ) ,RRSe ) ) - CS ) ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Min( MLU ,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.9089219330855018, "obj2": 0.07222527247004182}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,Min( CRS ,RRS ) ) * ( FirstVNF_RAM - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * ( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4591078066914498, "obj2": 0.4240534760602232}, {"determining": "( Min( DDR ,( ( FirstVNF_CPU_Server - AMS ) + Min( ( MDR * Max( Max( FirstVNF_Mem,( AMS - DDR ) ),MRS ) ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( FirstVNF_Mem + ( ( ( ARS * AMS ) / Max( RRS,ACS ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * RRS ) ) ) / ( FirstVNF_RAM - ( ARS * ( ACS / FirstVNF_Mem_Server ) ) ) ) / MRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( MLU / MUC ) ) + ( ( ( RCSe / MUM ) + ( RRSe * CS ) ) + ( MUM * Min( DS ,Min( RMSe ,CS ) ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.04059392914140809}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - AMS ) * ( ACS / AMS ) ) / ( RRS / ( PN / FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) - ( RRS * BR ) ) ) * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MLU + MUC ) - ( Min( MUM ,MUR ) + ( RRSe * ( MLU * ( RMSe + ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7852795590173755}], "26": [{"determining": "( ( PN * ( ACS * ( ( ARS / ( ( MRS / ACS ) - ( CRS / BR ) ) ) + ( Const / ( ARS / ( ( MRS / ACS ) - ( CRS / BR ) ) ) ) ) ) ) / ( FirstVNF_Mem + ACS ) )", "choosing": "( ( ( CS / DS ) + ( Min( CS ,( MUC + Min( MLU ,Max( MLU,MUC ) ) ) ) - ( ( RMSe + ( MUM * RMSe ) ) * ( MUC / ( ( MUC * ( RCSe - MUR ) ) / CS ) ) ) ) ) + ( ( RMSe + ( ( Min( MLU ,( MUR * ( MLU * RMSe ) ) ) * ( ( ( RRSe * RCSe ) + Max( DS,MUC ) ) * Min( RRSe ,DS ) ) ) + MUM ) ) * ( MUC / ( ( MUC * ( RCSe - MUR ) ) / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( ( ( AMS / MRS ) + FirstVNF_RAM_Server ) - Max( ( ( Const - BR ) - DDR ),FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + ( ( RRS - RRS ) / CRS ) ) )", "choosing": "Max( ( ( MUC - DS ) / MUR ),Min( MUR ,Min( MLU ,( Min( RCSe ,( ( CS / MUC ) + RCSe ) ) + Min( ( CS * ( MUC + ( DS - MUC ) ) ) ,( ( RMSe + DS ) + Max( DS,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( ( FirstVNF_Mem_Server * ( DDR - MDR ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( Max( AMS,( MDR * ( ARS * DDR ) ) ) + Max( ( ( Max( FirstVNF_RAM,AMS ) * Min( DDR ,MDR ) ) / ACS ),CRS ) ) )", "choosing": "( Max( Max( RCSe,MUC ),CS ) + ( ( Max( Max( ( MUM - RMSe ),MUC ),( Max( ( RMSe - ( MUM / RCSe ) ),MUC ) - ( RMSe - MLU ) ) ) * MUM ) + ( MUR * ( Max( ( RMSe - ( ( RCSe * MUM ) / RCSe ) ),MUC ) - ( RCSe - MLU ) ) ) ) )", "obj1": 0.516728624535316, "obj2": 0.3485766469920498}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( ( FirstVNF_CPU + ( PN * FirstVNF_RAM_Server ) ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Min( RCSe ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( RMSe,( RCSe * ( ( ( MUR / Max( ( MLU - MUM ),RRSe ) ) * Max( ( ( RRSe * CS ) / ( RMSe / MUR ) ),DS ) ) / ( CS + MLU ) ) ) ) )", "obj1": 0.6003717472118959, "obj2": 0.2779568409928626}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( RCSe ,DS ) * MLU ) ,( RCSe * MLU ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( ( MUR * Min( MLU ,MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.7286245353159851, "obj2": 0.19157057310109302}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "Min( ( AMS + Max( ( Min( MDR ,MRS ) + PN ),( Const * BR ) ) ) ,Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( Min( Max( RCSe,DS ) ,MUR ) - DS ) - RCSe ) )", "obj1": 0.06691449814126393, "obj2": 0.8109586621234647}, {"determining": "( ( Const * ( ( AMS + ARS ) / Max( BR,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem - ( ( CRS - RRS ) / ( BR - MRS ) ) ) / Const ) / ( BR - MRS ) ) ) )", "choosing": "( Max( MUM,CS ) + ( Max( CS,( ( MUC + ( ( DS + MLU ) * Max( MUM,MLU ) ) ) + ( ( ( MUM * MUR ) * MUC ) + MLU ) ) ) / Max( ( Max( CS,MUR ) / Max( DS,MLU ) ),MLU ) ) )", "obj1": 0.7156133828996283, "obj2": 0.21246831010593845}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) + Min( Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( FirstVNF_RAM / ARS ) ) ,( Max( MRS,RRS ) / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( CS * RRSe ) ) - RMSe ) - MUC ) / ( RRSe / MUM ) ) + Max( ( Max( RRSe,Min( MLU ,CS ) ) / DS ),Max( ( DS / CS ),Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8525790046687204}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR + Max( Max( RRS,Min( ( ( Const + CRS ) + RRS ) ,DDR ) ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Const ) ) )", "choosing": "( Min( ( Min( RCSe ,RCSe ) * ( Max( RMSe,Min( ( MLU * MUC ) ,Max( RRSe,Min( MUC ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.41263940520446096, "obj2": 0.46155262287092}, {"determining": "( ( ( ( FirstVNF_RAM - DDR ) - ( MDR + ARS ) ) * ( AMS / ARS ) ) / Min( FirstVNF_Mem_Server ,( ( MRS / MDR ) * Min( ACS ,( ( Min( Max( RRS,MRS ) ,ARS ) / ARS ) - MRS ) ) ) ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( MUM * Min( MLU ,MLU ) ) + CS ) )", "obj1": 0.7713754646840149, "obj2": 0.1707159085810459}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "Max( Max( ARS,Min( ( Min( FirstVNF_CPU_Server ,( Min( MDR ,( Const + FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) - ACS ) ,( Max( ( FirstVNF_RAM - RRS ),AMS ) / Max( PN,FirstVNF_RAM_Server ) ) ) ),( Min( ( AMS * ( BR + FirstVNF_RAM_Server ) ) ,Const ) / MDR ) )", "choosing": "( ( ( ( ( RCSe / Max( RMSe,( Min( MUC ,RRSe ) - DS ) ) ) + Min( RMSe ,Max( MUM,MUC ) ) ) / ( MLU + RMSe ) ) + MLU ) / ( Min( MUM ,CS ) / MLU ) )", "obj1": 0.241635687732342, "obj2": 0.601509699210716}, {"determining": "Max( Max( Min( Min( ( AMS * ( BR + FirstVNF_RAM_Server ) ) ,Const ) ,AMS ),( FirstVNF_Mem * BR ) ),Max( RRS,AMS ) )", "choosing": "( ( MUR / MUM ) - Min( ( ( RMSe * MUR ) + MUM ) ,( RCSe + ( ( Min( MUM ,CS ) / MLU ) - ( Max( DS,( ( CS / MUC ) * ( MUR + MLU ) ) ) + ( ( ( RRSe + MLU ) - ( MUC * CS ) ) - MUR ) ) ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7812455281778077}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( ( ( ( CRS - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Min( DDR ,MDR ) ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,CS ) + ( ( MUC * MUM ) + ( MUR * DS ) ) ) + ( ( MUC * MUM ) + ( MUR * DS ) ) )", "obj1": 0.8550185873605948, "obj2": 0.0917240894672898}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( DDR * ( ARS + ( ( Min( MDR ,MRS ) / MRS ) - ( AMS / ACS ) ) ) ) / Min( FirstVNF_Mem_Server ,( Max( Const,Min( PN ,FirstVNF_RAM ) ) / ( RRS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( RCSe ,DS ) * MLU ) ,( RCSe * MLU ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( MUM + ( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.47026022304832715, "obj2": 0.41735331295131123}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4312267657992565, "obj2": 0.4468830624623393}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "Max( Max( ARS,Min( ( Min( FirstVNF_CPU_Server ,( Min( MDR ,( Const + FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) - ACS ) ,( Max( ( FirstVNF_RAM - RRS ),AMS ) / Max( PN,FirstVNF_RAM_Server ) ) ) ),Min( FirstVNF_CPU_Server ,( Min( MDR ,( Const + FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,RRSe ) + MLU ) / ( Min( MUM ,CS ) / MLU ) )", "obj1": 0.20631970260223048, "obj2": 0.6355156578686667}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) / ( CS * MUM ) )", "obj1": 0.2100371747211896, "obj2": 0.6146302780439804}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( FirstVNF_Mem * Const ),Min( Min( Min( Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * ( RRSe / RCSe ) ) / ( ( ( RRSe + ( RCSe * RCSe ) ) - ( Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) - CS ) ) * ( MLU + ( MLU + ( RMSe - RCSe ) ) ) ) )", "obj1": 0.18773234200743494, "obj2": 0.646894295464297}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( Min( DDR ,( ( FirstVNF_CPU_Server - AMS ) + Min( ( MDR * Max( Max( FirstVNF_Mem,( AMS - DDR ) ),MRS ) ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( FirstVNF_Mem + ( ( ( ARS * AMS ) / Max( RRS,ACS ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * RRS ) ) ) / ( FirstVNF_RAM - ( ARS * ( ACS / FirstVNF_Mem_Server ) ) ) ) / MRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( MLU / MUC ) ) + ( ( ( RCSe / MUM ) + ( RRSe * CS ) ) + ( MUM * Min( DS ,Min( RMSe ,CS ) ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.04059392914140809}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) - ( ( Min( ( ( ( Max( CS,DS ) + DS ) * RCSe ) / RMSe ) ,( MUC + MLU ) ) + CS ) + ( RCSe * DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6512280104285707}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.6071247017938333}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( MDR + ( ( Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Max( MLU,( Min( Max( DS,RCSe ) ,MUR ) - DS ) ) * ( ( ( ( RRSe + MUR ) * MUM ) + Min( Max( MUC,Max( Max( RCSe,CS ),RCSe ) ) ,RRSe ) ) - CS ) ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Min( MLU ,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.9089219330855018, "obj2": 0.07222527247004182}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,Min( CRS ,RRS ) ) * ( FirstVNF_RAM - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * ( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4591078066914498, "obj2": 0.4240534760602232}], "27": [{"determining": "( ( ( ( MDR * RRS ) + Min( ( MDR * Max( Max( FirstVNF_Mem,( AMS - DDR ) ),MRS ) ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM / ( Min( BR ,DDR ) * Const ) ) ) ) ) + ( ( FirstVNF_CPU - PN ) - ARS ) ) + Max( PN,DDR ) )", "choosing": "Min( Min( ( Min( MLU ,MUR ) + ( RRSe + RCSe ) ) ,( ( ( Max( ( CS * RMSe ),Min( MUC ,RRSe ) ) + RCSe ) * ( ( MUR + ( ( CS - MUC ) * ( MUR + DS ) ) ) + Max( Min( Min( RCSe ,RCSe ) ,MUM ),MUR ) ) ) - ( RMSe * MUC ) ) ) ,( MLU + ( ( Max( DS,MLU ) - ( MLU / Min( MUC ,CS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ACS * ( ( ARS / ( ( MRS / ACS ) - ( CRS / BR ) ) ) + ( Const / ( ARS / ( ( MRS / ACS ) - ( CRS / BR ) ) ) ) ) ) ) / ( FirstVNF_Mem + ACS ) )", "choosing": "( ( ( CS / DS ) + ( Min( CS ,( MUC + Min( MLU ,Max( MLU,MUC ) ) ) ) - ( ( RMSe + ( MUM * RMSe ) ) * ( MUC / ( ( MUC * ( RCSe - MUR ) ) / CS ) ) ) ) ) + ( ( RMSe + ( ( Min( MLU ,( MUR * ( MLU * RMSe ) ) ) * ( ( ( RRSe * RCSe ) + Max( DS,MUC ) ) * Min( RRSe ,DS ) ) ) + MUM ) ) * ( MUC / ( ( MUC * ( RCSe - MUR ) ) / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( ( FirstVNF_Mem_Server * ( DDR - MDR ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( Max( AMS,( MDR * ( ARS * DDR ) ) ) + Max( ( ( Max( FirstVNF_RAM,AMS ) * Min( DDR ,MDR ) ) / ACS ),CRS ) ) )", "choosing": "( Max( Max( RCSe,MUC ),CS ) + ( ( Max( Max( ( MUM - RMSe ),MUC ),( Max( ( RMSe - ( MUM / RCSe ) ),MUC ) - ( RMSe - MLU ) ) ) * MUM ) + ( MUR * ( Max( ( RMSe - ( ( RCSe * MUM ) / RCSe ) ),MUC ) - ( RCSe - MLU ) ) ) ) )", "obj1": 0.516728624535316, "obj2": 0.3485766469920498}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( ( Min( ( Max( AMS,BR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ) * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.8215613382899628, "obj2": 0.11269864326978123}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( ( FirstVNF_CPU + ( PN * FirstVNF_RAM_Server ) ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Min( RCSe ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( RMSe,( RCSe * ( ( ( MUR / Max( ( MLU - MUM ),RRSe ) ) * Max( ( ( RRSe * CS ) / ( RMSe / MUR ) ),DS ) ) / ( CS + MLU ) ) ) ) )", "obj1": 0.6003717472118959, "obj2": 0.2779568409928626}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "Min( ( AMS + Max( ( Min( MDR ,MRS ) + PN ),( Const * BR ) ) ) ,Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( Min( Max( RCSe,DS ) ,MUR ) - DS ) - RCSe ) )", "obj1": 0.06691449814126393, "obj2": 0.8109586621234647}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( ( FirstVNF_CPU + ( PN * FirstVNF_RAM_Server ) ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( ( Min( MUR ,RCSe ) * RCSe ) + ( ( Max( Max( ( MUM - MUM ),MUC ),Max( Max( CS,DS ),CS ) ) * MUC ) + ( MUR * DS ) ) )", "obj1": 0.70817843866171, "obj2": 0.21026117398389532}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR + Max( Max( RRS,Min( ( ( Const + CRS ) + RRS ) ,DDR ) ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Const ) ) )", "choosing": "( Min( ( Min( RCSe ,RCSe ) * ( Max( RMSe,Min( ( MLU * MUC ) ,Max( RRSe,Min( MUC ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.41263940520446096, "obj2": 0.46155262287092}, {"determining": "( ( ( ( FirstVNF_RAM - DDR ) - ( MDR + ARS ) ) * ( AMS / ARS ) ) / Min( FirstVNF_Mem_Server ,( ( MRS / MDR ) * Min( ACS ,( ( Min( Max( RRS,MRS ) ,ARS ) / ARS ) - MRS ) ) ) ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( MUM * Min( MLU ,MLU ) ) + CS ) )", "obj1": 0.7713754646840149, "obj2": 0.1707159085810459}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( RCSe ,DS ) * MLU ) ,( RCSe * MLU ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( ( MUR * Min( MLU ,MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.7286245353159851, "obj2": 0.19157057310109302}, {"determining": "Max( Max( Min( Min( ( AMS * ( BR + FirstVNF_RAM_Server ) ) ,Const ) ,AMS ),( FirstVNF_Mem * BR ) ),Max( RRS,AMS ) )", "choosing": "( ( MUR / MUM ) - Min( ( ( RMSe * MUR ) + MUM ) ,( RCSe + ( ( Min( MUM ,CS ) / MLU ) - ( Max( DS,( ( CS / MUC ) * ( MUR + MLU ) ) ) + ( ( ( RRSe + MLU ) - ( MUC * CS ) ) - MUR ) ) ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7812455281778077}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( ( ( ( CRS - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Min( DDR ,MDR ) ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,CS ) + ( ( MUC * MUM ) + ( MUR * DS ) ) ) + ( ( MUC * MUM ) + ( MUR * DS ) ) )", "obj1": 0.8550185873605948, "obj2": 0.0917240894672898}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) + Min( Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( FirstVNF_RAM / ARS ) ) ,( Max( MRS,RRS ) / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( CS * RRSe ) ) - RMSe ) - MUC ) / ( RRSe / MUM ) ) + Max( ( Max( RRSe,Min( MLU ,CS ) ) / DS ),Max( ( DS / CS ),Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8525790046687204}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "Max( Max( ARS,Min( ( Min( FirstVNF_CPU_Server ,( Min( MDR ,( Const + FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) - ACS ) ,( Max( ( FirstVNF_RAM - RRS ),AMS ) / Max( PN,FirstVNF_RAM_Server ) ) ) ),( Min( ( AMS * ( BR + FirstVNF_RAM_Server ) ) ,Const ) / MDR ) )", "choosing": "( ( ( ( ( RCSe / Max( RMSe,( Min( MUC ,RRSe ) - DS ) ) ) + Min( RMSe ,Max( MUM,MUC ) ) ) / ( MLU + RMSe ) ) + MLU ) / ( Min( MUM ,CS ) / MLU ) )", "obj1": 0.241635687732342, "obj2": 0.601509699210716}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}, {"determining": "( ( DDR * ( ARS + ( ( Min( MDR ,MRS ) / MRS ) - ( AMS / ACS ) ) ) ) / Min( FirstVNF_Mem_Server ,( Max( Const,Min( PN ,FirstVNF_RAM ) ) / ( RRS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( RCSe ,DS ) * MLU ) ,( RCSe * MLU ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( MUM + ( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.47026022304832715, "obj2": 0.41735331295131123}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4312267657992565, "obj2": 0.4468830624623393}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "Min( ( ( ( ( ( MRS * FirstVNF_CPU ) / ( FirstVNF_Mem_Server * RRS ) ) + ( DDR / CRS ) ) - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) + ACS ) ,Min( ( MRS / CRS ) ,BR ) )", "choosing": "Max( ( MUR / MUC ),( ( Max( ( Min( MUM ,CS ) - RRSe ),Min( Max( RRSe,RRSe ) ,RMSe ) ) / MUC ) * ( MUC / CS ) ) )", "obj1": 0.2843866171003718, "obj2": 0.5713007320039324}, {"determining": "Max( Max( ARS,Min( ( Min( FirstVNF_CPU_Server ,( Min( MDR ,( Const + FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) - ACS ) ,( Max( ( FirstVNF_RAM - RRS ),AMS ) / Max( PN,FirstVNF_RAM_Server ) ) ) ),Min( FirstVNF_CPU_Server ,( Min( MDR ,( Const + FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,RRSe ) + MLU ) / ( Min( MUM ,CS ) / MLU ) )", "obj1": 0.20631970260223048, "obj2": 0.6355156578686667}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) / ( CS * MUM ) )", "obj1": 0.2100371747211896, "obj2": 0.6146302780439804}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( FirstVNF_Mem * Const ),Min( Min( Min( Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * ( RRSe / RCSe ) ) / ( ( ( RRSe + ( RCSe * RCSe ) ) - ( Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) - CS ) ) * ( MLU + ( MLU + ( RMSe - RCSe ) ) ) ) )", "obj1": 0.18773234200743494, "obj2": 0.646894295464297}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( Min( DDR ,( ( FirstVNF_CPU_Server - AMS ) + Min( ( MDR * Max( Max( FirstVNF_Mem,( AMS - DDR ) ),MRS ) ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( FirstVNF_Mem + ( ( ( ARS * AMS ) / Max( RRS,ACS ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * RRS ) ) ) / ( FirstVNF_RAM - ( ARS * ( ACS / FirstVNF_Mem_Server ) ) ) ) / MRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( MLU / MUC ) ) + ( ( ( RCSe / MUM ) + ( RRSe * CS ) ) + ( MUM * Min( DS ,Min( RMSe ,CS ) ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.04059392914140809}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) - ( ( Min( ( ( ( Max( CS,DS ) + DS ) * RCSe ) / RMSe ) ,( MUC + MLU ) ) + CS ) + ( RCSe * DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6512280104285707}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( MDR + ( ( Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Max( MLU,( Min( Max( DS,RCSe ) ,MUR ) - DS ) ) * ( ( ( ( RRSe + MUR ) * MUM ) + Min( Max( MUC,Max( Max( RCSe,CS ),RCSe ) ) ,RRSe ) ) - CS ) ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Min( MLU ,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.9089219330855018, "obj2": 0.07222527247004182}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,Min( CRS ,RRS ) ) * ( FirstVNF_RAM - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * ( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4591078066914498, "obj2": 0.4240534760602232}], "28": [{"determining": "Min( ( Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( ( ( AMS / MRS ) + FirstVNF_RAM_Server ) - Max( ( ( Const - BR ) - DDR ),FirstVNF_Mem_Server ) ) ),BR ) * ( ( BR + FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,PN ) ) ) ,( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( ( ( AMS / MRS ) + FirstVNF_RAM_Server ) - Max( ( ( Const - BR ) - DDR ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( CS * ( MUC + ( DS - MUC ) ) ),Min( MUR ,Min( MLU ,( Min( RCSe ,( ( CS / MUC ) + RCSe ) ) + Min( ( CS * ( MUC + ( DS - MUC ) ) ) ,( ( RMSe + DS ) + Max( DS,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR * RRS ) + Min( ( MDR * Max( Max( FirstVNF_Mem,( AMS - DDR ) ),MRS ) ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM / ( Min( BR ,DDR ) * Const ) ) ) ) ) + ( ( FirstVNF_CPU - PN ) - ARS ) ) + Max( PN,DDR ) )", "choosing": "Min( Min( ( Min( MLU ,MUR ) + ( RRSe + RCSe ) ) ,( ( ( Max( ( CS * RMSe ),Min( MUC ,RRSe ) ) + RCSe ) * ( ( MUR + ( ( CS - MUC ) * ( MUR + DS ) ) ) + Max( Min( Min( RCSe ,RCSe ) ,MUM ),MUR ) ) ) - ( RMSe * MUC ) ) ) ,( MLU + ( ( Max( DS,MLU ) - ( MLU / Min( MUC ,CS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem ) / Min( RRS ,DDR ) ) / Min( RRS ,DDR ) )", "choosing": "( Max( MUM,MLU ) + Max( CS,( Max( MUR,( ( MLU / DS ) + Max( MLU,( ( MLU * DS ) * ( MLU - MUC ) ) ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8703068418181237}, {"determining": "( ( ( FirstVNF_Mem_Server * ( DDR - MDR ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( Max( AMS,( MDR * ( ARS * DDR ) ) ) + Max( ( ( Max( FirstVNF_RAM,AMS ) * Min( DDR ,MDR ) ) / ACS ),CRS ) ) )", "choosing": "( Max( Max( RCSe,MUC ),CS ) + ( ( Max( Max( ( MUM - RMSe ),MUC ),( Max( ( RMSe - ( MUM / RCSe ) ),MUC ) - ( RMSe - MLU ) ) ) * MUM ) + ( MUR * ( Max( ( RMSe - ( ( RCSe * MUM ) / RCSe ) ),MUC ) - ( RCSe - MLU ) ) ) ) )", "obj1": 0.516728624535316, "obj2": 0.3485766469920498}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( MUC * RRSe ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( ( ( ( CRS - ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) + ( ( Max( Max( ( MUM - MUM ),MUC ),( Max( ( RMSe - ( MUM / RCSe ) ),MUC ) - ( RCSe - MLU ) ) ) * MUM ) + ( MUR * ( Max( Max( ( MUM - MUM ),MUC ),Max( Max( CS,DS ),CS ) ) * MUC ) ) ) )", "obj1": 0.8085501858736059, "obj2": 0.10312557397639939}, {"determining": "( ( Const * ( ( AMS / ARS ) / Const ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "( Max( MUM,CS ) + ( RRSe / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7377686048996407}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( ( FirstVNF_CPU + ( PN * FirstVNF_RAM_Server ) ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Min( RCSe ,Min( Max( MUM,RCSe ) ,RCSe ) ) / Max( RMSe,( RCSe * ( ( ( MUR / Max( ( MLU - MUM ),RRSe ) ) * Max( ( ( RRSe * CS ) / ( RMSe / MUR ) ),DS ) ) / ( CS + MLU ) ) ) ) )", "obj1": 0.6003717472118959, "obj2": 0.2779568409928626}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( RCSe ,DS ) * MLU ) ,( RCSe * MLU ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( ( MUR * Min( MLU ,MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.7286245353159851, "obj2": 0.19157057310109302}, {"determining": "Max( Max( ARS,Min( ( Min( FirstVNF_CPU_Server ,( Min( MDR ,( Const + FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) - ACS ) ,( Max( ( FirstVNF_RAM - RRS ),AMS ) / Max( PN,FirstVNF_RAM_Server ) ) ) ),( Min( ( AMS * ( BR + FirstVNF_RAM_Server ) ) ,Const ) / MDR ) )", "choosing": "( ( ( ( ( RCSe / Max( RMSe,( Min( MUC ,RRSe ) - DS ) ) ) + Min( RMSe ,Max( MUM,MUC ) ) ) / ( MLU + RMSe ) ) + MLU ) / ( Min( MUM ,CS ) / MLU ) )", "obj1": 0.241635687732342, "obj2": 0.601509699210716}, {"determining": "Max( ( FirstVNF_Mem * ( BR * ( MRS - BR ) ) ),( ( FirstVNF_RAM + Min( MRS ,ACS ) ) * Min( AMS ,Max( FirstVNF_RAM_Server,( Max( CRS,( ACS - FirstVNF_CPU_Server ) ) + BR ) ) ) ) )", "choosing": "( ( MUR * ( ( ( Min( MUM ,( ( CS / RMSe ) * DS ) ) + RMSe ) * MLU ) / DS ) ) / Min( CS ,MLU ) )", "obj1": 0.11152416356877323, "obj2": 0.7776236815254516}, {"determining": "Min( ( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.7862453531598513, "obj2": 0.13715568939116324}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,MUR ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.249595067271084}, {"determining": "Min( ( AMS + Max( ( Min( MDR ,MRS ) + PN ),( Const * BR ) ) ) ,Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( Min( Max( RCSe,DS ) ,MUR ) - DS ) - RCSe ) )", "obj1": 0.06691449814126393, "obj2": 0.8109586621234647}, {"determining": "( ( ( Min( CRS ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ARS / ( ( ( FirstVNF_CPU + ( PN * FirstVNF_RAM_Server ) ) + ARS ) - DDR ) ) ) / ( FirstVNF_RAM + ( ( ACS - ( ( Max( Const,FirstVNF_RAM_Server ) + ACS ) / ( MDR + ( RRS + ARS ) ) ) ) * ACS ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( Max( ( MRS / FirstVNF_Mem ),RRS ) / Const ) ) - MRS ) )", "choosing": "( ( Min( MUR ,RCSe ) * RCSe ) + ( ( Max( Max( ( MUM - MUM ),MUC ),Max( Max( CS,DS ),CS ) ) * MUC ) + ( MUR * DS ) ) )", "obj1": 0.70817843866171, "obj2": 0.21026117398389532}, {"determining": "Max( Min( PN ,BR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + DS )", "obj1": 0.379182156133829, "obj2": 0.4709963407349245}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Const - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( MUR - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6617100371747212, "obj2": 0.21289104871371237}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.5762081784386617, "obj2": 0.29633892728117606}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( ( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) ) * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( CS ,MUR ) )", "obj1": 0.9795539033457249, "obj2": 0.024000622609213644}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.49982962938423203}, {"determining": "Min( ( Const / ( ( Max( CRS,MDR ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server / RRS ) + ARS ) ) ) / RRS ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,Max( ( DS / Min( MUR ,( RMSe + MUC ) ) ),RCSe ) ) )", "obj1": 0.3252788104089219, "obj2": 0.5367717418610108}, {"determining": "( ( ( CRS + Max( FirstVNF_CPU,AMS ) ) - Min( ARS ,FirstVNF_CPU ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( ( ( MUC - CS ) + DS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Max( MLU,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7927421031942798}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5128312843231536}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.30111524163568776, "obj2": 0.5506974897370205}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR + Max( Max( RRS,Min( ( ( Const + CRS ) + RRS ) ,DDR ) ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),Min( PN ,Max( MDR,Const ) ) )", "choosing": "( Min( ( Min( RCSe ,RCSe ) * ( Max( RMSe,Min( ( MLU * MUC ) ,Max( RRSe,Min( MUC ,MUM ) ) ) ) / ( MUC + RMSe ) ) ) ,DS ) / ( CS * Max( ( ( ( CS + MLU ) - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC + Max( Max( ( MUC + MUC ),( MUM / RCSe ) ),( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.41263940520446096, "obj2": 0.46155262287092}, {"determining": "( ( ( ( FirstVNF_RAM - DDR ) - ( MDR + ARS ) ) * ( AMS / ARS ) ) / Min( FirstVNF_Mem_Server ,( ( MRS / MDR ) * Min( ACS ,( ( Min( Max( RRS,MRS ) ,ARS ) / ARS ) - MRS ) ) ) ) )", "choosing": "( Max( MLU,( MUC - RCSe ) ) + ( ( MUM * Min( MLU ,MLU ) ) + CS ) )", "obj1": 0.7713754646840149, "obj2": 0.1707159085810459}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( Min( MRS ,( DDR / BR ) ) ,( FirstVNF_RAM / AMS ) ) ,FirstVNF_CPU_Server ) ) / ( BR - MRS ) )", "choosing": "( ( MUM - ( MUC + RCSe ) ) + Max( CS,( Max( CS,MUR ) / CS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.3222751668324021}, {"determining": "Max( ( Const * BR ),Max( DDR,Const ) )", "choosing": "( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.26765799256505574, "obj2": 0.5731262438164513}, {"determining": "( ( ( ( CRS - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Min( DDR ,MDR ) ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,CS ) + ( ( MUC * MUM ) + ( MUR * DS ) ) ) + ( ( MUC * MUM ) + ( MUR * DS ) ) )", "obj1": 0.8550185873605948, "obj2": 0.0917240894672898}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( RMSe / MUR ) )", "obj1": 0.9219330855018587, "obj2": 0.0643215576858858}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) + Min( Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( FirstVNF_RAM / ARS ) ) ,( Max( MRS,RRS ) / ACS ) ) ,ACS ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),( CS * RRSe ) ) - RMSe ) - MUC ) / ( RRSe / MUM ) ) + Max( ( Max( RRSe,Min( MLU ,CS ) ) / DS ),Max( ( DS / CS ),Min( ( RRSe - ( MUM / MUM ) ) ,RMSe ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8525790046687204}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) / ( CS * MUM ) )", "obj1": 0.2100371747211896, "obj2": 0.6146302780439804}, {"determining": "( ( ( DDR + FirstVNF_RAM_Server ) * RRS ) / Min( FirstVNF_Mem_Server ,( ( RRS + FirstVNF_Mem ) / Max( Const,ARS ) ) ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( MLU ,( DS * CS ) ) ) * ( MUM * CS ) ) ) ) )", "obj1": 0.13940520446096655, "obj2": 0.6973911075254124}, {"determining": "Min( ( Max( AMS,BR ) / RRS ) ,( ( ( Max( ( FirstVNF_Mem * BR ),Max( DDR,Const ) ) - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MLU + MUC ),( RCSe / MUM ) ) / ( ( DS - RRSe ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.6431226765799256, "obj2": 0.2283354103507791}, {"determining": "Max( ( FirstVNF_Mem * BR ),( BR - DDR ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ) ) ),( Min( MUM ,Max( DS,MLU ) ) - RMSe ) ) * CS ) )", "obj1": 0.16171003717472118, "obj2": 0.668194910335315}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( BR - MRS ) / ( ( ( MRS / AMS ) - RRS ) / Const ) ) - MRS ) ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,Min( Min( ( DS - ( Max( MUM,DS ) + Max( CS,( MUC / DS ) ) ) ) ,RMSe ) ,Max( DS,MLU ) ) ) )", "obj1": 0.9572490706319703, "obj2": 0.04963848396662076}, {"determining": "( ( DDR * ( ARS + ( ( Min( MDR ,MRS ) / MRS ) - ( AMS / ACS ) ) ) ) / Min( FirstVNF_Mem_Server ,( Max( Const,Min( PN ,FirstVNF_RAM ) ) / ( RRS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( RCSe / CS ),CS ) + ( Max( MUC,MUR ) + ( CS / ( ( RCSe * Min( ( Min( RCSe ,DS ) * MLU ) ,( RCSe * MLU ) ) ) * ( ( MUC * ( RCSe - Min( MLU ,DS ) ) ) - ( MUM + ( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.47026022304832715, "obj2": 0.41735331295131123}, {"determining": "Max( Max( FirstVNF_Mem_Server,( DDR - Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ) ),( PN - Max( MDR,Max( ( FirstVNF_RAM_Server - PN ),( Max( FirstVNF_RAM_Server,( BR * MDR ) ) * ( FirstVNF_RAM - ( ( PN + Const ) - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( RMSe * ( CS * RRSe ) ) ) * Min( Max( RMSe,Min( ( MUC * MLU ) ,( RRSe / Min( MUM ,MLU ) ) ) ) ,( Min( ( ( DS + MUR ) + RRSe ) ,Max( ( MUC - MUC ),( MUM - DS ) ) ) + RMSe ) ) ) ,DS ) / ( CS * MUM ) )", "obj1": 0.4312267657992565, "obj2": 0.4468830624623393}, {"determining": "( ( ( FirstVNF_Mem - RRS ) / Const ) / ( BR - MRS ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * ( MUM / ( MUM - ( MUM - RMSe ) ) ) ) ,MUR ) )", "obj1": 0.5576208178438662, "obj2": 0.31610180857520614}, {"determining": "( ( ( FirstVNF_Mem - ( ARS / ( ( Max( FirstVNF_CPU,PN ) + ARS ) - DDR ) ) ) / Const ) / ( ( Max( BR,MRS ) / ( ( ( MRS / FirstVNF_Mem ) - RRS ) / Const ) ) - MRS ) )", "choosing": "( Max( CS,MUM ) + Max( RMSe,MUC ) )", "obj1": 0.8996282527881041, "obj2": 0.08582985323494029}, {"determining": "Min( ( ( ( ( ( MRS * FirstVNF_CPU ) / ( FirstVNF_Mem_Server * RRS ) ) + ( DDR / CRS ) ) - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) + ACS ) ,Min( ( MRS / CRS ) ,BR ) )", "choosing": "Max( ( MUR / MUC ),( ( Max( ( Min( MUM ,CS ) - RRSe ),Min( Max( RRSe,RRSe ) ,RMSe ) ) / MUC ) * ( MUC / CS ) ) )", "obj1": 0.2843866171003718, "obj2": 0.5713007320039324}, {"determining": "Max( Max( ARS,Min( ( Min( FirstVNF_CPU_Server ,( Min( MDR ,( Const + FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) - ACS ) ,( Max( ( FirstVNF_RAM - RRS ),AMS ) / Max( PN,FirstVNF_RAM_Server ) ) ) ),Min( FirstVNF_CPU_Server ,( Min( MDR ,( Const + FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,RRSe ) + MLU ) / ( Min( MUM ,CS ) / MLU ) )", "obj1": 0.20631970260223048, "obj2": 0.6355156578686667}, {"determining": "Max( ( FirstVNF_Mem * BR ),Max( DDR,( ARS / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),DS ) ) ,MUR ) / ( Max( ( RRSe + ( RCSe / RCSe ) ),MUR ) * CS ) )", "obj1": 0.14312267657992564, "obj2": 0.6889662190229902}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) ) - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Max( CS,RCSe ) ,( MLU + RRSe ) ),Max( ( DS - RRSe ),Min( RMSe ,RCSe ) ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.4368029739776952, "obj2": 0.4269286462665716}, {"determining": "Max( ( FirstVNF_Mem * Const ),Min( Min( Min( Max( Max( RRS,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,DDR ) ) ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * ( RRSe / RCSe ) ) / ( ( ( RRSe + ( RCSe * RCSe ) ) - ( Min( ( MUC * MLU ) ,( RRSe / Min( MLU ,MUM ) ) ) - CS ) ) * ( MLU + ( MLU + ( RMSe - RCSe ) ) ) ) )", "obj1": 0.18773234200743494, "obj2": 0.646894295464297}, {"determining": "Min( ( ( BR - DDR ) / RRS ) ,( ( ( FirstVNF_CPU - MDR ) - FirstVNF_Mem ) - ( ACS * BR ) ) )", "choosing": "( Min( ( MUR - Max( ( ( MUC - ( RRSe + MUC ) ) - ( Max( MLU,RRSe ) + MUC ) ),( MUC / ( Max( ( MUC + MUC ),( MUM / RCSe ) ) / ( ( DS - MUR ) + Max( MLU,RMSe ) ) ) ) ) ) ,MUR ) / ( Min( MUM ,Max( DS,MLU ) ) - RMSe ) )", "obj1": 0.775092936802974, "obj2": 0.16340118271173684}, {"determining": "( ( MRS + Max( ( ( FirstVNF_CPU - PN ) - ( ( FirstVNF_CPU_Server / DDR ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem - ( ARS / ( ( Max( BR,PN ) + ARS ) - DDR ) ) ) / Const ) )", "choosing": "( Min( MUC ,( Max( CS,MUM ) + ( Min( Min( ( CS - RRSe ) ,RMSe ) ,Max( DS,MLU ) ) + Max( Min( RCSe ,MUM ),( MUC / DS ) ) ) ) ) / Max( MLU,( RCSe * ( ( CS + MLU ) / ( DS * ( RRSe / ( Max( RMSe,MUC ) - ( MLU * DS ) ) ) ) ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09057155053733637}, {"determining": "( Min( DDR ,( ( FirstVNF_CPU_Server - AMS ) + Min( ( MDR * Max( Max( FirstVNF_Mem,( AMS - DDR ) ),MRS ) ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( FirstVNF_Mem + ( ( ( ARS * AMS ) / Max( RRS,ACS ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * RRS ) ) ) / ( FirstVNF_RAM - ( ARS * ( ACS / FirstVNF_Mem_Server ) ) ) ) / MRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( MLU / MUC ) ) + ( ( ( RCSe / MUM ) + ( RRSe * CS ) ) + ( MUM * Min( DS ,Min( RMSe ,CS ) ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.04059392914140809}, {"determining": "( ( ( ( CRS - ( Max( Const,ACS ) - ( Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,FirstVNF_RAM_Server ) - Const ) ) ) / Max( ACS,RRS ) ) - Max( ( ( FirstVNF_Mem_Server * Min( DDR ,MDR ) ) / ACS ),CRS ) ) / ( FirstVNF_Mem + ( PN / FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,CS ) - ( ( Min( ( ( ( Max( CS,DS ) + DS ) * RCSe ) / RMSe ) ,( MUC + MLU ) ) + CS ) + ( RCSe * DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6512280104285707}, {"determining": "( Min( DDR ,( ARS + Max( Const,Min( PN ,FirstVNF_RAM ) ) ) ) / ( MDR + ( ( Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Max( MLU,( Min( Max( DS,RCSe ) ,MUR ) - DS ) ) * ( ( ( ( RRSe + MUR ) * MUM ) + Min( Max( MUC,Max( Max( RCSe,CS ),RCSe ) ) ,RRSe ) ) - CS ) ) + ( Max( MUC,MUR ) + ( CS / ( ( CS * Min( ( Min( DS ,DS ) * MLU ) ,( Min( MLU ,RMSe ) + RCSe ) ) ) * ( ( ( MUM * Min( MLU ,MLU ) ) + CS ) - ( MUC * ( RCSe - Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.9089219330855018, "obj2": 0.07222527247004182}]}