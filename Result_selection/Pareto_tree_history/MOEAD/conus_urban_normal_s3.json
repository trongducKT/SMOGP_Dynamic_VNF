{"1": [{"determining": "( ( ARS + AMS ) + ( ACS + FirstVNF_CPU ) )", "choosing": "( Max( ( RRSe / RMSe ),MUR ) + Max( MLU,( MUR + MUM ) ) )", "obj1": 0.5266272189349113, "obj2": 0.36179853653279714}, {"determining": "( Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ACS ) ) + ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / ( MDR * PN ) ) ) )", "choosing": "( ( Min( RCSe ,MUM ) / ( RRSe - MUC ) ) * Max( MLU,MLU ) )", "obj1": 0.29980276134122286, "obj2": 0.5854491474452865}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),Max( AMS,PN ) )", "choosing": "Max( ( RRSe * MLU ),( MLU - CS ) )", "obj1": 0.43984220907297833, "obj2": 0.44685573992840916}, {"determining": "( ( FirstVNF_RAM * CRS ) + ( ARS / ARS ) )", "choosing": "Max( ( MUC * RRSe ),( MUR + RCSe ) )", "obj1": 0.3826429980276134, "obj2": 0.4985384665955343}, {"determining": "Max( Max( FirstVNF_CPU,AMS ),Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe + MUR ) ,( MUC / RCSe ) )", "obj1": 0.3234714003944773, "obj2": 0.5532319827392849}, {"determining": "( ( ACS + BR ) - Max( ACS,ACS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUM + MUR ) )", "obj1": 0.3767258382642998, "obj2": 0.5081732785657636}, {"determining": "( ( MRS * DDR ) - ( CRS * ACS ) )", "choosing": "( ( MUR + MUC ) / ( ( DS + ( Max( ( ( RRSe / ( RMSe / MUR ) ) - DS ),( MUR + RMSe ) ) / ( Max( RRSe,RRSe ) + ( ( MUR - ( RCSe / RRSe ) ) + Max( MLU,( MLU + MUC ) ) ) ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,MRS ) ,( FirstVNF_RAM / BR ) )", "choosing": "( ( DS + RRSe ) / ( MUR / MLU ) )", "obj1": 0.5029585798816568, "obj2": 0.37569098003132}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * Max( PN,FirstVNF_Mem ) )", "choosing": "( Max( MUC,MLU ) + ( RRSe + DS ) )", "obj1": 0.49506903353057197, "obj2": 0.40837281859175417}, {"determining": "( ( CRS * FirstVNF_Mem ) + ( AMS / MDR ) )", "choosing": "Min( ( DS * MUM ) ,( DS / DS ) )", "obj1": 0.5680473372781065, "obj2": 0.3396106846508124}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( RRSe + MUR ) + ( RCSe / RRSe ) )", "obj1": 0.40631163708086787, "obj2": 0.4865240359867638}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( MDR + BR ) )", "choosing": "( ( ( CS / MUM ) + MUM ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "Min( ( ACS + RRS ) ,( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU_Server ) * CRS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Min( ( MLU - RMSe ) ,MUR ),RMSe ) * RRSe ) ) / DS ),( MUM / Min( DS ,( MUR - Min( ( DS + RCSe ) ,CS ) ) ) ) ) - ( RMSe * RRSe ) )", "obj1": 0.43984220907297833, "obj2": 0.462958520396706}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,( BR / Max( BR,DDR ) ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Max( Min( ( MUC - Max( CS,RRSe ) ) ,( ( MUM / CS ) / ( MUC / MUC ) ) ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) / Max( MDR,Const ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MUC / MUR ) / RCSe ) ) ,( MUM + MUM ) )", "obj1": 0.5364891518737672, "obj2": 0.36518330197388554}, {"determining": "( Min( Const ,BR ) / ( FirstVNF_RAM_Server + MRS ) )", "choosing": "( Max( RMSe,MUC ) - ( RMSe / CS ) )", "obj1": 0.2879684418145957, "obj2": 0.6471922749771047}, {"determining": "( ( MRS - Const ) * ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,MDR ) * Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( ( RMSe * CS ) - Max( MUR,DS ) )", "obj1": 0.27613412228796846, "obj2": 0.6745015898582939}, {"determining": "( ( RRS - MDR ) / ( Const / ACS ) )", "choosing": "Min( ( MUR - RMSe ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) )", "choosing": "Max( Max( RRSe,MUM ),Max( CS,MUC ) )", "obj1": 0.3708086785009862, "obj2": 0.5360869111275218}, {"determining": "( ( DDR + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.27218934911242604, "obj2": 0.613842736485144}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( Min( FirstVNF_RAM_Server ,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU * MLU ),Min( Max( RRSe,RCSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * BR ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( CS - RRSe ) / RRSe ) ,Max( RRSe,RCSe ) )", "obj1": 0.28205128205128205, "obj2": 0.5884141931978746}, {"determining": "( ( CRS + DDR ) - Max( ( FirstVNF_CPU_Server + ARS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( Min( ( RRSe + RCSe ) ,Max( MUR,MUR ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - MUR ) + ( MLU + CS ) )", "obj1": 0.2859960552268245, "obj2": 0.6460630281979026}, {"determining": "( ( AMS / AMS ) - Max( FirstVNF_Mem,ACS ) )", "choosing": "Min( ( MUM / MUR ) ,Min( RMSe ,( RMSe / ( ( RRSe * Min( MUC ,( RRSe + RRSe ) ) ) + Max( ( Max( ( MUR / RRSe ),MUR ) * MUR ),RCSe ) ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.5053093820348219}, {"determining": "( ( ARS - ACS ) / ( FirstVNF_RAM_Server / ( ( ACS * Max( Const,Const ) ) - AMS ) ) )", "choosing": "Max( ( MUR / MUM ),Min( ( ( ( DS * ( ( Min( MUC ,CS ) * MUR ) * ( ( MLU - MUM ) + MUR ) ) ) - MUR ) - Max( MUC,Min( MUM ,( MUM + Min( MUM ,Max( MUM,CS ) ) ) ) ) ) ,MLU ) )", "obj1": 0.4832347140039448, "obj2": 0.4147899454899399}, {"determining": "( ( Min( ( ( FirstVNF_RAM * ( MRS + FirstVNF_RAM_Server ) ) / Const ) ,( PN + FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - Max( ( ( ( Max( CS,( MLU + RRSe ) ) + ( Min( MUR ,MUM ) - ( MUC / RCSe ) ) ) / RCSe ) / CS ),MUC ) ) - ( DS * MUM ) )", "obj1": 0.23076923076923078, "obj2": 0.6408677802126818}, {"determining": "( ( BR * FirstVNF_Mem ) + ( MDR * MRS ) )", "choosing": "Max( ( MUM + CS ),( RRSe * RRSe ) )", "obj1": 0.38461538461538464, "obj2": 0.5528686008155167}, {"determining": "( ( RRS + Const ) + ( Const * ARS ) )", "choosing": "( ( MUR + RCSe ) - Max( CS,MUR ) )", "obj1": 0.40039447731755423, "obj2": 0.48364964997629}, {"determining": "( ( CRS / FirstVNF_Mem ) * Max( RRS,FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - ( RCSe / MUR ) )", "obj1": 0.33530571992110453, "obj2": 0.539801925932531}, {"determining": "( Max( RRS,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / ( RRS / MRS ) ) )", "choosing": "( ( MUR - MUR ) - ( MUC - ( ( Max( MLU,( Max( MUC,RMSe ) - ( MLU / MLU ) ) ) + ( RMSe + Min( CS ,RRSe ) ) ) + ( RMSe * ( Max( Min( MUC ,MUM ),MUC ) * MUR ) ) ) ) )", "obj1": 0.28994082840236685, "obj2": 0.5967754496297693}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MRS ,Max( ( RRS * FirstVNF_CPU_Server ),FirstVNF_Mem ) ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,( RMSe - ( MLU * RCSe ) ) ) * Min( MUR ,CS ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "( ( ( RRS * PN ) + ( FirstVNF_Mem_Server - AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,MUM ) ) )", "obj1": 0.22287968441814596, "obj2": 0.6590752489216385}, {"determining": "Max( ( ( ACS * FirstVNF_CPU ) - ( FirstVNF_CPU - ACS ) ),( Min( BR ,MDR ) + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) * Min( MUR ,DS ) ),( ( RCSe + RRSe ) + ( RRSe * RMSe ) ) )", "obj1": 0.3767258382642998, "obj2": 0.5062408695773926}, {"determining": "Max( ( PN * CRS ),( FirstVNF_CPU_Server + PN ) )", "choosing": "( Min( ( MUM / MUM ) ,RCSe ) + Max( RRSe,RCSe ) )", "obj1": 0.39644970414201186, "obj2": 0.49533939232524193}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( Max( PN,RRS ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) ,Max( ( RMSe - MLU ),( MUR * MUM ) ) )", "obj1": 0.3865877712031558, "obj2": 0.5019599237102502}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( ( ( RRSe - Max( MUM,Max( ( Min( MUR ,MUM ) + MUR ),Min( ( Max( CS,RMSe ) / MUR ) ,DS ) ) ) ) / Min( ( MLU + CS ) ,CS ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) + Max( FirstVNF_Mem_Server,AMS ) ) - ( ( FirstVNF_RAM - DDR ) / ( AMS * MRS ) ) )", "choosing": "( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) )", "obj1": 0.8895463510848126, "obj2": 0.11063557115621837}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - ( BR - FirstVNF_Mem ) ),( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + CS ) / ( MLU + CS ) )", "obj1": 0.2682445759368836, "obj2": 0.6143559531658183}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( ( RRS + ( FirstVNF_CPU + ACS ) ) - ( BR + PN ) ) )", "choosing": "( ( ( CS + RCSe ) + ( Min( MUC ,Max( RMSe,( MUC - MUR ) ) ) + MUC ) ) * Max( Min( MUR ,MUC ),( RMSe + MUC ) ) )", "obj1": 0.8520710059171598, "obj2": 0.1178421882661444}, {"determining": "Max( Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_RAM ) ),Min( ( MDR * FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RRSe * RRSe ) / Max( RMSe,MUC ) ),Min( Max( MLU,RCSe ) ,Max( CS,RCSe ) ) )", "obj1": 0.3510848126232742, "obj2": 0.5456742180860434}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( FirstVNF_Mem_Server - Const ) ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 0.7061143984220908, "obj2": 0.2351054075876491}, {"determining": "( ( ( DDR * CRS ) / ( MRS + Const ) ) * Min( ( Const / RRS ) ,( FirstVNF_CPU * RRS ) ) )", "choosing": "( Min( ( RRSe - MUR ) ,( MUC + CS ) ) - ( ( MUR / MUR ) / ( CS / MLU ) ) )", "obj1": 0.1794871794871795, "obj2": 0.7271207479952655}, {"determining": "Max( ( ( ARS / FirstVNF_CPU_Server ) + ( MDR / BR ) ),Min( ( ARS / PN ) ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( RRSe / ( RCSe - DS ) ) * Min( CS ,( MUR / DS ) ) )", "obj1": 0.378698224852071, "obj2": 0.564467244511509}, {"determining": "Min( ( ( BR * BR ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,( ( FirstVNF_CPU * ARS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RRSe - MUC ) ) / ( ( RCSe / MUC ) - ( RRSe - MUR ) ) )", "obj1": 0.388560157790927, "obj2": 0.491856085194155}, {"determining": "Max( Min( RRS ,( MDR / ACS ) ),( Const * ( BR * PN ) ) )", "choosing": "( Max( ( MUM + MUC ),( RCSe * MUR ) ) / ( Min( MUC ,DS ) / Min( DS ,RMSe ) ) )", "obj1": 0.3668639053254438, "obj2": 0.5128884250551069}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR / ( RRS * AMS ) ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( ( Min( CS ,RCSe ) + ( ( CS - Min( Min( RRSe ,MUM ) ,MUC ) ) + RCSe ) ),( RMSe / RCSe ) ),CS ) )", "obj1": 0.28402366863905326, "obj2": 0.5710248104962692}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ACS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( CS / MUM ) ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,FirstVNF_RAM ) + Min( PN ,Min( Min( ( MDR - AMS ) ,( PN + FirstVNF_RAM_Server ) ) ,PN ) ) )", "choosing": "( ( ( Max( ( MUC + Max( RCSe,CS ) ),( ( ( ( RCSe * RRSe ) - RCSe ) / MUR ) - MUR ) ) - MLU ) - RCSe ) + ( ( RRSe / MUR ) + MLU ) )", "obj1": 0.26429980276134124, "obj2": 0.6631101527717345}, {"determining": "( ( ( FirstVNF_RAM_Server - ARS ) / ( RRS * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * ( DS - DS ) ) + Max( ( MUR - RMSe ),CS ) )", "obj1": 0.2564102564102564, "obj2": 0.6738472509947018}, {"determining": "( ( MDR * DDR ) * ( PN + ( FirstVNF_RAM / Max( Max( ( MRS - FirstVNF_CPU_Server ),Const ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUC,RRSe ) + ( MUR + Max( MUR,MLU ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.2978303747534517, "obj2": 0.5785127710482375}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_Mem ) + ( PN + FirstVNF_Mem ) )", "choosing": "( ( CS / ( RRSe * CS ) ) / ( ( RCSe / RMSe ) - Max( CS,RRSe ) ) )", "obj1": 0.34122287968441817, "obj2": 0.5367148589119546}, {"determining": "( Max( Min( ARS ,FirstVNF_CPU_Server ),( BR / Const ) ) / Max( Max( FirstVNF_RAM_Server,BR ),( RRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,( CS * MUR ) ) - ( CS - RRSe ) )", "obj1": 0.38461538461538464, "obj2": 0.49416996859127393}, {"determining": "( Max( MRS,CRS ) - Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( RMSe,( CS + DS ) ) - RRSe ),Max( ( CS - DS ),( RRSe - MUC ) ) )", "obj1": 0.47534516765285995, "obj2": 0.4128848961216973}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( FirstVNF_Mem_Server - CRS ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( Max( MUC,CS ),( RRSe / CS ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.9191321499013807, "obj2": 0.06743178074933454}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.27613412228796846, "obj2": 0.5905911458679786}, {"determining": "Max( ( Min( DDR ,AMS ) + ( BR / Const ) ),( ( Const * MRS ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,MUR ) * ( RMSe / RMSe ) )", "obj1": 0.4161735700197239, "obj2": 0.4732121777736668}, {"determining": "( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( PN * ( MRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe + RRSe ) + Min( RCSe ,RMSe ) ) + ( ( MUC - RCSe ) * ( MUC - MUC ) ) )", "obj1": 0.378698224852071, "obj2": 0.5095948942496792}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "Max( Max( CS,RMSe ),( ( MUM + DS ) / RCSe ) )", "obj1": 0.3826429980276134, "obj2": 0.5034399181360552}, {"determining": "Min( ( ( MRS / FirstVNF_RAM ) / ( DDR * FirstVNF_CPU_Server ) ) ,( ( Const * PN ) * ( ACS / DDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) / Max( DS,RMSe ) ) / Max( RMSe,Max( RMSe,RMSe ) ) )", "obj1": 0.3431952662721893, "obj2": 0.5561702724540608}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) + Max( CRS,PN ) )", "choosing": "( Max( ( ( MLU - DS ) / ( RMSe + DS ) ),RRSe ) + ( ( Min( DS ,CS ) + MLU ) + RMSe ) )", "obj1": 0.40828402366863903, "obj2": 0.4911038807127957}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU + ACS ) - MDR ) )", "choosing": "Min( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) ,( ( ( MLU * MLU ) - Max( DS,RRSe ) ) + ( Max( MUM,DS ) * Max( MLU,MLU ) ) ) )", "obj1": 0.31952662721893493, "obj2": 0.5511007440324186}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,AMS ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ( BR * CRS ) / Max( MDR,MRS ) ) - Min( ( RRS + BR ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUR ) * Min( DS ,MUR ) ) + ( ( MUR / MLU ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.27416173570019725, "obj2": 0.6303491112828077}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,AMS ) ,( ( ( Const + ARS ) - ARS ) * FirstVNF_RAM ) )", "choosing": "Min( ( MLU * ( MUC / MLU ) ) ,( Max( MUM,( MLU * RRSe ) ) + RRSe ) )", "obj1": 0.388560157790927, "obj2": 0.5092863923291627}, {"determining": "( Min( ( ( FirstVNF_RAM + PN ) - Max( ACS,PN ) ) ,Min( Min( MDR ,ARS ) ,( FirstVNF_Mem_Server + MDR ) ) ) + Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( Min( MRS ,FirstVNF_RAM ),( PN * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( RCSe - RCSe ) - ( RMSe - MUR ) ) ,( ( MUM / MLU ) / Max( RMSe,MUM ) ) ) + ( ( ( CS / RRSe ) - ( RCSe * RRSe ) ) - Max( Max( CS,RMSe ),Min( CS ,RCSe ) ) ) )", "obj1": 0.5660749506903353, "obj2": 0.4107945009841466}, {"determining": "( Min( ( Max( FirstVNF_RAM,BR ) / Min( AMS ,CRS ) ) ,( Max( MRS,MDR ) * ( Const / FirstVNF_Mem_Server ) ) ) + Min( Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_RAM_Server / RRS ) ) ,Max( Min( ACS ,DDR ),( ACS / DDR ) ) ) )", "choosing": "( ( MUC / Min( ( DS + MUM ) ,MUC ) ) * Min( MLU ,RMSe ) )", "obj1": 0.40433925049309666, "obj2": 0.4749236786745803}, {"determining": "Max( ( FirstVNF_RAM_Server + MDR ),( ( ( ACS + Const ) - ( PN * MRS ) ) / ARS ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - Max( Max( ( ( ( CS - RRSe ) - MUC ) + ( CS * DS ) ),MUM ),( RMSe + RCSe ) ) ) + ( MUM * RMSe ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "( ( ( ( FirstVNF_RAM + MDR ) - Min( RRS ,CRS ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) + ( Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * Max( DS,Min( MLU ,Min( MLU ,MLU ) ) ) )", "obj1": 0.7869822485207101, "obj2": 0.18738071531295183}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_Mem ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,Max( MUC,( MUC - RMSe ) ) ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( ( Max( ARS,FirstVNF_CPU_Server ) / ( RRS / RRS ) ) - CRS ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( Min( Max( MUC,RMSe ) ,CS ) / RCSe ) * Min( CS ,( ( MUM * MLU ) / MUC ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM ) / Max( ACS,ARS ) )", "choosing": "Min( Max( Min( ( MUM + MLU ) ,( MUR * RRSe ) ),( ( MUR + RRSe ) - ( RCSe + MLU ) ) ) ,( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) )", "obj1": 0.8402366863905325, "obj2": 0.12328496674431075}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS * MDR ) ,Min( MRS ,MDR ) )", "choosing": "Min( Min( RMSe ,RCSe ) ,( Min( Max( MUR,RCSe ) ,Max( MLU,RRSe ) ) + Min( Max( MUR,MLU ) ,( CS - MUC ) ) ) )", "obj1": 0.3865877712031558, "obj2": 0.551507151163883}, {"determining": "( ( FirstVNF_Mem / AMS ) * ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUM,MUR ) - ( MLU - Min( MLU ,RRSe ) ) )", "obj1": 0.3530571992110454, "obj2": 0.5457634552005307}, {"determining": "( ( MDR / FirstVNF_CPU ) / Min( Const ,MDR ) )", "choosing": "( Min( ( ( RRSe / RRSe ) - ( RCSe + MUC ) ) ,( ( MUR * RRSe ) - Max( DS,RCSe ) ) ) + ( ( ( MUC + MLU ) + ( MUC * MUR ) ) + ( Max( RRSe,RCSe ) * ( DS * RMSe ) ) ) )", "obj1": 0.4378698224852071, "obj2": 0.44199477709086415}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ACS / ( FirstVNF_CPU - RRS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "Max( Max( Min( Max( CS,MUC ) ,( RCSe / DS ) ),Min( Min( CS ,RCSe ) ,( MLU / CS ) ) ),( ( ( MUM / RCSe ) - Max( MUR,DS ) ) - Max( Min( RCSe ,RCSe ),( MUR / RMSe ) ) ) )", "obj1": 0.35700197238658776, "obj2": 0.5374025847168614}, {"determining": "( ( ( ( MDR - BR ) * ( FirstVNF_Mem - PN ) ) / ( ( FirstVNF_RAM_Server - BR ) / ( DDR * Const ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) )", "choosing": "( ( ( ( CS / MUM ) - ( MUR + RMSe ) ) + ( ( MUR * RCSe ) + ( MLU * MUR ) ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.2603550295857988, "obj2": 0.6663173148272158}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / Min( ( ACS + Max( Min( MDR ,FirstVNF_RAM ),FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MLU - RRSe ) - ( Max( MLU,MUC ) - MUC ) ) + CS ) - ( MUC + DS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,BR ),( RRS / ACS ) ) ) ,( ( ARS / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( Max( MLU,MUC ) * ( MUR / MUM ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,( RCSe / ( MLU + RRSe ) ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "Max( ( Max( ( FirstVNF_Mem - RRS ),( FirstVNF_Mem_Server / ARS ) ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( MUR / Max( MUR,RMSe ) ) + ( DS - Min( RCSe ,DS ) ) )", "obj1": 0.33530571992110453, "obj2": 0.548052641212079}, {"determining": "( ( DDR + CRS ) - ( ( ( BR - BR ) - ( FirstVNF_RAM - BR ) ) / AMS ) )", "choosing": "Min( ( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) ,Min( ( ( DS - MUM ) - Max( MUC,MLU ) ) ,( ( RRSe - RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.3727810650887574, "obj2": 0.501032620754479}, {"determining": "( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21696252465483234, "obj2": 0.6535839931640866}, {"determining": "Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ARS / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RRSe + RRSe ) - ( MUM - MUR ) ) + Max( ( MUM / MUC ),Max( MUR,MUR ) ) ) ,Max( Max( Min( CS ,DS ),( CS * RCSe ) ),Min( ( MUR / DS ) ,( CS + MLU ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.622863015607948}], "2": [{"determining": "( ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ARS / FirstVNF_CPU ) ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( Max( Max( Min( CS ,DS ),( CS * RCSe ) ),Min( ( MUR / DS ) ,( CS + MLU ) ) ) - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - ( CRS * ACS ) )", "choosing": "( ( MUR + MUC ) / ( ( DS + ( Max( ( ( RRSe / ( RMSe / MUR ) ) - DS ),( MUR + RMSe ) ) / ( Max( RRSe,RRSe ) + ( ( MUR - ( RCSe / RRSe ) ) + Max( MLU,( MLU + MUC ) ) ) ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ACS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( CS / MUM ) ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS / ( FirstVNF_CPU - RRS ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) )", "choosing": "( ( ( ( CS / MUM ) - ( MUR + RMSe ) ) + ( ( RCSe * RCSe ) + ( MLU * MUR ) ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.9566074950690335, "obj2": 0.054406518200191684}, {"determining": "( ( ( ( FirstVNF_RAM + MDR ) - Min( RRS ,CRS ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) + ( Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * Max( DS,Min( MLU ,Min( MLU ,MLU ) ) ) )", "obj1": 0.7869822485207101, "obj2": 0.18738071531295183}, {"determining": "Min( ( FirstVNF_RAM - DDR ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Max( DS,RCSe ) - MLU ) ) ),( RCSe - CS ) )", "obj1": 0.8126232741617357, "obj2": 0.0643012795420872}, {"determining": "Min( ( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,FirstVNF_RAM ) + Min( PN ,Min( RRS ,PN ) ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( ( ( RRSe / MUR ) + MLU ),CS ) )", "obj1": 0.16568047337278108, "obj2": 0.7154447623253403}, {"determining": "Min( ( FirstVNF_RAM - ( ( Max( ARS,FirstVNF_CPU_Server ) / ( RRS / RRS ) ) - CRS ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( Min( Max( MUC,RMSe ) ,CS ) / RCSe ) * Min( CS ,( ( MUM * MLU ) / MUC ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * ( ( CRS * FirstVNF_Mem ) + ( AMS / MDR ) ) )", "choosing": "( Max( MUC,MLU ) + ( DS + DS ) )", "obj1": 0.6587771203155819, "obj2": 0.24126636913248903}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MRS ,Max( ( RRS * FirstVNF_CPU_Server ),RRS ) ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,( RMSe + Min( CS ,RRSe ) ) ) * Min( MUR ,CS ) ) )", "obj1": 0.5522682445759369, "obj2": 0.29151805764658273}, {"determining": "Min( ( BR / ( RRS * AMS ) ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( ( Min( CS ,RCSe ) + ( ( CS - Min( Min( RRSe ,MUM ) ,MUC ) ) + RCSe ) ),( RMSe / RCSe ) ),CS ) )", "obj1": 0.3175542406311637, "obj2": 0.48789298621893157}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( FirstVNF_Mem_Server - Const ) ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 0.7061143984220908, "obj2": 0.2351054075876491}, {"determining": "( ( MRS * ( FirstVNF_Mem_Server - Const ) ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( CS * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 0.7731755424063116, "obj2": 0.21318138652725407}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ),( RRS / ACS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( Max( MLU,MUC ) * ( MUR / MUM ) ) ) / Min( ( ( DS * RCSe ) - ( MUC + DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5578370425899029}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MRS ,Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ),FirstVNF_Mem ) ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,( RMSe - ( MLU * ( DS - Min( CS ,MUM ) ) ) ) ) * Min( MUR ,CS ) ) )", "obj1": 0.5956607495069034, "obj2": 0.27325700828318206}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( MDR + BR ) )", "choosing": "( ( ( CS / MUM ) + MUM ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "Min( ( FirstVNF_RAM - ( ( Max( ARS,FirstVNF_CPU_Server ) / ( RRS / RRS ) ) - CRS ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( Min( Max( MUC,RMSe ) ,CS ) / RCSe ) * Min( CS ,( ( MUM * MLU ) / MUC ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.9743589743589743, "obj2": 0.011468267961333252}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "Max( ( DDR * RRS ),( ( FirstVNF_RAM / BR ) - Max( ( ARS - DDR ),( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RCSe * ( MUR / MUM ) ) + Min( RCSe ,MUM ) ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.17357001972386588, "obj2": 0.6831729428051743}, {"determining": "( Max( Max( CRS,AMS ),RRS ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUR - CS ) / RMSe ) ,Max( ( RMSe - MLU ),( MUR * MUM ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4861193347892764}, {"determining": "Min( ( Max( CRS,AMS ) * Max( PN,RRS ) ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( MUR / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.5936883629191322, "obj2": 0.2830459366459353}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Max( Max( Max( MUC,CS ),Max( ( ( MUR + DS ) / Max( RCSe,MUM ) ),Max( ( CS - DS ),( RRSe - MUC ) ) ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.41025641025641024, "obj2": 0.4419016642790615}, {"determining": "( Max( MRS,CRS ) - Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( RMSe,( CS + DS ) ) - RRSe ),Max( ( CS - DS ),( RRSe - MUC ) ) )", "obj1": 0.47534516765285995, "obj2": 0.4128848961216973}, {"determining": "( ( FirstVNF_Mem / AMS ) * ( FirstVNF_CPU / ARS ) )", "choosing": "( Max( MUM,( Min( ( ( RRSe / RRSe ) - ( RCSe + MUC ) ) ,( ( MUR * RRSe ) - Max( DS,RCSe ) ) ) + ( ( ( MUC + MLU ) + ( MUC * MUR ) ) + ( Max( RRSe,RCSe ) * ( DS * RMSe ) ) ) ) ) - ( MLU - Min( MLU ,RRSe ) ) )", "obj1": 0.47928994082840237, "obj2": 0.3956988160814267}, {"determining": "Min( Min( BR ,MRS ) ,( FirstVNF_RAM / BR ) )", "choosing": "( ( DS + RRSe ) / ( MUR / MLU ) )", "obj1": 0.5029585798816568, "obj2": 0.37569098003132}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( FirstVNF_Mem_Server - CRS ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( Max( MUC,CS ),( RRSe / CS ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.378698224852071, "obj2": 0.4496790372982462}, {"determining": "( ( ( FirstVNF_RAM / BR ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( ( MUR / MLU ) + MUC ) / ( MUC + MLU ) )", "obj1": 0.1893491124260355, "obj2": 0.6644395290663874}, {"determining": "( ( DDR + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.3727810650887574, "obj2": 0.4705679699630597}, {"determining": "Min( ( MRS * ( AMS - PN ) ) ,( ( MRS * FirstVNF_CPU_Server ) / BR ) )", "choosing": "( ( ( Max( MUC,( RRSe / Max( Max( Max( MUC,DS ),MLU ),( MLU * RCSe ) ) ) ) / ( ( RMSe + MUC ) * RRSe ) ) + RRSe ) / MUR )", "obj1": 0.5226824457593688, "obj2": 0.36034918868990495}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21696252465483234, "obj2": 0.6535839931640866}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) / ( DDR + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS + MUC ) ,( MUM + ( Min( CS ,MUC ) / Min( MUC ,MUC ) ) ) )", "obj1": 0.5009861932938856, "obj2": 0.38758253559022776}, {"determining": "Max( ( Max( ( FirstVNF_Mem - RRS ),( FirstVNF_Mem_Server / ARS ) ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( ( BR - BR ) - ( FirstVNF_RAM - BR ) ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( MUR / Max( MUR,RMSe ) ) + ( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) )", "obj1": 0.2504930966469428, "obj2": 0.6199581384025699}, {"determining": "Max( Min( ( DDR * FirstVNF_Mem ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( RMSe + RRSe ) )", "obj1": 0.23668639053254437, "obj2": 0.6348030561489303}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( Max( MDR,( FirstVNF_CPU - ( ( MDR * DDR ) * ( PN + BR ) ) ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( RMSe,( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.005249179889777996}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,AMS ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ( BR * CRS ) / Max( MDR,MRS ) ) - Min( ( ( ( ACS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU + ACS ) - MDR ) ) + BR ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUR ) * Min( DS ,MUR ) ) + ( ( MUR / MLU ) + Max( DS,MUR ) ) ) * ( ( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.29191321499013806, "obj2": 0.5658799654508405}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) )", "choosing": "Max( Max( CS,RMSe ),( ( MUM + Min( RCSe ,RMSe ) ) / RCSe ) )", "obj1": 0.2859960552268245, "obj2": 0.5798381159207955}, {"determining": "Min( Min( ARS ,AMS ) ,( ( ( Const + ARS ) - ARS ) * Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( Min( MRS ,FirstVNF_RAM ),( PN * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( Min( ( ( RCSe - RCSe ) - ( RMSe - MUR ) ) ,( ( MUM / MLU ) / Max( RMSe,MUM ) ) ) ,( Max( MUM,( MLU * RRSe ) ) + RRSe ) )", "obj1": 0.2702169625246548, "obj2": 0.6070016135540713}, {"determining": "( ( ( ACS + BR ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + MUC ) / ( MUM + MLU ) )", "obj1": 0.22682445759368836, "obj2": 0.6402536489999419}, {"determining": "Max( ( FirstVNF_RAM_Server * BR ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( CS - RRSe ) / RRSe ) ,Max( RRSe,RCSe ) )", "obj1": 0.28205128205128205, "obj2": 0.5884141931978746}, {"determining": "Min( ( BR / ( RRS * AMS ) ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( ( Min( CS ,RCSe ) + ( ( CS - Min( Min( RRSe ,MUM ) ,MUC ) ) + RCSe ) ),( RMSe / RCSe ) ),CS ) )", "obj1": 0.28402366863905326, "obj2": 0.5710248104962692}, {"determining": "( ( Min( Min( ( MDR - AMS ) ,( PN + FirstVNF_RAM_Server ) ) ,PN ) / ( RRS * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * ( DS - DS ) ) + ( ( ( ( RCSe * RRSe ) - RCSe ) / MUR ) - MUR ) )", "obj1": 0.2603550295857988, "obj2": 0.6119666474891811}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / Min( ( ACS + Max( Min( MDR ,FirstVNF_RAM ),FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MLU - RRSe ) - ( Max( MLU,MUC ) - MUC ) ) + CS ) - ( MUC + DS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.27613412228796846, "obj2": 0.5905911458679786}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,BR ),( RRS / ACS ) ) ) ,( ( ARS / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( Max( MLU,MUC ) * ( MUR / MUM ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,( RCSe / ( MLU + RRSe ) ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "( ( ( RRS * PN ) + ( FirstVNF_Mem_Server - AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,MUM ) ) )", "obj1": 0.22287968441814596, "obj2": 0.6590752489216385}, {"determining": "( ( Min( ( ( FirstVNF_RAM * ( MRS + FirstVNF_RAM_Server ) ) / Const ) ,( PN + FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - Max( ( ( ( Max( CS,( MLU + RRSe ) ) + ( Min( MUR ,MUM ) - ( MUC / RCSe ) ) ) / RCSe ) / CS ),MUC ) ) - ( DS * MUM ) )", "obj1": 0.22879684418145957, "obj2": 0.6382039873733043}, {"determining": "Max( ( FirstVNF_RAM_Server + MDR ),( ( ( ACS + Const ) - ( PN * MRS ) ) / ARS ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - Max( Max( ( ( ( CS - RRSe ) - MUC ) + ( CS * DS ) ),MUM ),( RMSe + RCSe ) ) ) + ( MUM * RMSe ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( ( MRS * FirstVNF_Mem ) - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( ( Min( CS ,Max( RCSe,CS ) ) / MUM ) + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 0.9960552268244576, "obj2": 0.001559594050666787}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - ( BR - FirstVNF_Mem ) ),( ( ( ACS * FirstVNF_Mem ) - ( ARS - ( BR + PN ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + Min( MUR ,MUC ) ) / ( MLU + CS ) )", "obj1": 0.28994082840236685, "obj2": 0.5659090212892142}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,( BR / Max( BR,DDR ) ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Max( Min( ( MUC - Max( CS,RRSe ) ) ,( ( MUM / CS ) / ( MUC / MUC ) ) ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( Const / ACS ) )", "choosing": "Min( ( MUR - RMSe ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( Min( FirstVNF_RAM_Server ,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU * MLU ),Min( Max( RRSe,RCSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - Max( ( FirstVNF_CPU_Server + ARS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( Min( ( RRSe + RCSe ) ,Max( MUR,MUR ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( ( ( RRSe - Max( MUM,Max( ( Min( MUR ,MUM ) + MUR ),Min( ( Max( CS,RMSe ) / MUR ) ,DS ) ) ) ) / Min( ( MLU + CS ) ,CS ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_Mem ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,Max( MUC,( MUC - RMSe ) ) ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( Const ,FirstVNF_RAM ) ,( ( RRS + FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( DS ,DS ),( ( Min( ( RMSe + Max( MUM,MLU ) ) ,Min( MUR ,( Min( MUR ,MLU ) * ( Max( RRSe,MUM ) - ( MUM * RCSe ) ) ) ) ) + ( ( ( MUC / Min( ( RMSe + CS ) ,( RRSe / RMSe ) ) ) - Min( RCSe ,Max( ( MUC / DS ),RRSe ) ) ) / ( DS / ( ( MUC + RRSe ) - ( ( DS * RCSe ) - Min( MLU ,MUM ) ) ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,ARS ) + RRS ) ,( MRS - ARS ) )", "choosing": "( Min( Max( MUC,Max( RCSe,Max( MUC,MLU ) ) ) ,( ( ( CS / ( RCSe - ( DS * RMSe ) ) ) - ( RRSe + Min( CS ,( Max( RCSe,DS ) / RCSe ) ) ) ) - MLU ) ) - ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN + Const ) ,( Const - ( BR - FirstVNF_CPU ) ) ) - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( ( MUC * ( Min( Max( ( Min( CS ,CS ) + RMSe ),RMSe ) ,MUC ) / Min( RRSe ,RRSe ) ) ),MLU ) ,Max( ( RCSe + MLU ),( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( RCSe + MLU ),Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( ( Max( Const,Const ) / ( DDR + FirstVNF_CPU ) ) / PN ) )", "choosing": "( ( MUM * MUM ) / ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) / ( DDR + ( FirstVNF_CPU_Server + ( ( MRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RMSe,MUC ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,FirstVNF_Mem ),PN ) * ( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / ( Max( RMSe,MUC ) - ( RMSe / Max( MLU,Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MDR / MRS ),FirstVNF_RAM ),FirstVNF_RAM ) / ( ARS / ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( CS - ( MUM * MUR ) ) ,( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( Min( Const ,MRS ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * Min( ( RMSe - MUC ) ,Max( RRSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - Max( ( FirstVNF_CPU_Server + ARS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( Min( ( RRSe + RCSe ) ,Max( MUR,MUR ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) ) + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + RMSe ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) + Max( FirstVNF_Mem_Server,AMS ) ) - ( ( ( FirstVNF_RAM - DDR ) - ( BR - FirstVNF_Mem ) ) / ( AMS * MRS ) ) )", "choosing": "( CS / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_Mem ) - Max( ( ( FirstVNF_RAM - DDR ) - ( BR - FirstVNF_Mem ) ),( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( CS + RCSe ) + ( MUR + CS ) ) * Max( Min( MUR ,MUC ),( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,FirstVNF_Mem_Server )", "choosing": "( ( MUM - DS ) / ( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ARS )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( Max( Max( CS,RMSe ),( ( MUM + DS ) / RCSe ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( ACS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( RMSe - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,ARS ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( ( DS - Min( Max( MLU,MUM ) ,RMSe ) ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) ) )", "choosing": "( ( CS - Min( Max( MLU,MUM ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) + ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS - Min( Max( MLU,MUM ) ,RMSe ) ),RRSe ) + ( ( Min( DS ,CS ) + MLU ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - Max( CRS,PN ) ) )", "choosing": "( ( ( MLU - DS ) / ( RMSe + DS ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * CRS ) / Max( MDR,MRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - ( ( Max( MUC,MUR ) * Min( DS ,MUR ) ) + ( ( MUR / MLU ) + Max( DS,MUR ) ) ) ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( DDR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * MUC ) / MUM ) * Max( DS,Min( MLU ,Min( MLU ,MLU ) ) ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / Max( ( MUR * ( Min( RCSe ,DS ) - MUM ) ),( RCSe - CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_Mem ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,Max( MUC,( MUC - RMSe ) ) ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( PN - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ARS / FirstVNF_CPU ) ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( Max( Max( Min( CS ,DS ),( CS * RCSe ) ),Min( ( MUR / DS ) ,( CS + MLU ) ) ) - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ACS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( CS / MUM ) ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS / ( FirstVNF_CPU - RRS ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) )", "choosing": "( ( ( ( CS / MUM ) - ( MUR + RMSe ) ) + ( ( RCSe * RCSe ) + ( MLU * MUR ) ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.9566074950690335, "obj2": 0.054406518200191684}, {"determining": "Min( ( FirstVNF_RAM - ( ( Max( ARS,FirstVNF_CPU_Server ) / ( RRS / RRS ) ) - CRS ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( Min( Max( MUC,RMSe ) ,CS ) / RCSe ) * Min( CS ,( ( MUM * MLU ) / MUC ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "Min( ( FirstVNF_RAM - DDR ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Max( DS,RCSe ) - MLU ) ) ),( RCSe - CS ) )", "obj1": 0.8126232741617357, "obj2": 0.0643012795420872}, {"determining": "( ( ( ( FirstVNF_RAM + MDR ) - Min( RRS ,CRS ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) + ( Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * Max( DS,Min( MLU ,Min( MLU ,MLU ) ) ) )", "obj1": 0.7869822485207101, "obj2": 0.18738071531295183}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * ( ( CRS * FirstVNF_Mem ) + ( AMS / MDR ) ) )", "choosing": "( Max( MUC,MLU ) + ( DS + DS ) )", "obj1": 0.6587771203155819, "obj2": 0.24126636913248903}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MRS ,Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ),FirstVNF_Mem ) ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,( RMSe - ( MLU * ( DS - Min( CS ,MUM ) ) ) ) ) * Min( MUR ,CS ) ) )", "obj1": 0.5956607495069034, "obj2": 0.27325700828318206}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,( Min( Const ,FirstVNF_CPU ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,( Min( Const ,FirstVNF_CPU ) / ARS ) ) ) ) ) )", "choosing": "( ( ( MUR / ( DS * MUM ) ) - RMSe ) - ( DS * MUM ) )", "obj1": 0.11242603550295859, "obj2": 0.7402740520835883}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( DS * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5404339250493096, "obj2": 0.30449436089025234}, {"determining": "Min( ( FirstVNF_RAM - ( ( Max( ARS,FirstVNF_CPU_Server ) / ( RRS / RRS ) ) - CRS ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( Min( Max( MUC,RMSe ) ,CS ) / RCSe ) * Min( CS ,( ( MUM * MLU ) / MUC ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.9743589743589743, "obj2": 0.011468267961333252}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( ARS - Max( ( ( RRS / ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / ( CRS * FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ),Min( FirstVNF_Mem ,ACS ) ) ) )", "choosing": "( ( ( CS + RCSe ) + ( MUR + ( RRSe / ( MUM / ( ( MUR + CS ) + Min( MUR ,RRSe ) ) ) ) ) ) * Max( Min( MUR ,MUC ),( RMSe + MUC ) ) )", "obj1": 0.7297830374753451, "obj2": 0.20455983321955976}, {"determining": "Max( ( DDR * RRS ),( ( FirstVNF_RAM / BR ) - Max( ( ARS - DDR ),( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RCSe * ( MUR / MUM ) ) + Min( RCSe ,MUM ) ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.17357001972386588, "obj2": 0.6831729428051743}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( MDR + BR ) )", "choosing": "( ( ( CS / MUM ) + MUM ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "( ( RRS + Const ) + ( ( MRS + Const ) * ARS ) )", "choosing": "( ( MUR + RCSe ) - Max( Max( ( MUM + CS ),( MUR + RCSe ) ),MUR ) )", "obj1": 0.3155818540433925, "obj2": 0.5314987714802566}, {"determining": "( Max( ( ARS / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( MDR * FirstVNF_RAM_Server ) ) / Min( ( ( Max( Const,PN ) * ( BR / CRS ) ) / BR ) ,DDR ) )", "choosing": "( Max( RCSe,DS ) - ( ( MLU / ( ( DS + ( MUM + RRSe ) ) + DS ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.15976331360946747, "obj2": 0.7121724916657483}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MRS ,Max( ( RRS * FirstVNF_CPU_Server ),RRS ) ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,( RMSe + Min( CS ,RRSe ) ) ) * Min( MUR ,CS ) ) )", "obj1": 0.5522682445759369, "obj2": 0.29151805764658273}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * ( ( CRS * FirstVNF_Mem ) + ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / MDR ) ) )", "choosing": "( Max( ( ( MUC * RMSe ) / ( MUR / DS ) ),MLU ) + ( DS + DS ) )", "obj1": 0.6844181459566075, "obj2": 0.2193880053021348}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - ( BR - FirstVNF_Mem ) ),( ( ( ACS * FirstVNF_Mem ) - ( ARS - ( FirstVNF_RAM + PN ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) + Min( MUR ,MUC ) ) / ( MLU + CS ) )", "obj1": 0.47534516765285995, "obj2": 0.3929693510513492}, {"determining": "( ( DDR + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.3727810650887574, "obj2": 0.4705679699630597}, {"determining": "Min( ( BR / ( RRS * AMS ) ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( ( Min( CS ,RCSe ) + ( ( CS - Min( Min( RRSe ,MUM ) ,MUC ) ) + RCSe ) ),( RMSe / RCSe ) ),CS ) )", "obj1": 0.3175542406311637, "obj2": 0.48789298621893157}, {"determining": "Min( ( Max( CRS,AMS ) * Max( PN,RRS ) ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( MUR / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.5936883629191322, "obj2": 0.2830459366459353}, {"determining": "( ( DDR + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4181459566074951, "obj2": 0.4303436918344225}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( CRS ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( RMSe - MLU ) ,( MUR * MUR ) ) + DS ) ),CS ) )", "obj1": 0.33727810650887574, "obj2": 0.4763917771362168}, {"determining": "( ( FirstVNF_RAM + ARS ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) )", "obj1": 0.44970414201183434, "obj2": 0.4097201146407568}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( FirstVNF_Mem_Server - CRS ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( Max( MUC,CS ),( RRSe / CS ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.378698224852071, "obj2": 0.4496790372982462}, {"determining": "Min( Min( BR ,MRS ) ,( FirstVNF_RAM / BR ) )", "choosing": "( ( DS + RRSe ) / ( MUR / MLU ) )", "obj1": 0.5029585798816568, "obj2": 0.37569098003132}, {"determining": "( ( ( FirstVNF_RAM / BR ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( ( MUR / MLU ) + MUC ) / ( MUC + MLU ) )", "obj1": 0.1893491124260355, "obj2": 0.6644395290663874}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ACS / ( FirstVNF_CPU - ( MDR / FirstVNF_CPU ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "Max( ( Min( ( ( RRSe / RRSe ) - ( RCSe + MUC ) ) ,( ( MUR * RRSe ) - Max( DS,RCSe ) ) ) + ( ( ( MUC + MLU ) + ( MUC * MUR ) ) + ( Max( RRSe,RCSe ) * ( DS * RMSe ) ) ) ),( ( ( MUM / RCSe ) - Max( MUR,DS ) ) - Max( Min( RCSe ,RCSe ),( MUR / RMSe ) ) ) )", "obj1": 0.5207100591715976, "obj2": 0.35945931065417736}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) / ( DDR + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS + MUC ) ,( MUM + ( Min( CS ,MUC ) / Min( MUC ,MUC ) ) ) )", "obj1": 0.5009861932938856, "obj2": 0.38758253559022776}, {"determining": "( ( ( ARS - ACS ) / ( FirstVNF_RAM_Server / ( ( ACS * Max( Min( AMS ,( MRS * MRS ) ),Const ) ) - AMS ) ) ) / Min( CRS ,DDR ) )", "choosing": "( ( DS * ( ( Min( MUC ,CS ) * ( Max( RCSe,( ( MUM * MUM ) / Max( MLU,MLU ) ) ) - MUR ) ) * ( ( MLU - MUM ) + MUR ) ) ) - ( DS * MUM ) )", "obj1": 0.15976331360946747, "obj2": 0.7121724916657483}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( ( FirstVNF_RAM / BR ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + ( ( MUR + Min( MUR ,MUC ) ) / ( MLU + CS ) ) ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.21301775147928995, "obj2": 0.6450069681598192}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Max( Max( Max( MUC,CS ),Max( ( ( MUR + DS ) / Max( RCSe,MUM ) ),Max( ( CS - DS ),( RRSe - MUC ) ) ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.41025641025641024, "obj2": 0.4419016642790615}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) )", "choosing": "Min( DS ,Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 0.7021696252465484, "obj2": 0.2117312111420319}, {"determining": "( ( Min( BR ,( PN + BR ) ) + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - ( ( ( RCSe - ( Min( DS ,CS ) - Min( RMSe ,( RMSe + MUM ) ) ) ) - ( DS * MUM ) ) - Min( RMSe ,( RMSe + MUM ) ) ) ) - ( DS * MUM ) )", "obj1": 0.7041420118343196, "obj2": 0.2052702499374447}, {"determining": "( ( ( RRS * PN ) + ( FirstVNF_Mem_Server - AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Max( Min( MRS ,Max( ( FirstVNF_Mem_Server - AMS ),FirstVNF_Mem ) ),AMS ) / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( ( ( Max( MUC,MUR ) / RRSe ) / ( RMSe - ( MLU * RCSe ) ) ) - ( MLU * RCSe ) ) )", "obj1": 0.21499013806706113, "obj2": 0.6359978596138532}, {"determining": "Max( Min( ( DDR * FirstVNF_Mem ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( RMSe + RRSe ) )", "obj1": 0.23668639053254437, "obj2": 0.6348030561489303}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,( BR * CRS ) )", "choosing": "( ( MUR - MUR ) / ( Max( MLU,MUM ) * Min( ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) ,CS ) ) )", "obj1": 0.3037475345167653, "obj2": 0.5598453215010283}, {"determining": "( Max( MDR,( FirstVNF_CPU - ( ( MDR * DDR ) * ( PN + BR ) ) ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( RMSe,( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.005249179889777996}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( ( ( CRS + DDR ) - ( MRS + BR ) ) ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( ( RMSe - MUC ) + DS ) ),CS ) )", "obj1": 0.3234714003944773, "obj2": 0.48143352915996646}, {"determining": "( Max( FirstVNF_CPU,Max( DDR,AMS ) ) / ( FirstVNF_CPU_Server / Max( FirstVNF_CPU,Max( DDR,AMS ) ) ) )", "choosing": "( ( MUR - MUR ) - ( Max( ( MLU - MUR ),( Max( MLU,MUM ) * Min( MUR ,CS ) ) ) - RRSe ) )", "obj1": 0.2879684418145957, "obj2": 0.5630139880877172}, {"determining": "Max( ( Max( ( FirstVNF_Mem - RRS ),( FirstVNF_Mem_Server / ARS ) ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( ( BR - BR ) - ( FirstVNF_RAM - BR ) ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( MUR / Max( MUR,RMSe ) ) + ( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) )", "obj1": 0.2504930966469428, "obj2": 0.6199581384025699}, {"determining": "Max( ( FirstVNF_RAM_Server * BR ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( CS - RRSe ) / RRSe ) ,Max( RRSe,RCSe ) )", "obj1": 0.28205128205128205, "obj2": 0.5884141931978746}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,Max( RRS,FirstVNF_Mem_Server ) ) ) ,( Max( RRS,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( MUR - MUR ) / ( Max( MLU,MUM ) * Min( ( MUR - MUR ) ,CS ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5505459542166921}, {"determining": "Min( Min( ARS ,AMS ) ,( ( ( Const + ARS ) - ARS ) * Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( Min( MRS ,FirstVNF_RAM ),( PN * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( Min( ( ( RCSe - RCSe ) - ( RMSe - MUR ) ) ,( ( MUM / MLU ) / Max( RMSe,MUM ) ) ) ,( Max( MUM,( MLU * RRSe ) ) + RRSe ) )", "obj1": 0.2702169625246548, "obj2": 0.6070016135540713}, {"determining": "Max( ( FirstVNF_RAM_Server * BR ),( FirstVNF_RAM + Max( FirstVNF_CPU,Const ) ) )", "choosing": "Min( ( RMSe - MUC ) ,( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) )", "obj1": 0.2859960552268245, "obj2": 0.5731370408818601}, {"determining": "( ( Min( Min( ( MDR - AMS ) ,( PN + FirstVNF_RAM_Server ) ) ,PN ) / ( RRS * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * ( DS - DS ) ) + ( ( ( ( RCSe * RRSe ) - RCSe ) / MUR ) - MUR ) )", "obj1": 0.2603550295857988, "obj2": 0.6119666474891811}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / Min( ( ACS + Max( Min( MDR ,FirstVNF_RAM ),FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MLU - RRSe ) - ( Max( MLU,MUC ) - MUC ) ) + CS ) - ( MUC + DS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "( ( CRS + DDR ) - ( CRS + DDR ) )", "choosing": "Min( ( RMSe - MLU ) ,MUC )", "obj1": 0.2485207100591716, "obj2": 0.6294542901599404}, {"determining": "( ( ( RRS * PN ) + ( FirstVNF_Mem_Server - AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Max( Min( MRS ,Max( ( RRS * FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - AMS ) ) ),AMS ) / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( ( MLU * RCSe ) - ( MLU * RCSe ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5505459542166921}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.27613412228796846, "obj2": 0.5905911458679786}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,BR ),( RRS / ACS ) ) ) ,( ( ARS / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( Max( MLU,MUC ) * ( MUR / MUM ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,( RCSe / ( MLU + RRSe ) ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "Min( ( BR / ( RRS * AMS ) ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( ( Min( CS ,RCSe ) + ( ( CS - Min( Min( RRSe ,MUM ) ,MUC ) ) + RCSe ) ),( RMSe / RCSe ) ),CS ) )", "obj1": 0.28402366863905326, "obj2": 0.5710248104962692}, {"determining": "( ( Min( DDR ,FirstVNF_CPU_Server ) + Max( ( ( ( ( DDR + CRS ) * FirstVNF_RAM ) + AMS ) * AMS ),Const ) ) - Max( ACS,ACS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MLU * Min( Max( Min( DS ,MUR ),MUM ) ,( ( MUR - ( ( MUR / Max( MUC,MUC ) ) * RCSe ) ) - MUM ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.6331937922319242}, {"determining": "Max( ( FirstVNF_RAM_Server + MDR ),( ( ( ACS + Const ) - ( PN * MRS ) ) / ARS ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - Max( Max( ( ( ( CS - RRSe ) - MUC ) + ( CS * DS ) ),MUM ),( RMSe + RCSe ) ) ) + ( MUM * RMSe ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( ( MRS * FirstVNF_Mem ) - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( ( Min( CS ,Max( RCSe,CS ) ) / MUM ) + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 0.9960552268244576, "obj2": 0.001559594050666787}, {"determining": "( ( Min( DDR ,FirstVNF_CPU_Server ) + Max( ( ( ( ( DDR + DDR ) * FirstVNF_RAM ) + AMS ) * AMS ),Const ) ) - Max( ACS,ACS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MLU * Min( ( MUR - ( ( MUR / Max( MUC,MUC ) ) * RCSe ) ) ,( ( MUR - ( ( MUR / Max( MUC,MUC ) ) * RCSe ) ) - MUM ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.6331937922319242}, {"determining": "( ( MRS * DDR ) - ( CRS * ACS ) )", "choosing": "( ( MUR + MUC ) / ( ( DS + ( Max( ( ( RRSe / ( RMSe / MUR ) ) - DS ),( MUR + RMSe ) ) / ( Max( RRSe,RRSe ) + ( ( MUR - ( RCSe / RRSe ) ) + Max( MLU,( MLU + MUC ) ) ) ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,( BR / Max( BR,DDR ) ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Max( Min( ( MUC - Max( CS,RRSe ) ) ,( ( MUM / CS ) / ( MUC / MUC ) ) ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( Const / ACS ) )", "choosing": "Min( ( MUR - RMSe ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( Min( FirstVNF_RAM_Server ,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU * MLU ),Min( Max( RRSe,RCSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - Max( ( FirstVNF_CPU_Server + ARS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( Min( ( RRSe + RCSe ) ,Max( MUR,MUR ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( ( ( RRSe - Max( MUM,Max( ( Min( MUR ,MUM ) + MUR ),Min( ( Max( CS,RMSe ) / MUR ) ,DS ) ) ) ) / Min( ( MLU + CS ) ,CS ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_Mem ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,Max( MUC,( MUC - RMSe ) ) ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( Const ,FirstVNF_RAM ) ,( ( RRS + FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( DS ,DS ),( ( Min( ( RMSe + Max( MUM,MLU ) ) ,Min( MUR ,( Min( MUR ,MLU ) * ( Max( RRSe,MUM ) - ( MUM * RCSe ) ) ) ) ) + ( ( ( MUC / Min( ( RMSe + CS ) ,( RRSe / RMSe ) ) ) - Min( RCSe ,Max( ( MUC / DS ),RRSe ) ) ) / ( DS / ( ( MUC + RRSe ) - ( ( DS * RCSe ) - Min( MLU ,MUM ) ) ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,ARS ) + RRS ) ,( MRS - ARS ) )", "choosing": "( Min( Max( MUC,Max( RCSe,Max( MUC,MLU ) ) ) ,( ( ( CS / ( RCSe - ( DS * RMSe ) ) ) - ( RRSe + Min( CS ,( Max( RCSe,DS ) / RCSe ) ) ) ) - MLU ) ) - ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN + Const ) ,( Const - ( BR - FirstVNF_CPU ) ) ) - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( ( MUC * ( Min( Max( ( Min( CS ,CS ) + RMSe ),RMSe ) ,MUC ) / Min( RRSe ,RRSe ) ) ),MLU ) ,Max( ( RCSe + MLU ),( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( RCSe + MLU ),Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( ( Max( Const,Const ) / ( DDR + FirstVNF_CPU ) ) / PN ) )", "choosing": "( ( MUM * MUM ) / ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) / ( DDR + ( FirstVNF_CPU_Server + ( ( MRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RMSe,MUC ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,FirstVNF_Mem ),PN ) * ( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / ( Max( RMSe,MUC ) - ( RMSe / Max( MLU,Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MDR / MRS ),FirstVNF_RAM ),FirstVNF_RAM ) / ( ARS / ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( CS - ( MUM * MUR ) ) ,( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( Min( Const ,MRS ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * Min( ( RMSe - MUC ) ,Max( RRSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - Max( ( FirstVNF_CPU_Server + ARS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( Min( ( RRSe + RCSe ) ,Max( MUR,MUR ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) ) + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + RMSe ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) + Max( FirstVNF_Mem_Server,AMS ) ) - ( ( ( FirstVNF_RAM - DDR ) - ( BR - FirstVNF_Mem ) ) / ( AMS * MRS ) ) )", "choosing": "( CS / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_Mem ) - Max( ( ( FirstVNF_RAM - DDR ) - ( BR - FirstVNF_Mem ) ),( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( CS + RCSe ) + ( MUR + CS ) ) * Max( Min( MUR ,MUC ),( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,FirstVNF_Mem_Server )", "choosing": "( ( MUM - DS ) / ( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ACS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( CS / MUM ) ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( ( ( Max( FirstVNF_CPU_Server,Const ) - FirstVNF_CPU_Server ) + Max( ( FirstVNF_Mem / AMS ),Const ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + CS ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( PN - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( ( CRS + DDR ) - ( MRS + BR ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( RMSe * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS / ( FirstVNF_CPU - RRS ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) )", "choosing": "( ( ( ( CS / MUM ) - ( MUR + RMSe ) ) + ( ( RCSe * RCSe ) + ( MLU * MUR ) ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.9566074950690335, "obj2": 0.054406518200191684}, {"determining": "Min( ( FirstVNF_RAM - ( ( Max( ARS,FirstVNF_CPU_Server ) / ( RRS / RRS ) ) - CRS ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( Min( Max( MUC,RMSe ) ,CS ) / RCSe ) * Min( CS ,( ( MUM * MLU ) / MUC ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "Min( ( FirstVNF_RAM - DDR ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Max( DS,RCSe ) - MLU ) ) ),( RCSe - CS ) )", "obj1": 0.8126232741617357, "obj2": 0.0643012795420872}, {"determining": "( ( ( ( FirstVNF_RAM + MDR ) - Min( RRS ,CRS ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) + ( Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * Max( DS,Min( MLU ,Min( MLU ,MLU ) ) ) )", "obj1": 0.7869822485207101, "obj2": 0.18738071531295183}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * ( ( CRS * FirstVNF_Mem ) + ( AMS / MDR ) ) )", "choosing": "( Max( MUC,MLU ) + ( DS + DS ) )", "obj1": 0.6587771203155819, "obj2": 0.24126636913248903}, {"determining": "( ( ( RRS * PN ) + ( ( RRS * PN ) + ( FirstVNF_Mem_Server - AMS ) ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Max( Min( MRS ,Max( ( RRS * FirstVNF_CPU_Server ),FirstVNF_Mem ) ),AMS ) / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( ( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,Max( ( Min( RMSe ,RMSe ) * Min( MUR ,DS ) ),( ( RCSe + RRSe ) + ( RRSe * RMSe ) ) ) ) ) ) - ( MLU * RCSe ) ) )", "obj1": 0.5108481262327417, "obj2": 0.35737879852797294}, {"determining": "( ( ( ( MDR * FirstVNF_RAM_Server ) - PN ) + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( ( MUM - RCSe ),MUM ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.47534516765285995, "obj2": 0.37079100194832565}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( DS * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5404339250493096, "obj2": 0.30449436089025234}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MRS ,Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ),FirstVNF_Mem ) ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,( RMSe - ( MLU * ( DS - Min( CS ,MUM ) ) ) ) ) * Min( MUR ,CS ) ) )", "obj1": 0.5956607495069034, "obj2": 0.27325700828318206}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,( Max( RRS,Const ) / ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( MUR + RCSe ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.29191321499013806, "obj2": 0.5348289706239818}, {"determining": "Min( ( FirstVNF_RAM - ( ( Max( ARS,FirstVNF_CPU_Server ) / ( RRS / RRS ) ) - CRS ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( Min( Max( MUC,RMSe ) ,CS ) / RCSe ) * Min( CS ,( ( MUM * MLU ) / MUC ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.9743589743589743, "obj2": 0.011468267961333252}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( ARS - Max( ( ( RRS / ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / ( CRS * FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ),Min( FirstVNF_Mem ,ACS ) ) ) )", "choosing": "( ( ( CS + RCSe ) + ( MUR + ( RRSe / ( MUM / ( ( MUR + CS ) + Min( MUR ,RRSe ) ) ) ) ) ) * Max( Min( MUR ,MUC ),( RMSe + MUC ) ) )", "obj1": 0.7297830374753451, "obj2": 0.20455983321955976}, {"determining": "( ( FirstVNF_RAM + ARS ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) )", "obj1": 0.44970414201183434, "obj2": 0.4097201146407568}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),( FirstVNF_RAM_Server * BR ) ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( MLU / ( RMSe * ( RMSe - MUR ) ) ) ,DS ) + DS ) ),CS ) )", "obj1": 0.3116370808678501, "obj2": 0.49697681590484216}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MRS ,Max( ( RRS * FirstVNF_CPU_Server ),RRS ) ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,( RMSe + Min( CS ,RRSe ) ) ) * Min( MUR ,CS ) ) )", "obj1": 0.5522682445759369, "obj2": 0.29151805764658273}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * ( ( CRS * FirstVNF_Mem ) + ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / MDR ) ) )", "choosing": "( Max( ( ( MUC * RMSe ) / ( MUR / DS ) ),MLU ) + ( DS + DS ) )", "obj1": 0.6844181459566075, "obj2": 0.2193880053021348}, {"determining": "( ( DDR + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.3727810650887574, "obj2": 0.4705679699630597}, {"determining": "Min( ( Max( CRS,AMS ) * Max( PN,RRS ) ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( MUR / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.5936883629191322, "obj2": 0.2830459366459353}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( CRS ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( RMSe - MLU ) ,( MUR * MUR ) ) + DS ) ),CS ) )", "obj1": 0.33727810650887574, "obj2": 0.4763917771362168}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( FirstVNF_Mem_Server - CRS ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( Max( MUC,CS ),( RRSe / CS ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.378698224852071, "obj2": 0.4496790372982462}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,( Min( Const ,FirstVNF_CPU ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,( Min( Const ,FirstVNF_CPU ) / ARS ) ) ) ) ) )", "choosing": "( ( ( MUR / ( DS * MUM ) ) - RMSe ) - ( DS * MUM ) )", "obj1": 0.11242603550295859, "obj2": 0.7402740520835883}, {"determining": "( ( ( FirstVNF_RAM / BR ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( ( MUR / MLU ) + MUC ) / ( MUC + MLU ) )", "obj1": 0.1893491124260355, "obj2": 0.6644395290663874}, {"determining": "( Max( ( ARS / ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) ) ) ),FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( DS * Min( ( ( Min( CS ,( ( RMSe - MUM ) * MUC ) ) * ( ( ( DS + DS ) / RRSe ) + Max( MUM,( CS * MUR ) ) ) ) / MLU ) ,Min( RMSe ,( ( Max( RMSe,MLU ) - ( MUM / MUR ) ) * CS ) ) ) ) - ( DS * MUM ) )", "obj1": 0.14201183431952663, "obj2": 0.7222969891214253}, {"determining": "( Max( FirstVNF_CPU,Max( DDR,AMS ) ) / ( FirstVNF_CPU_Server / Max( FirstVNF_CPU,Max( DDR,AMS ) ) ) )", "choosing": "( ( MUR - MUR ) - ( Max( ( MLU - MUR ),( Max( MLU,MUM ) * Min( MUR ,CS ) ) ) - RRSe ) )", "obj1": 0.2879684418145957, "obj2": 0.5630139880877172}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR + CS ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.17159763313609466, "obj2": 0.6881336522126672}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( Max( ( ARS / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( MDR * FirstVNF_RAM_Server ) ) / Min( ( ( Max( Const,PN ) * ( BR / CRS ) ) / BR ) ,DDR ) )", "choosing": "( Max( RCSe,DS ) - ( ( MLU / ( ( DS + ( MUM + RRSe ) ) + DS ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.15976331360946747, "obj2": 0.7121724916657483}, {"determining": "Max( ( DDR * RRS ),( ( FirstVNF_RAM / BR ) - Max( ( ARS - DDR ),( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RCSe * ( MUR / MUM ) ) + Min( RCSe ,MUM ) ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.17357001972386588, "obj2": 0.6831729428051743}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( ( FirstVNF_RAM / BR ) - ( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + ( ( MUR + Min( MUR ,MUC ) ) / ( MLU + CS ) ) ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.21301775147928995, "obj2": 0.6450069681598192}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Max( Max( Max( MUC,CS ),Max( ( ( MUR + DS ) / Max( RCSe,MUM ) ),Max( ( CS - DS ),( RRSe - MUC ) ) ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.41025641025641024, "obj2": 0.4419016642790615}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) )", "choosing": "Min( DS ,Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 0.7021696252465484, "obj2": 0.2117312111420319}, {"determining": "( ( Min( BR ,( PN + BR ) ) + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - ( ( ( RCSe - ( Min( DS ,CS ) - Min( RMSe ,( RMSe + MUM ) ) ) ) - ( DS * MUM ) ) - Min( RMSe ,( RMSe + MUM ) ) ) ) - ( DS * MUM ) )", "obj1": 0.7041420118343196, "obj2": 0.2052702499374447}, {"determining": "( ( FirstVNF_RAM * MRS ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( DS * ( RCSe * RMSe ) ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4319526627218935, "obj2": 0.41865637252161475}, {"determining": "( Max( MDR,( FirstVNF_CPU - ( ( MDR * DDR ) * ( PN + BR ) ) ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( RMSe,( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.005249179889777996}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( ( ( CRS + DDR ) - ( MRS + BR ) ) ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( ( RMSe - MUC ) + DS ) ),CS ) )", "obj1": 0.3234714003944773, "obj2": 0.48143352915996646}, {"determining": "( ( Min( ( ( FirstVNF_RAM * ( MRS + FirstVNF_RAM_Server ) ) / Const ) ,( Min( ( ( FirstVNF_RAM * ( MRS + FirstVNF_RAM_Server ) ) / Const ) ,( PN + FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - Max( ( ( DS * MUM ) / CS ),MUC ) ) - ( DS * MUM ) )", "obj1": 0.1341222879684418, "obj2": 0.7336269452570389}, {"determining": "( ( ( RRS * PN ) + ( FirstVNF_Mem_Server - AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Max( Min( MRS ,Max( ( FirstVNF_Mem_Server - AMS ),FirstVNF_Mem ) ),AMS ) / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( ( ( Max( MUC,MUR ) / RRSe ) / ( RMSe - ( MLU * RCSe ) ) ) - ( MLU * RCSe ) ) )", "obj1": 0.21499013806706113, "obj2": 0.6359978596138532}, {"determining": "( ( ACS - MRS ) - Max( BR,Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,( DS / MLU ) ) )", "obj1": 0.1301775147928994, "obj2": 0.7388120212099675}, {"determining": "Max( ( FirstVNF_RAM_Server * BR ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( CS - RRSe ) / RRSe ) ,Max( RRSe,RCSe ) )", "obj1": 0.28205128205128205, "obj2": 0.5884141931978746}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU_Server + Min( ( DDR - CRS ) ,MRS ) ) * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( MUR,( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4260355029585799, "obj2": 0.42891695213006115}, {"determining": "Max( ( Max( ( FirstVNF_Mem - RRS ),( FirstVNF_Mem_Server / ARS ) ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( ( BR - BR ) - ( FirstVNF_RAM - BR ) ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( MUR / Max( MUR,RMSe ) ) + ( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) )", "obj1": 0.2504930966469428, "obj2": 0.6199581384025699}, {"determining": "( ( ARS / FirstVNF_RAM ) * Min( ( Min( Min( ACS ,Min( ARS ,Const ) ) ,FirstVNF_RAM ) / DDR ) ,BR ) )", "choosing": "( Min( Max( RRSe,RRSe ) ,( MUC + CS ) ) - ( DS * Max( RRSe,RRSe ) ) )", "obj1": 0.22485207100591717, "obj2": 0.6300147084996418}, {"determining": "Max( ( ( ( ACS * FirstVNF_Mem ) - ( ARS - ( BR + PN ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + CS ) / ( MLU + ( MLU + CS ) ) )", "obj1": 0.2445759368836292, "obj2": 0.6252754976592826}, {"determining": "Max( ( FirstVNF_RAM_Server * BR ),( FirstVNF_RAM + Max( FirstVNF_CPU,Const ) ) )", "choosing": "Min( ( RMSe - MUC ) ,( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) )", "obj1": 0.2859960552268245, "obj2": 0.5731370408818601}, {"determining": "( ( ( ARS - ACS ) / ( FirstVNF_RAM_Server / ( ( ACS * Max( Min( AMS ,( MRS * MRS ) ),Const ) ) - AMS ) ) ) / Min( CRS ,DDR ) )", "choosing": "( ( DS * ( ( Min( MUC ,CS ) * ( Max( RCSe,( ( MUM * MUM ) / Max( MLU,MLU ) ) ) - MUR ) ) * ( ( MLU - MUM ) + MUR ) ) ) - ( DS * MUM ) )", "obj1": 0.15976331360946747, "obj2": 0.7121724916657483}, {"determining": "Min( Min( ARS ,AMS ) ,( ( ( Const + ARS ) - ARS ) * Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( Min( MRS ,FirstVNF_RAM ),( PN * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( Min( ( ( RCSe - RCSe ) - ( RMSe - MUR ) ) ,( ( MUM / MLU ) / Max( RMSe,MUM ) ) ) ,( Max( MUM,( MLU * RRSe ) ) + RRSe ) )", "obj1": 0.2702169625246548, "obj2": 0.6070016135540713}, {"determining": "( ( Min( Min( ( MDR - AMS ) ,( PN + FirstVNF_RAM_Server ) ) ,PN ) / ( RRS * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * ( DS - DS ) ) + ( ( ( ( RCSe * RRSe ) - RCSe ) / MUR ) - MUR ) )", "obj1": 0.2603550295857988, "obj2": 0.6119666474891811}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / Min( ( ACS + Max( Min( MDR ,FirstVNF_RAM ),FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MLU - RRSe ) - ( Max( MLU,MUC ) - MUC ) ) + CS ) - ( MUC + DS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / ( ACS - Max( MDR,( RRS + ( RRS - ( MRS / MDR ) ) ) ) ) )", "choosing": "( ( Max( ( RRSe / RMSe ),RRSe ) - RMSe ) - ( MUM / ( ( Min( ( MUR / DS ) ,Min( RRSe ,( MUR * RRSe ) ) ) - ( ( Max( ( RRSe - MUC ),CS ) + MUC ) - Min( ( CS * ( MUR * RMSe ) ) ,DS ) ) ) - ( MLU + ( MLU * RCSe ) ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6261243710272623}, {"determining": "( ( DDR + ( ( ( MDR * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUR ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4181459566074951, "obj2": 0.4303436918344225}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( ( CRS + DDR ) - ( MRS + BR ) ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( MLU / ( MUC * ( RMSe - MUR ) ) ) ,DS ) + DS ) ),CS ) )", "obj1": 0.3175542406311637, "obj2": 0.48789298621893157}, {"determining": "Min( ( BR / ( RRS * AMS ) ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( ( Min( CS ,RCSe ) + ( ( CS - Min( Min( RRSe ,MUM ) ,MUC ) ) + RCSe ) ),( RMSe / RCSe ) ),CS ) )", "obj1": 0.28402366863905326, "obj2": 0.5710248104962692}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,BR ),( RRS / ACS ) ) ) ,( ( ARS / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( Max( MLU,MUC ) * ( MUR / MUM ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,( RCSe / ( MLU + RRSe ) ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "Max( ( FirstVNF_RAM_Server + MDR ),( ( ( ACS + Const ) - ( PN * MRS ) ) / ARS ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - Max( Max( ( ( ( CS - RRSe ) - MUC ) + ( CS * DS ) ),MUM ),( RMSe + RCSe ) ) ) + ( MUM * RMSe ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "Min( ( BR / ( RRS * AMS ) ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( ( Min( CS ,RCSe ) + ( ( CS - Min( Min( RRSe ,MUM ) ,MUC ) ) + RCSe ) ),( RMSe / RCSe ) ),CS ) )", "obj1": 0.3175542406311637, "obj2": 0.48789298621893157}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( ( MRS * FirstVNF_Mem ) - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( ( Min( CS ,Max( RCSe,CS ) ) / MUM ) + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 0.9960552268244576, "obj2": 0.001559594050666787}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.27613412228796846, "obj2": 0.5905911458679786}, {"determining": "Min( ( ACS + RRS ) ,( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,( Min( Const ,FirstVNF_CPU ) / ARS ) ) ) + Const ) - ARS ) )", "choosing": "( MUR - ( RMSe * RRSe ) )", "obj1": 0.27416173570019725, "obj2": 0.5917468261749933}, {"determining": "( ( DDR + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4181459566074951, "obj2": 0.4303436918344225}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / ( ACS - Max( MDR,( RRS + ( RRS - ( MRS / MDR ) ) ) ) ) )", "choosing": "( ( Max( ( RRSe / RMSe ),RRSe ) - RMSe ) - ( MUM / ( ( Min( ( MUR / DS ) ,Min( RRSe ,( MUR * RRSe ) ) ) - ( ( Max( ( RRSe - MUC ),CS ) + MUC ) - Min( ( CS * ( MUR * RMSe ) ) ,DS ) ) ) - ( MLU + ( MLU * RCSe ) ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6261243710272623}, {"determining": "( ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ARS / FirstVNF_CPU ) ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( Max( Max( Min( CS ,DS ),( CS * RCSe ) ),Min( ( MUR / DS ) ,( CS + MLU ) ) ) - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - ( CRS * ACS ) )", "choosing": "( ( MUR + MUC ) / ( ( DS + ( Max( ( ( RRSe / ( RMSe / MUR ) ) - DS ),( MUR + RMSe ) ) / ( Max( RRSe,RRSe ) + ( ( MUR - ( RCSe / RRSe ) ) + Max( MLU,( MLU + MUC ) ) ) ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,( BR / Max( BR,DDR ) ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Max( Min( ( MUC - Max( CS,RRSe ) ) ,( ( MUM / CS ) / ( MUC / MUC ) ) ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( Const / ACS ) )", "choosing": "Min( ( MUR - RMSe ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( Min( FirstVNF_RAM_Server ,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU * MLU ),Min( Max( RRSe,RCSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - Max( ( FirstVNF_CPU_Server + ARS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( Min( ( RRSe + RCSe ) ,Max( MUR,MUR ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( ( ( RRSe - Max( MUM,Max( ( Min( MUR ,MUM ) + MUR ),Min( ( Max( CS,RMSe ) / MUR ) ,DS ) ) ) ) / Min( ( MLU + CS ) ,CS ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_Mem ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,Max( MUC,( MUC - RMSe ) ) ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( Const ,FirstVNF_RAM ) ,( ( RRS + FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( DS ,DS ),( ( Min( ( RMSe + Max( MUM,MLU ) ) ,Min( MUR ,( Min( MUR ,MLU ) * ( Max( RRSe,MUM ) - ( MUM * RCSe ) ) ) ) ) + ( ( ( MUC / Min( ( RMSe + CS ) ,( RRSe / RMSe ) ) ) - Min( RCSe ,Max( ( MUC / DS ),RRSe ) ) ) / ( DS / ( ( MUC + RRSe ) - ( ( DS * RCSe ) - Min( MLU ,MUM ) ) ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,ARS ) + RRS ) ,( MRS - ARS ) )", "choosing": "( Min( Max( MUC,Max( RCSe,Max( MUC,MLU ) ) ) ,( ( ( CS / ( RCSe - ( DS * RMSe ) ) ) - ( RRSe + Min( CS ,( Max( RCSe,DS ) / RCSe ) ) ) ) - MLU ) ) - ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN + Const ) ,( Const - ( BR - FirstVNF_CPU ) ) ) - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( ( MUC * ( Min( Max( ( Min( CS ,CS ) + RMSe ),RMSe ) ,MUC ) / Min( RRSe ,RRSe ) ) ),MLU ) ,Max( ( RCSe + MLU ),( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( RCSe + MLU ),Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( ( Max( Const,Const ) / ( DDR + FirstVNF_CPU ) ) / PN ) )", "choosing": "( ( MUM * MUM ) / ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) / ( DDR + ( FirstVNF_CPU_Server + ( ( MRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RMSe,MUC ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,FirstVNF_Mem ),PN ) * ( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / ( Max( RMSe,MUC ) - ( RMSe / Max( MLU,Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MDR / MRS ),FirstVNF_RAM ),FirstVNF_RAM ) / ( ARS / ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( CS - ( MUM * MUR ) ) ,( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( Min( Const ,MRS ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * Min( ( RMSe - MUC ) ,Max( RRSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( ( FirstVNF_RAM / ( FirstVNF_RAM / BR ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + CS ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( ( ( Max( FirstVNF_CPU_Server,Const ) - FirstVNF_CPU_Server ) + Max( ( FirstVNF_Mem / AMS ),Const ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + CS ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS + RRS ) ,( PN + Const ) )", "choosing": "( Max( ( ( RMSe * ( Max( Min( ( RCSe - MUR ) ,MUR ),RMSe ) * RRSe ) ) / DS ),( MUM / Min( Max( RMSe,MLU ) ,( DS / MLU ) ) ) ) - ( RMSe * RRSe ) )", "obj1": 0.08875739644970414, "obj2": 0.7642499758490822}, {"determining": "( ( MRS * AMS ) - ( FirstVNF_RAM * CRS ) )", "choosing": "( ( Max( MUC,MUC ) + MUC ) / ( Min( ( RMSe * DS ) ,( MUC / RCSe ) ) + MLU ) )", "obj1": 0.7416173570019724, "obj2": 0.1612823663125994}, {"determining": "Min( ( FirstVNF_RAM - DDR ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Max( DS,RCSe ) - MLU ) ) ),( RCSe - CS ) )", "obj1": 0.8126232741617357, "obj2": 0.0643012795420872}, {"determining": "Min( ( FirstVNF_RAM - ( ( Max( ARS,FirstVNF_CPU_Server ) / ( RRS / RRS ) ) - CRS ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( Min( Max( MUC,RMSe ) ,CS ) / RCSe ) * Min( CS ,( ( MUM * MLU ) / MUC ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "Min( ( ACS + RRS ) ,( ( ( ( ( MRS - FirstVNF_CPU ) + Const ) - FirstVNF_CPU ) + Const ) - ARS ) )", "choosing": "( Max( MUR,RCSe ) - ( ( RMSe + Min( Min( ( MUR + RCSe ) ,Max( MUR,RCSe ) ) ,CS ) ) * RRSe ) )", "obj1": 0.9250493096646942, "obj2": 0.04486956732158081}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS + FirstVNF_CPU ) ) + ( RRS + ( RRS + ACS ) ) )", "choosing": "( ( MUR - CS ) + ( MUR / ( MUR * ( RRSe + Min( ( ( DS * ( RCSe * RMSe ) ) * Min( RRSe ,MLU ) ) ,MLU ) ) ) ) )", "obj1": 0.2504930966469428, "obj2": 0.5686463892049871}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MRS ,Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ),FirstVNF_Mem ) ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,( RMSe - ( MLU * ( DS - Min( CS ,MUM ) ) ) ) ) * Min( MUR ,CS ) ) )", "obj1": 0.5956607495069034, "obj2": 0.27325700828318206}, {"determining": "( Max( FirstVNF_RAM_Server,( BR / Max( BR,DDR ) ) ) * ( ( CRS * FirstVNF_Mem ) + ( AMS / MDR ) ) )", "choosing": "( Max( MUC,MLU ) + ( ( DS / Max( Min( ( MUC - Max( CS,RRSe ) ) ,( ( MUM / CS ) / ( MUC / MUC ) ) ),RCSe ) ) + DS ) )", "obj1": 0.6548323471400395, "obj2": 0.2472853754734785}, {"determining": "( ( ( ( MDR * FirstVNF_RAM_Server ) - PN ) + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( ( MUM - RCSe ),MUM ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.47534516765285995, "obj2": 0.37079100194832565}, {"determining": "( ( ( RRS * PN ) + ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Max( Min( RRS ,Max( ( RRS * FirstVNF_CPU_Server ),( Min( FirstVNF_Mem ,MDR ) / RRS ) ) ),AMS ) / AMS ) ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe - ( Min( ( ( DS - ( ( MUR - MUR ) - ( RRSe - MUC ) ) ) + ( MUC / RMSe ) ) ,DS ) * RCSe ) ) )", "obj1": 0.5285996055226825, "obj2": 0.3405131941570169}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( ARS - Max( ( ( RRS / ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / ( CRS * FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ),Min( FirstVNF_Mem ,ACS ) ) ) )", "choosing": "( ( ( CS + RCSe ) + ( MUR + ( RRSe / ( MUM / ( ( MUR + CS ) + Min( MUR ,RRSe ) ) ) ) ) ) * Max( Min( MUR ,MUC ),( RMSe + MUC ) ) )", "obj1": 0.7297830374753451, "obj2": 0.20455983321955976}, {"determining": "( ( ( RRS * PN ) + ( ( RRS * PN ) + ( FirstVNF_Mem_Server - AMS ) ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Max( Min( MRS ,Max( ( RRS * FirstVNF_CPU_Server ),FirstVNF_Mem ) ),AMS ) / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( ( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,Max( ( Min( RMSe ,RMSe ) * Min( MUR ,DS ) ),( ( RCSe + RRSe ) + ( RRSe * RMSe ) ) ) ) ) ) - ( MLU * RCSe ) ) )", "obj1": 0.5108481262327417, "obj2": 0.35737879852797294}, {"determining": "( ( ( MRS / Const ) - FirstVNF_CPU_Server ) + Max( ( FirstVNF_Mem / AMS ),Const ) )", "choosing": "( ( DS * MUR ) - Max( Max( ( RRSe / ( MUM / ( ( MUR + ( MUC + RCSe ) ) + ( ( MUM + MLU ) / RCSe ) ) ) ),MUM ),Max( Max( DS,( ( CS / RCSe ) * Max( RCSe,CS ) ) ),MUC ) ) )", "obj1": 0.9546351084812623, "obj2": 0.035614447561191906}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + ( ( FirstVNF_RAM - DDR ) - ( BR - FirstVNF_Mem ) ) ) ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( MLU / MUM ) ,CS ) + DS ) ),CS ) )", "obj1": 0.1913214990138067, "obj2": 0.6172087260629087}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( DS * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5404339250493096, "obj2": 0.30449436089025234}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MRS ,Max( ( RRS * FirstVNF_CPU_Server ),RRS ) ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,( RMSe + Min( CS ,RRSe ) ) ) * Min( MUR ,CS ) ) )", "obj1": 0.5522682445759369, "obj2": 0.29151805764658273}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * ( ( CRS * FirstVNF_Mem ) + ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / MDR ) ) )", "choosing": "( Max( ( ( MUC * RMSe ) / ( MUR / DS ) ),MLU ) + ( DS + DS ) )", "obj1": 0.6844181459566075, "obj2": 0.2193880053021348}, {"determining": "Min( ( FirstVNF_RAM - ( ( Max( ARS,FirstVNF_CPU_Server ) / ( RRS / RRS ) ) - CRS ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( Min( Max( MUC,RMSe ) ,CS ) / RCSe ) * Min( CS ,( ( MUM * MLU ) / MUC ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.9743589743589743, "obj2": 0.011468267961333252}, {"determining": "( ( FirstVNF_Mem_Server + ( ( ARS * ACS ) + ( CRS * ACS ) ) ) - Min( ( AMS - MRS ) ,MDR ) )", "choosing": "( ( RRSe / CS ) / ( ( Max( DS,Max( ( MUC * RRSe ),( ( Max( DS,MUR ) + ( RMSe * DS ) ) + Min( Min( DS ,DS ) ,MUC ) ) ) ) + ( RMSe * DS ) ) + MLU ) )", "obj1": 0.21301775147928995, "obj2": 0.6140193894955981}, {"determining": "( ( ( FirstVNF_RAM / BR ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( ( MUR / MLU ) + MUC ) / ( MUC + MLU ) )", "obj1": 0.1893491124260355, "obj2": 0.6644395290663874}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( Min( ( DDR - CRS ) ,MRS ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( Min( ( RMSe - MLU ) ,( MUR * MUR ) ) / ( RMSe * ( RMSe - MUR ) ) ) ,DS ) + DS ) ),CS ) )", "obj1": 0.3609467455621302, "obj2": 0.45194376690820465}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( CRS ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( RMSe - MLU ) ,( MUR * MUR ) ) + DS ) ),CS ) )", "obj1": 0.33727810650887574, "obj2": 0.4763917771362168}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,Min( ( RMSe - MLU ) ,( MUR * MUR ) ) ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4536489151873767, "obj2": 0.38986307917612273}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),( FirstVNF_RAM_Server * BR ) ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( MLU / ( RMSe * ( RMSe - MUR ) ) ) ,DS ) + DS ) ),CS ) )", "obj1": 0.3116370808678501, "obj2": 0.49697681590484216}, {"determining": "Min( ( Max( CRS,AMS ) * Max( PN,RRS ) ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( MUR / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.5936883629191322, "obj2": 0.2830459366459353}, {"determining": "Min( ( BR / ( ( CRS + DDR ) * AMS ) ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( Min( ( RMSe - MLU ) ,( RMSe - MUC ) ) - MUC ) - Max( Max( ( Min( CS ,RCSe ) + ( ( CS - Min( Min( RRSe ,MUM ) ,MUC ) ) + RCSe ) ),( RMSe / RCSe ) ),CS ) )", "obj1": 0.2978303747534517, "obj2": 0.5293219314117785}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * ( ( CRS * FirstVNF_Mem ) + ( AMS / MDR ) ) )", "choosing": "( Max( MUC,MLU ) + ( DS + DS ) )", "obj1": 0.6587771203155819, "obj2": 0.24126636913248903}, {"determining": "( Max( FirstVNF_CPU,Max( DDR,AMS ) ) / ( FirstVNF_CPU_Server / Max( FirstVNF_CPU,Max( DDR,AMS ) ) ) )", "choosing": "( ( MUR - MUR ) - ( Max( ( MLU - MUR ),( Max( MLU,MUM ) * Min( MUR ,CS ) ) ) - RRSe ) )", "obj1": 0.2879684418145957, "obj2": 0.5630139880877172}, {"determining": "( ( DDR + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( DDR + PN ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( ( ( DS * MUR ) - Min( DS ,MUC ) ) / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.43984220907297833, "obj2": 0.39956424582765065}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,( Min( Const ,FirstVNF_CPU ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,( Min( Const ,FirstVNF_CPU ) / ARS ) ) ) ) ) )", "choosing": "( ( ( MUR / ( DS * MUM ) ) - RMSe ) - ( DS * MUM ) )", "obj1": 0.11242603550295859, "obj2": 0.7402740520835883}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,( Max( RRS,Const ) / ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( MUR + RCSe ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.29191321499013806, "obj2": 0.5348289706239818}, {"determining": "( ( FirstVNF_RAM * MRS ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( DS * ( RCSe * RMSe ) ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4319526627218935, "obj2": 0.41865637252161475}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR + CS ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.17159763313609466, "obj2": 0.6881336522126672}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( FirstVNF_Mem_Server - CRS ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( Max( MUC,CS ),( RRSe / CS ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.378698224852071, "obj2": 0.4496790372982462}, {"determining": "( ( FirstVNF_Mem_Server + ( ( ARS * ACS ) + ( CRS * ACS ) ) ) - Min( ( AMS - MRS ) ,MDR ) )", "choosing": "( ( RRSe / CS ) / ( ( Max( DS,Max( ( MUC * RRSe ),( ( Max( DS,MUR ) + ( RMSe * DS ) ) + Min( Min( DS ,DS ) ,MUC ) ) ) ) + ( RMSe * DS ) ) + MLU ) )", "obj1": 0.21301775147928995, "obj2": 0.6140193894955981}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Max( Max( Max( MUC,CS ),Max( ( ( MUR + DS ) / Max( RCSe,MUM ) ),Max( ( CS - DS ),( RRSe - MUC ) ) ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.41025641025641024, "obj2": 0.4419016642790615}, {"determining": "( ( MRS * DDR ) - Min( ( AMS - MRS ) ,( ( MRS * DDR ) - Min( ( AMS - MRS ) ,MDR ) ) ) )", "choosing": "( ( MUR + MUC ) / ( ( Max( DS,Max( ( MUC * RRSe ),( MUR + RCSe ) ) ) + ( RMSe * DS ) ) + MLU ) )", "obj1": 0.1854043392504931, "obj2": 0.6750416565751076}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) )", "choosing": "Min( DS ,Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 0.7021696252465484, "obj2": 0.2117312111420319}, {"determining": "( ( Min( BR ,( PN + BR ) ) + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - ( ( ( RCSe - ( Min( DS ,CS ) - Min( RMSe ,( RMSe + MUM ) ) ) ) - ( DS * MUM ) ) - Min( RMSe ,( RMSe + MUM ) ) ) ) - ( DS * MUM ) )", "obj1": 0.7041420118343196, "obj2": 0.2052702499374447}, {"determining": "( Max( ( ARS / ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) ) ) ),FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( DS * Min( ( ( Min( CS ,( ( RMSe - MUM ) * MUC ) ) * ( ( ( DS + DS ) / RRSe ) + Max( MUM,( CS * MUR ) ) ) ) / MLU ) ,Min( RMSe ,( ( Max( RMSe,MLU ) - ( MUM / MUR ) ) * CS ) ) ) ) - ( DS * MUM ) )", "obj1": 0.14201183431952663, "obj2": 0.7222969891214253}, {"determining": "( ( ( ( MDR - BR ) * ( FirstVNF_Mem - PN ) ) / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR * Const ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) )", "choosing": "( ( ( ( CS / MUM ) - ( MUR + RMSe ) ) + ( ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) + ( MLU * MUR ) ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.9940828402366864, "obj2": 0.002976922649402086}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( ( ( CRS + DDR ) - ( MRS + BR ) ) ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( ( RMSe - MUC ) + DS ) ),CS ) )", "obj1": 0.3234714003944773, "obj2": 0.48143352915996646}, {"determining": "( Max( ( ARS / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( MDR * FirstVNF_RAM_Server ) ) / Min( ( ( Max( Const,PN ) * ( BR / CRS ) ) / BR ) ,DDR ) )", "choosing": "( Max( RCSe,DS ) - ( ( MLU / ( ( DS + ( MUM + RRSe ) ) + DS ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.15976331360946747, "obj2": 0.7121724916657483}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS + FirstVNF_CPU ) ) + ACS )", "choosing": "( ( MUR - CS ) + ( MUR / ( MUR * Min( MUR ,DS ) ) ) )", "obj1": 0.15581854043392504, "obj2": 0.712970991963836}, {"determining": "( ( ACS - MRS ) - Max( BR,Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,( DS / MLU ) ) )", "obj1": 0.1301775147928994, "obj2": 0.7388120212099675}, {"determining": "Max( ( DDR * RRS ),( ( FirstVNF_RAM / BR ) - Max( ( ARS - DDR ),( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RCSe * ( MUR / MUM ) ) + Min( RCSe ,MUM ) ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.17357001972386588, "obj2": 0.6831729428051743}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU_Server + Min( ( DDR - CRS ) ,MRS ) ) * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( MUR,( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4260355029585799, "obj2": 0.42891695213006115}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( ( CRS + DDR ) - ( MRS + BR ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( RMSe * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ACS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( CS / MUM ) ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / ( Min( DDR ,CRS ) + FirstVNF_CPU ) ) * ( ( ( AMS + ( AMS * PN ) ) * AMS ) / ( ( CRS - FirstVNF_Mem ) / ( ( MRS - ACS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe / Min( RRSe ,Min( Max( MUC,RRSe ) ,Max( MUC,( ( MLU * CS ) * ( ( RMSe * RMSe ) - ( MUR / MUC ) ) ) ) ) ) ) / ( ( RRSe * ( MUM * RRSe ) ) + ( MUM + ( RRSe * ( MUC / ( Min( MUR ,CS ) / CS ) ) ) ) ) )", "obj1": 0.2702169625246548, "obj2": 0.5670299380179604}, {"determining": "( ( Min( ( ( FirstVNF_RAM * ( MRS + FirstVNF_RAM_Server ) ) / Const ) ,( Min( ( ( FirstVNF_RAM * ( MRS + FirstVNF_RAM_Server ) ) / Const ) ,( PN + FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - Max( ( ( DS * MUM ) / CS ),MUC ) ) - ( DS * MUM ) )", "obj1": 0.1341222879684418, "obj2": 0.7336269452570389}, {"determining": "Max( ( FirstVNF_RAM_Server * BR ),( ( DDR + FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "Min( ( RMSe - MUC ) ,( ( DS * ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) ) - Min( DS ,MUC ) ) )", "obj1": 0.14003944773175542, "obj2": 0.7278774218990791}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / ( Min( DDR ,CRS ) + FirstVNF_CPU ) ) * ( ( ( AMS + ( AMS * PN ) ) * AMS ) / ( ( CRS - FirstVNF_Mem ) / ( ( MRS - ACS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe / Min( RRSe ,Min( Max( MUC,RRSe ) ,Max( MUC,( ( MLU * CS ) * ( ( RMSe * RMSe ) - ( MUR / MUC ) ) ) ) ) ) ) / ( ( RRSe * ( MUM * RRSe ) ) + ( MUM + ( RRSe * ( MUC / ( Min( MUR ,CS ) / CS ) ) ) ) ) )", "obj1": 0.2702169625246548, "obj2": 0.5670299380179604}, {"determining": "( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Min( ( DDR - CRS ) ,MRS ) ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MLU ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4181459566074951, "obj2": 0.4303436918344225}, {"determining": "Min( ( BR / ( RRS * AMS ) ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( ( Min( CS ,RCSe ) + ( ( CS - Min( Min( RRSe ,MUM ) ,MUC ) ) + RCSe ) ),( RMSe / RCSe ) ),CS ) )", "obj1": 0.3175542406311637, "obj2": 0.48789298621893157}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( ( CRS + DDR ) - ( MRS + BR ) ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( MLU / ( MUC * ( RMSe - MUR ) ) ) ,DS ) + DS ) ),CS ) )", "obj1": 0.3175542406311637, "obj2": 0.48789298621893157}, {"determining": "( ( ( ARS - ACS ) / ( FirstVNF_RAM_Server / ( ( ACS * Max( Min( AMS ,( MRS * MRS ) ),Const ) ) - AMS ) ) ) / Min( CRS ,DDR ) )", "choosing": "( ( DS * ( ( Min( MUC ,CS ) * ( Max( RCSe,( ( MUM * MUM ) / Max( MLU,MLU ) ) ) - MUR ) ) * ( ( MLU - MUM ) + MUR ) ) ) - ( DS * MUM ) )", "obj1": 0.15976331360946747, "obj2": 0.7121724916657483}, {"determining": "( ( DDR + ( ( ( MDR * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUR ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4181459566074951, "obj2": 0.4303436918344225}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( ( MRS * FirstVNF_Mem ) - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( ( Min( CS ,Max( RCSe,CS ) ) / MUM ) + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 0.9960552268244576, "obj2": 0.001559594050666787}, {"determining": "( ( ( ( MDR - ( ARS / MDR ) ) * ( FirstVNF_Mem - PN ) ) / ( ( FirstVNF_RAM_Server - BR ) / ( DDR * Const ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) )", "choosing": "( ( ( ( CS / MUM ) - ( MUR + RMSe ) ) + ( ( MUR * RCSe ) + ( MLU * MUR ) ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( ( Max( RMSe,MUC ) - ( RMSe / Max( MLU,Max( RMSe,RCSe ) ) ) ) + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0007226941213866384}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( PN - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ARS / FirstVNF_CPU ) ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( Max( Max( Min( CS ,DS ),( CS * RCSe ) ),Min( ( MUR / DS ) ,( CS + MLU ) ) ) - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - ( CRS * ACS ) )", "choosing": "( ( MUR + MUC ) / ( ( DS + ( Max( ( ( RRSe / ( RMSe / MUR ) ) - DS ),( MUR + RMSe ) ) / ( Max( RRSe,RRSe ) + ( ( MUR - ( RCSe / RRSe ) ) + Max( MLU,( MLU + MUC ) ) ) ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,( BR / Max( BR,DDR ) ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Max( Min( ( MUC - Max( CS,RRSe ) ) ,( ( MUM / CS ) / ( MUC / MUC ) ) ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( Const / ACS ) )", "choosing": "Min( ( MUR - RMSe ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( Min( FirstVNF_RAM_Server ,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU * MLU ),Min( Max( RRSe,RCSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - Max( ( FirstVNF_CPU_Server + ARS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( Min( ( RRSe + RCSe ) ,Max( MUR,MUR ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( ( ( RRSe - Max( MUM,Max( ( Min( MUR ,MUM ) + MUR ),Min( ( Max( CS,RMSe ) / MUR ) ,DS ) ) ) ) / Min( ( MLU + CS ) ,CS ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_Mem ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,Max( MUC,( MUC - RMSe ) ) ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( Const ,FirstVNF_RAM ) ,( ( RRS + FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( DS ,DS ),( ( Min( ( RMSe + Max( MUM,MLU ) ) ,Min( MUR ,( Min( MUR ,MLU ) * ( Max( RRSe,MUM ) - ( MUM * RCSe ) ) ) ) ) + ( ( ( MUC / Min( ( RMSe + CS ) ,( RRSe / RMSe ) ) ) - Min( RCSe ,Max( ( MUC / DS ),RRSe ) ) ) / ( DS / ( ( MUC + RRSe ) - ( ( DS * RCSe ) - Min( MLU ,MUM ) ) ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,ARS ) + RRS ) ,( MRS - ARS ) )", "choosing": "( Min( Max( MUC,Max( RCSe,Max( MUC,MLU ) ) ) ,( ( ( CS / ( RCSe - ( DS * RMSe ) ) ) - ( RRSe + Min( CS ,( Max( RCSe,DS ) / RCSe ) ) ) ) - MLU ) ) - ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN + Const ) ,( Const - ( BR - FirstVNF_CPU ) ) ) - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( ( MUC * ( Min( Max( ( Min( CS ,CS ) + RMSe ),RMSe ) ,MUC ) / Min( RRSe ,RRSe ) ) ),MLU ) ,Max( ( RCSe + MLU ),( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( RCSe + MLU ),Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( ( Max( Const,Const ) / ( DDR + FirstVNF_CPU ) ) / PN ) )", "choosing": "( ( MUM * MUM ) / ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) / ( DDR + ( FirstVNF_CPU_Server + ( ( MRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RMSe,MUC ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,FirstVNF_Mem ),PN ) * ( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / ( Max( RMSe,MUC ) - ( RMSe / Max( MLU,Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MDR / MRS ),FirstVNF_RAM ),FirstVNF_RAM ) / ( ARS / ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( CS - ( MUM * MUR ) ) ,( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( Min( Const ,MRS ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * Min( ( RMSe - MUC ) ,Max( RRSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ARS + AMS ) ) + ( ( ARS - MDR ) - MDR ) )", "choosing": "( Max( DS,MLU ) + ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - Min( Min( ( AMS - MRS ) ,MDR ) ,MDR ) )", "choosing": "( ( MUR + DS ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( ( ACS + RRS ) ,( PN + Const ) )", "choosing": "( Max( ( ( RMSe * ( Max( Min( ( RCSe - MUR ) ,MUR ),RMSe ) * RRSe ) ) / DS ),( MUM / Min( Max( RMSe,MLU ) ,( DS / MLU ) ) ) ) - ( RMSe * RRSe ) )", "obj1": 0.08875739644970414, "obj2": 0.7642499758490822}, {"determining": "( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU,MRS ) ) / PN ) / ( FirstVNF_CPU_Server - ( AMS + FirstVNF_CPU ) ) )", "choosing": "Min( ( CS - RCSe ) ,( ( RMSe * RMSe ) - Max( ( Max( RMSe,MUC ) - ( RMSe / Max( MLU,Max( RMSe,RCSe ) ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( ( FirstVNF_RAM / ( FirstVNF_RAM / BR ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + CS ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS + RRS ) ,( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Min( ( RCSe - MUR ) ,RRSe ),RMSe ) * RRSe ) ) / DS ),( MUM / Min( Max( RMSe,MLU ) ,( DS / MLU ) ) ) ) - ( RMSe * RRSe ) )", "obj1": 0.08875739644970414, "obj2": 0.7642499758490822}, {"determining": "( PN - Min( ( AMS - MRS ) ,MDR ) )", "choosing": "( ( MUC * RMSe ) / ( ( Max( DS,Max( ( MUC * RRSe ),( ( Max( DS,MUR ) + DS ) + RCSe ) ) ) + ( RMSe * DS ) ) + MLU ) )", "obj1": 0.7120315581854043, "obj2": 0.11664116539353633}, {"determining": "Min( ( FirstVNF_RAM - DDR ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Max( DS,RCSe ) - MLU ) ) ),( RCSe - CS ) )", "obj1": 0.8126232741617357, "obj2": 0.0643012795420872}, {"determining": "Min( ( ACS + RRS ) ,( ( ( ( ( MRS - FirstVNF_CPU ) + Const ) - FirstVNF_CPU ) + Const ) - ARS ) )", "choosing": "( Max( MUR,RCSe ) - ( ( RMSe + Min( Min( ( MUR + RCSe ) ,Max( MUR,RCSe ) ) ,CS ) ) * RRSe ) )", "obj1": 0.9250493096646942, "obj2": 0.04486956732158081}, {"determining": "Min( ( FirstVNF_RAM - ( ( Max( ARS,FirstVNF_CPU_Server ) / ( RRS / RRS ) ) - CRS ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( Min( Max( MUC,RMSe ) ,CS ) / RCSe ) * Min( CS ,( ( MUM * MLU ) / MUC ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( Min( BR ,( PN + BR ) ) + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - ( ( ( RCSe - ( Min( DS ,CS ) - Min( RMSe ,( RMSe + MUM ) ) ) ) - ( DS * MUM ) ) - Min( RMSe ,( RMSe + MUM ) ) ) ) - ( DS * MUM ) )", "obj1": 0.7041420118343196, "obj2": 0.2052702499374447}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS + FirstVNF_CPU ) ) + ( RRS + ( RRS + ( RRS + ( RRS + ACS ) ) ) ) )", "choosing": "( ( MUR - CS ) + ( MUR / ( MUR * ( RRSe + Min( ( ( DS * MUR ) * Min( RRSe ,MLU ) ) ,MLU ) ) ) ) )", "obj1": 0.2504930966469428, "obj2": 0.563568717078775}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MRS ,Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ),FirstVNF_Mem ) ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,( RMSe - ( MLU * ( DS - Min( CS ,MUM ) ) ) ) ) * Min( MUR ,CS ) ) )", "obj1": 0.5956607495069034, "obj2": 0.27325700828318206}, {"determining": "( Max( FirstVNF_RAM_Server,( BR / Max( BR,DDR ) ) ) * ( ( CRS * FirstVNF_Mem ) + ( AMS / MDR ) ) )", "choosing": "( Max( MUC,MLU ) + ( ( DS / Max( Min( ( MUC - Max( CS,RRSe ) ) ,( ( MUM / CS ) / ( MUC / MUC ) ) ),RCSe ) ) + DS ) )", "obj1": 0.6548323471400395, "obj2": 0.2472853754734785}, {"determining": "( ( FirstVNF_Mem_Server + ( ( ( MRS + AMS ) * ACS ) + ( CRS * ACS ) ) ) - Min( ( AMS - MRS ) ,MDR ) )", "choosing": "( ( RRSe / CS ) / ( ( Max( DS,Max( ( MUC * RRSe ),( ( ( CS + DS ) * MUM ) + Min( Min( DS ,DS ) ,MUC ) ) ) ) + ( RMSe * DS ) ) + MLU ) )", "obj1": 0.23471400394477318, "obj2": 0.6098668906984746}, {"determining": "( ( ( ( MDR * FirstVNF_RAM_Server ) - PN ) + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( ( MUM - RCSe ),MUM ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.47534516765285995, "obj2": 0.37079100194832565}, {"determining": "( ( ( RRS * PN ) + ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Max( Min( RRS ,Max( ( RRS * FirstVNF_CPU_Server ),( Min( FirstVNF_Mem ,MDR ) / RRS ) ) ),AMS ) / AMS ) ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe - ( Min( ( ( DS - ( ( MUR - MUR ) - ( RRSe - MUC ) ) ) + ( MUC / RMSe ) ) ,DS ) * RCSe ) ) )", "obj1": 0.5285996055226825, "obj2": 0.3405131941570169}, {"determining": "( ( ( RRS * PN ) + ( ( RRS * PN ) + ( FirstVNF_Mem_Server - AMS ) ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Max( Min( MRS ,Max( ( RRS * FirstVNF_CPU_Server ),FirstVNF_Mem ) ),AMS ) / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( ( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,Max( ( Min( RMSe ,RMSe ) * Min( MUR ,DS ) ),( ( RCSe + RRSe ) + ( RRSe * RMSe ) ) ) ) ) ) - ( MLU * RCSe ) ) )", "obj1": 0.5108481262327417, "obj2": 0.35737879852797294}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - Const ) * ( ( Max( Const,Const ) / ( DDR + FirstVNF_CPU ) ) / PN ) )", "choosing": "( DS / ( RMSe + RCSe ) )", "obj1": 0.9546351084812623, "obj2": 0.03505044621873643}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + ( ( FirstVNF_RAM - DDR ) - ( BR - FirstVNF_Mem ) ) ) ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( MLU / MUM ) ,CS ) + DS ) ),CS ) )", "obj1": 0.1913214990138067, "obj2": 0.6172087260629087}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( DS * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5404339250493096, "obj2": 0.30449436089025234}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MRS ,Max( ( RRS * FirstVNF_CPU_Server ),RRS ) ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,( RMSe + Min( CS ,RRSe ) ) ) * Min( MUR ,CS ) ) )", "obj1": 0.5522682445759369, "obj2": 0.29151805764658273}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * ( ( CRS * FirstVNF_Mem ) + ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / MDR ) ) )", "choosing": "( Max( ( ( MUC * RMSe ) / ( MUR / DS ) ),MLU ) + ( DS + DS ) )", "obj1": 0.6844181459566075, "obj2": 0.2193880053021348}, {"determining": "Min( ( FirstVNF_RAM - ( ( Max( ARS,FirstVNF_CPU_Server ) / ( RRS / RRS ) ) - CRS ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( Min( Max( MUC,RMSe ) ,CS ) / RCSe ) * Min( CS ,( ( MUM * MLU ) / MUC ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.9743589743589743, "obj2": 0.011468267961333252}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,( Min( Const ,FirstVNF_CPU ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,( Min( Const ,FirstVNF_CPU ) / ARS ) ) ) ) ) )", "choosing": "( ( ( MUR / ( DS * MUM ) ) - RMSe ) - ( DS * MUM ) )", "obj1": 0.11242603550295859, "obj2": 0.7402740520835883}, {"determining": "( Max( FirstVNF_CPU,Max( DDR,AMS ) ) / ( FirstVNF_CPU_Server / Max( FirstVNF_CPU,Max( DDR,AMS ) ) ) )", "choosing": "( ( MUR - MUR ) - ( Max( ( MLU - MUR ),( Max( MLU,MUM ) * Min( MUR ,CS ) ) ) - RRSe ) )", "obj1": 0.2879684418145957, "obj2": 0.5630139880877172}, {"determining": "( ( ( FirstVNF_RAM / BR ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( ( MUR / MLU ) + MUC ) / ( MUC + MLU ) )", "obj1": 0.1893491124260355, "obj2": 0.6644395290663874}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( Min( ( DDR - CRS ) ,MRS ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( Min( ( RMSe - MLU ) ,( MUR * MUR ) ) / ( RMSe * ( RMSe - MUR ) ) ) ,DS ) + DS ) ),CS ) )", "obj1": 0.3609467455621302, "obj2": 0.45194376690820465}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( CRS ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( RMSe - MLU ) ,( MUR * MUR ) ) + DS ) ),CS ) )", "obj1": 0.33727810650887574, "obj2": 0.4763917771362168}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,Min( ( RMSe - MLU ) ,( MUR * MUR ) ) ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4536489151873767, "obj2": 0.38986307917612273}, {"determining": "Min( ( ACS + BR ) ,( PN + Const ) )", "choosing": "( Max( ( ( RMSe * ( Max( Min( ( RCSe - MUR ) ,MUR ),RMSe ) * RRSe ) ) / DS ),( MUM / Min( Max( RMSe,MLU ) ,( DS / MLU ) ) ) ) - ( Min( ( RCSe - MUR ) ,MUR ) * RRSe ) )", "obj1": 0.1301775147928994, "obj2": 0.7192221732075504}, {"determining": "Min( ( Max( CRS,AMS ) * Max( PN,RRS ) ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( MUR / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.5936883629191322, "obj2": 0.2830459366459353}, {"determining": "( ( FirstVNF_Mem_Server + ( ( ARS * ACS ) + ( CRS * ACS ) ) ) - Min( ( AMS - ( ( ARS * ACS ) + ( CRS * ACS ) ) ) ,MDR ) )", "choosing": "( ( RRSe / CS ) / ( MUC * RRSe ) )", "obj1": 0.2938856015779093, "obj2": 0.5191454369802295}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * ( ( CRS * FirstVNF_Mem ) + ( AMS / MDR ) ) )", "choosing": "( Max( MUC,MLU ) + ( DS + DS ) )", "obj1": 0.6587771203155819, "obj2": 0.24126636913248903}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),( FirstVNF_RAM_Server * BR ) ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( MLU / ( RMSe * ( RMSe - MUR ) ) ) ,DS ) + DS ) ),CS ) )", "obj1": 0.3116370808678501, "obj2": 0.49697681590484216}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,( Max( RRS,Const ) / ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( MUR + RCSe ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.29191321499013806, "obj2": 0.5348289706239818}, {"determining": "( ( DDR + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( DDR + PN ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( ( ( DS * MUR ) - Min( DS ,MUC ) ) / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.43984220907297833, "obj2": 0.39956424582765065}, {"determining": "( ( Min( ( ( FirstVNF_RAM * ( MRS + FirstVNF_RAM_Server ) ) / Const ) ,( PN + FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) / Min( CRS ,Max( ( ARS / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - Max( ( MLU / ( ( DS + ( MUM + RRSe ) ) + DS ) ),MUC ) ) - ( DS * MUM ) )", "obj1": 0.16173570019723865, "obj2": 0.704038158158158}, {"determining": "Min( ( ACS + RRS ) ,( FirstVNF_RAM - ( Max( RRS,( FirstVNF_RAM_Server * MRS ) ) * CRS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Min( ( MLU - RMSe ) ,MUR ),RMSe ) * RRSe ) ) / DS ),( MUM / Min( CS ,MUC ) ) ) - ( RMSe * RRSe ) )", "obj1": 0.14792899408284024, "obj2": 0.71186573394286}, {"determining": "( ( FirstVNF_RAM * MRS ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( DS * ( RCSe * RMSe ) ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4319526627218935, "obj2": 0.41865637252161475}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( FirstVNF_Mem_Server - CRS ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( Max( MUC,CS ),( RRSe / CS ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.378698224852071, "obj2": 0.4496790372982462}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Max( Max( Max( MUC,CS ),Max( ( ( MUR + DS ) / Max( RCSe,MUM ) ),Max( ( CS - DS ),( RRSe - MUC ) ) ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.41025641025641024, "obj2": 0.4419016642790615}, {"determining": "( ( MRS * DDR ) - Min( ( AMS - MRS ) ,( ( MRS * DDR ) - Min( ( AMS - MRS ) ,MDR ) ) ) )", "choosing": "( ( MUR + MUC ) / ( ( Max( DS,Max( ( MUC * RRSe ),( MUR + RCSe ) ) ) + ( RMSe * DS ) ) + MLU ) )", "obj1": 0.1854043392504931, "obj2": 0.6750416565751076}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( ( FirstVNF_RAM / BR ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR + CS ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.17159763313609466, "obj2": 0.6881336522126672}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) )", "choosing": "Min( DS ,Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 0.7021696252465484, "obj2": 0.2117312111420319}, {"determining": "( ( ( ( MDR - BR ) * ( FirstVNF_Mem - PN ) ) / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR * Const ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) )", "choosing": "( ( ( ( CS / MUM ) - ( MUR + RMSe ) ) + ( ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) + ( MLU * MUR ) ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.9940828402366864, "obj2": 0.002976922649402086}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( ( ( CRS + DDR ) - ( MRS + BR ) ) ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( ( RMSe - MUC ) + DS ) ),CS ) )", "obj1": 0.3234714003944773, "obj2": 0.48143352915996646}, {"determining": "Max( ( DDR * RRS ),( ( FirstVNF_RAM / BR ) - Max( ( ARS - DDR ),( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RCSe * ( MUR / MUM ) ) + Min( RCSe ,MUM ) ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.17357001972386588, "obj2": 0.6831729428051743}, {"determining": "( ( ( MDR * FirstVNF_RAM_Server ) - PN ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUM ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.42011834319526625, "obj2": 0.42400429269909745}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ACS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + ( CS / MUM ) ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( FirstVNF_Mem_Server + ( ( ARS * ACS ) + ( CRS * ACS ) ) ) - Min( ( AMS - MRS ) ,MDR ) )", "choosing": "( ( RRSe / CS ) / ( ( Max( DS,Max( ( MUC * RRSe ),( ( Max( DS,MUR ) + ( RMSe * DS ) ) + Min( Min( DS ,DS ) ,MUC ) ) ) ) + ( RMSe * DS ) ) + MLU ) )", "obj1": 0.21301775147928995, "obj2": 0.6140193894955981}, {"determining": "( ( FirstVNF_Mem_Server + ( ( ARS * ACS ) + ( CRS * ACS ) ) ) - Min( ( AMS - MRS ) ,MDR ) )", "choosing": "( ( RRSe / CS ) / ( ( Max( DS,Max( ( MUC * RRSe ),( ( Max( DS,MUR ) + ( RMSe * DS ) ) + Min( Min( DS ,DS ) ,MUC ) ) ) ) + ( RMSe * DS ) ) + MLU ) )", "obj1": 0.21301775147928995, "obj2": 0.6140193894955981}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( ( CRS + DDR ) - ( MRS + BR ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( RMSe * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( Min( ( ( CRS + DDR ) - ( MRS + BR ) ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,( Min( ( MLU / ( MUC * ( RMSe - MUR ) ) ) ,DS ) + DS ) ),CS ) )", "obj1": 0.3175542406311637, "obj2": 0.48789298621893157}, {"determining": "( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Min( ( DDR - CRS ) ,MRS ) ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MLU ) ) - Max( ( MUM - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4181459566074951, "obj2": 0.4303436918344225}, {"determining": "Min( ( BR / ( RRS * AMS ) ) ,Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,CRS ) ),MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( ( Min( CS ,RCSe ) + ( ( CS - Min( Min( RRSe ,MUM ) ,MUC ) ) + RCSe ) ),( RMSe / RCSe ) ),CS ) )", "obj1": 0.3175542406311637, "obj2": 0.48789298621893157}, {"determining": "( ( ( FirstVNF_RAM_Server * BR ) + ( ( MDR * FirstVNF_RAM_Server ) - PN ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( DS * MUR ) - ( Max( Min( MUC ,MUC ),( ( MUR - MUM ) * ( MUR * ( MLU / ( MUR / RRSe ) ) ) ) ) - ( ( MUM - ( ( ( ( DS - DS ) / Min( MUR ,MUM ) ) - Max( ( RCSe - RCSe ),MUM ) ) / CS ) ) - MUM ) ) )", "obj1": 0.4181459566074951, "obj2": 0.4303436918344225}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( ( MRS * FirstVNF_Mem ) - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( ( Min( CS ,Max( RCSe,CS ) ) / MUM ) + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 0.9960552268244576, "obj2": 0.001559594050666787}, {"determining": "( ( ( ( ACS * FirstVNF_Mem ) - ( ARS - ( BR + PN ) ) ) - ( AMS + FirstVNF_CPU ) ) + ( RRS + ( RRS + ACS ) ) )", "choosing": "( ( MUR - CS ) + ( MUR / ( MUR * ( RRSe + Min( ( ( DS * ( RCSe * RMSe ) ) * Min( RRSe ,MLU ) ) ,( ( MUR + Min( MUR ,MUC ) ) / ( MLU + CS ) ) ) ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0006835137838032181}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ),( ( ( Max( FirstVNF_CPU_Server,Const ) - FirstVNF_CPU_Server ) + Max( ( FirstVNF_Mem / AMS ),Const ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + CS ) / ( MLU + ( ( ( RCSe - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( PN - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ARS / FirstVNF_CPU ) ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( Max( Max( Min( CS ,DS ),( CS * RCSe ) ),Min( ( MUR / DS ) ,( CS + MLU ) ) ) - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - ( CRS * ACS ) )", "choosing": "( ( MUR + MUC ) / ( ( DS + ( Max( ( ( RRSe / ( RMSe / MUR ) ) - DS ),( MUR + RMSe ) ) / ( Max( RRSe,RRSe ) + ( ( MUR - ( RCSe / RRSe ) ) + Max( MLU,( MLU + MUC ) ) ) ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,( BR / Max( BR,DDR ) ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Max( Min( ( MUC - Max( CS,RRSe ) ) ,( ( MUM / CS ) / ( MUC / MUC ) ) ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( Const / ACS ) )", "choosing": "Min( ( MUR - RMSe ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( Min( FirstVNF_RAM_Server ,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU * MLU ),Min( Max( RRSe,RCSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - Max( ( FirstVNF_CPU_Server + ARS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( Min( ( RRSe + RCSe ) ,Max( MUR,MUR ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( ( ( RRSe - Max( MUM,Max( ( Min( MUR ,MUM ) + MUR ),Min( ( Max( CS,RMSe ) / MUR ) ,DS ) ) ) ) / Min( ( MLU + CS ) ,CS ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_Mem ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,Max( MUC,( MUC - RMSe ) ) ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( Const ,FirstVNF_RAM ) ,( ( RRS + FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( Min( DS ,DS ),( ( Min( ( RMSe + Max( MUM,MLU ) ) ,Min( MUR ,( Min( MUR ,MLU ) * ( Max( RRSe,MUM ) - ( MUM * RCSe ) ) ) ) ) + ( ( ( MUC / Min( ( RMSe + CS ) ,( RRSe / RMSe ) ) ) - Min( RCSe ,Max( ( MUC / DS ),RRSe ) ) ) / ( DS / ( ( MUC + RRSe ) - ( ( DS * RCSe ) - Min( MLU ,MUM ) ) ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,ARS ) + RRS ) ,( MRS - ARS ) )", "choosing": "( Min( Max( MUC,Max( RCSe,Max( MUC,MLU ) ) ) ,( ( ( CS / ( RCSe - ( DS * RMSe ) ) ) - ( RRSe + Min( CS ,( Max( RCSe,DS ) / RCSe ) ) ) ) - MLU ) ) - ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN + Const ) ,( Const - ( BR - FirstVNF_CPU ) ) ) - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( ( MUC * ( Min( Max( ( Min( CS ,CS ) + RMSe ),RMSe ) ,MUC ) / Min( RRSe ,RRSe ) ) ),MLU ) ,Max( ( RCSe + MLU ),( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( RCSe + MLU ),Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * MRS ) / ( DDR + FirstVNF_CPU ) ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( ( Max( Const,Const ) / ( DDR + FirstVNF_CPU ) ) / PN ) )", "choosing": "( ( MUM * MUM ) / ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Max( CRS,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) / ( DDR + ( FirstVNF_CPU_Server + ( ( MRS * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RMSe,MUC ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,FirstVNF_Mem ),PN ) * ( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU,MRS ) ) / PN ) )", "choosing": "( ( MUC * RMSe ) / ( MUR / ( Max( RMSe,MUC ) - ( RMSe / Max( MLU,Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MDR / MRS ),FirstVNF_RAM ),FirstVNF_RAM ) / ( ARS / ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( CS - ( MUM * MUR ) ) ,( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( Min( Const ,MRS ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * Min( ( RMSe - MUC ) ,Max( RRSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ARS + AMS ) ) + ( ( ARS - MDR ) - MDR ) )", "choosing": "( Max( DS,MLU ) + ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - Min( Min( ( AMS - MRS ) ,MDR ) ,MDR ) )", "choosing": "( ( MUR + DS ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ARS + AMS ) ) + ( ( ( ( ARS - MDR ) - MDR ) - MDR ) - MDR ) )", "choosing": "( Max( DS,MLU ) + Max( DS,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ARS + AMS ) ) + ( ( ARS - MDR ) - MDR ) )", "choosing": "( Max( DS,MLU ) + ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ARS + ARS ) ) + ( ( ARS - MDR ) - MDR ) )", "choosing": "( Max( DS,MLU ) + ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MRS ) + ( ARS - ( ARS + AMS ) ) )", "choosing": "( Max( DS,Max( ( MUC * RRSe ),( ( ( ( Max( DS,MUR ) + ( RMSe * DS ) ) + RCSe ) + ( Max( DS,MLU ) * DS ) ) + RCSe ) ) ) + ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}]}