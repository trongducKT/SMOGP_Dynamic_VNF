{"1": [{"determining": "( Min( BR ,FirstVNF_RAM_Server ) + Min( AMS ,MRS ) )", "choosing": "( ( DS - MUR ) + ( RRSe + RRSe ) )", "obj1": 0.5101626016260162, "obj2": 0.39529282923847153}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( PN * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * RRS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) / ( DS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - MDR ) / Min( PN ,FirstVNF_Mem ) )", "choosing": "( ( MUM + RMSe ) + ( MLU / MUR ) )", "obj1": 0.35365853658536583, "obj2": 0.557555434034801}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.5813008130081301, "obj2": 0.2866068734950799}, {"determining": "Max( Min( CRS ,FirstVNF_RAM ),( FirstVNF_CPU_Server - ARS ) )", "choosing": "( Max( MUR,DS ) * ( MUC + MLU ) )", "obj1": 0.4186991869918699, "obj2": 0.484295213912855}, {"determining": "Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.3313008130081301, "obj2": 0.554225079248126}, {"determining": "( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.43089430894308944, "obj2": 0.4456701916206391}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "Min( ( DS - RRSe ) ,( MUM + CS ) )", "obj1": 0.3617886178861789, "obj2": 0.5369407714922647}, {"determining": "( ( PN + ARS ) * Min( MDR ,RRS ) )", "choosing": "Max( ( DS + RRSe ),( MUM + MLU ) )", "obj1": 0.43902439024390244, "obj2": 0.47991331510063506}, {"determining": "Max( ( RRS - MDR ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + DS ) - ( DS * CS ) )", "obj1": 0.4695121951219512, "obj2": 0.4466936186304264}, {"determining": "( ( RRS * FirstVNF_CPU ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( Max( MUC,MUM ) * Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( RCSe * MUR ) + Max( MUR,CS ) )", "obj1": 0.39634146341463417, "obj2": 0.5117062318345171}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RCSe * DS ) )", "obj1": 0.5691056910569106, "obj2": 0.32283548586442906}, {"determining": "Min( Max( RRS,ARS ) ,Min( MRS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUR / MLU ) ,( RMSe - MUM ) )", "obj1": 0.3719512195121951, "obj2": 0.5326845113151849}, {"determining": "Min( ( FirstVNF_Mem_Server + RRS ) ,( FirstVNF_CPU / ARS ) )", "choosing": "( ( CS * DS ) + Max( CS,RMSe ) )", "obj1": 0.4715447154471545, "obj2": 0.46894092596823844}, {"determining": "( Min( FirstVNF_RAM_Server ,DDR ) / ( Const * MDR ) )", "choosing": "( Min( CS ,RRSe ) - Min( MUC ,MUR ) )", "obj1": 0.266260162601626, "obj2": 0.6795624205769661}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MLU ) + ( CS * RMSe ) )", "obj1": 0.7439024390243902, "obj2": 0.2234295218686627}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "Min( Max( ( AMS - BR ),Max( FirstVNF_RAM,DDR ) ) ,( ( ACS * DDR ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( RMSe,RRSe ) / Min( MUR ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( AMS - AMS ) - Min( BR ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_CPU ,RRS ) ,( CRS - CRS ) ) )", "choosing": "Min( Min( ( RCSe * CS ) ,( RMSe - MUC ) ) ,( ( RCSe + MUC ) / ( CS * RCSe ) ) )", "obj1": 0.3130081300813008, "obj2": 0.5774026063037413}, {"determining": "( ( ( Const - ARS ) * Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_RAM_Server ,DDR ) ) )", "choosing": "( Max( ( MUC / RRSe ),( MUR + MLU ) ) / ( Min( CS ,RCSe ) * ( DS - MUM ) ) )", "obj1": 0.5487804878048781, "obj2": 0.357855903442181}, {"determining": "( Max( ( PN + Const ),Min( RRS ,BR ) ) * Min( ( Const + PN ) ,( RRS + AMS ) ) )", "choosing": "( ( Max( RRSe,RRSe ) * ( RRSe - MUR ) ) * Min( ( RRSe - MUC ) ,( DS * RRSe ) ) )", "obj1": 0.3516260162601626, "obj2": 0.5563773942358043}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( MUM + DS ) / ( ( MUM * RMSe ) + RMSe ) )", "obj1": 0.5955284552845529, "obj2": 0.3165092207735105}, {"determining": "( ( ACS + ( ACS - CRS ) ) + ( ARS / FirstVNF_RAM ) )", "choosing": "Max( ( Max( MLU,MUC ) - ( MUC * RMSe ) ),Min( ( MUM * RRSe ) ,( RMSe - RRSe ) ) )", "obj1": 0.30284552845528456, "obj2": 0.6053435968140659}, {"determining": "( ( ( MRS * AMS ) - ACS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,CS ) - ( MUR - CS ) ) + ( ( MUM + MLU ) * ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( MUR ,CS ) / ( DS / MUR ) ) / Min( ( MUM * MUC ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + ( ( RRSe + MUR ) * ( RRSe / MUM ) ) )", "obj1": 0.32723577235772355, "obj2": 0.5374174424998421}, {"determining": "Min( ( RRS * RRS ) ,Max( ( MRS + FirstVNF_Mem_Server ),PN ) )", "choosing": "( ( Min( MUC ,DS ) - MUC ) / ( Min( RMSe ,DS ) / ( RCSe / MUR ) ) )", "obj1": 0.5264227642276422, "obj2": 0.3799193852969386}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_Mem ),( RRS * FirstVNF_CPU_Server ) )", "choosing": "Max( ( CS * ( MUR * RMSe ) ),Max( MUR,( DS * CS ) ) )", "obj1": 0.40447154471544716, "obj2": 0.4923713033864249}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.2621951219512195, "obj2": 0.6143039367522206}, {"determining": "( ( Min( PN ,Const ) / Min( BR ,MDR ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( Max( RMSe,MUC ) + ( Max( MUC,RMSe ) / ( CS + MLU ) ) )", "obj1": 0.24796747967479674, "obj2": 0.624493649153538}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) * Min( Max( Const,MDR ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe / RMSe ) / ( RRSe - MUC ) ) + Max( ( CS / CS ),Min( MUC ,MLU ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5878833532603158}, {"determining": "Min( ( Min( ACS ,MRS ) - ( DDR + FirstVNF_CPU ) ) ,( Min( CRS ,ARS ) * ( CRS * MDR ) ) )", "choosing": "( Max( DS,RRSe ) * ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * AMS ) ) * Max( AMS,ACS ) )", "choosing": "Min( Min( DS ,Max( RCSe,MLU ) ) ,( DS * RMSe ) )", "obj1": 0.5589430894308943, "obj2": 0.3321613087879878}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem ,DDR ) ,ARS ) ) + ( CRS * ACS ) )", "choosing": "( ( ( ( DS + DS ) * ( RCSe - CS ) ) - Max( MUR,MUR ) ) - ( Max( Min( CS ,MUM ),Max( MUR,MUR ) ) / CS ) )", "obj1": 0.24796747967479674, "obj2": 0.6905826229558041}, {"determining": "( ( ( ( CRS + CRS ) - ( AMS / FirstVNF_RAM_Server ) ) - ( ( PN + FirstVNF_CPU_Server ) + ( MDR / PN ) ) ) + ( ( ( ACS - ACS ) - ( FirstVNF_CPU_Server + MDR ) ) - ( ( ACS * FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Max( FirstVNF_Mem,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( Min( CS ,MUC ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.21138211382113822, "obj2": 0.6473212053744019}, {"determining": "( ( ( Min( ARS ,PN ) + ( Const / DDR ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS + FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) )", "obj1": 0.18495934959349594, "obj2": 0.7022313767508018}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( BR - DDR ) ) / Min( ( FirstVNF_CPU - CRS ) ,( FirstVNF_CPU_Server - Const ) ) ) * Max( ( ( FirstVNF_CPU * AMS ) - ( Const + ARS ) ),Max( ( FirstVNF_CPU / CRS ),( RRS * PN ) ) ) )", "choosing": "Max( Min( DS ,( MUR + ( CS / MUR ) ) ),( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ( FirstVNF_Mem_Server * Const ) ),( MRS - ARS ) )", "choosing": "( ( Max( ( MLU * CS ),( RMSe + RMSe ) ) / ( ( RMSe * CS ) - ( RMSe * RRSe ) ) ) / ( Min( ( RRSe * RMSe ) ,( RRSe - MUC ) ) / Min( ( RCSe / RMSe ) ,( MUR / CS ) ) ) )", "obj1": 0.3150406504065041, "obj2": 0.6030759539105203}, {"determining": "( ( ( ( MRS + BR ) * ( RRS - FirstVNF_Mem ) ) / ( ( RRS * FirstVNF_Mem_Server ) + ( PN + FirstVNF_CPU_Server ) ) ) - ( ( Max( RRS,ARS ) - Min( ACS ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM / MDR ) / Max( AMS,RRS ) ) ) )", "choosing": "( ( ( ( DS + RRSe ) - ( MUR * MUR ) ) * ( Min( RCSe ,MUC ) - Max( RCSe,RMSe ) ) ) - Min( Max( ( MLU * RCSe ),( MUR + MUR ) ) ,( Max( RRSe,RCSe ) + ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) * ( FirstVNF_CPU * ACS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS / CS ) ) - ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5495532951216376}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * Const ) ) - Min( ( ACS + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ),( ( ( BR / CRS ) / Max( PN,ACS ) ) + ( ( DDR - AMS ) * ( MRS - PN ) ) ) )", "choosing": "Min( ( MUC - ( MUR / MUR ) ) ,( MLU - ( MLU - ( RRSe + RMSe ) ) ) )", "obj1": 0.42073170731707316, "obj2": 0.49430824356062486}, {"determining": "( Max( ( BR - Const ),BR ) * ( FirstVNF_Mem_Server * Max( RRS,Max( FirstVNF_CPU_Server,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM + CS ) / ( MLU / MUR ) ) + ( ( MUR * DS ) * ( CS - CS ) ) ),( Max( ( RRSe - MUM ),( MUR + CS ) ) + ( Min( CS ,MUC ) + ( MUC / MUC ) ) ) )", "obj1": 0.3313008130081301, "obj2": 0.5765802398279491}, {"determining": "Max( ( ( Max( RRS,AMS ) * ( MDR - DDR ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,( BR - RRS ) ) ),( Max( ( Const / FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_CPU / RRS ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Max( MUR,( DS + MLU ) ) * Max( ( MUC * MLU ),CS ) ),( ( ( RCSe - MLU ) - CS ) / MLU ) )", "obj1": 0.5060975609756098, "obj2": 0.4175611962497498}, {"determining": "Min( ( ( ( RRS + FirstVNF_RAM ) * FirstVNF_Mem_Server ) - DDR ) ,( AMS * Const ) )", "choosing": "( Min( DS ,( CS * Min( RRSe ,RCSe ) ) ) * Max( RCSe,( MUR / MUM ) ) )", "obj1": 0.573170731707317, "obj2": 0.33498355845277633}, {"determining": "Min( ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,( CRS - FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) + Min( MDR ,ARS ) ) ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( MUC * ( MLU + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,Const ) - ( Const * FirstVNF_CPU ) ) / ( ( AMS + CRS ) / ( MDR + ACS ) ) ) ,( ( ( FirstVNF_RAM * RRS ) + Min( PN ,MRS ) ) * Min( ( PN / DDR ) ,( DDR * ARS ) ) ) )", "choosing": "Min( ( ( ( MUC - RCSe ) / RCSe ) * MLU ) ,Min( ( CS / RRSe ) ,( ( RRSe + MUC ) * RCSe ) ) )", "obj1": 0.3048780487804878, "obj2": 0.5718603676369189}, {"determining": "Min( Min( FirstVNF_CPU ,( ACS * MRS ) ) ,Max( Const,FirstVNF_CPU ) )", "choosing": "( Max( ( DS + CS ),( MUR / MUM ) ) / ( MLU + RCSe ) )", "obj1": 0.23983739837398374, "obj2": 0.6589573690522885}], "2": [{"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( PN * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( PN * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,Const ) - ( Const * FirstVNF_CPU ) ) / ( ( AMS + CRS ) / ( MDR + ACS ) ) ) ,( ( ( FirstVNF_RAM * RRS ) + Min( PN ,Const ) ) * Min( ( PN / DDR ) ,( DDR * ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC - RCSe ) / RCSe ) * MLU ) ,Min( ( ( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( MUC * ( MLU + CS ) ) ) ) / RRSe ) ,( ( RRSe + MUC ) * RCSe ) ) )", "obj1": 0.9146341463414634, "obj2": 0.08631583208274443}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MLU ) + ( CS * RMSe ) )", "obj1": 0.7439024390243902, "obj2": 0.2234295218686627}, {"determining": "Min( ( RRS * RRS ) ,Max( ( MRS + Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ),PN ) )", "choosing": "( ( ( ( RCSe / RCSe ) / ( CS + DS ) ) - MUC ) / ( Min( RMSe ,DS ) / ( RCSe / MUR ) ) )", "obj1": 0.18495934959349594, "obj2": 0.6275138064849176}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.12195121951219512, "obj2": 0.7232717014586304}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RCSe * DS ) )", "obj1": 0.6280487804878049, "obj2": 0.27706179788086455}, {"determining": "( MDR - Max( FirstVNF_CPU,BR ) )", "choosing": "( Max( MUC,MUM ) * MLU )", "obj1": 0.9532520325203252, "obj2": 0.04619725514059013}, {"determining": "( ( ARS + MRS ) + Max( ARS,CRS ) )", "choosing": "Max( ( RCSe - Max( RCSe,MUM ) ),( MLU - ( CS / ( MUC * ( MUR + CS ) ) ) ) )", "obj1": 0.45528455284552843, "obj2": 0.42936027182378805}, {"determining": "Min( Max( PN,PN ) ,( MRS + ACS ) )", "choosing": "Min( Max( MUM,MUC ) ,( RRSe - ( ( RCSe * MUR ) + ( MUR / CS ) ) ) )", "obj1": 0.30284552845528456, "obj2": 0.5652128468360998}, {"determining": "( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.43089430894308944, "obj2": 0.4398266230402981}, {"determining": "( ( ( Const - ARS ) * Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_Mem_Server ,BR ) + Min( FirstVNF_RAM_Server ,DDR ) ) )", "choosing": "( Max( ( MUC / RRSe ),( MUR + MLU ) ) / ( Min( CS ,RCSe ) * ( DS - MUM ) ) )", "obj1": 0.5487804878048781, "obj2": 0.357855903442181}, {"determining": "( ( Min( PN ,Const ) / Min( BR ,MDR ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( Max( RMSe,MUC ) + ( Max( MUC,RMSe ) / ( CS + MLU ) ) )", "obj1": 0.24796747967479674, "obj2": 0.624493649153538}, {"determining": "Min( ( Max( Min( CRS ,FirstVNF_RAM ),( FirstVNF_CPU_Server - ARS ) ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( RMSe * ( MUC + MLU ) ) + ( MUM / MUC ) )", "obj1": 0.4146341463414634, "obj2": 0.48421116277207193}, {"determining": "Max( ( ( AMS - AMS ) - Min( BR ,Min( Max( ( BR - BR ),Max( FirstVNF_RAM,DDR ) ) ,( ( ACS * DDR ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ),Min( ( FirstVNF_CPU * RRS ) ,( CRS - CRS ) ) )", "choosing": "Min( MUR ,( ( RCSe + MUC ) / ( MUM * RCSe ) ) )", "obj1": 0.37601626016260165, "obj2": 0.5113457340564126}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( ( RRSe + MUR ),DS ) )", "obj1": 0.3353658536585366, "obj2": 0.524932041265317}, {"determining": "Min( ( Min( ACS ,MRS ) - ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) ) ,( Min( CRS ,ARS ) * ( CRS * MDR ) ) )", "choosing": "( ( MUC / RMSe ) * ( RCSe * MUR ) )", "obj1": 0.975609756097561, "obj2": 0.026268911520719355}, {"determining": "( ( AMS * CRS ) * ( FirstVNF_CPU * ACS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS / CS ) ) - ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5495532951216376}, {"determining": "Min( ( RRS * RRS ) ,Max( ( MRS + FirstVNF_Mem_Server ),PN ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + ( ( RRSe + MUR ) * ( RRSe / MUM ) ) )", "obj1": 0.2682926829268293, "obj2": 0.5991694784692434}, {"determining": "Min( ( MDR / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / ( RMSe * DS ) ) + ( MUM / MUC ) )", "obj1": 0.5934959349593496, "obj2": 0.2853578813218907}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.5813008130081301, "obj2": 0.2866068734950799}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RCSe * DS ) )", "obj1": 0.5691056910569106, "obj2": 0.32283548586442906}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.2621951219512195, "obj2": 0.6143039367522206}, {"determining": "( BR * Min( ACS ,RRS ) )", "choosing": "Max( ( Max( MUC,MUM ) + MUR ),( MUM + MLU ) )", "obj1": 0.39227642276422764, "obj2": 0.5016737871746201}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RRSe * DS ) )", "obj1": 0.5508130081300813, "obj2": 0.3477774247342311}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + ( ( RRSe + MUR ) * ( RRSe / MUM ) ) )", "obj1": 0.32723577235772355, "obj2": 0.5374174424998421}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem ,DDR ) ,ARS ) ) + ( CRS * PN ) )", "choosing": "Min( Min( DS ,Max( RCSe,MLU ) ) ,( DS * RMSe ) )", "obj1": 0.5589430894308943, "obj2": 0.3321613087879878}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ARS )", "choosing": "( Max( MUC,MLU ) + ( RRSe * MUM ) )", "obj1": 0.4024390243902439, "obj2": 0.4950408402284231}, {"determining": "( Min( FirstVNF_CPU_Server ,BR ) * Min( Max( ( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) ),MDR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUC ) + Max( ( CS / CS ),Min( MUC ,RCSe ) ) )", "obj1": 0.40447154471544716, "obj2": 0.49009089535410905}, {"determining": "( ( DDR + FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( Max( MUC,MLU ) + ( RRSe * DS ) )", "obj1": 0.5691056910569106, "obj2": 0.32283548586442906}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( ( RRSe + MUR ),( RRSe / MUM ) ) )", "obj1": 0.32723577235772355, "obj2": 0.5374174424998421}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * AMS ) ) * Max( AMS,ACS ) )", "choosing": "Min( Min( DS ,Max( RCSe,MLU ) ) ,( DS * RMSe ) )", "obj1": 0.5589430894308943, "obj2": 0.3321613087879878}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * ( MDR / PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / ( DS / DS ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0010112920981660055}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - CS ) / ( RMSe * DS ) )", "obj1": 0.5813008130081301, "obj2": 0.2866068734950799}, {"determining": "( ( BR * RRS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) / ( DS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_CPU ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( Max( MUC,MUM ) * Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( AMS - BR ),Max( FirstVNF_RAM,DDR ) ) ,( ( ACS * DDR ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( RMSe,RRSe ) / Min( MUR ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * AMS ) - ACS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,CS ) - ( MUR - CS ) ) + ( ( MUM + MLU ) * ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( MUR ,CS ) / ( DS / MUR ) ) / Min( ( MUM * MUC ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,MRS ) - ( DDR + FirstVNF_CPU ) ) ,( Min( CRS ,ARS ) * ( CRS * MDR ) ) )", "choosing": "( Max( DS,RRSe ) * ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + CRS ) - ( AMS / FirstVNF_RAM_Server ) ) - ( ( PN + FirstVNF_CPU_Server ) + ( MDR / PN ) ) ) + ( ( ( ACS - ACS ) - ( FirstVNF_CPU_Server + MDR ) ) - ( ( ACS * FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( BR - DDR ) ) / Min( ( FirstVNF_CPU - CRS ) ,( FirstVNF_CPU_Server - Const ) ) ) * Max( ( ( FirstVNF_CPU * AMS ) - ( Const + ARS ) ),Max( ( FirstVNF_CPU / CRS ),( RRS * PN ) ) ) )", "choosing": "Max( Min( DS ,( MUR + ( CS / MUR ) ) ),( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS + BR ) * ( RRS - FirstVNF_Mem ) ) / ( ( RRS * FirstVNF_Mem_Server ) + ( PN + FirstVNF_CPU_Server ) ) ) - ( ( Max( RRS,ARS ) - Min( ACS ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM / MDR ) / Max( AMS,RRS ) ) ) )", "choosing": "( ( ( ( DS + RRSe ) - ( MUR * MUR ) ) * ( Min( RCSe ,MUC ) - Max( RCSe,RMSe ) ) ) - Min( Max( ( MLU * RCSe ),( MUR + MUR ) ) ,( Max( RRSe,RCSe ) + ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,( CRS - FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) + Min( MDR ,ARS ) ) ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( MUC * ( MLU + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - ( MRS - PN ) )", "choosing": "( ( RRSe / MUC ) + ( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ACS / ( MRS - ARS ) )", "choosing": "( ( RCSe * ( Max( ( MLU * CS ),( RMSe + RMSe ) ) / ( ( RMSe * CS ) - ( RMSe * RRSe ) ) ) ) + ( Max( MUC,MLU ) + ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( PN * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,Const ) - ( Const * FirstVNF_CPU ) ) / ( ( AMS + CRS ) / ( MDR + ACS ) ) ) ,( ( ( FirstVNF_RAM * RRS ) + Min( PN ,Const ) ) * Min( ( PN / DDR ) ,( DDR * ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC - RCSe ) / RCSe ) * MLU ) ,Min( ( ( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( MUC * ( MLU + CS ) ) ) ) / RRSe ) ,( ( RRSe + MUC ) * RCSe ) ) )", "obj1": 0.9146341463414634, "obj2": 0.08631583208274443}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MLU ) + ( CS * RMSe ) )", "obj1": 0.7439024390243902, "obj2": 0.2234295218686627}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RCSe * DS ) )", "obj1": 0.6280487804878049, "obj2": 0.27706179788086455}, {"determining": "Min( ( MDR / ( FirstVNF_Mem_Server + MRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / DS ) + ( MUM / MUC ) )", "obj1": 0.5467479674796748, "obj2": 0.306013918060451}, {"determining": "Min( ( RRS * RRS ) ,Max( ( MRS + Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ),PN ) )", "choosing": "( ( ( ( RCSe / RCSe ) / ( CS + DS ) ) - MUC ) / ( Min( RMSe ,DS ) / ( RCSe / MUR ) ) )", "obj1": 0.18495934959349594, "obj2": 0.6275138064849176}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "( ( Min( Min( Max( Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( DDR + PN ) ),( ( FirstVNF_CPU_Server / AMS ) - ( BR / FirstVNF_Mem ) ) ),Max( Min( ( MRS - FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ),( ( MDR * RRS ) / ( RRS / FirstVNF_Mem ) ) ) ) ,Min( ( ( ( PN * FirstVNF_Mem ) - ( ARS * PN ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / ( RRS * ACS ) ) ) ,( ( ( BR / MDR ) * Min( AMS ,ARS ) ) * Max( Max( MRS,Const ),Max( PN,FirstVNF_CPU_Server ) ) ) ) ) ,Min( ( ( ( Min( RRS ,ACS ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * ( ( RRS * DDR ) - ( FirstVNF_RAM * ARS ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,AMS ) ) * ( ( FirstVNF_RAM - BR ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) ,Min( ( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),( FirstVNF_RAM + Const ) ) - Max( Max( FirstVNF_CPU_Server,AMS ),( ACS * Const ) ) ) ,( ( ( MDR / AMS ) - Max( FirstVNF_CPU,AMS ) ) * ( ( RRS * MRS ) / ( RRS - RRS ) ) ) ) ) ) * Max( Min( ( ( ( ( FirstVNF_RAM - DDR ) - Min( FirstVNF_CPU_Server ,ACS ) ) * Max( Min( CRS ,FirstVNF_CPU_Server ),( CRS - PN ) ) ) + ( ( ( MRS / FirstVNF_RAM ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Max( ( MRS - FirstVNF_Mem ),( MDR * FirstVNF_Mem_Server ) ) ) ) ,( Max( ( Max( DDR,ARS ) + Max( ACS,MRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) * ( MRS * FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( AMS / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) ),Max( ( Max( Min( ( MRS / BR ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),( Min( CRS ,AMS ) * ( FirstVNF_RAM - PN ) ) ) + ( ( Max( FirstVNF_CPU,ARS ) * ( BR + AMS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ),Min( Max( ( Min( CRS ,CRS ) / ( RRS * Const ) ),( ( CRS * ACS ) * ( DDR + CRS ) ) ) ,( ( Max( DDR,FirstVNF_RAM_Server ) / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( Min( ARS ,ACS ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) ) ) - ( ( ( ( ( ( Min( FirstVNF_RAM ,MRS ) * ( DDR * FirstVNF_Mem_Server ) ) + Max( ( CRS - FirstVNF_RAM_Server ),( FirstVNF_Mem + Const ) ) ) / Max( ( ( FirstVNF_CPU * BR ) / Max( MRS,AMS ) ),( ( DDR + FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem ) ) ) ) * Min( ( ( ( ARS + Const ) * ( FirstVNF_Mem_Server * RRS ) ) / ( Max( PN,RRS ) / ( RRS * MDR ) ) ) ,Min( ( Max( CRS,PN ) + ( ARS / FirstVNF_CPU ) ) ,( ( ACS - PN ) * Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) * Max( Min( ( Max( ( FirstVNF_RAM_Server - AMS ),( FirstVNF_RAM_Server / MDR ) ) - ( ( RRS + FirstVNF_CPU ) - Min( ACS ,MDR ) ) ) ,( ( ( RRS + FirstVNF_Mem ) * ( PN / CRS ) ) - ( ( FirstVNF_Mem + RRS ) + ( DDR * ACS ) ) ) ),Max( Max( Max( ( FirstVNF_Mem * MRS ),( PN * Const ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( BR + AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,RRS ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM ,RRS ) + ( CRS + FirstVNF_CPU ) ) ) ) ) ) * ( ( ( ( ( ( BR * ACS ) + ( PN * DDR ) ) - Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR + Const ) ) ) - Min( Min( ( RRS + Const ) ,Min( DDR ,AMS ) ) ,( ( CRS + FirstVNF_RAM ) / Max( CRS,RRS ) ) ) ) - ( ( Min( ( RRS / AMS ) ,( DDR / CRS ) ) - ( Min( RRS ,BR ) - Max( MDR,Const ) ) ) + ( ( Max( FirstVNF_RAM,BR ) - ( DDR - FirstVNF_CPU ) ) / Max( ( ACS * AMS ),( AMS / PN ) ) ) ) ) + ( ( Min( Min( Min( PN ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ,Min( ( FirstVNF_CPU * ARS ) ,( ACS * FirstVNF_Mem_Server ) ) ) / ( Max( Min( DDR ,ACS ),Max( ACS,BR ) ) - ( Max( ARS,FirstVNF_RAM ) / ( RRS * MDR ) ) ) ) * ( Min( Max( Max( PN,DDR ),( FirstVNF_RAM * Const ) ) ,( ( Const * AMS ) - ( ARS + FirstVNF_CPU_Server ) ) ) * ( ( Max( MRS,CRS ) + ( ARS / PN ) ) * ( ( FirstVNF_RAM - MRS ) / ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( RMSe - MLU ),DS ) - ( MUM - Min( MUC ,MUC ) ) ) ,CS ) + RRSe ) ,Max( ( RRSe / RCSe ),MLU ) )", "obj1": 0.9491869918699187, "obj2": 0.041781560016585124}, {"determining": "( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4898373983739837, "obj2": 0.35228420276829175}, {"determining": "( ( BR * RRS ) - Min( MRS ,( ( ( MDR - MDR ) * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( Max( MLU,MLU ) / ( DS - MUC ) ) ) / ( DS - MUC ) )", "obj1": 0.17276422764227642, "obj2": 0.699800304266445}, {"determining": "( ( ( AMS * Min( Min( FirstVNF_Mem ,DDR ) ,ARS ) ) + ( CRS * ACS ) ) * Min( MDR ,RRS ) )", "choosing": "Max( ( DS + RRSe ),( MUM + ( Max( Min( CS ,MUM ),Max( MUR,MUR ) ) / CS ) ) )", "obj1": 0.4369918699186992, "obj2": 0.42904287730787144}, {"determining": "( ( Min( PN ,Const ) / Min( BR ,MDR ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( Max( RMSe,MUC ) + ( Max( MUC,RMSe ) / ( CS + MLU ) ) )", "obj1": 0.24796747967479674, "obj2": 0.624493649153538}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( MUC / RMSe ) / ( MUR + CS ) ) )", "obj1": 0.3882113821138211, "obj2": 0.4644673006231566}, {"determining": "Max( ( ARS + FirstVNF_RAM ),FirstVNF_RAM )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.5772357723577236, "obj2": 0.2828380227957031}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.258130081300813, "obj2": 0.588452328389735}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( CS + DS ) ) + Max( ( RRSe + MUR ),DS ) )", "obj1": 0.3353658536585366, "obj2": 0.524932041265317}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5322928858426473}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "Max( ( ( AMS - AMS ) - Min( BR ,Min( Max( ( BR - BR ),Max( FirstVNF_RAM,DDR ) ) ,( ( ACS * DDR ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ),Min( ( FirstVNF_CPU * RRS ) ,( CRS - CRS ) ) )", "choosing": "Min( MUR ,( ( RCSe + MUC ) / ( MUM * RCSe ) ) )", "obj1": 0.37601626016260165, "obj2": 0.5113457340564126}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.12195121951219512, "obj2": 0.7232717014586304}, {"determining": "( ( ( MDR - MDR ) * RRS ) - Min( ( BR * RRS ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) / ( DS - RRSe ) )", "obj1": 0.15853658536585366, "obj2": 0.7116461636589665}, {"determining": "Min( ( Min( ACS ,MRS ) - ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) ) ,( Min( CRS ,ARS ) * ( CRS * MDR ) ) )", "choosing": "( ( MUC / RMSe ) * ( RCSe * MUR ) )", "obj1": 0.975609756097561, "obj2": 0.026268911520719355}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.7276422764227642, "obj2": 0.23184900338109427}, {"determining": "( ACS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5495532951216376}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( ( MUM + DS ) / ( ( MUM * RMSe ) + RMSe ) )", "obj1": 0.3617886178861789, "obj2": 0.5130113620282905}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( MUR / CS ),( RMSe * RRSe ) ) + ( MUM / MUC ) )", "obj1": 0.4268292682926829, "obj2": 0.43325009859532865}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.4146341463414634, "obj2": 0.4450854658768665}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.47560975609756095, "obj2": 0.3566568560720231}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.4146341463414634, "obj2": 0.4450854658768665}, {"determining": "( ( AMS * CRS ) * ( FirstVNF_CPU * ACS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS / CS ) ) - ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5495532951216376}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * ( MDR / PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / ( DS / DS ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0010112920981660055}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( PN * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * RRS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) / ( DS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_CPU ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( Max( MUC,MUM ) * Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( AMS - BR ),Max( FirstVNF_RAM,DDR ) ) ,( ( ACS * DDR ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( RMSe,RRSe ) / Min( MUR ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * AMS ) - ACS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,CS ) - ( MUR - CS ) ) + ( ( MUM + MLU ) * ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( MUR ,CS ) / ( DS / MUR ) ) / Min( ( MUM * MUC ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,MRS ) - ( DDR + FirstVNF_CPU ) ) ,( Min( CRS ,ARS ) * ( CRS * MDR ) ) )", "choosing": "( Max( DS,RRSe ) * ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + CRS ) - ( AMS / FirstVNF_RAM_Server ) ) - ( ( PN + FirstVNF_CPU_Server ) + ( MDR / PN ) ) ) + ( ( ( ACS - ACS ) - ( FirstVNF_CPU_Server + MDR ) ) - ( ( ACS * FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( BR - DDR ) ) / Min( ( FirstVNF_CPU - CRS ) ,( FirstVNF_CPU_Server - Const ) ) ) * Max( ( ( FirstVNF_CPU * AMS ) - ( Const + ARS ) ),Max( ( FirstVNF_CPU / CRS ),( RRS * PN ) ) ) )", "choosing": "Max( Min( DS ,( MUR + ( CS / MUR ) ) ),( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS + BR ) * ( RRS - FirstVNF_Mem ) ) / ( ( RRS * FirstVNF_Mem_Server ) + ( PN + FirstVNF_CPU_Server ) ) ) - ( ( Max( RRS,ARS ) - Min( ACS ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM / MDR ) / Max( AMS,RRS ) ) ) )", "choosing": "( ( ( ( DS + RRSe ) - ( MUR * MUR ) ) * ( Min( RCSe ,MUC ) - Max( RCSe,RMSe ) ) ) - Min( Max( ( MLU * RCSe ),( MUR + MUR ) ) ,( Max( RRSe,RCSe ) + ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,( CRS - FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,ACS ) + Min( MDR ,ARS ) ) ) )", "choosing": "( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( MUC * ( MLU + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - ( MRS - PN ) )", "choosing": "( ( RRSe / MUC ) + ( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * RRS ) - Min( MRS ,Min( AMS ,MRS ) ) )", "choosing": "( ( DS - MUR ) + ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM + RMSe ) + ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( Min( Min( Min( ( Max( ( ( CRS + MRS ) / Max( ARS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM ) ) / ( ( PN / FirstVNF_RAM_Server ) / Max( ARS,PN ) ) ) ) ,( Min( ( Min( MDR ,CRS ) - ( FirstVNF_RAM_Server * BR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) * ( MDR * MRS ) ) ) / ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( MDR - RRS ) ) + Max( ( FirstVNF_RAM - MDR ),( BR - Const ) ) ) ) ) ,( ( ( Max( ( CRS - FirstVNF_RAM ),( RRS - ACS ) ) * ( Min( PN ,ARS ) + ( MDR / MDR ) ) ) * ( ( ( PN * Const ) + ( ACS / FirstVNF_RAM_Server ) ) / Max( ( DDR / FirstVNF_RAM ),( AMS * MRS ) ) ) ) * ( ( Max( Min( FirstVNF_RAM_Server ,PN ),( DDR / PN ) ) * ( Max( FirstVNF_Mem_Server,PN ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( MDR * FirstVNF_Mem ) / ( MDR * MRS ) ) * ( ( CRS + Const ) / ( PN + FirstVNF_RAM ) ) ) ) ) ) ,( ( ( Max( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server - ARS ) ),( ( FirstVNF_CPU / ARS ) - Min( CRS ,ARS ) ) ) - ( ( ( FirstVNF_CPU_Server * DDR ) / Max( FirstVNF_CPU,CRS ) ) / ( Max( FirstVNF_Mem_Server,DDR ) - ( FirstVNF_RAM / PN ) ) ) ) - ( ( ( Max( BR,PN ) / ( FirstVNF_Mem * Const ) ) + ( ( CRS * FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Const ) ) ) / ( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU / BR ) ,( MDR * CRS ) ) ) ) ) + Min( ( ( ( ( FirstVNF_RAM_Server / MRS ) / Max( MDR,PN ) ) + ( ( FirstVNF_Mem_Server / AMS ) - ( Const * RRS ) ) ) * Min( ( ( BR / FirstVNF_CPU ) + Min( FirstVNF_Mem ,ACS ) ) ,Max( ( DDR + RRS ),Min( Const ,BR ) ) ) ) ,( ( ( Min( FirstVNF_Mem ,PN ) / ( FirstVNF_RAM + AMS ) ) + ( ( FirstVNF_CPU_Server + ARS ) + Min( Const ,FirstVNF_Mem_Server ) ) ) / ( Max( ( RRS / FirstVNF_RAM_Server ),Max( FirstVNF_CPU_Server,RRS ) ) - ( Max( RRS,AMS ) * ( CRS * BR ) ) ) ) ) ) ) ,Min( ( Max( Min( ( Max( Min( MRS ,FirstVNF_CPU_Server ),( DDR / PN ) ) * ( Max( FirstVNF_RAM,RRS ) / Max( MRS,PN ) ) ) ,( ( ( RRS + FirstVNF_CPU ) + ( RRS * MRS ) ) + ( ( ARS * FirstVNF_CPU_Server ) + Min( PN ,DDR ) ) ) ),Max( ( Max( ( AMS / MDR ),( FirstVNF_CPU / ARS ) ) + Min( Min( AMS ,FirstVNF_RAM ) ,( MRS + DDR ) ) ),Min( ( Max( MDR,CRS ) * ( FirstVNF_CPU_Server / CRS ) ) ,( ( MRS + RRS ) + ( PN - RRS ) ) ) ) ) * Max( Min( ( Min( ( FirstVNF_CPU_Server - MDR ) ,( MDR * PN ) ) / Max( Max( FirstVNF_Mem,Const ),( PN * Const ) ) ) ,Min( ( Max( FirstVNF_RAM,AMS ) + Max( BR,FirstVNF_RAM ) ) ,( ( DDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * ACS ) ) ) ),( ( ( Min( AMS ,FirstVNF_RAM ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( Min( FirstVNF_RAM_Server ,BR ) / ( Const - PN ) ) ) - ( ( Min( MRS ,AMS ) / ( FirstVNF_RAM * RRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) - ( CRS / BR ) ) ) ) ) ) ,Max( Max( ( Min( Min( ( FirstVNF_Mem + AMS ) ,( MRS * MRS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( FirstVNF_CPU + MDR ) ) ) - ( ( ( FirstVNF_RAM * ACS ) * ( FirstVNF_RAM_Server * Const ) ) + Min( ( CRS * MRS ) ,Min( FirstVNF_Mem_Server ,AMS ) ) ) ),( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + PN ) ) ,Max( ( AMS * ARS ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) * ( ( Max( ARS,CRS ) * Min( FirstVNF_RAM_Server ,BR ) ) * ( ( PN * PN ) / Max( DDR,ARS ) ) ) ) ),( ( ( ( ( ARS * FirstVNF_RAM ) + ( PN - RRS ) ) * ( Max( PN,FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_RAM * CRS ) + ( MRS * FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server - Const ) - ( DDR + FirstVNF_Mem_Server ) ) ) ) * ( ( ( Max( DDR,BR ) + ( BR - FirstVNF_CPU ) ) * Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) / Min( ( ( FirstVNF_RAM_Server / MRS ) - ( FirstVNF_RAM_Server + MRS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( Max( Min( ( MUM - DS ) ,( CS + RMSe ) ),( Min( MLU ,RMSe ) + Min( MUC ,MLU ) ) ),Min( ( ( MUR * CS ) + Max( RCSe,MUM ) ) ,( Max( CS,MLU ) - ( RRSe / RRSe ) ) ) ) - ( ( ( ( MLU * CS ) + Min( RRSe ,CS ) ) - ( Max( MUR,MUC ) + ( MUC + MLU ) ) ) / Min( ( ( MUR + DS ) - ( MUM - MUC ) ) ,( Max( RCSe,MUR ) / ( MUR / MLU ) ) ) ) ) * Max( ( ( Min( Max( MUR,RCSe ) ,( MUR - RMSe ) ) * ( Max( RCSe,DS ) * ( MUR * RRSe ) ) ) - ( ( ( CS + DS ) * Max( MUM,MUR ) ) * Max( ( MUC + RMSe ),Max( MUM,RMSe ) ) ) ),Max( ( ( ( CS / MUC ) * ( RCSe / MUR ) ) / ( Max( RRSe,MUC ) * ( CS * CS ) ) ),( ( ( RRSe * MUC ) + Max( DS,MLU ) ) * ( ( MUM * CS ) + ( MUC / MUM ) ) ) ) ) ) + ( ( ( Max( ( ( MUC + MUC ) + ( MUR * MUM ) ),( Min( MUR ,MUM ) * ( MUC / RCSe ) ) ) + ( ( ( DS * RCSe ) / Max( RCSe,MUM ) ) / ( Max( RMSe,MUC ) / Min( DS ,MUM ) ) ) ) / ( Min( ( Min( MLU ,MUR ) - ( MUR * MUR ) ) ,Max( ( MUC - MUM ),Max( RRSe,MUR ) ) ) + Max( Min( Min( DS ,CS ) ,Min( MUR ,DS ) ),Min( Min( RRSe ,RCSe ) ,( MUC * MUM ) ) ) ) ) + ( Min( ( ( Min( MUM ,MUC ) - ( MLU * RMSe ) ) * ( Max( MLU,CS ) + Max( MLU,RRSe ) ) ) ,( ( ( RMSe / MUC ) / ( RCSe - DS ) ) / ( ( MLU + RCSe ) - Max( RRSe,RMSe ) ) ) ) / ( Max( ( Min( MUC ,CS ) / ( RRSe + RCSe ) ),Min( ( DS * RRSe ) ,( MLU + DS ) ) ) + Max( ( ( MUC / RCSe ) - Min( DS ,RMSe ) ),Min( Min( MUC ,MUC ) ,( MUR - RMSe ) ) ) ) ) ) ) * Max( ( ( ( Max( Min( ( RCSe * DS ) ,( RRSe / MUC ) ),( ( RMSe / CS ) - ( RCSe * RRSe ) ) ) * ( Max( ( MUC * MUM ),Min( MUR ,RCSe ) ) - Min( Min( MUC ,RCSe ) ,( RRSe * MUM ) ) ) ) / Max( ( ( ( CS * CS ) / ( MLU * MUR ) ) + ( Min( RRSe ,MUM ) + ( RRSe / MUC ) ) ),Max( ( Min( DS ,MUM ) - ( RMSe + DS ) ),Min( Max( RMSe,RMSe ) ,( RMSe - MUC ) ) ) ) ) * Min( ( ( ( ( MUC + RRSe ) / Max( MUM,CS ) ) * Max( ( MUM / MUC ),( RMSe / CS ) ) ) / ( ( ( RMSe * MUC ) / ( MUR * MUC ) ) * ( ( MUM + MUC ) + Max( MLU,RRSe ) ) ) ) ,Min( ( ( ( RCSe / MUR ) + Min( MUM ,RMSe ) ) / ( Max( CS,RMSe ) - ( MLU / MUR ) ) ) ,( ( Max( RCSe,RCSe ) - Max( MUM,DS ) ) / Min( ( CS - MLU ) ,Min( DS ,DS ) ) ) ) ) ),Min( Max( ( Min( Min( Max( CS,MLU ) ,( MLU + DS ) ) ,( Min( MLU ,RRSe ) - ( RCSe / MUC ) ) ) / ( ( Max( RRSe,MUC ) * ( DS / MUC ) ) + Min( ( MUM * RMSe ) ,( MUM * CS ) ) ) ),( ( ( ( CS / RMSe ) / Min( MUR ,MUC ) ) - Max( ( MUC + MUC ),( RMSe + MUC ) ) ) * Min( Min( ( MUR + MLU ) ,Min( MUR ,RRSe ) ) ,( ( RMSe + RMSe ) * Max( DS,MUR ) ) ) ) ) ,( Max( ( Min( Max( RCSe,MUM ) ,Max( MUC,RRSe ) ) - ( ( MUR - MUC ) + ( MUC * MUR ) ) ),( ( Max( CS,MUC ) - Max( MUC,RMSe ) ) * Min( ( RRSe - RMSe ) ,( RCSe - MUC ) ) ) ) * ( Max( Min( ( RRSe + MLU ) ,( CS + MLU ) ),( ( MUM - MUR ) / Max( MUM,MUR ) ) ) + ( ( Min( MUR ,DS ) - ( CS / RCSe ) ) + ( ( MLU * MLU ) - Max( MUC,CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( MRS - ARS ) )", "choosing": "( ( RCSe * ( Max( ( MLU * CS ),( RMSe + RMSe ) ) / ( ( RMSe * CS ) - ( RMSe * RRSe ) ) ) ) + ( Max( MUC,MLU ) + ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,Const ) - ( Const * FirstVNF_CPU ) ) / ( ( AMS + CRS ) / ( MDR + ACS ) ) ) ,( ( ( FirstVNF_RAM * RRS ) + Min( PN ,Const ) ) * Min( ( PN / DDR ) ,( DDR * ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC - RCSe ) / RCSe ) * MLU ) ,Min( ( ( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( MUC * ( MLU + CS ) ) ) ) / RRSe ) ,( ( RRSe + MUC ) * RCSe ) ) )", "obj1": 0.9146341463414634, "obj2": 0.08631583208274443}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) ) ) )", "choosing": "( ( MUM + DS ) / MUM )", "obj1": 0.7520325203252033, "obj2": 0.19271660133824858}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) - ( DS * CS ) )", "obj1": 0.18089430894308944, "obj2": 0.6120997357063815}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server + MRS ) + MRS ) ) + MRS ) )", "choosing": "( ( DS - ( ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( RMSe * DS ) ) / ( RMSe * DS ) ) ) / ( RMSe * DS ) )", "obj1": 0.15853658536585366, "obj2": 0.6769136912601769}, {"determining": "Min( ( MDR / ( FirstVNF_Mem_Server + MRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / DS ) + ( MUM / MUC ) )", "obj1": 0.5467479674796748, "obj2": 0.306013918060451}, {"determining": "( ( Min( Min( Max( Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( DDR + PN ) ),( ( FirstVNF_CPU_Server / AMS ) - ( BR / FirstVNF_Mem ) ) ),Max( Min( ( MRS - FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ),( ( MDR * RRS ) / ( RRS / FirstVNF_Mem ) ) ) ) ,Min( ( ( ( PN * FirstVNF_Mem ) - ( ARS * PN ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / ( RRS * ACS ) ) ) ,( ( ( BR / MDR ) * Min( AMS ,ARS ) ) * Max( Max( MRS,Const ),Max( PN,FirstVNF_CPU_Server ) ) ) ) ) ,Min( ( ( ( Min( RRS ,ACS ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * ( ( RRS * DDR ) - ( FirstVNF_RAM * ARS ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,AMS ) ) * ( ( FirstVNF_RAM - BR ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) ,Min( ( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),( FirstVNF_RAM + Const ) ) - Max( Max( FirstVNF_CPU_Server,AMS ),( ACS * Const ) ) ) ,( ( ( MDR / AMS ) - Max( FirstVNF_CPU,AMS ) ) * ( ( RRS * MRS ) / ( RRS - RRS ) ) ) ) ) ) * Max( Min( ( ( ( ( FirstVNF_RAM - DDR ) - Min( FirstVNF_CPU_Server ,ACS ) ) * Max( Min( CRS ,FirstVNF_CPU_Server ),( CRS - PN ) ) ) + ( ( ( MRS / FirstVNF_RAM ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Max( ( MRS - FirstVNF_Mem ),( MDR * FirstVNF_Mem_Server ) ) ) ) ,( Max( ( Max( DDR,ARS ) + Max( ACS,MRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) * ( MRS * FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( AMS / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) ),Max( ( Max( Min( ( MRS / BR ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),( Min( CRS ,AMS ) * ( FirstVNF_RAM - PN ) ) ) + ( ( Max( FirstVNF_CPU,ARS ) * ( BR + AMS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ),Min( Max( ( Min( CRS ,CRS ) / ( RRS * Const ) ),( ( CRS * ACS ) * ( DDR + CRS ) ) ) ,( ( Max( DDR,FirstVNF_RAM_Server ) / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( Min( ARS ,ACS ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) ) ) - ( ( ( ( ( ( Min( FirstVNF_RAM ,MRS ) * ( DDR * FirstVNF_Mem_Server ) ) + Max( ( CRS - FirstVNF_RAM_Server ),( FirstVNF_Mem + Const ) ) ) / Max( ( ( FirstVNF_CPU * BR ) / Max( MRS,AMS ) ),( ( DDR + FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem ) ) ) ) * Min( ( ( ( ARS + Const ) * ( FirstVNF_Mem_Server * RRS ) ) / ( Max( PN,RRS ) / ( RRS * MDR ) ) ) ,Min( ( Max( CRS,PN ) + ( ARS / FirstVNF_CPU ) ) ,( ( ACS - PN ) * Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) * Max( Min( ( Max( ( FirstVNF_RAM_Server - AMS ),( FirstVNF_RAM_Server / MDR ) ) - ( ( RRS + FirstVNF_CPU ) - Min( ACS ,MDR ) ) ) ,( ( ( RRS + FirstVNF_Mem ) * ( PN / CRS ) ) - ( ( FirstVNF_Mem + RRS ) + ( DDR * ACS ) ) ) ),Max( Max( Max( ( FirstVNF_Mem * MRS ),( PN * Const ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( BR + AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,RRS ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM ,RRS ) + ( CRS + FirstVNF_CPU ) ) ) ) ) ) * ( ( ( ( ( ( BR * ACS ) + ( PN * DDR ) ) - Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR + Const ) ) ) - Min( Min( ( RRS + Const ) ,Min( DDR ,AMS ) ) ,( ( CRS + FirstVNF_RAM ) / Max( CRS,RRS ) ) ) ) - ( ( Min( ( RRS / AMS ) ,( DDR / CRS ) ) - ( Min( RRS ,BR ) - Max( MDR,Const ) ) ) + ( ( Max( FirstVNF_RAM,BR ) - ( DDR - FirstVNF_CPU ) ) / Max( ( ACS * AMS ),( AMS / PN ) ) ) ) ) + ( ( Min( Min( Min( PN ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ,Min( ( FirstVNF_CPU * ARS ) ,( ACS * FirstVNF_Mem_Server ) ) ) / ( Max( Min( DDR ,ACS ),Max( ACS,BR ) ) - ( Max( ARS,FirstVNF_RAM ) / ( RRS * MDR ) ) ) ) * ( Min( Max( Max( PN,DDR ),( FirstVNF_RAM * Const ) ) ,( ( Const * AMS ) - ( ARS + FirstVNF_CPU_Server ) ) ) * ( ( Max( MRS,CRS ) + ( ARS / PN ) ) * ( ( FirstVNF_RAM - MRS ) / ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( RMSe - MLU ),DS ) - ( MUM - Min( MUC ,MUC ) ) ) ,CS ) + RRSe ) ,Max( ( RRSe / RCSe ),MLU ) )", "obj1": 0.9491869918699187, "obj2": 0.041781560016585124}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.6869918699186992, "obj2": 0.2582208142370423}, {"determining": "( ( RRS + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) - Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( MLU + RRSe ),( MUM + MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.5386178861788617, "obj2": 0.349635363393819}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.3882113821138211, "obj2": 0.4536306465430349}, {"determining": "( ( ( AMS * Min( Min( FirstVNF_Mem ,DDR ) ,ARS ) ) + ( CRS * ACS ) ) * Min( MDR ,RRS ) )", "choosing": "Max( ( DS + RRSe ),( MUM + ( Max( Min( CS ,MUM ),Max( MUR,MUR ) ) / CS ) ) )", "obj1": 0.4369918699186992, "obj2": 0.42904287730787144}, {"determining": "Max( ( ARS + FirstVNF_RAM ),FirstVNF_RAM )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.5772357723577236, "obj2": 0.2828380227957031}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem ,RRS ) ,ARS ) ) + ( CRS * ACS ) )", "choosing": "( ( ( ( DS + DS ) * ( RCSe - CS ) ) - Max( MUR,MUR ) ) - MUM )", "obj1": 0.3089430894308943, "obj2": 0.5215605953668323}, {"determining": "Max( ( FirstVNF_CPU_Server * ACS ),( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( DS / RRSe ) + Min( RRSe ,RRSe ) ),( RRSe / ( MLU / RMSe ) ) )", "obj1": 0.3719512195121951, "obj2": 0.5097392775098506}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RCSe * DS ) )", "obj1": 0.6280487804878049, "obj2": 0.27706179788086455}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + MRS ) + MRS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5490009642005547}, {"determining": "( Max( ( ARS + FirstVNF_RAM ),( ( FirstVNF_Mem_Server + MRS ) + MRS ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) - Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( ( ( DS - ( ( DS - CS ) / ( RMSe * DS ) ) ) / ( RMSe * DS ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.15447154471544716, "obj2": 0.7007004313459475}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5322928858426473}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( ( MUM + DS ) / ( ( MUM * RMSe ) + RMSe ) )", "obj1": 0.3617886178861789, "obj2": 0.5130113620282905}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - ( ( DS - CS ) / ( ( DS - CS ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.24390243902439024, "obj2": 0.6118851348411228}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MLU ) + ( CS * RMSe ) )", "obj1": 0.7439024390243902, "obj2": 0.2234295218686627}, {"determining": "( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4898373983739837, "obj2": 0.35228420276829175}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.12195121951219512, "obj2": 0.7232717014586304}, {"determining": "( ( BR * ( ( BR * ACS ) - Min( MRS ,FirstVNF_Mem_Server ) ) ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM + RMSe ) + ( MLU / MUR ) ) - MUC ) + ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.021208218673737296}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.7276422764227642, "obj2": 0.23184900338109427}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + RCSe ) - Min( ( CS * MUC ) ,RMSe ) )", "obj1": 0.39634146341463417, "obj2": 0.44324324930257797}, {"determining": "( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( MUR / CS ),( RMSe * RRSe ) ) + ( MUM / MUC ) )", "obj1": 0.4268292682926829, "obj2": 0.43325009859532865}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * DS ) )", "obj1": 0.6199186991869918, "obj2": 0.2824863954702547}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.258130081300813, "obj2": 0.588452328389735}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.25203252032520324, "obj2": 0.6088666457329321}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.47560975609756095, "obj2": 0.3566568560720231}, {"determining": "Max( ( ( ( Min( ARS ,PN ) + ( Const / DDR ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS + FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ),( FirstVNF_CPU / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) - ( DS * CS ) )", "obj1": 0.11788617886178862, "obj2": 0.7288823722843792}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.258130081300813, "obj2": 0.588452328389735}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * ( MDR / PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / ( DS / DS ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0010112920981660055}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( PN * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( PN * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * RRS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) / ( DS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_CPU ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( Max( MUC,MUM ) * Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( AMS - BR ),Max( FirstVNF_RAM,DDR ) ) ,( ( ACS * DDR ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( RMSe,RRSe ) / Min( MUR ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * AMS ) - ACS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,CS ) - ( MUR - CS ) ) + ( ( MUM + MLU ) * ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( MUR ,CS ) / ( DS / MUR ) ) / Min( ( MUM * MUC ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,MRS ) - ( DDR + FirstVNF_CPU ) ) ,( Min( CRS ,ARS ) * ( CRS * MDR ) ) )", "choosing": "( Max( DS,RRSe ) * ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( RRS - ( BR / AMS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "Max( Max( MLU,RRSe ),Min( Min( ( ( ( ( MUC - ( DS - RMSe ) ) + CS ) / MLU ) + RMSe ) ,( ( ( RCSe + MUC ) + MUM ) / MLU ) ) ,Max( ( RMSe - ( MUM - RMSe ) ),( ( RMSe - MLU ) * ( RRSe + ( ( CS + MUM ) * ( RRSe / MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( ( Max( ( ( CRS + MRS ) / Max( ARS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM ) ) / ( ( PN / FirstVNF_RAM_Server ) / Max( ARS,PN ) ) ) ) ,( Min( ( Min( MDR ,CRS ) - ( FirstVNF_RAM_Server * BR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) * ( MDR * MRS ) ) ) / ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( MDR - RRS ) ) + Max( ( FirstVNF_RAM - MDR ),( BR - Const ) ) ) ) ) ,( ( ( Max( ( CRS - FirstVNF_RAM ),( RRS - ACS ) ) * ( Min( PN ,ARS ) + ( MDR / MDR ) ) ) * ( ( ( PN * Const ) + ( ACS / FirstVNF_RAM_Server ) ) / Max( ( DDR / FirstVNF_RAM ),( AMS * MRS ) ) ) ) * ( ( Max( Min( FirstVNF_RAM_Server ,PN ),( DDR / PN ) ) * ( Max( FirstVNF_Mem_Server,PN ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( MDR * FirstVNF_Mem ) / ( MDR * MRS ) ) * ( ( CRS + Const ) / ( PN + FirstVNF_RAM ) ) ) ) ) ) ,( ( ( Max( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server - ARS ) ),( ( FirstVNF_CPU / ARS ) - Min( CRS ,ARS ) ) ) - ( ( ( FirstVNF_CPU_Server * DDR ) / Max( FirstVNF_CPU,CRS ) ) / ( Max( FirstVNF_Mem_Server,DDR ) - ( FirstVNF_RAM / PN ) ) ) ) - ( ( ( Max( BR,PN ) / ( FirstVNF_Mem * Const ) ) + ( ( CRS * FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Const ) ) ) / ( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU / BR ) ,( MDR * CRS ) ) ) ) ) + Min( ( ( ( ( FirstVNF_RAM_Server / MRS ) / Max( MDR,PN ) ) + ( ( FirstVNF_Mem_Server / AMS ) - ( Const * RRS ) ) ) * Min( ( ( BR / FirstVNF_CPU ) + Min( FirstVNF_Mem ,ACS ) ) ,Max( ( DDR + RRS ),Min( Const ,BR ) ) ) ) ,( ( ( Min( FirstVNF_Mem ,PN ) / ( FirstVNF_RAM + AMS ) ) + ( ( FirstVNF_CPU_Server + ARS ) + Min( Const ,FirstVNF_Mem_Server ) ) ) / ( Max( ( RRS / FirstVNF_RAM_Server ),Max( FirstVNF_CPU_Server,RRS ) ) - ( Max( RRS,AMS ) * ( CRS * BR ) ) ) ) ) ) ) ,Min( ( Max( Min( ( Max( Min( MRS ,FirstVNF_CPU_Server ),( DDR / PN ) ) * ( Max( FirstVNF_RAM,RRS ) / Max( MRS,PN ) ) ) ,( ( ( RRS + FirstVNF_CPU ) + ( RRS * MRS ) ) + ( ( ARS * FirstVNF_CPU_Server ) + Min( PN ,DDR ) ) ) ),Max( ( Max( ( AMS / MDR ),( FirstVNF_CPU / ARS ) ) + Min( Min( AMS ,FirstVNF_RAM ) ,( MRS + DDR ) ) ),Min( ( Max( MDR,CRS ) * ( FirstVNF_CPU_Server / CRS ) ) ,( ( MRS + RRS ) + ( PN - RRS ) ) ) ) ) * Max( Min( ( Min( ( FirstVNF_CPU_Server - MDR ) ,( MDR * PN ) ) / Max( Max( FirstVNF_Mem,Const ),( PN * Const ) ) ) ,Min( ( Max( FirstVNF_RAM,AMS ) + Max( BR,FirstVNF_RAM ) ) ,( ( DDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * ACS ) ) ) ),( ( ( Min( AMS ,FirstVNF_RAM ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( Min( FirstVNF_RAM_Server ,BR ) / ( Const - PN ) ) ) - ( ( Min( MRS ,AMS ) / ( FirstVNF_RAM * RRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) - ( CRS / BR ) ) ) ) ) ) ,Max( Max( ( Min( Min( ( FirstVNF_Mem + AMS ) ,( MRS * MRS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( FirstVNF_CPU + MDR ) ) ) - ( ( ( FirstVNF_RAM * ACS ) * ( FirstVNF_RAM_Server * Const ) ) + Min( ( CRS * MRS ) ,Min( FirstVNF_Mem_Server ,AMS ) ) ) ),( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + PN ) ) ,Max( ( AMS * ARS ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) * ( ( Max( ARS,CRS ) * Min( FirstVNF_RAM_Server ,BR ) ) * ( ( PN * PN ) / Max( DDR,ARS ) ) ) ) ),( ( ( ( ( ARS * FirstVNF_RAM ) + ( PN - RRS ) ) * ( Max( PN,FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_RAM * CRS ) + ( MRS * FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server - Const ) - ( DDR + FirstVNF_Mem_Server ) ) ) ) * ( ( ( Max( DDR,BR ) + ( BR - FirstVNF_CPU ) ) * Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) / Min( ( ( FirstVNF_RAM_Server / MRS ) - ( FirstVNF_RAM_Server + MRS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( Max( Min( ( MUM - DS ) ,( CS + RMSe ) ),( Min( MLU ,RMSe ) + Min( MUC ,MLU ) ) ),Min( ( ( MUR * CS ) + Max( RCSe,MUM ) ) ,( Max( CS,MLU ) - ( RRSe / RRSe ) ) ) ) - ( ( ( ( MLU * CS ) + Min( RRSe ,CS ) ) - ( Max( MUR,MUC ) + ( MUC + MLU ) ) ) / Min( ( ( MUR + DS ) - ( MUM - MUC ) ) ,( Max( RCSe,MUR ) / ( MUR / MLU ) ) ) ) ) * Max( ( ( Min( Max( MUR,RCSe ) ,( MUR - RMSe ) ) * ( Max( RCSe,DS ) * ( MUR * RRSe ) ) ) - ( ( ( CS + DS ) * Max( MUM,MUR ) ) * Max( ( MUC + RMSe ),Max( MUM,RMSe ) ) ) ),Max( ( ( ( CS / MUC ) * ( RCSe / MUR ) ) / ( Max( RRSe,MUC ) * ( CS * CS ) ) ),( ( ( RRSe * MUC ) + Max( DS,MLU ) ) * ( ( MUM * CS ) + ( MUC / MUM ) ) ) ) ) ) + ( ( ( Max( ( ( MUC + MUC ) + ( MUR * MUM ) ),( Min( MUR ,MUM ) * ( MUC / RCSe ) ) ) + ( ( ( DS * RCSe ) / Max( RCSe,MUM ) ) / ( Max( RMSe,MUC ) / Min( DS ,MUM ) ) ) ) / ( Min( ( Min( MLU ,MUR ) - ( MUR * MUR ) ) ,Max( ( MUC - MUM ),Max( RRSe,MUR ) ) ) + Max( Min( Min( DS ,CS ) ,Min( MUR ,DS ) ),Min( Min( RRSe ,RCSe ) ,( MUC * MUM ) ) ) ) ) + ( Min( ( ( Min( MUM ,MUC ) - ( MLU * RMSe ) ) * ( Max( MLU,CS ) + Max( MLU,RRSe ) ) ) ,( ( ( RMSe / MUC ) / ( RCSe - DS ) ) / ( ( MLU + RCSe ) - Max( RRSe,RMSe ) ) ) ) / ( Max( ( Min( MUC ,CS ) / ( RRSe + RCSe ) ),Min( ( DS * RRSe ) ,( MLU + DS ) ) ) + Max( ( ( MUC / RCSe ) - Min( DS ,RMSe ) ),Min( Min( MUC ,MUC ) ,( MUR - RMSe ) ) ) ) ) ) ) * Max( ( ( ( Max( Min( ( RCSe * DS ) ,( RRSe / MUC ) ),( ( RMSe / CS ) - ( RCSe * RRSe ) ) ) * ( Max( ( MUC * MUM ),Min( MUR ,RCSe ) ) - Min( Min( MUC ,RCSe ) ,( RRSe * MUM ) ) ) ) / Max( ( ( ( CS * CS ) / ( MLU * MUR ) ) + ( Min( RRSe ,MUM ) + ( RRSe / MUC ) ) ),Max( ( Min( DS ,MUM ) - ( RMSe + DS ) ),Min( Max( RMSe,RMSe ) ,( RMSe - MUC ) ) ) ) ) * Min( ( ( ( ( MUC + RRSe ) / Max( MUM,CS ) ) * Max( ( MUM / MUC ),( RMSe / CS ) ) ) / ( ( ( RMSe * MUC ) / ( MUR * MUC ) ) * ( ( MUM + MUC ) + Max( MLU,RRSe ) ) ) ) ,Min( ( ( ( RCSe / MUR ) + Min( MUM ,RMSe ) ) / ( Max( CS,RMSe ) - ( MLU / MUR ) ) ) ,( ( Max( RCSe,RCSe ) - Max( MUM,DS ) ) / Min( ( CS - MLU ) ,Min( DS ,DS ) ) ) ) ) ),Min( Max( ( Min( Min( Max( CS,MLU ) ,( MLU + DS ) ) ,( Min( MLU ,RRSe ) - ( RCSe / MUC ) ) ) / ( ( Max( RRSe,MUC ) * ( DS / MUC ) ) + Min( ( MUM * RMSe ) ,( MUM * CS ) ) ) ),( ( ( ( CS / RMSe ) / Min( MUR ,MUC ) ) - Max( ( MUC + MUC ),( RMSe + MUC ) ) ) * Min( Min( ( MUR + MLU ) ,Min( MUR ,RRSe ) ) ,( ( RMSe + RMSe ) * Max( DS,MUR ) ) ) ) ) ,( Max( ( Min( Max( RCSe,MUM ) ,Max( MUC,RRSe ) ) - ( ( MUR - MUC ) + ( MUC * MUR ) ) ),( ( Max( CS,MUC ) - Max( MUC,RMSe ) ) * Min( ( RRSe - RMSe ) ,( RCSe - MUC ) ) ) ) * ( Max( Min( ( RRSe + MLU ) ,( CS + MLU ) ),( ( MUM - MUR ) / Max( MUM,MUR ) ) ) + ( ( Min( MUR ,DS ) - ( CS / RCSe ) ) + ( ( MLU * MLU ) - Max( MUC,CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,Const ) - ( Const * FirstVNF_CPU ) ) / ( ( AMS + CRS ) / ( MDR + ACS ) ) ) ,( ( ( FirstVNF_RAM * RRS ) + Min( PN ,Const ) ) * Min( ( PN / DDR ) ,( DDR * ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC - RCSe ) / RCSe ) * MLU ) ,Min( ( ( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( MUC * ( MLU + CS ) ) ) ) / RRSe ) ,( ( RRSe + MUC ) * RCSe ) ) )", "obj1": 0.9146341463414634, "obj2": 0.08631583208274443}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) ) ) )", "choosing": "( ( MUM + DS ) / MUM )", "obj1": 0.7520325203252033, "obj2": 0.19271660133824858}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) - ( DS * CS ) )", "obj1": 0.18089430894308944, "obj2": 0.6120997357063815}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MLU ) ,( RRSe - ( ( RCSe * CS ) + Max( MUR,CS ) ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5058390093393439}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.3882113821138211, "obj2": 0.4536306465430349}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server + MRS ) + MRS ) ) + MRS ) )", "choosing": "( ( DS - ( ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( RMSe * DS ) ) / ( RMSe * DS ) ) ) / ( RMSe * DS ) )", "obj1": 0.15853658536585366, "obj2": 0.6769136912601769}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * RRS ) - ( ( BR * RRS ) - Min( MRS ,MRS ) ) )", "choosing": "( MLU / ( DS * CS ) )", "obj1": 0.11788617886178862, "obj2": 0.6783150464609344}, {"determining": "Min( ( MDR / ( FirstVNF_Mem_Server + MRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / DS ) + ( MUM / MUC ) )", "obj1": 0.5467479674796748, "obj2": 0.306013918060451}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Max( FirstVNF_Mem,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * Min( ARS ,PN ) ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.02314309963996467}, {"determining": "( ( RRS + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) - Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( MLU + RRSe ),( MUM + MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.5386178861788617, "obj2": 0.349635363393819}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( ( ( AMS * Min( Min( FirstVNF_Mem ,DDR ) ,ARS ) ) + ( CRS * ACS ) ) * Min( MDR ,RRS ) )", "choosing": "Max( ( DS + RRSe ),( MUM + ( Max( Min( CS ,MUM ),Max( MUR,MUR ) ) / CS ) ) )", "obj1": 0.4369918699186992, "obj2": 0.42904287730787144}, {"determining": "Max( ( ARS + FirstVNF_RAM ),FirstVNF_RAM )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.5772357723577236, "obj2": 0.2828380227957031}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.6869918699186992, "obj2": 0.2582208142370423}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.25203252032520324, "obj2": 0.6088666457329321}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5322928858426473}, {"determining": "( ( AMS - CRS ) * MRS )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe * MUR ) + Max( MUR,CS ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.258130081300813, "obj2": 0.5536010316829036}, {"determining": "( ( BR / RRS ) - Min( MRS ,Min( ( ( MDR - Min( MRS ,FirstVNF_Mem_Server ) ) * RRS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS - MLU ) + MLU )", "obj1": 0.6361788617886179, "obj2": 0.2665000655772383}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - ( ( DS - CS ) / ( ( DS - CS ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.24390243902439024, "obj2": 0.6118851348411228}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MLU ) + ( CS * RMSe ) )", "obj1": 0.7439024390243902, "obj2": 0.2234295218686627}, {"determining": "( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4898373983739837, "obj2": 0.35228420276829175}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.7276422764227642, "obj2": 0.23184900338109427}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + RCSe ) - Min( ( CS * MUC ) ,RMSe ) )", "obj1": 0.39634146341463417, "obj2": 0.44324324930257797}, {"determining": "( ( BR * ( ( BR * ACS ) - Min( MRS ,FirstVNF_Mem_Server ) ) ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM + RMSe ) + ( MLU / MUR ) ) - MUC ) + ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.021208218673737296}, {"determining": "( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( MUR / CS ),( RMSe * RRSe ) ) + ( MUM / MUC ) )", "obj1": 0.4268292682926829, "obj2": 0.43325009859532865}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * DS ) )", "obj1": 0.6199186991869918, "obj2": 0.2824863954702547}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + MRS ) + MRS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5490009642005547}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.47560975609756095, "obj2": 0.3566568560720231}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RCSe * DS ) )", "obj1": 0.6280487804878049, "obj2": 0.27706179788086455}, {"determining": "( ( AMS - CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5166963942866016}, {"determining": "( ( AMS - CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5166963942866016}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * ( MDR / PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / ( DS / DS ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0010112920981660055}, {"determining": "( ACS / ( MRS - ARS ) )", "choosing": "( ( RCSe * ( Max( ( MLU * CS ),( RMSe + RMSe ) ) / ( ( RMSe * CS ) - ( RMSe * RRSe ) ) ) ) + ( Max( MUC,MLU ) + ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( PN * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( PN * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * RRS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) / ( DS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_CPU ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( Max( MUC,MUM ) * Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( AMS - BR ),Max( FirstVNF_RAM,DDR ) ) ,( ( ACS * DDR ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( RMSe,RRSe ) / Min( MUR ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * AMS ) - ACS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,CS ) - ( MUR - CS ) ) + ( ( MUM + MLU ) * ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( MUR ,CS ) / ( DS / MUR ) ) / Min( ( MUM * MUC ) ,Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,MRS ) - ( DDR + FirstVNF_CPU ) ) ,( Min( CRS ,ARS ) * ( CRS * MDR ) ) )", "choosing": "( Max( DS,RRSe ) * ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( MRS ,Min( AMS ,MRS ) ) ) - Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,RRSe ) / ( ( DS - MUR ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( BR / RRS ) + Min( MRS ,MDR ) ) - ( ( AMS + RRS ) - Min( MRS ,MRS ) ) )", "choosing": "( ( ( MUM + MLU ) + ( MUR + RCSe ) ) + ( MLU + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( BR / AMS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "Max( Max( MLU,RRSe ),Min( Min( ( ( ( ( MUC - ( DS - RMSe ) ) + CS ) / MLU ) + RMSe ) ,( ( ( RCSe + MUC ) + MUM ) / MLU ) ) ,Max( ( RMSe - ( MUM - RMSe ) ),( ( RMSe - MLU ) * ( RRSe + ( ( CS + MUM ) * ( RRSe / MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_Mem_Server + MRS ) + RRS ),( ( FirstVNF_Mem_Server + MRS ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) * DS ) )", "obj1": 0.07520325203252033, "obj2": 0.7591594980593469}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,Const ) - ( Const * FirstVNF_CPU ) ) / ( ( AMS + CRS ) / ( MDR + ACS ) ) ) ,( ( ( FirstVNF_RAM * RRS ) + Min( PN ,Const ) ) * Min( ( PN / DDR ) ,( DDR * ( ( ( ARS * FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ( DDR + MRS ) / ( MDR + Const ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC - RCSe ) / RCSe ) * MLU ) ,Min( ( ( Max( RMSe,( ( DS + DS ) - Max( CS,RCSe ) ) ) + ( CS * ( MUC * ( MLU + CS ) ) ) ) / RRSe ) ,( ( RRSe + MUC ) * RCSe ) ) )", "obj1": 0.9146341463414634, "obj2": 0.08631583208274443}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) ) ) )", "choosing": "( ( MUM + DS ) / MUM )", "obj1": 0.7520325203252033, "obj2": 0.19271660133824858}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) - ( DS * CS ) )", "obj1": 0.18089430894308944, "obj2": 0.6120997357063815}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MLU ) ,( RRSe - ( ( RCSe * CS ) + Max( MUR,CS ) ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5058390093393439}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.3882113821138211, "obj2": 0.4536306465430349}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server + MRS ) + MRS ) ) + MRS ) )", "choosing": "( ( DS - ( ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( RMSe * DS ) ) / ( RMSe * DS ) ) ) / ( RMSe * DS ) )", "obj1": 0.15853658536585366, "obj2": 0.6769136912601769}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * RRS ) - ( ( BR * RRS ) - Min( MRS ,MRS ) ) )", "choosing": "( MLU / ( DS * CS ) )", "obj1": 0.11788617886178862, "obj2": 0.6783150464609344}, {"determining": "Min( ( MDR / ( FirstVNF_Mem_Server + MRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / DS ) + ( MUM / MUC ) )", "obj1": 0.5467479674796748, "obj2": 0.306013918060451}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Max( FirstVNF_Mem,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * Min( ARS ,PN ) ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.02314309963996467}, {"determining": "( ( RRS + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) - Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( MLU + RRSe ),( MUM + MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.5386178861788617, "obj2": 0.349635363393819}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( ( ( AMS * Min( Min( FirstVNF_Mem ,DDR ) ,ARS ) ) + ( CRS * ACS ) ) * Min( MDR ,RRS ) )", "choosing": "Max( ( DS + RRSe ),( MUM + ( Max( Min( CS ,MUM ),Max( MUR,MUR ) ) / CS ) ) )", "obj1": 0.4369918699186992, "obj2": 0.42904287730787144}, {"determining": "Max( ( ARS + FirstVNF_RAM ),FirstVNF_RAM )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.5772357723577236, "obj2": 0.2828380227957031}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.6869918699186992, "obj2": 0.2582208142370423}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.25203252032520324, "obj2": 0.6088666457329321}, {"determining": "( ( AMS - CRS ) * MRS )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe * MUR ) + Max( MUR,CS ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.258130081300813, "obj2": 0.5536010316829036}, {"determining": "( ( BR / RRS ) - Min( MRS ,Min( ( ( MDR - Min( MRS ,FirstVNF_Mem_Server ) ) * RRS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS - MLU ) + MLU )", "obj1": 0.6361788617886179, "obj2": 0.2665000655772383}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - ( ( DS - CS ) / ( ( DS - CS ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.24390243902439024, "obj2": 0.6118851348411228}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MLU ) + ( CS * RMSe ) )", "obj1": 0.7439024390243902, "obj2": 0.2234295218686627}, {"determining": "( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4898373983739837, "obj2": 0.35228420276829175}, {"determining": "Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5322928858426473}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.7276422764227642, "obj2": 0.23184900338109427}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + RCSe ) - Min( ( CS * MUC ) ,RMSe ) )", "obj1": 0.39634146341463417, "obj2": 0.44324324930257797}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "( ( BR * ( ( BR * ACS ) - Min( MRS ,FirstVNF_Mem_Server ) ) ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM + RMSe ) + ( MLU / MUR ) ) - MUC ) + ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.021208218673737296}, {"determining": "( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( MUR / CS ),( RMSe * RRSe ) ) + ( MUM / MUC ) )", "obj1": 0.4268292682926829, "obj2": 0.43325009859532865}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * DS ) )", "obj1": 0.6199186991869918, "obj2": 0.2824863954702547}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - ( MUC / MLU ) ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5471781264016383}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.47560975609756095, "obj2": 0.3566568560720231}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RCSe * DS ) )", "obj1": 0.6280487804878049, "obj2": 0.27706179788086455}, {"determining": "( ( AMS - CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5166963942866016}, {"determining": "( ( AMS - CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5166963942866016}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + MRS ) + MRS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5490009642005547}, {"determining": "Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4634146341463415, "obj2": 0.3641200325836689}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * ( MDR / PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / ( DS / DS ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0010112920981660055}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "Min( Min( Min( Min( ( Max( ( ( CRS + MRS ) / Max( ARS,FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM ) ) / ( ( PN / FirstVNF_RAM_Server ) / Max( ARS,PN ) ) ) ) ,( Min( ( Min( MDR ,CRS ) - ( FirstVNF_RAM_Server * BR ) ) ,( Max( FirstVNF_CPU_Server,CRS ) * ( MDR * MRS ) ) ) / ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( MDR - RRS ) ) + Max( ( FirstVNF_RAM - MDR ),( BR - Const ) ) ) ) ) ,( ( ( Max( ( CRS - FirstVNF_RAM ),( RRS - ACS ) ) * ( Min( PN ,ARS ) + ( MDR / MDR ) ) ) * ( ( ( PN * Const ) + ( ACS / FirstVNF_RAM_Server ) ) / Max( ( DDR / FirstVNF_RAM ),( AMS * MRS ) ) ) ) * ( ( Max( Min( FirstVNF_RAM_Server ,PN ),( DDR / PN ) ) * ( Max( FirstVNF_Mem_Server,PN ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( MDR * FirstVNF_Mem ) / ( MDR * MRS ) ) * ( ( CRS + Const ) / ( PN + FirstVNF_RAM ) ) ) ) ) ) ,( ( ( Max( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server - ARS ) ),( ( FirstVNF_CPU / ARS ) - Min( CRS ,ARS ) ) ) - ( ( ( FirstVNF_CPU_Server * DDR ) / Max( FirstVNF_CPU,CRS ) ) / ( Max( FirstVNF_Mem_Server,DDR ) - ( FirstVNF_RAM / PN ) ) ) ) - ( ( ( Max( BR,PN ) / ( FirstVNF_Mem * Const ) ) + ( ( CRS * FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Const ) ) ) / ( ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU / BR ) ,( MDR * CRS ) ) ) ) ) + Min( ( ( ( ( FirstVNF_RAM_Server / MRS ) / Max( MDR,PN ) ) + ( ( FirstVNF_Mem_Server / AMS ) - ( Const * RRS ) ) ) * Min( ( ( BR / FirstVNF_CPU ) + Min( FirstVNF_Mem ,ACS ) ) ,Max( ( DDR + RRS ),Min( Const ,BR ) ) ) ) ,( ( ( Min( FirstVNF_Mem ,PN ) / ( FirstVNF_RAM + AMS ) ) + ( ( FirstVNF_CPU_Server + ARS ) + Min( Const ,FirstVNF_Mem_Server ) ) ) / ( Max( ( RRS / FirstVNF_RAM_Server ),Max( FirstVNF_CPU_Server,RRS ) ) - ( Max( RRS,AMS ) * ( CRS * BR ) ) ) ) ) ) ) ,Min( ( Max( Min( ( Max( Min( MRS ,FirstVNF_CPU_Server ),( DDR / PN ) ) * ( Max( FirstVNF_RAM,RRS ) / Max( MRS,PN ) ) ) ,( ( ( RRS + FirstVNF_CPU ) + ( RRS * MRS ) ) + ( ( ARS * FirstVNF_CPU_Server ) + Min( PN ,DDR ) ) ) ),Max( ( Max( ( AMS / MDR ),( FirstVNF_CPU / ARS ) ) + Min( Min( AMS ,FirstVNF_RAM ) ,( MRS + DDR ) ) ),Min( ( Max( MDR,CRS ) * ( FirstVNF_CPU_Server / CRS ) ) ,( ( MRS + RRS ) + ( PN - RRS ) ) ) ) ) * Max( Min( ( Min( ( FirstVNF_CPU_Server - MDR ) ,( MDR * PN ) ) / Max( Max( FirstVNF_Mem,Const ),( PN * Const ) ) ) ,Min( ( Max( FirstVNF_RAM,AMS ) + Max( BR,FirstVNF_RAM ) ) ,( ( DDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * ACS ) ) ) ),( ( ( Min( AMS ,FirstVNF_RAM ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( Min( FirstVNF_RAM_Server ,BR ) / ( Const - PN ) ) ) - ( ( Min( MRS ,AMS ) / ( FirstVNF_RAM * RRS ) ) + ( ( ARS - FirstVNF_CPU_Server ) - ( CRS / BR ) ) ) ) ) ) ,Max( Max( ( Min( Min( ( FirstVNF_Mem + AMS ) ,( MRS * MRS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( FirstVNF_CPU + MDR ) ) ) - ( ( ( FirstVNF_RAM * ACS ) * ( FirstVNF_RAM_Server * Const ) ) + Min( ( CRS * MRS ) ,Min( FirstVNF_Mem_Server ,AMS ) ) ) ),( Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + PN ) ) ,Max( ( AMS * ARS ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) * ( ( Max( ARS,CRS ) * Min( FirstVNF_RAM_Server ,BR ) ) * ( ( PN * PN ) / Max( DDR,ARS ) ) ) ) ),( ( ( ( ( ARS * FirstVNF_RAM ) + ( PN - RRS ) ) * ( Max( PN,FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_RAM * CRS ) + ( MRS * FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server - Const ) - ( DDR + FirstVNF_Mem_Server ) ) ) ) * ( ( ( Max( DDR,BR ) + ( BR - FirstVNF_CPU ) ) * Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) / Min( ( ( FirstVNF_RAM_Server / MRS ) - ( FirstVNF_RAM_Server + MRS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( Max( Min( ( MUM - DS ) ,( CS + RMSe ) ),( Min( MLU ,RMSe ) + Min( MUC ,MLU ) ) ),Min( ( ( MUR * CS ) + Max( RCSe,MUM ) ) ,( Max( CS,MLU ) - ( RRSe / RRSe ) ) ) ) - ( ( ( ( MLU * CS ) + Min( RRSe ,CS ) ) - ( Max( MUR,MUC ) + ( MUC + MLU ) ) ) / Min( ( ( MUR + DS ) - ( MUM - MUC ) ) ,( Max( RCSe,MUR ) / ( MUR / MLU ) ) ) ) ) * Max( ( ( Min( Max( MUR,RCSe ) ,( MUR - RMSe ) ) * ( Max( RCSe,DS ) * ( MUR * RRSe ) ) ) - ( ( ( CS + DS ) * Max( MUM,MUR ) ) * Max( ( MUC + RMSe ),Max( MUM,RMSe ) ) ) ),Max( ( ( ( CS / MUC ) * ( RCSe / MUR ) ) / ( Max( RRSe,MUC ) * ( CS * CS ) ) ),( ( ( RRSe * MUC ) + Max( DS,MLU ) ) * ( ( MUM * CS ) + ( MUC / MUM ) ) ) ) ) ) + ( ( ( Max( ( ( MUC + MUC ) + ( MUR * MUM ) ),( Min( MUR ,MUM ) * ( MUC / RCSe ) ) ) + ( ( ( DS * RCSe ) / Max( RCSe,MUM ) ) / ( Max( RMSe,MUC ) / Min( DS ,MUM ) ) ) ) / ( Min( ( Min( MLU ,MUR ) - ( MUR * MUR ) ) ,Max( ( MUC - MUM ),Max( RRSe,MUR ) ) ) + Max( Min( Min( DS ,CS ) ,Min( MUR ,DS ) ),Min( Min( RRSe ,RCSe ) ,( MUC * MUM ) ) ) ) ) + ( Min( ( ( Min( MUM ,MUC ) - ( MLU * RMSe ) ) * ( Max( MLU,CS ) + Max( MLU,RRSe ) ) ) ,( ( ( RMSe / MUC ) / ( RCSe - DS ) ) / ( ( MLU + RCSe ) - Max( RRSe,RMSe ) ) ) ) / ( Max( ( Min( MUC ,CS ) / ( RRSe + RCSe ) ),Min( ( DS * RRSe ) ,( MLU + DS ) ) ) + Max( ( ( MUC / RCSe ) - Min( DS ,RMSe ) ),Min( Min( MUC ,MUC ) ,( MUR - RMSe ) ) ) ) ) ) ) * Max( ( ( ( Max( Min( ( RCSe * DS ) ,( RRSe / MUC ) ),( ( RMSe / CS ) - ( RCSe * RRSe ) ) ) * ( Max( ( MUC * MUM ),Min( MUR ,RCSe ) ) - Min( Min( MUC ,RCSe ) ,( RRSe * MUM ) ) ) ) / Max( ( ( ( CS * CS ) / ( MLU * MUR ) ) + ( Min( RRSe ,MUM ) + ( RRSe / MUC ) ) ),Max( ( Min( DS ,MUM ) - ( RMSe + DS ) ),Min( Max( RMSe,RMSe ) ,( RMSe - MUC ) ) ) ) ) * Min( ( ( ( ( MUC + RRSe ) / Max( MUM,CS ) ) * Max( ( MUM / MUC ),( RMSe / CS ) ) ) / ( ( ( RMSe * MUC ) / ( MUR * MUC ) ) * ( ( MUM + MUC ) + Max( MLU,RRSe ) ) ) ) ,Min( ( ( ( RCSe / MUR ) + Min( MUM ,RMSe ) ) / ( Max( CS,RMSe ) - ( MLU / MUR ) ) ) ,( ( Max( RCSe,RCSe ) - Max( MUM,DS ) ) / Min( ( CS - MLU ) ,Min( DS ,DS ) ) ) ) ) ),Min( Max( ( Min( Min( Max( CS,MLU ) ,( MLU + DS ) ) ,( Min( MLU ,RRSe ) - ( RCSe / MUC ) ) ) / ( ( Max( RRSe,MUC ) * ( DS / MUC ) ) + Min( ( MUM * RMSe ) ,( MUM * CS ) ) ) ),( ( ( ( CS / RMSe ) / Min( MUR ,MUC ) ) - Max( ( MUC + MUC ),( RMSe + MUC ) ) ) * Min( Min( ( MUR + MLU ) ,Min( MUR ,RRSe ) ) ,( ( RMSe + RMSe ) * Max( DS,MUR ) ) ) ) ) ,( Max( ( Min( Max( RCSe,MUM ) ,Max( MUC,RRSe ) ) - ( ( MUR - MUC ) + ( MUC * MUR ) ) ),( ( Max( CS,MUC ) - Max( MUC,RMSe ) ) * Min( ( RRSe - RMSe ) ,( RCSe - MUC ) ) ) ) * ( Max( Min( ( RRSe + MLU ) ,( CS + MLU ) ),( ( MUM - MUR ) / Max( MUM,MUR ) ) ) + ( ( Min( MUR ,DS ) - ( CS / RCSe ) ) + ( ( MLU * MLU ) - Max( MUC,CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( MRS - ARS ) )", "choosing": "( ( RCSe * ( Max( ( MLU * CS ),( RMSe + RMSe ) ) / ( ( RMSe * CS ) - ( RMSe * RRSe ) ) ) ) + ( Max( MUC,MLU ) + ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( PN * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),( FirstVNF_Mem_Server * DDR ) ) / ( ( PN * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - RRS ) ) * Max( ( FirstVNF_Mem * MRS ),Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( Min( Min( MUR ,DS ) ,MLU ) ,Min( CS ,RCSe ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * RRS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) / ( DS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_CPU ) - Max( FirstVNF_CPU,BR ) )", "choosing": "( Max( MUC,MUM ) * Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( BR * RRS ) - ( ( BR * RRS ) - ( ( BR * RRS ) - Min( MRS ,ARS ) ) ) )", "choosing": "( MLU / ( MLU / ( DS - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / RRS ) + Min( MRS ,MDR ) ) - ( ( AMS + RRS ) - Min( MRS ,MRS ) ) )", "choosing": "( ( ( MUM + MLU ) + ( MUR + RCSe ) ) + ( MLU + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_Mem_Server + MRS ) + RRS ),( ( FirstVNF_Mem_Server + MRS ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) * DS ) )", "obj1": 0.07520325203252033, "obj2": 0.7591594980593469}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MLU * MUM ) / ( DS - Max( DS,( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) ) ) )", "obj1": 0.8922764227642277, "obj2": 0.11181137243052452}, {"determining": "( ( ( ( ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),Min( ACS ,DDR ) ) ,Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - FirstVNF_Mem_Server ) ) ) ) / Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Min( DDR ,FirstVNF_RAM_Server ) ) * Max( ( CRS - FirstVNF_CPU ),( MRS / BR ) ) ),( ( ( MDR / MRS ) - Min( AMS ,Const ) ) / ( Max( ACS,DDR ) + Min( FirstVNF_CPU ,RRS ) ) ) ) ) + Min( ( Max( Min( ( CRS + FirstVNF_CPU_Server ) ,( MDR - Const ) ),Max( ( BR / FirstVNF_CPU_Server ),Max( AMS,ARS ) ) ) / ( ( Min( CRS ,PN ) / ( CRS * CRS ) ) * ( ( RRS + Const ) * ( FirstVNF_Mem * MRS ) ) ) ) ,( ( Min( Min( BR ,ARS ) ,Max( ARS,ACS ) ) - ( Max( CRS,FirstVNF_RAM ) + ( FirstVNF_CPU_Server - DDR ) ) ) + Max( Max( ( MDR + Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ),( ( CRS - BR ) / Min( RRS ,FirstVNF_Mem ) ) ) ) ) ) - ( Min( Max( ( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_CPU + DDR ) ) - ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server / RRS ) ) ),( ( ( BR * BR ) * Min( FirstVNF_RAM_Server ,AMS ) ) - ( ( MDR - CRS ) / ( ACS * FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem_Server + DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Min( ( RRS - ARS ) ,Min( AMS ,CRS ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,PN ) ) / Min( ( MDR - FirstVNF_RAM ) ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) * Max( ( Min( ( Min( FirstVNF_CPU_Server ,DDR ) + Max( DDR,FirstVNF_CPU ) ) ,( ( CRS * AMS ) * Max( Const,ARS ) ) ) - ( ( ( ARS + ARS ) * ( FirstVNF_RAM + RRS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / MDR ) ) ) ),Max( ( ( ( RRS / AMS ) + ( MDR + FirstVNF_Mem ) ) * ( ( MDR + FirstVNF_CPU ) / Min( MDR ,FirstVNF_CPU_Server ) ) ),Max( Max( ( AMS * PN ),( BR + ACS ) ),( Min( MRS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem / RRS ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( ACS / Const ) * ( MDR / MRS ) ),( ( FirstVNF_CPU_Server / AMS ) * Max( CRS,FirstVNF_CPU ) ) ) - ( Min( ( CRS + FirstVNF_RAM_Server ) ,( PN * MDR ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) + Max( FirstVNF_Mem,PN ) ) ) ) + ( Min( ( ( FirstVNF_CPU_Server - CRS ) / ( AMS - ARS ) ) ,( Min( MDR ,AMS ) - ( AMS - Const ) ) ) / ( Min( ( RRS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( ACS ,CRS ) ) ) ) ) - ( Min( ( ( ( ARS - MDR ) / ( MDR + FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ,Min( ( ( MDR - BR ) * ( FirstVNF_Mem * CRS ) ) ,( Min( ACS ,FirstVNF_CPU_Server ) / ( PN / FirstVNF_RAM ) ) ) ) + ( ( Min( ( MRS + DDR ) ,( FirstVNF_Mem_Server * RRS ) ) * ( ( ARS + FirstVNF_RAM_Server ) + ( BR - ACS ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( BR + FirstVNF_Mem ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) ) / ( ( Max( ( Min( Min( Const ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) + ( ( MDR * ACS ) - ( PN - FirstVNF_RAM_Server ) ) ),( ( Max( FirstVNF_Mem,AMS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem / BR ) + ( FirstVNF_Mem_Server * MDR ) ) ) ) - ( Min( ( Max( ACS,RRS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ,Min( ( FirstVNF_CPU / PN ) ,( MDR / FirstVNF_RAM ) ) ) - ( Max( ( ACS - BR ),Min( FirstVNF_CPU_Server ,ACS ) ) * Max( ( RRS + FirstVNF_RAM_Server ),Max( ACS,FirstVNF_RAM ) ) ) ) ) - ( Min( ( ( ( Const + MDR ) - ( Const - CRS ) ) * Min( Max( BR,MDR ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( FirstVNF_Mem_Server * DDR ),Min( AMS ,FirstVNF_Mem ) ) * ( Min( ARS ,MDR ) / ( BR - DDR ) ) ) ) + ( ( ( Min( FirstVNF_CPU_Server ,ARS ) * ( AMS - FirstVNF_Mem ) ) + Max( Max( MDR,ACS ),Max( PN,FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_Mem_Server / RRS ) ) - Min( ( BR - FirstVNF_RAM_Server ) ,( RRS / Const ) ) ) ) ) ) ) )", "choosing": "Max( ( RRSe / Max( ( Min( CS ,CS ) * ( MLU + MLU ) ),RRSe ) ),Min( ( Min( Max( ( MUM / ( ( MUR - CS ) * CS ) ),Min( ( ( MUR * CS ) * ( MUM + MLU ) ) ,MUM ) ) ,( ( RMSe / Min( MUM ,CS ) ) + RMSe ) ) - DS ) ,( CS + DS ) ) )", "obj1": 0.7682926829268293, "obj2": 0.18814878936071192}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9044715447154471, "obj2": 0.072748496530392}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) - ( DS * CS ) )", "obj1": 0.18089430894308944, "obj2": 0.6120997357063815}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * RRS ) - ( ( BR * RRS ) - Min( MRS ,MRS ) ) )", "choosing": "( MLU / ( DS * CS ) )", "obj1": 0.11788617886178862, "obj2": 0.6783150464609344}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Max( FirstVNF_Mem,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * Min( ARS ,PN ) ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.02314309963996467}, {"determining": "Min( ( MDR / ( FirstVNF_Mem_Server + MRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / DS ) + ( MUM / MUC ) )", "obj1": 0.5467479674796748, "obj2": 0.306013918060451}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( ( ( AMS * Min( Min( FirstVNF_Mem ,DDR ) ,ARS ) ) + ( CRS * ACS ) ) * Min( MDR ,RRS ) )", "choosing": "Max( ( DS + RRSe ),( MUM + ( Max( Min( CS ,MUM ),Max( MUR,MUR ) ) / CS ) ) )", "obj1": 0.4369918699186992, "obj2": 0.42904287730787144}, {"determining": "Max( ( ARS + FirstVNF_RAM ),FirstVNF_RAM )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.5772357723577236, "obj2": 0.2828380227957031}, {"determining": "Max( ( ARS + RRS ),( ( ( AMS * CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) - ( ( MUR * DS ) + ( DS + MUR ) ) ) ) * DS ) )", "obj1": 0.17073170731707318, "obj2": 0.6587643893489153}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.6869918699186992, "obj2": 0.2582208142370423}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.25203252032520324, "obj2": 0.6088666457329321}, {"determining": "( ( AMS - CRS ) * MRS )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe * MUR ) + Max( MUR,CS ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.258130081300813, "obj2": 0.5536010316829036}, {"determining": "( ( BR / RRS ) - Min( MRS ,Min( ( ( MDR - Min( MRS ,FirstVNF_Mem_Server ) ) * RRS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS - MLU ) + MLU )", "obj1": 0.6361788617886179, "obj2": 0.2665000655772383}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.3882113821138211, "obj2": 0.4536306465430349}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MLU ) ,( RRSe - ( ( RCSe * CS ) + Max( MUR,CS ) ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5058390093393439}, {"determining": "Min( Max( RRS,ARS ) ,Max( RRS,ARS ) )", "choosing": "Min( ( MUC / MLU ) ,MUC )", "obj1": 0.3821138211382114, "obj2": 0.49789676730846144}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server + MRS ) + MRS ) ) + MRS ) )", "choosing": "( ( DS - ( ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( RMSe * DS ) ) / ( RMSe * DS ) ) ) / ( RMSe * DS ) )", "obj1": 0.15853658536585366, "obj2": 0.6769136912601769}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - ( ( DS - CS ) / ( ( DS - CS ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.24390243902439024, "obj2": 0.6118851348411228}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MLU ) + ( CS * RMSe ) )", "obj1": 0.7439024390243902, "obj2": 0.2234295218686627}, {"determining": "( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4898373983739837, "obj2": 0.35228420276829175}, {"determining": "Min( ARS ,( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe + MUM ) ,( RMSe + MUM ) )", "obj1": 0.3719512195121951, "obj2": 0.5045484470362519}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5322928858426473}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) ) ) )", "choosing": "( ( MUM + DS ) / MUM )", "obj1": 0.7520325203252033, "obj2": 0.19271660133824858}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.7276422764227642, "obj2": 0.23184900338109427}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + RCSe ) - Min( ( CS * MUC ) ,RMSe ) )", "obj1": 0.39634146341463417, "obj2": 0.44324324930257797}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + RRS ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * ( DS / CS ) ) ) ) / ( MUM * DS ) )", "obj1": 0.5426829268292683, "obj2": 0.34645206818532376}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "( ( RRS + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * DDR ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) - Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( MLU + RRSe ),( MUM + MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.5386178861788617, "obj2": 0.349635363393819}, {"determining": "( ( BR * ( ( BR * ACS ) - Min( MRS ,FirstVNF_Mem_Server ) ) ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM + RMSe ) + ( MLU / MUR ) ) - MUC ) + ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.021208218673737296}, {"determining": "( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( MUR / CS ),( RMSe * RRSe ) ) + ( MUM / MUC ) )", "obj1": 0.4268292682926829, "obj2": 0.43325009859532865}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * DS ) )", "obj1": 0.6199186991869918, "obj2": 0.2824863954702547}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - ( MUC / MLU ) ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5471781264016383}, {"determining": "Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.47560975609756095, "obj2": 0.3566568560720231}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RCSe * DS ) )", "obj1": 0.6280487804878049, "obj2": 0.27706179788086455}, {"determining": "( ( AMS - CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5166963942866016}, {"determining": "( ( AMS - CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5166963942866016}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + MRS ) + MRS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5490009642005547}, {"determining": "Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4634146341463415, "obj2": 0.3641200325836689}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * ( MDR / PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / ( DS / DS ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0010112920981660055}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}], "8": [{"determining": "( ( BR / RRS ) - Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MLU ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * RRS ) - ( ( BR * RRS ) - ( ( BR * RRS ) - Min( MRS ,ARS ) ) ) )", "choosing": "( MLU / ( MLU / ( DS - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_Mem_Server + MRS ) + RRS ),( ( FirstVNF_Mem_Server + MRS ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) * DS ) )", "obj1": 0.07520325203252033, "obj2": 0.7591594980593469}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MLU * MUM ) / ( DS - Max( DS,( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) ) ) )", "obj1": 0.8922764227642277, "obj2": 0.11181137243052452}, {"determining": "( ( ( ( ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),Min( ACS ,DDR ) ) ,Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - FirstVNF_Mem_Server ) ) ) ) / Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Min( DDR ,FirstVNF_RAM_Server ) ) * Max( ( CRS - FirstVNF_CPU ),( MRS / BR ) ) ),( ( ( MDR / MRS ) - Min( AMS ,Const ) ) / ( Max( ACS,DDR ) + Min( FirstVNF_CPU ,RRS ) ) ) ) ) + Min( ( Max( Min( ( CRS + FirstVNF_CPU_Server ) ,( MDR - Const ) ),Max( ( BR / FirstVNF_CPU_Server ),Max( AMS,ARS ) ) ) / ( ( Min( CRS ,PN ) / ( CRS * CRS ) ) * ( ( RRS + Const ) * ( FirstVNF_Mem * MRS ) ) ) ) ,( ( Min( Min( BR ,ARS ) ,Max( ARS,ACS ) ) - ( Max( CRS,FirstVNF_RAM ) + ( FirstVNF_CPU_Server - DDR ) ) ) + Max( Max( ( MDR + Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ),( ( CRS - BR ) / Min( RRS ,FirstVNF_Mem ) ) ) ) ) ) - ( Min( Max( ( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_CPU + DDR ) ) - ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server / RRS ) ) ),( ( ( BR * BR ) * Min( FirstVNF_RAM_Server ,AMS ) ) - ( ( MDR - CRS ) / ( ACS * FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem_Server + DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Min( ( RRS - ARS ) ,Min( AMS ,CRS ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,PN ) ) / Min( ( MDR - FirstVNF_RAM ) ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) * Max( ( Min( ( Min( FirstVNF_CPU_Server ,DDR ) + Max( DDR,FirstVNF_CPU ) ) ,( ( CRS * AMS ) * Max( Const,ARS ) ) ) - ( ( ( ARS + ARS ) * ( FirstVNF_RAM + RRS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / MDR ) ) ) ),Max( ( ( ( RRS / AMS ) + ( MDR + FirstVNF_Mem ) ) * ( ( MDR + FirstVNF_CPU ) / Min( MDR ,FirstVNF_CPU_Server ) ) ),Max( Max( ( AMS * PN ),( BR + ACS ) ),( Min( MRS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem / RRS ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( ACS / Const ) * ( MDR / MRS ) ),( ( FirstVNF_CPU_Server / AMS ) * Max( CRS,FirstVNF_CPU ) ) ) - ( Min( ( CRS + FirstVNF_RAM_Server ) ,( PN * MDR ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) + Max( FirstVNF_Mem,PN ) ) ) ) + ( Min( ( ( FirstVNF_CPU_Server - CRS ) / ( AMS - ARS ) ) ,( Min( MDR ,AMS ) - ( AMS - Const ) ) ) / ( Min( ( RRS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( ACS ,CRS ) ) ) ) ) - ( Min( ( ( ( ARS - MDR ) / ( MDR + FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ,Min( ( ( MDR - BR ) * ( FirstVNF_Mem * CRS ) ) ,( Min( ACS ,FirstVNF_CPU_Server ) / ( PN / FirstVNF_RAM ) ) ) ) + ( ( Min( ( MRS + DDR ) ,( FirstVNF_Mem_Server * RRS ) ) * ( ( ARS + FirstVNF_RAM_Server ) + ( BR - ACS ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( BR + FirstVNF_Mem ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) ) / ( ( Max( ( Min( Min( Const ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) + ( ( MDR * ACS ) - ( PN - FirstVNF_RAM_Server ) ) ),( ( Max( FirstVNF_Mem,AMS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem / BR ) + ( FirstVNF_Mem_Server * MDR ) ) ) ) - ( Min( ( Max( ACS,RRS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ,Min( ( FirstVNF_CPU / PN ) ,( MDR / FirstVNF_RAM ) ) ) - ( Max( ( ACS - BR ),Min( FirstVNF_CPU_Server ,ACS ) ) * Max( ( RRS + FirstVNF_RAM_Server ),Max( ACS,FirstVNF_RAM ) ) ) ) ) - ( Min( ( ( ( Const + MDR ) - ( Const - CRS ) ) * Min( Max( BR,MDR ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( FirstVNF_Mem_Server * DDR ),Min( AMS ,FirstVNF_Mem ) ) * ( Min( ARS ,MDR ) / ( BR - DDR ) ) ) ) + ( ( ( Min( FirstVNF_CPU_Server ,ARS ) * ( AMS - FirstVNF_Mem ) ) + Max( Max( MDR,ACS ),Max( PN,FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_Mem_Server / RRS ) ) - Min( ( BR - FirstVNF_RAM_Server ) ,( RRS / Const ) ) ) ) ) ) ) )", "choosing": "Max( ( RRSe / Max( ( Min( CS ,CS ) * ( MLU + MLU ) ),RRSe ) ),Min( ( Min( Max( ( MUM / ( ( MUR - CS ) * CS ) ),Min( ( ( MUR * CS ) * ( MUM + MLU ) ) ,MUM ) ) ,( ( RMSe / Min( MUM ,CS ) ) + RMSe ) ) - DS ) ,( CS + DS ) ) )", "obj1": 0.7682926829268293, "obj2": 0.18814878936071192}, {"determining": "Min( ( MDR / ( FirstVNF_Mem_Server + MRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / DS ) + ( MUM / MUC ) )", "obj1": 0.5467479674796748, "obj2": 0.306013918060451}, {"determining": "( ( MRS * Min( ARS ,FirstVNF_RAM_Server ) ) - Min( MRS ,MRS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MLU,RRSe ) )", "obj1": 0.48577235772357724, "obj2": 0.33004699547721433}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) - ( DS * CS ) )", "obj1": 0.18089430894308944, "obj2": 0.6120997357063815}, {"determining": "Max( ( ARS + RRS ),( ( ( AMS * CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) - ( ( MUR * DS ) + ( DS + MUR ) ) ) ) * DS ) )", "obj1": 0.17073170731707318, "obj2": 0.6587643893489153}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * RRS ) - ( ( BR * RRS ) - Min( MRS ,MRS ) ) )", "choosing": "( MLU / ( DS * CS ) )", "obj1": 0.11788617886178862, "obj2": 0.6783150464609344}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Max( FirstVNF_Mem,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * Min( ARS ,PN ) ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.02314309963996467}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) / ( DS + MUR ) )", "obj1": 0.4349593495934959, "obj2": 0.4086948328979217}, {"determining": "Max( ( ARS + FirstVNF_RAM ),FirstVNF_RAM )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.5772357723577236, "obj2": 0.2828380227957031}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.6869918699186992, "obj2": 0.2582208142370423}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9065040650406504, "obj2": 0.0709629027420639}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.25203252032520324, "obj2": 0.6088666457329321}, {"determining": "( ( AMS - CRS ) * MRS )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe * MUR ) + Max( MUR,CS ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.258130081300813, "obj2": 0.5536010316829036}, {"determining": "( ( BR / RRS ) - Min( MRS ,Min( ( ( MDR - Min( MRS ,FirstVNF_Mem_Server ) ) * RRS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS - MLU ) + MLU )", "obj1": 0.6361788617886179, "obj2": 0.2665000655772383}, {"determining": "( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( MUR / CS ),( RMSe * RRSe ) ) + ( MUM / MUC ) )", "obj1": 0.4268292682926829, "obj2": 0.43325009859532865}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / RRSe ) / ( DS + ( DS * CS ) ) )", "obj1": 0.14227642276422764, "obj2": 0.6729081273518456}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - ( ( DS - CS ) / ( ( DS - CS ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.24390243902439024, "obj2": 0.6118851348411228}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5322928858426473}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MLU ) + ( CS * RMSe ) )", "obj1": 0.7439024390243902, "obj2": 0.2234295218686627}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MLU ) ,( RRSe - ( ( RCSe * CS ) + Max( MUR,CS ) ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5058390093393439}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( ( BR / RRS ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS - Max( ( DS * CS ),( Max( MLU,MLU ) / ( DS - MUC ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.3048780487804878, "obj2": 0.5095444766558691}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) ) ) )", "choosing": "( ( MUM + DS ) / MUM )", "obj1": 0.7520325203252033, "obj2": 0.19271660133824858}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.7276422764227642, "obj2": 0.23184900338109427}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9044715447154471, "obj2": 0.072748496530392}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + RCSe ) - Min( ( CS * MUC ) ,RMSe ) )", "obj1": 0.39634146341463417, "obj2": 0.44324324930257797}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "( Max( Max( ( ( Max( Max( ( MDR - AMS ),( FirstVNF_RAM - FirstVNF_Mem ) ),( Max( PN,FirstVNF_RAM ) - Max( CRS,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / ( MRS + AMS ) ) - ( ( ACS / FirstVNF_Mem ) + ( CRS * ACS ) ) ) ) / ( ( ( Max( FirstVNF_Mem,BR ) + Min( DDR ,Const ) ) * ( ( RRS - PN ) * ( Const - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,Min( DDR ,CRS ) ) - Max( Min( ACS ,Const ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ),( ( ( Max( ( ACS * BR ),( FirstVNF_Mem_Server - ACS ) ) - ( ( MDR + AMS ) / ( MRS + ARS ) ) ) / ( Max( ( CRS / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) * Min( ( Const - ACS ) ,( BR + DDR ) ) ) ) + Max( ( ( ( PN * FirstVNF_CPU ) / ( BR - FirstVNF_RAM_Server ) ) * ( ( CRS - FirstVNF_RAM ) * ( MDR + PN ) ) ),( ( ( DDR + ACS ) * ( ARS + BR ) ) / Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Max( ACS,RRS ) * ( MDR - Const ) ) / ( ( CRS - BR ) / ( CRS - MDR ) ) ) + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server / BR ),( FirstVNF_Mem_Server + ARS ) ) ) ) ,( ( ( Max( FirstVNF_CPU,DDR ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Min( CRS ,ACS ) + ( MDR - DDR ) ) ) + ( ( ( FirstVNF_RAM / DDR ) - Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( ARS ,FirstVNF_RAM ) ) ) ) ) + Max( ( ( ( ( PN + FirstVNF_CPU ) * ( BR * MDR ) ) + ( ( CRS + MDR ) * Min( CRS ,MRS ) ) ) * ( ( ( BR * FirstVNF_RAM_Server ) - Max( AMS,MRS ) ) / ( ( AMS / ARS ) - ( DDR * FirstVNF_CPU ) ) ) ),( ( Min( Min( BR ,FirstVNF_Mem ) ,( MRS * RRS ) ) + ( ( MRS - FirstVNF_CPU ) * ( RRS * FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_Mem_Server * DDR ) * ( BR - BR ) ) ,Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_RAM - Const ) ) / ( ( BR + AMS ) * ( FirstVNF_RAM_Server / AMS ) ) ) ,Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ( FirstVNF_CPU * CRS ) ) ,( ( MRS / ACS ) / ( PN / PN ) ) ) ) - ( Max( Max( ( AMS + ACS ),( AMS - FirstVNF_RAM ) ),Min( ( MDR - MDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Max( ( ( PN * AMS ) / ( BR * FirstVNF_Mem ) ),( Min( BR ,FirstVNF_Mem_Server ) + Max( Const,CRS ) ) ) ) ) - ( Min( Max( Min( ( DDR / BR ) ,Max( ARS,FirstVNF_Mem ) ),( Min( PN ,RRS ) * Min( FirstVNF_RAM ,RRS ) ) ) ,( ( Max( Const,CRS ) / ( FirstVNF_CPU_Server - MRS ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) * ( CRS / ACS ) ) ) ) / ( ( ( Max( BR,FirstVNF_CPU ) / ( BR * FirstVNF_Mem ) ) * Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,( PN * ACS ) ) ) + Max( ( ( FirstVNF_CPU_Server / BR ) / ( ARS * Const ) ),Max( Min( CRS ,FirstVNF_CPU ),( Const + ACS ) ) ) ) ) ),( ( ( Max( ( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,DDR ) ),( Max( CRS,FirstVNF_CPU ) * ( FirstVNF_Mem / RRS ) ) ) + ( ( Max( MDR,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * BR ) ) + ( Min( BR ,CRS ) * ( PN * MDR ) ) ) ) / Max( ( ( ( MRS * AMS ) / ( CRS + FirstVNF_RAM ) ) * Min( ( ACS - MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ),( ( ( MRS / BR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) - Min( ( ( Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,( Const + FirstVNF_Mem_Server ) ) - ( ( BR + RRS ) * ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( ( DDR + ARS ) / Max( RRS,AMS ) ) - Max( ( MRS - RRS ),( CRS * FirstVNF_Mem ) ) ) ) ,Max( ( Max( ( DDR * FirstVNF_CPU_Server ),( Const / FirstVNF_CPU ) ) - Min( ( MDR - ACS ) ,( ARS + MDR ) ) ),Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Max( Max( DDR,CRS ),( MDR + FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( Max( ( CS + CS ),( RRSe * RRSe ) ) + Min( ( MUR - MLU ) ,Min( RMSe ,CS ) ) ) - ( ( ( MLU + RMSe ) * ( DS - RRSe ) ) - ( ( DS - MUC ) * ( DS / DS ) ) ) ) / ( ( Min( Max( DS,RCSe ) ,Max( MUC,MUC ) ) + Max( Max( DS,RRSe ),Max( RRSe,MUC ) ) ) * ( Min( ( DS * DS ) ,( RMSe - MUM ) ) / ( ( CS * MLU ) * ( RRSe + MLU ) ) ) ) ) / ( Max( ( Max( ( MUC * MUR ),Min( RRSe ,CS ) ) / ( Max( RMSe,MLU ) * ( RMSe + CS ) ) ),( ( ( MUR * MLU ) - ( RRSe - RCSe ) ) - ( ( CS / RMSe ) - ( CS + MLU ) ) ) ) / ( ( ( ( RMSe / MUC ) - ( MUM / CS ) ) / ( Max( CS,RCSe ) * Max( DS,DS ) ) ) / Max( ( Min( CS ,CS ) / ( MUC * RCSe ) ),( ( RRSe / RMSe ) + ( RRSe * RCSe ) ) ) ) ) ),Max( ( Min( ( Min( Max( CS,MUR ) ,( RRSe - MUR ) ) / ( ( DS * DS ) - ( DS - MUM ) ) ) ,Max( ( ( MUM + RCSe ) / ( MUR - MUM ) ),( ( RMSe / MUM ) + Max( RMSe,CS ) ) ) ) + ( Min( Min( ( RCSe / DS ) ,( MUC * DS ) ) ,( Max( MLU,RRSe ) * ( CS * RRSe ) ) ) / ( Max( ( RRSe / RCSe ),( CS - MUM ) ) / Min( ( RRSe - MUC ) ,( MUR + RRSe ) ) ) ) ),( ( ( Max( Min( MLU ,MLU ),Min( DS ,DS ) ) - Min( Min( RMSe ,RRSe ) ,( MUC + MLU ) ) ) - ( Max( ( MUC + RMSe ),Max( MLU,RRSe ) ) * ( ( MUR * RRSe ) - ( RRSe - RCSe ) ) ) ) * Min( ( Min( ( MUM - MLU ) ,( MLU / MUR ) ) + ( ( RCSe + MLU ) / Min( MUC ,MUC ) ) ) ,( Min( ( RMSe / RRSe ) ,( RMSe - MLU ) ) * ( Max( CS,DS ) + ( MUC - MUM ) ) ) ) ) ) ) / Min( Max( ( Max( Max( ( ( RMSe + RCSe ) * ( MUM - RRSe ) ),( Max( MUC,MUC ) + ( RCSe + DS ) ) ),( ( ( RMSe * MLU ) * Max( CS,DS ) ) * ( ( RCSe * MLU ) * ( MLU - MUR ) ) ) ) * Max( ( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) - ( ( MLU / RMSe ) / ( MUC * DS ) ) ),( ( ( CS / RRSe ) + Min( MLU ,CS ) ) + ( ( RRSe + RMSe ) + ( MUR * RRSe ) ) ) ) ),( Max( ( ( ( MLU + RCSe ) * ( MUR + MUM ) ) - ( ( MUM - DS ) / Min( MUC ,MUC ) ) ),( ( Max( MUC,RCSe ) - ( CS / CS ) ) - Max( ( MUR * CS ),( RRSe - MUC ) ) ) ) * ( Min( ( ( DS * DS ) - ( RRSe / CS ) ) ,( Min( MUM ,RCSe ) / Max( MUM,RMSe ) ) ) - ( ( Max( MUR,RMSe ) - ( RCSe / MUC ) ) / ( Max( MUM,RRSe ) * ( MUC / RCSe ) ) ) ) ) ) ,( Min( Max( ( Min( Max( DS,MUC ) ,( MLU - RMSe ) ) - ( ( MUC / RCSe ) - ( RRSe - CS ) ) ),( Max( ( RCSe * MUC ),( MLU / DS ) ) - Max( Max( DS,DS ),( CS + MLU ) ) ) ) ,( ( ( ( MLU + RCSe ) - Max( RRSe,MUR ) ) * ( Min( MLU ,MUM ) / Max( MUR,DS ) ) ) - ( ( ( RMSe + DS ) - ( MUR + RRSe ) ) / ( Min( MUC ,DS ) * ( MUC - CS ) ) ) ) ) / Max( Min( ( ( ( MUM * MUC ) / Max( RCSe,MUC ) ) * ( ( RMSe / CS ) / ( MUC / MUM ) ) ) ,Min( ( ( RMSe + DS ) / ( MUM / RRSe ) ) ,Min( Max( CS,RCSe ) ,Max( RRSe,MLU ) ) ) ),Min( Max( ( ( RMSe * RMSe ) * ( MUC * RRSe ) ),( Min( MUM ,MUR ) - ( RRSe + DS ) ) ) ,Max( ( Min( RRSe ,RMSe ) + ( DS + RCSe ) ),( ( MUM - RMSe ) + ( RMSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.38414634146341464, "obj2": 0.4819945659120335}, {"determining": "( ( BR * ( ( BR * ACS ) - Min( MRS ,FirstVNF_Mem_Server ) ) ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM + RMSe ) + ( MLU / MUR ) ) - MUC ) + ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.021208218673737296}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.47560975609756095, "obj2": 0.3566568560720231}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.3882113821138211, "obj2": 0.4536306465430349}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( ( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * DS ) )", "obj1": 0.6199186991869918, "obj2": 0.2824863954702547}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "Min( Max( FirstVNF_CPU,PN ) ,( ( MRS + ACS ) + ACS ) )", "choosing": "Min( ( MUM / MUC ) ,( RRSe - ( ( RCSe * MUR ) + ( RRSe - ( ( RCSe * MUR ) + ( MUR / CS ) ) ) ) ) )", "obj1": 0.3699186991869919, "obj2": 0.504607642353731}, {"determining": "Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - ( MUC / MLU ) ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5471781264016383}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ACS - PN ) )", "choosing": "( Max( MUC,MLU ) + ( RCSe * DS ) )", "obj1": 0.6280487804878049, "obj2": 0.27706179788086455}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "Min( Max( RRS,ARS ) ,Max( RRS,ARS ) )", "choosing": "Min( ( MUC / MLU ) ,MUC )", "obj1": 0.3821138211382114, "obj2": 0.49789676730846144}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + MRS ) + MRS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5490009642005547}, {"determining": "( ( Min( PN ,Const ) / ( ( ( MDR - MDR ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( DS + MUR ) / ( CS + MLU ) ) )", "obj1": 0.3780487804878049, "obj2": 0.49869667527866945}, {"determining": "Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4634146341463415, "obj2": 0.3641200325836689}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * ( MDR / PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / ( DS / DS ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0010112920981660055}, {"determining": "Min( ARS ,( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe + MUM ) ,( RMSe + MUM ) )", "obj1": 0.3719512195121951, "obj2": 0.5045484470362519}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}], "9": [{"determining": "Min( ( Min( Min( ( ( ( Min( ARS ,PN ) - Min( RRS ,CRS ) ) - ( ( FirstVNF_CPU * BR ) + Max( BR,PN ) ) ) + ( Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( PN * AMS ) ) + ( ( FirstVNF_CPU_Server - ARS ) * ( PN / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( ( PN + DDR ) ,Min( PN ,PN ) ) + ( ( MDR / ARS ) / ( FirstVNF_Mem / AMS ) ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - ( CRS / MRS ) ) * ( ( FirstVNF_Mem_Server + CRS ) - ( RRS * RRS ) ) ) ) ) ,( ( Max( ( ( MRS + Const ) - ( ARS * FirstVNF_CPU_Server ) ),( ( RRS / AMS ) + ( FirstVNF_Mem_Server * Const ) ) ) - ( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Min( Min( ARS ,MRS ) ,Max( MDR,FirstVNF_RAM ) ) ) ) * Max( Min( ( ( MRS * FirstVNF_RAM ) * Min( MDR ,Const ) ) ,( Max( FirstVNF_RAM,FirstVNF_Mem ) * Min( Const ,FirstVNF_Mem ) ) ),( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( RRS - AMS ) ) * Max( Max( BR,MDR ),( ACS + ARS ) ) ) ) ) ) / Max( ( ( ( ( Max( DDR,BR ) - ( FirstVNF_Mem + CRS ) ) + Max( ( CRS - CRS ),( CRS - ACS ) ) ) * Min( ( Min( PN ,ARS ) / ( RRS / RRS ) ) ,Min( ( AMS / FirstVNF_CPU ) ,( BR + DDR ) ) ) ) * Max( Max( ( Max( ARS,FirstVNF_CPU_Server ) * ( CRS - FirstVNF_Mem ) ),( ( MRS / ACS ) + ( FirstVNF_Mem + MRS ) ) ),( ( ( BR - FirstVNF_Mem ) + ( MRS / BR ) ) - Min( ( MRS / MRS ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ),( Max( ( ( ( AMS / MDR ) * Min( FirstVNF_CPU ,ACS ) ) * Max( ( AMS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / Const ) ) ),( ( Min( BR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( RRS - Const ) ) ) ) * ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( FirstVNF_Mem * ARS ) ) + ( ( RRS / PN ) + Max( ACS,Const ) ) ) * Min( ( Max( DDR,FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,PN ) ) ,Max( ( MDR - MDR ),Min( PN ,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,( Max( Min( ( ( ( ( RRS - DDR ) / ( FirstVNF_RAM_Server / MRS ) ) / ( Max( BR,MRS ) / Min( FirstVNF_RAM ,RRS ) ) ) / ( ( ( MRS + RRS ) - ( PN + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_RAM_Server / MDR ),( FirstVNF_Mem - RRS ) ) ) ) ,( Max( ( ( PN * ARS ) / ( FirstVNF_CPU * FirstVNF_Mem_Server ) ),( ( Const - DDR ) / Min( MRS ,RRS ) ) ) - ( ( ( DDR - FirstVNF_RAM_Server ) * Min( AMS ,DDR ) ) + ( Max( BR,CRS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) ),Max( ( ( Min( ( FirstVNF_RAM / AMS ) ,( BR - FirstVNF_CPU ) ) / Max( ( Const + MRS ),Min( CRS ,RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( ( AMS * BR ) * Max( FirstVNF_CPU_Server,BR ) ) ) ),( Max( Min( ( FirstVNF_Mem_Server / MRS ) ,( AMS - PN ) ),Max( ( FirstVNF_Mem_Server * RRS ),( MRS - FirstVNF_CPU ) ) ) / ( Max( ( BR / BR ),( RRS + MDR ) ) + ( ( CRS + MRS ) * ( Const - AMS ) ) ) ) ) ) - Max( Min( ( ( ( Max( MRS,FirstVNF_CPU ) * ( AMS * PN ) ) - ( ( AMS - BR ) - Max( MDR,ACS ) ) ) / ( ( ( FirstVNF_CPU / MDR ) / Min( PN ,MRS ) ) * ( ( AMS / MDR ) + ( MDR / RRS ) ) ) ) ,Max( ( Max( ( BR + FirstVNF_CPU ),( Const + RRS ) ) + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( BR / AMS ) ) ),( Max( Max( FirstVNF_CPU,PN ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem / ARS ) / ( DDR / ARS ) ) ) ) ),( ( ( Max( ( ACS * FirstVNF_RAM_Server ),( ARS / FirstVNF_Mem ) ) / ( ( MRS / DDR ) + ( CRS / FirstVNF_Mem_Server ) ) ) / ( Min( ( MDR * CRS ) ,Min( AMS ,ARS ) ) + Max( Min( DDR ,FirstVNF_CPU ),( DDR / FirstVNF_RAM ) ) ) ) + Min( ( Max( ( MRS - BR ),Max( CRS,ACS ) ) * Min( ( FirstVNF_Mem_Server * MRS ) ,( AMS - RRS ) ) ) ,( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,AMS ) ) + Max( ( FirstVNF_RAM / CRS ),Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) ) )", "choosing": "Min( Max( RMSe,DS ) ,( Max( ( Max( RCSe,( MUC - RRSe ) ) - MUR ),Min( MLU ,MUM ) ) / Min( RCSe ,Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / RRS ) - Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MLU ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_Mem_Server + MRS ) + RRS ),( ( FirstVNF_Mem_Server + MRS ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) * DS ) )", "obj1": 0.07520325203252033, "obj2": 0.7591594980593469}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MLU * MUM ) / ( DS - Max( DS,( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) ) ) )", "obj1": 0.8922764227642277, "obj2": 0.11181137243052452}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( ACS - MDR ),MRS ) )", "choosing": "( ( MLU * MUM ) / ( DS - ( MUR + ( DS - RRSe ) ) ) )", "obj1": 0.8353658536585366, "obj2": 0.16136085597677763}, {"determining": "Min( ( MDR / ( FirstVNF_Mem_Server + MRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / DS ) + ( MUM / MUC ) )", "obj1": 0.5467479674796748, "obj2": 0.306013918060451}, {"determining": "( ( MRS * Min( ARS ,FirstVNF_RAM_Server ) ) - Min( MRS ,MRS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MLU,RRSe ) )", "obj1": 0.48577235772357724, "obj2": 0.33004699547721433}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) - ( DS * CS ) )", "obj1": 0.18089430894308944, "obj2": 0.6120997357063815}, {"determining": "Max( ( ARS + RRS ),( ( ( AMS * CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) - ( ( MUR * DS ) + ( DS + MUR ) ) ) ) * DS ) )", "obj1": 0.17073170731707318, "obj2": 0.6587643893489153}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * RRS ) - ( ( BR * RRS ) - Min( MRS ,MRS ) ) )", "choosing": "( MLU / ( DS * CS ) )", "obj1": 0.11788617886178862, "obj2": 0.6783150464609344}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Max( FirstVNF_Mem,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * Min( ARS ,PN ) ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.02314309963996467}, {"determining": "( ( BR / RRS ) - Min( MRS ,Min( ( ( MDR - Min( MRS ,FirstVNF_Mem_Server ) ) * RRS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS - MLU ) + MLU )", "obj1": 0.6361788617886179, "obj2": 0.2665000655772383}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) / ( DS + MUR ) )", "obj1": 0.4349593495934959, "obj2": 0.4086948328979217}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MLU * MUM ) / ( DS - Max( DS,MUC ) ) )", "obj1": 0.8150406504065041, "obj2": 0.181972556839175}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.6869918699186992, "obj2": 0.2582208142370423}, {"determining": "Max( ( ARS + FirstVNF_RAM ),FirstVNF_RAM )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.5772357723577236, "obj2": 0.2828380227957031}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.25203252032520324, "obj2": 0.6088666457329321}, {"determining": "( ( AMS - CRS ) * MRS )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe * MUR ) + Max( MUR,CS ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.258130081300813, "obj2": 0.5536010316829036}, {"determining": "( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( MUR / CS ),( RMSe * RRSe ) ) + ( MUM / MUC ) )", "obj1": 0.4268292682926829, "obj2": 0.43325009859532865}, {"determining": "( ( Max( Min( ( Min( ( ( FirstVNF_Mem_Server + CRS ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( MRS * ARS ) + ( AMS * FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU - RRS ) + ( PN * BR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / Min( FirstVNF_CPU ,CRS ) ) ) ) ,Min( Max( ( ( BR - RRS ) / ( MDR * FirstVNF_CPU ) ),( ( MDR / ARS ) + ( RRS - CRS ) ) ) ,( ( ( MDR * FirstVNF_Mem ) * Max( RRS,FirstVNF_Mem_Server ) ) - ( Min( BR ,DDR ) + ( CRS + FirstVNF_CPU ) ) ) ) ),( Min( Max( Max( Max( FirstVNF_CPU_Server,ACS ),Max( BR,MRS ) ),( Max( CRS,CRS ) / ( FirstVNF_CPU * BR ) ) ) ,( Min( ( MRS + FirstVNF_CPU ) ,( ARS * FirstVNF_RAM ) ) + Min( Min( RRS ,DDR ) ,( MDR - AMS ) ) ) ) * Max( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) * ( FirstVNF_Mem_Server - AMS ) ) / ( Min( FirstVNF_CPU_Server ,RRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ),Max( ( ( BR * FirstVNF_RAM_Server ) * ( AMS / MDR ) ),( Min( ARS ,DDR ) * ( PN * CRS ) ) ) ) ) ) / ( Max( ( ( ( ( AMS * DDR ) + ( DDR + FirstVNF_RAM ) ) / ( Max( BR,MRS ) - ( FirstVNF_RAM * ACS ) ) ) * ( ( ( FirstVNF_RAM - Const ) * ( MRS + FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,MRS ) - ( AMS + CRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem,ARS ) * ( AMS * CRS ) ) - ( ( MDR - AMS ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( ( Min( FirstVNF_CPU_Server ,ACS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * Min( ( MDR / FirstVNF_Mem_Server ) ,( PN / AMS ) ) ) ) ) + Max( ( ( Min( ( FirstVNF_RAM - PN ) ,( MRS - ARS ) ) - ( ( DDR * ARS ) / Min( RRS ,RRS ) ) ) - Max( Min( Max( FirstVNF_Mem_Server,PN ) ,( PN - ARS ) ),Max( ( FirstVNF_Mem_Server + Const ),Min( MRS ,AMS ) ) ) ),Min( ( ( Min( CRS ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem / MRS ) ) + ( Max( FirstVNF_CPU,BR ) / ( MRS + MDR ) ) ) ,Min( ( ( MRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * RRS ) ) ,( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,Const ) ) ) ) ) ) ) - ( Max( ( ( ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MDR ) ) * ( ( MDR - ARS ) + ( FirstVNF_RAM_Server * BR ) ) ) * ( ( Min( ARS ,PN ) * ( CRS + PN ) ) - ( ( MDR * RRS ) - ( RRS * ARS ) ) ) ) + ( Min( ( ( FirstVNF_RAM_Server * Const ) + Max( DDR,FirstVNF_RAM_Server ) ) ,Min( ( BR * Const ) ,Max( Const,MRS ) ) ) / Min( ( Min( FirstVNF_RAM_Server ,CRS ) + ( FirstVNF_Mem + DDR ) ) ,( ( FirstVNF_RAM_Server + Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ),( Max( ( ( ( DDR / DDR ) * Max( BR,FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ),Max( ( ( ACS + AMS ) * Min( FirstVNF_Mem_Server ,MRS ) ),( ( ACS - PN ) + Max( AMS,MDR ) ) ) ) * ( Min( ( Min( CRS ,FirstVNF_Mem_Server ) * ( PN / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem - AMS ) * ( MDR * FirstVNF_RAM ) ) ) - Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) * Max( ( ( ( ( Min( PN ,BR ) + ( DDR / FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_RAM_Server,DDR ) * Max( MDR,PN ) ) ) * ( Max( ( AMS / CRS ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + Min( ACS ,RRS ) ) ) ) * Min( Max( ( ( FirstVNF_Mem / RRS ) - Min( ARS ,Const ) ),( ( ACS + Const ) - ( RRS * PN ) ) ) ,( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( ( Const * AMS ) / ( FirstVNF_RAM - ARS ) ) ) ) ),( ( ( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM * Const ) ) * Max( ( Const + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + BR ) ) ) - Min( Min( ( RRS * BR ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( ( MRS * AMS ),( PN + ACS ) ) ) ) + ( ( ( Min( MRS ,ARS ) + Min( BR ,FirstVNF_Mem ) ) / Max( ( MRS + ACS ),Min( FirstVNF_CPU ,DDR ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),( RRS / FirstVNF_Mem_Server ) ) / ( Min( MRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM / AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( Min( MUC ,RRSe ) - ( CS + RRSe ) ) * ( ( RMSe - CS ) + ( RCSe + CS ) ) ) ,Min( Min( ( MLU - RMSe ) ,( RRSe - CS ) ) ,( Min( MLU ,RMSe ) + ( MUM / CS ) ) ) ) - ( ( ( Max( MUC,RMSe ) / Min( DS ,MUR ) ) - ( ( RRSe + RCSe ) * ( MLU - MUR ) ) ) - Max( Max( ( RRSe / DS ),( MUC / DS ) ),( Min( RMSe ,MUC ) - ( RCSe - DS ) ) ) ) ) + Min( ( Min( ( ( RMSe * MUR ) + ( RRSe - RRSe ) ) ,( ( RMSe / CS ) + ( MUC - DS ) ) ) / ( ( Min( DS ,RMSe ) * Min( RMSe ,DS ) ) + ( Max( MUC,MLU ) / ( RCSe - RCSe ) ) ) ) ,( ( Min( Max( CS,RMSe ) ,Max( RMSe,MUR ) ) * Max( ( MUC + CS ),( CS * MLU ) ) ) - Min( ( ( RMSe * MUR ) * ( MLU - MLU ) ) ,( ( MUR - DS ) - ( MUR + CS ) ) ) ) ) ) - ( Min( ( ( ( ( MUM / MUM ) - ( MLU / DS ) ) / Max( ( RCSe / MUR ),( RCSe / MUC ) ) ) + ( ( ( RRSe * MUR ) * ( CS * MLU ) ) / ( ( RMSe * MUC ) / ( RMSe * MUC ) ) ) ) ,( Max( Max( Min( MLU ,MUC ),Min( DS ,MLU ) ),( Max( RMSe,MLU ) * ( MUM + DS ) ) ) - ( Max( ( MUC + RCSe ),Max( RRSe,MUR ) ) * ( ( RCSe * DS ) + ( RCSe - MUM ) ) ) ) ) / ( ( ( ( ( RMSe / RCSe ) * ( MUC - MUC ) ) * Max( Max( RCSe,CS ),( DS / DS ) ) ) + ( ( ( RCSe * CS ) + ( RRSe / RCSe ) ) - Max( ( CS + DS ),Max( RMSe,RRSe ) ) ) ) + ( Max( ( Min( RMSe ,RRSe ) / Min( CS ,RMSe ) ),( Min( RCSe ,RCSe ) / ( DS - CS ) ) ) - ( ( ( MUM * RRSe ) + ( MLU - DS ) ) - ( ( MLU / CS ) - ( MUC + MUC ) ) ) ) ) ) ),Min( ( ( Max( Max( ( ( DS * RMSe ) + ( RRSe - RMSe ) ),Max( ( MUC * RCSe ),( RRSe + MUC ) ) ),( ( ( RMSe - DS ) - ( RCSe * MUC ) ) - ( ( MUC - RRSe ) / ( MLU + RCSe ) ) ) ) / Min( ( ( Min( RMSe ,RCSe ) + Max( MLU,MUM ) ) / ( Min( RMSe ,RRSe ) * ( RRSe - RCSe ) ) ) ,Min( ( ( RMSe * MUM ) + ( MLU - MUM ) ) ,Min( Max( CS,DS ) ,( DS / DS ) ) ) ) ) * ( Max( Max( ( Min( MUC ,MUM ) + ( MLU - RMSe ) ),Min( ( MLU * MUC ) ,( RCSe + MLU ) ) ),( ( ( RRSe - RCSe ) - Max( RCSe,DS ) ) * Min( Max( DS,RMSe ) ,( MLU / MUM ) ) ) ) / ( Min( ( ( RCSe / DS ) * ( MUM - MLU ) ) ,( ( MUR + RCSe ) + ( MUR + MUM ) ) ) - ( Max( ( RCSe * RMSe ),( RCSe + MUM ) ) + Max( ( RMSe + RCSe ),( MUR / RMSe ) ) ) ) ) ) ,Min( Max( ( ( Min( ( CS * DS ) ,Min( CS ,MUC ) ) - Min( Min( RMSe ,RMSe ) ,Min( MLU ,MUM ) ) ) - ( ( Max( MLU,RRSe ) * Max( DS,RCSe ) ) - Max( Min( MLU ,RMSe ),( CS * MUM ) ) ) ),( ( Max( ( MLU * MUC ),( MUM - MLU ) ) + Min( ( MUC / RRSe ) ,( CS - RCSe ) ) ) * ( ( Max( RMSe,RCSe ) + ( MUM * DS ) ) * Min( Max( RMSe,RRSe ) ,( RCSe / MUC ) ) ) ) ) ,( ( ( ( Max( MUC,RRSe ) + ( MLU - DS ) ) * ( ( MUM * MUM ) / ( RRSe * DS ) ) ) / ( ( ( RRSe / RMSe ) + ( RCSe - RMSe ) ) + Min( Min( DS ,MLU ) ,( MUM - MLU ) ) ) ) / ( Min( ( Max( CS,MUC ) * ( DS / DS ) ) ,( Max( RMSe,RRSe ) + ( CS / RMSe ) ) ) / Min( Max( Min( MLU ,MUM ),( RMSe / DS ) ) ,( Min( DS ,MLU ) * Max( MUR,RMSe ) ) ) ) ) ) ) )", "obj1": 0.5975609756097561, "obj2": 0.27285039096220837}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / RRSe ) / ( DS + ( DS * CS ) ) )", "obj1": 0.14227642276422764, "obj2": 0.6729081273518456}, {"determining": "( ( ( ( ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),Min( ACS ,DDR ) ) ,Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - FirstVNF_Mem_Server ) ) ) ) / Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Min( DDR ,FirstVNF_RAM_Server ) ) * Max( ( CRS - FirstVNF_CPU ),( MRS / BR ) ) ),( ( ( MDR / MRS ) - Min( AMS ,Const ) ) / ( Max( ACS,DDR ) + Min( FirstVNF_CPU ,RRS ) ) ) ) ) + Min( ( Max( Min( ( CRS + FirstVNF_CPU_Server ) ,( MDR - Const ) ),Max( ( BR / FirstVNF_CPU_Server ),Max( AMS,ARS ) ) ) / ( ( Min( CRS ,PN ) / ( CRS * CRS ) ) * ( ( RRS + Const ) * ( FirstVNF_Mem * MRS ) ) ) ) ,( ( Min( Min( BR ,ARS ) ,Max( ARS,ACS ) ) - ( Max( CRS,FirstVNF_RAM ) + ( FirstVNF_CPU_Server - DDR ) ) ) + Max( Max( ( MDR + Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ),( ( CRS - BR ) / Min( RRS ,FirstVNF_Mem ) ) ) ) ) ) - ( Min( Max( ( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_CPU + DDR ) ) - ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server / RRS ) ) ),( ( ( BR * BR ) * Min( FirstVNF_RAM_Server ,AMS ) ) - ( ( MDR - CRS ) / ( ACS * FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem_Server + DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Min( ( RRS - ARS ) ,Min( AMS ,CRS ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,PN ) ) / Min( ( MDR - FirstVNF_RAM ) ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) * Max( ( Min( ( Min( FirstVNF_CPU_Server ,DDR ) + Max( DDR,FirstVNF_CPU ) ) ,( ( CRS * AMS ) * Max( Const,ARS ) ) ) - ( ( ( ARS + ARS ) * ( FirstVNF_RAM + RRS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / MDR ) ) ) ),Max( ( ( ( RRS / AMS ) + ( MDR + FirstVNF_Mem ) ) * ( ( MDR + FirstVNF_CPU ) / Min( MDR ,FirstVNF_CPU_Server ) ) ),Max( Max( ( AMS * PN ),( BR + ACS ) ),( Min( MRS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem / RRS ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( ACS / Const ) * ( MDR / MRS ) ),( ( FirstVNF_CPU_Server / AMS ) * Max( CRS,FirstVNF_CPU ) ) ) - ( Min( ( CRS + FirstVNF_RAM_Server ) ,( PN * MDR ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) + Max( FirstVNF_Mem,PN ) ) ) ) + ( Min( ( ( FirstVNF_CPU_Server - CRS ) / ( AMS - ARS ) ) ,( Min( MDR ,AMS ) - ( AMS - Const ) ) ) / ( Min( ( RRS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( ACS ,CRS ) ) ) ) ) - ( Min( ( ( ( ARS - MDR ) / ( MDR + FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ,Min( ( ( MDR - BR ) * ( FirstVNF_Mem * CRS ) ) ,( Min( ACS ,FirstVNF_CPU_Server ) / ( PN / FirstVNF_RAM ) ) ) ) + ( ( Min( ( MRS + DDR ) ,( FirstVNF_Mem_Server * RRS ) ) * ( ( ARS + FirstVNF_RAM_Server ) + ( BR - ACS ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( BR + FirstVNF_Mem ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) ) / ( ( Max( ( Min( Min( Const ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) + ( ( MDR * ACS ) - ( PN - FirstVNF_RAM_Server ) ) ),( ( Max( FirstVNF_Mem,AMS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem / BR ) + ( FirstVNF_Mem_Server * MDR ) ) ) ) - ( Min( ( Max( ACS,RRS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ,Min( ( FirstVNF_CPU / PN ) ,( MDR / FirstVNF_RAM ) ) ) - ( Max( ( ACS - BR ),Min( FirstVNF_CPU_Server ,ACS ) ) * Max( ( RRS + FirstVNF_RAM_Server ),Max( ACS,FirstVNF_RAM ) ) ) ) ) - ( Min( ( ( ( Const + MDR ) - ( Const - CRS ) ) * Min( Max( BR,MDR ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( FirstVNF_Mem_Server * DDR ),Min( AMS ,FirstVNF_Mem ) ) * ( Min( ARS ,MDR ) / ( BR - DDR ) ) ) ) + ( ( ( Min( FirstVNF_CPU_Server ,ARS ) * ( AMS - FirstVNF_Mem ) ) + Max( Max( MDR,ACS ),Max( PN,FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_Mem_Server / RRS ) ) - Min( ( BR - FirstVNF_RAM_Server ) ,( RRS / Const ) ) ) ) ) ) ) )", "choosing": "Max( ( RRSe / Max( ( Min( CS ,CS ) * ( MLU + MLU ) ),RRSe ) ),Min( ( Min( Max( ( MUM / ( ( MUR - CS ) * CS ) ),Min( ( ( MUR * CS ) * ( MUM + MLU ) ) ,MUM ) ) ,( ( RMSe / Min( MUM ,CS ) ) + RMSe ) ) - DS ) ,( CS + DS ) ) )", "obj1": 0.7682926829268293, "obj2": 0.18814878936071192}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - ( ( DS - CS ) / ( ( DS - CS ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.24390243902439024, "obj2": 0.6118851348411228}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5322928858426473}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MLU ) + ( CS * RMSe ) )", "obj1": 0.7439024390243902, "obj2": 0.2234295218686627}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MLU ) ,( RRSe - ( ( RCSe * CS ) + Max( MUR,CS ) ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5058390093393439}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( ( BR / RRS ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS - Max( ( DS * CS ),( Max( MLU,MLU ) / ( DS - MUC ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.3048780487804878, "obj2": 0.5095444766558691}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) ) ) )", "choosing": "( ( MUM + DS ) / MUM )", "obj1": 0.7520325203252033, "obj2": 0.19271660133824858}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.7276422764227642, "obj2": 0.23184900338109427}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9044715447154471, "obj2": 0.072748496530392}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + RCSe ) - Min( ( CS * MUC ) ,RMSe ) )", "obj1": 0.39634146341463417, "obj2": 0.44324324930257797}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9065040650406504, "obj2": 0.0709629027420639}, {"determining": "( Max( Max( ( ( Max( Max( ( MDR - AMS ),( FirstVNF_RAM - FirstVNF_Mem ) ),( Max( PN,FirstVNF_RAM ) - Max( CRS,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / ( MRS + AMS ) ) - ( ( ACS / FirstVNF_Mem ) + ( CRS * ACS ) ) ) ) / ( ( ( Max( FirstVNF_Mem,BR ) + Min( DDR ,Const ) ) * ( ( RRS - PN ) * ( Const - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,Min( DDR ,CRS ) ) - Max( Min( ACS ,Const ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ),( ( ( Max( ( ACS * BR ),( FirstVNF_Mem_Server - ACS ) ) - ( ( MDR + AMS ) / ( MRS + ARS ) ) ) / ( Max( ( CRS / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) * Min( ( Const - ACS ) ,( BR + DDR ) ) ) ) + Max( ( ( ( PN * FirstVNF_CPU ) / ( BR - FirstVNF_RAM_Server ) ) * ( ( CRS - FirstVNF_RAM ) * ( MDR + PN ) ) ),( ( ( DDR + ACS ) * ( ARS + BR ) ) / Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Max( ACS,RRS ) * ( MDR - Const ) ) / ( ( CRS - BR ) / ( CRS - MDR ) ) ) + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server / BR ),( FirstVNF_Mem_Server + ARS ) ) ) ) ,( ( ( Max( FirstVNF_CPU,DDR ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Min( CRS ,ACS ) + ( MDR - DDR ) ) ) + ( ( ( FirstVNF_RAM / DDR ) - Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( ARS ,FirstVNF_RAM ) ) ) ) ) + Max( ( ( ( ( PN + FirstVNF_CPU ) * ( BR * MDR ) ) + ( ( CRS + MDR ) * Min( CRS ,MRS ) ) ) * ( ( ( BR * FirstVNF_RAM_Server ) - Max( AMS,MRS ) ) / ( ( AMS / ARS ) - ( DDR * FirstVNF_CPU ) ) ) ),( ( Min( Min( BR ,FirstVNF_Mem ) ,( MRS * RRS ) ) + ( ( MRS - FirstVNF_CPU ) * ( RRS * FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_Mem_Server * DDR ) * ( BR - BR ) ) ,Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_RAM - Const ) ) / ( ( BR + AMS ) * ( FirstVNF_RAM_Server / AMS ) ) ) ,Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ( FirstVNF_CPU * CRS ) ) ,( ( MRS / ACS ) / ( PN / PN ) ) ) ) - ( Max( Max( ( AMS + ACS ),( AMS - FirstVNF_RAM ) ),Min( ( MDR - MDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Max( ( ( PN * AMS ) / ( BR * FirstVNF_Mem ) ),( Min( BR ,FirstVNF_Mem_Server ) + Max( Const,CRS ) ) ) ) ) - ( Min( Max( Min( ( DDR / BR ) ,Max( ARS,FirstVNF_Mem ) ),( Min( PN ,RRS ) * Min( FirstVNF_RAM ,RRS ) ) ) ,( ( Max( Const,CRS ) / ( FirstVNF_CPU_Server - MRS ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) * ( CRS / ACS ) ) ) ) / ( ( ( Max( BR,FirstVNF_CPU ) / ( BR * FirstVNF_Mem ) ) * Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,( PN * ACS ) ) ) + Max( ( ( FirstVNF_CPU_Server / BR ) / ( ARS * Const ) ),Max( Min( CRS ,FirstVNF_CPU ),( Const + ACS ) ) ) ) ) ),( ( ( Max( ( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,DDR ) ),( Max( CRS,FirstVNF_CPU ) * ( FirstVNF_Mem / RRS ) ) ) + ( ( Max( MDR,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * BR ) ) + ( Min( BR ,CRS ) * ( PN * MDR ) ) ) ) / Max( ( ( ( MRS * AMS ) / ( CRS + FirstVNF_RAM ) ) * Min( ( ACS - MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ),( ( ( MRS / BR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) - Min( ( ( Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,( Const + FirstVNF_Mem_Server ) ) - ( ( BR + RRS ) * ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( ( DDR + ARS ) / Max( RRS,AMS ) ) - Max( ( MRS - RRS ),( CRS * FirstVNF_Mem ) ) ) ) ,Max( ( Max( ( DDR * FirstVNF_CPU_Server ),( Const / FirstVNF_CPU ) ) - Min( ( MDR - ACS ) ,( ARS + MDR ) ) ),Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Max( Max( DDR,CRS ),( MDR + FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( Max( ( CS + CS ),( RRSe * RRSe ) ) + Min( ( MUR - MLU ) ,Min( RMSe ,CS ) ) ) - ( ( ( MLU + RMSe ) * ( DS - RRSe ) ) - ( ( DS - MUC ) * ( DS / DS ) ) ) ) / ( ( Min( Max( DS,RCSe ) ,Max( MUC,MUC ) ) + Max( Max( DS,RRSe ),Max( RRSe,MUC ) ) ) * ( Min( ( DS * DS ) ,( RMSe - MUM ) ) / ( ( CS * MLU ) * ( RRSe + MLU ) ) ) ) ) / ( Max( ( Max( ( MUC * MUR ),Min( RRSe ,CS ) ) / ( Max( RMSe,MLU ) * ( RMSe + CS ) ) ),( ( ( MUR * MLU ) - ( RRSe - RCSe ) ) - ( ( CS / RMSe ) - ( CS + MLU ) ) ) ) / ( ( ( ( RMSe / MUC ) - ( MUM / CS ) ) / ( Max( CS,RCSe ) * Max( DS,DS ) ) ) / Max( ( Min( CS ,CS ) / ( MUC * RCSe ) ),( ( RRSe / RMSe ) + ( RRSe * RCSe ) ) ) ) ) ),Max( ( Min( ( Min( Max( CS,MUR ) ,( RRSe - MUR ) ) / ( ( DS * DS ) - ( DS - MUM ) ) ) ,Max( ( ( MUM + RCSe ) / ( MUR - MUM ) ),( ( RMSe / MUM ) + Max( RMSe,CS ) ) ) ) + ( Min( Min( ( RCSe / DS ) ,( MUC * DS ) ) ,( Max( MLU,RRSe ) * ( CS * RRSe ) ) ) / ( Max( ( RRSe / RCSe ),( CS - MUM ) ) / Min( ( RRSe - MUC ) ,( MUR + RRSe ) ) ) ) ),( ( ( Max( Min( MLU ,MLU ),Min( DS ,DS ) ) - Min( Min( RMSe ,RRSe ) ,( MUC + MLU ) ) ) - ( Max( ( MUC + RMSe ),Max( MLU,RRSe ) ) * ( ( MUR * RRSe ) - ( RRSe - RCSe ) ) ) ) * Min( ( Min( ( MUM - MLU ) ,( MLU / MUR ) ) + ( ( RCSe + MLU ) / Min( MUC ,MUC ) ) ) ,( Min( ( RMSe / RRSe ) ,( RMSe - MLU ) ) * ( Max( CS,DS ) + ( MUC - MUM ) ) ) ) ) ) ) / Min( Max( ( Max( Max( ( ( RMSe + RCSe ) * ( MUM - RRSe ) ),( Max( MUC,MUC ) + ( RCSe + DS ) ) ),( ( ( RMSe * MLU ) * Max( CS,DS ) ) * ( ( RCSe * MLU ) * ( MLU - MUR ) ) ) ) * Max( ( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) - ( ( MLU / RMSe ) / ( MUC * DS ) ) ),( ( ( CS / RRSe ) + Min( MLU ,CS ) ) + ( ( RRSe + RMSe ) + ( MUR * RRSe ) ) ) ) ),( Max( ( ( ( MLU + RCSe ) * ( MUR + MUM ) ) - ( ( MUM - DS ) / Min( MUC ,MUC ) ) ),( ( Max( MUC,RCSe ) - ( CS / CS ) ) - Max( ( MUR * CS ),( RRSe - MUC ) ) ) ) * ( Min( ( ( DS * DS ) - ( RRSe / CS ) ) ,( Min( MUM ,RCSe ) / Max( MUM,RMSe ) ) ) - ( ( Max( MUR,RMSe ) - ( RCSe / MUC ) ) / ( Max( MUM,RRSe ) * ( MUC / RCSe ) ) ) ) ) ) ,( Min( Max( ( Min( Max( DS,MUC ) ,( MLU - RMSe ) ) - ( ( MUC / RCSe ) - ( RRSe - CS ) ) ),( Max( ( RCSe * MUC ),( MLU / DS ) ) - Max( Max( DS,DS ),( CS + MLU ) ) ) ) ,( ( ( ( MLU + RCSe ) - Max( RRSe,MUR ) ) * ( Min( MLU ,MUM ) / Max( MUR,DS ) ) ) - ( ( ( RMSe + DS ) - ( MUR + RRSe ) ) / ( Min( MUC ,DS ) * ( MUC - CS ) ) ) ) ) / Max( Min( ( ( ( MUM * MUC ) / Max( RCSe,MUC ) ) * ( ( RMSe / CS ) / ( MUC / MUM ) ) ) ,Min( ( ( RMSe + DS ) / ( MUM / RRSe ) ) ,Min( Max( CS,RCSe ) ,Max( RRSe,MLU ) ) ) ),Min( Max( ( ( RMSe * RMSe ) * ( MUC * RRSe ) ),( Min( MUM ,MUR ) - ( RRSe + DS ) ) ) ,Max( ( Min( RRSe ,RMSe ) + ( DS + RCSe ) ),( ( MUM - RMSe ) + ( RMSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.38414634146341464, "obj2": 0.4819945659120335}, {"determining": "( ( BR * ( ( BR * ACS ) - Min( MRS ,FirstVNF_Mem_Server ) ) ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM + RMSe ) + ( MLU / MUR ) ) - MUC ) + ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.021208218673737296}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.47560975609756095, "obj2": 0.3566568560720231}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.3882113821138211, "obj2": 0.4536306465430349}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "Min( Max( FirstVNF_CPU,PN ) ,( ( MRS + ACS ) + ACS ) )", "choosing": "Min( ( MUM / MUC ) ,( RRSe - ( ( RCSe * MUR ) + ( RRSe - ( ( RCSe * MUR ) + ( MUR / CS ) ) ) ) ) )", "obj1": 0.3699186991869919, "obj2": 0.504607642353731}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - ( MUC / MLU ) ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5471781264016383}, {"determining": "Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9065040650406504, "obj2": 0.0709629027420639}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "Min( Max( RRS,ARS ) ,Max( RRS,ARS ) )", "choosing": "Min( ( MUC / MLU ) ,MUC )", "obj1": 0.3821138211382114, "obj2": 0.49789676730846144}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + MRS ) + MRS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5490009642005547}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "( ( Min( PN ,Const ) / ( ( ( MDR - MDR ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( DS + MUR ) / ( CS + MLU ) ) )", "obj1": 0.3780487804878049, "obj2": 0.49869667527866945}, {"determining": "( ( ( MDR - MDR ) * ACS ) - Min( ARS ,( ( MRS * RRS ) - Min( MRS ,MRS ) ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4634146341463415, "obj2": 0.3641200325836689}], "10": [{"determining": "Min( ( Min( ( ( Min( ( Min( CRS ,FirstVNF_RAM ) * Max( ACS,MRS ) ) ,Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - ACS ) ) ) - Max( ( ( MDR * RRS ) * Max( PN,RRS ) ),Min( ( FirstVNF_RAM + ACS ) ,Max( RRS,FirstVNF_CPU_Server ) ) ) ) + Min( Min( Max( Max( RRS,MDR ),( Const / MDR ) ) ,( ( FirstVNF_Mem_Server / DDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) ,Max( ( ( FirstVNF_CPU / ARS ) + ( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( DDR,FirstVNF_Mem_Server ) - ( AMS + FirstVNF_CPU_Server ) ) ) ) ) ,( Min( Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / ARS ) ) ,( ( ACS - BR ) * ( FirstVNF_RAM + RRS ) ) ) ,Min( ( ( Const - ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem + DDR ),( DDR / RRS ) ) ) ) * Min( Min( Max( Max( ACS,Const ),Min( FirstVNF_CPU ,DDR ) ) ,Min( ( ACS / ARS ) ,( MDR / CRS ) ) ) ,( ( ( DDR / FirstVNF_RAM ) * ( AMS + CRS ) ) + ( ( DDR / FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem_Server ) ) ) ) ) ) - ( Min( ( Max( ( ( RRS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / PN ) ),( ( Const * PN ) - ( AMS * ACS ) ) ) - ( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( DDR * MRS ) - ( RRS + FirstVNF_CPU ) ) ) ) ,Min( ( Max( ( Const * CRS ),Max( FirstVNF_RAM,PN ) ) + Min( ( FirstVNF_RAM + MDR ) ,Min( FirstVNF_CPU_Server ,Const ) ) ) ,Min( ( Max( ACS,BR ) + ( Const / FirstVNF_RAM_Server ) ) ,Max( Max( FirstVNF_CPU_Server,DDR ),( CRS / CRS ) ) ) ) ) - Min( Min( ( ( ( FirstVNF_CPU * FirstVNF_Mem ) / Min( ACS ,AMS ) ) - Max( Max( FirstVNF_RAM,ARS ),Max( ARS,CRS ) ) ) ,Min( Min( ( MDR - ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ,Max( Min( PN ,FirstVNF_RAM ),( BR * ARS ) ) ) ) ,Min( ( Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * AMS ) ) + ( Min( BR ,DDR ) + Max( FirstVNF_RAM,BR ) ) ) ,( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,Max( MRS,CRS ) ) * Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),( FirstVNF_RAM / RRS ) ) ) ) ) ) ) ,Min( ( ( Min( Max( ( ( ACS * FirstVNF_RAM ) * Min( RRS ,RRS ) ),( Max( Const,FirstVNF_Mem_Server ) + ( PN + AMS ) ) ) ,Max( Min( ( CRS - PN ) ,Min( FirstVNF_RAM ,MDR ) ),( ( CRS / FirstVNF_RAM ) + ( FirstVNF_RAM_Server / AMS ) ) ) ) / ( ( ( Max( MRS,CRS ) + ( CRS / FirstVNF_RAM_Server ) ) + ( ( BR + FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( Min( Min( RRS ,BR ) ,( MDR / FirstVNF_RAM ) ) + Max( ( Const / FirstVNF_RAM_Server ),Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( Min( FirstVNF_RAM_Server ,PN ) * ( FirstVNF_Mem_Server + AMS ) ) * Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( AMS / CRS ) ) ) + Min( ( ( DDR / FirstVNF_CPU ) * ( MDR * FirstVNF_Mem_Server ) ) ,( ( DDR - MDR ) - ( BR / AMS ) ) ) ) / ( ( Min( ( FirstVNF_RAM_Server * ACS ) ,( FirstVNF_CPU_Server - Const ) ) - ( ( CRS / RRS ) - ( CRS - RRS ) ) ) / Max( Min( Max( FirstVNF_RAM,ARS ) ,( FirstVNF_CPU + Const ) ),( ( MDR - BR ) + ( BR - MRS ) ) ) ) ) ) ,( ( ( Min( ( Max( FirstVNF_Mem_Server,BR ) + Max( Const,CRS ) ) ,( ( DDR - ACS ) / ( FirstVNF_Mem + MDR ) ) ) + ( ( ( BR * RRS ) + ( FirstVNF_RAM_Server * RRS ) ) - Max( ( CRS + PN ),( CRS - FirstVNF_Mem_Server ) ) ) ) + ( ( ( ( DDR * ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Max( BR,MRS ) ) ) + ( Max( ( DDR - FirstVNF_RAM ),Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + ( ( DDR + PN ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( Min( Min( Min( ( DDR + BR ) ,( PN * BR ) ) ,( ( FirstVNF_Mem * Const ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,( ( ( DDR * FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * ( ( Const * BR ) - ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( ACS + RRS ) - ( Const * ARS ) ) / Max( ( RRS / FirstVNF_RAM_Server ),( CRS / FirstVNF_RAM ) ) ) + ( ( ( AMS * FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( ARS + ARS ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Min( ( Max( Max( Min( ( ( Max( MUM,RCSe ) + ( RCSe + DS ) ) + ( ( CS / MLU ) / Max( MUC,RCSe ) ) ) ,( ( Min( RRSe ,MLU ) - ( RRSe * CS ) ) - ( Min( RMSe ,CS ) + ( MUC * DS ) ) ) ),( ( ( Min( RCSe ,MLU ) - ( MUC + RRSe ) ) + ( Min( MUM ,MUR ) * Min( MUC ,MUC ) ) ) / Min( ( Max( MUR,CS ) * Max( RCSe,MUR ) ) ,Min( ( MUR / MUC ) ,( MUM / DS ) ) ) ) ),( ( Min( ( ( MUR - MUR ) / ( MUC + MLU ) ) ,( ( RMSe - MUC ) / ( RMSe - RMSe ) ) ) + Min( ( ( CS * DS ) * Max( RMSe,CS ) ) ,( Min( MUR ,MUM ) / ( DS + RMSe ) ) ) ) - ( ( Max( Min( MLU ,MUC ),Max( DS,CS ) ) * Min( Max( DS,MLU ) ,( MUR - MUC ) ) ) - Max( ( Min( RCSe ,MUC ) + Min( MUC ,DS ) ),Max( ( MUC / RCSe ),( MLU - MUR ) ) ) ) ) ) * Max( ( Max( Min( Max( ( MUM + DS ),( RCSe * MLU ) ) ,( ( MUC / RRSe ) + ( RCSe / RCSe ) ) ),( ( ( MUC * RCSe ) / ( RRSe / MUR ) ) / ( ( RCSe - MLU ) - ( MUM + RRSe ) ) ) ) - Min( ( ( ( RCSe / RRSe ) / ( MLU * RRSe ) ) * Min( Min( MUM ,MLU ) ,Max( DS,CS ) ) ) ,( Min( ( DS / MUM ) ,( DS - MLU ) ) * ( ( DS + MUM ) * ( MUC / MUC ) ) ) ) ),Max( Max( ( Min( ( RMSe - RCSe ) ,Min( RRSe ,RMSe ) ) - Min( ( MLU * MUM ) ,Max( RCSe,DS ) ) ),Min( ( ( RCSe * DS ) - ( MUR / RRSe ) ) ,Max( ( RCSe / RCSe ),Max( CS,RCSe ) ) ) ),( Min( Max( ( MUM - MUC ),( RCSe * MUR ) ) ,( ( MUM - MUM ) + Max( DS,RMSe ) ) ) / ( Max( ( MUC * MLU ),( MUR / MUC ) ) / ( Max( RMSe,MLU ) / ( MLU * RCSe ) ) ) ) ) ) ) ,Min( ( ( Max( Min( ( ( RMSe * RRSe ) / ( MLU - MLU ) ) ,Min( ( RCSe / RCSe ) ,( MLU / RMSe ) ) ),( ( Max( CS,MUM ) + ( RMSe - MUC ) ) * Max( Min( DS ,RRSe ),Max( MUM,RCSe ) ) ) ) / ( Min( ( ( RMSe - RMSe ) + Min( MUM ,MUR ) ) ,Min( ( MUC - CS ) ,( MUM + MUR ) ) ) * ( ( Max( RMSe,RMSe ) - ( MLU - MUC ) ) + ( Max( MUM,MUR ) / ( RCSe - MUC ) ) ) ) ) - ( ( Min( ( ( RMSe / CS ) + Max( MUR,RMSe ) ) ,( ( RCSe / MUC ) * ( CS / RRSe ) ) ) * ( ( Min( MUR ,RCSe ) + Min( DS ,MUR ) ) * Min( Min( RCSe ,RCSe ) ,( RRSe - MUM ) ) ) ) / ( ( ( ( MUR * RMSe ) - ( MUC * MLU ) ) - ( Max( RCSe,CS ) + ( MLU + MUC ) ) ) * Max( ( ( DS + RRSe ) / ( RRSe + RMSe ) ),( ( MLU / CS ) + ( MLU - RCSe ) ) ) ) ) ) ,( Max( ( ( ( ( MUR / RMSe ) - ( MUM * RMSe ) ) / ( ( CS / MUM ) + Max( CS,RRSe ) ) ) + ( ( ( RRSe - DS ) / ( MUR + MUC ) ) - ( ( RMSe / RRSe ) / ( RMSe * RCSe ) ) ) ),Min( ( Max( Min( MUC ,RMSe ),Max( MUM,MLU ) ) * ( Max( MUC,RRSe ) * Max( RMSe,MUM ) ) ) ,( ( ( CS * MUC ) * ( RRSe - RRSe ) ) + Min( ( MLU * RMSe ) ,( MLU * RMSe ) ) ) ) ) * ( Max( ( Max( ( MUR * MLU ),( RCSe * MLU ) ) + Min( Max( MLU,MLU ) ,( CS + MUC ) ) ),Max( ( Min( RMSe ,MUM ) * Min( RMSe ,MUR ) ),( ( RMSe * RRSe ) * ( MUR + CS ) ) ) ) + ( ( ( ( MLU + RMSe ) * Max( MLU,MUR ) ) - ( ( MUC * CS ) + Max( DS,RRSe ) ) ) + Max( Min( ( MLU - RRSe ) ,( RMSe + RMSe ) ),Min( ( RRSe / DS ) ,( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( ( ( ( Min( ARS ,PN ) - Min( RRS ,CRS ) ) - ( ( FirstVNF_CPU * BR ) + Max( BR,PN ) ) ) + ( Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( PN * AMS ) ) + ( ( FirstVNF_CPU_Server - ARS ) * ( PN / FirstVNF_CPU_Server ) ) ) ) ,( ( Min( ( PN + DDR ) ,Min( PN ,PN ) ) + ( ( MDR / ARS ) / ( FirstVNF_Mem / AMS ) ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - ( CRS / MRS ) ) * ( ( FirstVNF_Mem_Server + CRS ) - ( RRS * RRS ) ) ) ) ) ,( ( Max( ( ( MRS + Const ) - ( ARS * FirstVNF_CPU_Server ) ),( ( RRS / AMS ) + ( FirstVNF_Mem_Server * Const ) ) ) - ( ( ( FirstVNF_CPU_Server - Const ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Min( Min( ARS ,MRS ) ,Max( MDR,FirstVNF_RAM ) ) ) ) * Max( Min( ( ( MRS * FirstVNF_RAM ) * Min( MDR ,Const ) ) ,( Max( FirstVNF_RAM,FirstVNF_Mem ) * Min( Const ,FirstVNF_Mem ) ) ),( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( RRS - AMS ) ) * Max( Max( BR,MDR ),( ACS + ARS ) ) ) ) ) ) / Max( ( ( ( ( Max( DDR,BR ) - ( FirstVNF_Mem + CRS ) ) + Max( ( CRS - CRS ),( CRS - ACS ) ) ) * Min( ( Min( PN ,ARS ) / ( RRS / RRS ) ) ,Min( ( AMS / FirstVNF_CPU ) ,( BR + DDR ) ) ) ) * Max( Max( ( Max( ARS,FirstVNF_CPU_Server ) * ( CRS - FirstVNF_Mem ) ),( ( MRS / ACS ) + ( FirstVNF_Mem + MRS ) ) ),( ( ( BR - FirstVNF_Mem ) + ( MRS / BR ) ) - Min( ( MRS / MRS ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ),( Max( ( ( ( AMS / MDR ) * Min( FirstVNF_CPU ,ACS ) ) * Max( ( AMS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / Const ) ) ),( ( Min( BR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( RRS - Const ) ) ) ) * ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( FirstVNF_Mem * ARS ) ) + ( ( RRS / PN ) + Max( ACS,Const ) ) ) * Min( ( Max( DDR,FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,PN ) ) ,Max( ( MDR - MDR ),Min( PN ,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,( Max( Min( ( ( ( ( RRS - DDR ) / ( FirstVNF_RAM_Server / MRS ) ) / ( Max( BR,MRS ) / Min( FirstVNF_RAM ,RRS ) ) ) / ( ( ( MRS + RRS ) - ( PN + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_RAM_Server / MDR ),( FirstVNF_Mem - RRS ) ) ) ) ,( Max( ( ( PN * ARS ) / ( FirstVNF_CPU * FirstVNF_Mem_Server ) ),( ( Const - DDR ) / Min( MRS ,RRS ) ) ) - ( ( ( DDR - FirstVNF_RAM_Server ) * Min( AMS ,DDR ) ) + ( Max( BR,CRS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) ),Max( ( ( Min( ( FirstVNF_RAM / AMS ) ,( BR - FirstVNF_CPU ) ) / Max( ( Const + MRS ),Min( CRS ,RRS ) ) ) * ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + ( ( AMS * BR ) * Max( FirstVNF_CPU_Server,BR ) ) ) ),( Max( Min( ( FirstVNF_Mem_Server / MRS ) ,( AMS - PN ) ),Max( ( FirstVNF_Mem_Server * RRS ),( MRS - FirstVNF_CPU ) ) ) / ( Max( ( BR / BR ),( RRS + MDR ) ) + ( ( CRS + MRS ) * ( Const - AMS ) ) ) ) ) ) - Max( Min( ( ( ( Max( MRS,FirstVNF_CPU ) * ( AMS * PN ) ) - ( ( AMS - BR ) - Max( MDR,ACS ) ) ) / ( ( ( FirstVNF_CPU / MDR ) / Min( PN ,MRS ) ) * ( ( AMS / MDR ) + ( MDR / RRS ) ) ) ) ,Max( ( Max( ( BR + FirstVNF_CPU ),( Const + RRS ) ) + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( BR / AMS ) ) ),( Max( Max( FirstVNF_CPU,PN ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem / ARS ) / ( DDR / ARS ) ) ) ) ),( ( ( Max( ( ACS * FirstVNF_RAM_Server ),( ARS / FirstVNF_Mem ) ) / ( ( MRS / DDR ) + ( CRS / FirstVNF_Mem_Server ) ) ) / ( Min( ( MDR * CRS ) ,Min( AMS ,ARS ) ) + Max( Min( DDR ,FirstVNF_CPU ),( DDR / FirstVNF_RAM ) ) ) ) + Min( ( Max( ( MRS - BR ),Max( CRS,ACS ) ) * Min( ( FirstVNF_Mem_Server * MRS ) ,( AMS - RRS ) ) ) ,( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,AMS ) ) + Max( ( FirstVNF_RAM / CRS ),Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) ) )", "choosing": "Min( Max( RMSe,DS ) ,( Max( ( Max( RCSe,( MUC - RRSe ) ) - MUR ),Min( MLU ,MUM ) ) / Min( RCSe ,Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_Mem_Server + MRS ) + RRS ),( ( FirstVNF_Mem_Server + MRS ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) * DS ) )", "obj1": 0.07520325203252033, "obj2": 0.7591594980593469}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MLU * MUM ) / ( DS - Max( DS,( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) ) ) )", "obj1": 0.8922764227642277, "obj2": 0.11181137243052452}, {"determining": "( ( ( Min( Max( Max( ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem_Server - MRS ) ),( ( FirstVNF_RAM - CRS ) + Min( CRS ,FirstVNF_RAM ) ) ),( ( ( FirstVNF_RAM - AMS ) * ( FirstVNF_Mem + RRS ) ) + Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + MRS ) ) ) ) ,( ( Max( Min( CRS ,DDR ),Max( FirstVNF_Mem_Server,Const ) ) - ( ( FirstVNF_Mem - PN ) / ( BR / FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_RAM_Server - Const ) - ( Const * MRS ) ) + ( ( RRS + CRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) + Max( ( Max( ( Max( RRS,FirstVNF_Mem_Server ) * Max( Const,DDR ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) + ( CRS * ARS ) ) ) - ( Max( Max( AMS,MDR ),Max( Const,FirstVNF_Mem_Server ) ) / Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM * MRS ) ) ) ),Max( Max( ( Min( ACS ,BR ) - ( FirstVNF_Mem_Server / BR ) ),Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,Max( BR,FirstVNF_Mem_Server ) ) ),( Min( ( PN * FirstVNF_Mem ) ,( BR + FirstVNF_RAM ) ) / Min( ( PN + MDR ) ,Min( RRS ,Const ) ) ) ) ) ) - Max( Max( Min( ( ( ( AMS / RRS ) + ( ACS + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_Mem_Server / RRS ) * Max( BR,FirstVNF_RAM_Server ) ) * Min( Min( MRS ,FirstVNF_Mem ) ,Min( ACS ,MDR ) ) ) ),Min( ( Min( ( ARS * ARS ) ,Max( ARS,RRS ) ) * Min( Max( CRS,CRS ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ,( Min( ( RRS - ACS ) ,Max( FirstVNF_Mem,MRS ) ) - ( ( BR * BR ) + ( BR + FirstVNF_CPU_Server ) ) ) ) ),Max( Min( ( ( Max( PN,BR ) + ( FirstVNF_Mem + FirstVNF_Mem ) ) / Max( Max( DDR,ARS ),( MRS - FirstVNF_CPU_Server ) ) ) ,( Max( Max( ARS,Const ),Max( ARS,FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,DDR ) * ( CRS * ACS ) ) ) ),( ( ( ( ARS / BR ) * ( FirstVNF_CPU_Server - ACS ) ) - ( ( ARS - AMS ) / Min( MDR ,FirstVNF_RAM ) ) ) + ( Max( ( AMS * CRS ),( Const * ARS ) ) - ( ( PN - AMS ) - ( DDR + ARS ) ) ) ) ) ) ) / ( Max( Min( ( ( ( Max( FirstVNF_Mem_Server,RRS ) * ( BR / ACS ) ) - Max( Max( BR,RRS ),( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server + CRS ),Max( MDR,BR ) ) / ( Min( MDR ,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ,( ( ( ( DDR * RRS ) - Min( BR ,Const ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) / Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( MDR * RRS ) ),( ( DDR * DDR ) / ( BR * MRS ) ) ) ) ),( ( ( ( ( AMS * PN ) / Max( AMS,Const ) ) - ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_CPU - PN ) ) ) + ( Min( ( FirstVNF_CPU - AMS ) ,( MDR / ACS ) ) / Min( ( BR - FirstVNF_Mem_Server ) ,( MDR / DDR ) ) ) ) / Max( ( Max( ( PN * Const ),Min( FirstVNF_CPU ,PN ) ) / Max( ( MRS + BR ),( RRS - BR ) ) ),( ( ( BR - MRS ) + ( BR * ARS ) ) - ( Min( AMS ,FirstVNF_CPU ) * Max( ARS,FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( ( ( ( ( AMS - BR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( DDR * FirstVNF_RAM_Server ) ) ) + Max( ( ( DDR - FirstVNF_CPU ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem - ARS ) / ( FirstVNF_CPU_Server * ACS ) ) ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,MRS ) ) + Max( Max( MDR,RRS ),( FirstVNF_Mem - AMS ) ) ) / ( ( ( FirstVNF_Mem_Server + ACS ) * ( PN + ARS ) ) / ( ( BR * FirstVNF_RAM_Server ) / ( AMS / AMS ) ) ) ) ) * Max( ( ( Max( ( PN - FirstVNF_RAM ),( RRS * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) * Max( BR,DDR ) ) ) + ( Min( ( DDR + FirstVNF_CPU ) ,( CRS * PN ) ) / ( Max( FirstVNF_CPU,Const ) * ( CRS * FirstVNF_RAM ) ) ) ),( ( ( ( FirstVNF_Mem_Server / MDR ) / ( DDR * PN ) ) * ( ( Const - FirstVNF_CPU_Server ) * ( BR / DDR ) ) ) * ( Min( ( AMS - BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) ) * ( Max( Const,FirstVNF_CPU ) * Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( RCSe ,RRSe ) + ( RRSe * MLU ) ) + ( Max( MUC,MLU ) * ( MUM * RRSe ) ) ) - Max( ( Min( DS ,MLU ) * Max( DS,MUM ) ),( ( MLU / RCSe ) + ( MUR + DS ) ) ) ),Min( ( ( Min( RMSe ,RMSe ) - ( RMSe / MUM ) ) / ( Max( DS,MUR ) * ( MUR - RRSe ) ) ) ,( Min( ( RRSe - CS ) ,( DS - MUR ) ) + Max( ( MUM / CS ),Min( RRSe ,RMSe ) ) ) ) ) + Max( ( ( ( ( RMSe * RRSe ) - Min( RRSe ,RCSe ) ) + ( Min( MLU ,MLU ) / ( MUM / CS ) ) ) * ( ( ( MUR + MUC ) * ( RMSe * RCSe ) ) / ( Max( MUM,MLU ) - Min( MLU ,RMSe ) ) ) ),Max( ( ( ( RCSe * RRSe ) * Min( MUM ,MUC ) ) - ( Max( DS,DS ) - ( MUM + RRSe ) ) ),( ( ( CS + MUM ) * Max( MUC,RCSe ) ) - ( ( MLU + DS ) + ( MUR + DS ) ) ) ) ) ) * ( Min( Min( Min( ( Min( MLU ,RRSe ) + ( MUR * MLU ) ) ,( ( DS - RRSe ) - Min( CS ,RCSe ) ) ) ,( ( ( MLU * MUC ) + ( RMSe - MUC ) ) / Max( ( MLU + MLU ),( RMSe + MLU ) ) ) ) ,Max( ( ( ( CS * DS ) - ( RCSe * MUR ) ) * Min( Min( RMSe ,RMSe ) ,Min( MUM ,DS ) ) ),Min( ( ( RMSe - MUM ) * Min( MUC ,MLU ) ) ,Max( ( MUR + RRSe ),( DS * MUR ) ) ) ) ) * ( ( ( ( ( MUM / MUM ) + ( RMSe - CS ) ) + Min( ( DS / DS ) ,Min( CS ,MUM ) ) ) / ( ( Max( MUC,MLU ) + Min( RRSe ,CS ) ) / ( ( RRSe - MUC ) + ( RCSe / MUM ) ) ) ) - ( ( Min( ( MUM * MLU ) ,( MUC + CS ) ) * Min( ( MLU + MUM ) ,Min( MUM ,MUC ) ) ) + Max( Max( ( RMSe - RMSe ),( MUR - CS ) ),Min( Min( CS ,RRSe ) ,( MLU + MUM ) ) ) ) ) ) ) - ( ( Min( Max( ( ( Max( RMSe,MLU ) / ( MUR * DS ) ) / ( ( RRSe + MUR ) + Max( CS,MLU ) ) ),( ( ( MUC - MUR ) + ( DS + RRSe ) ) * ( ( RMSe + MUM ) / Max( DS,MUR ) ) ) ) ,( ( ( ( CS - RCSe ) + ( MUC + MUM ) ) - Max( Min( MUR ,MLU ),( MUC - MUM ) ) ) - ( ( ( MLU * RRSe ) * ( DS * MUR ) ) / ( ( RMSe * RRSe ) / ( RMSe / RRSe ) ) ) ) ) - ( Max( ( ( ( CS / CS ) + ( MUC / MUC ) ) + ( ( CS + DS ) - ( MUR * RCSe ) ) ),Min( ( ( MLU - RMSe ) + ( RRSe / MUM ) ) ,( Max( RCSe,MUM ) / ( RRSe + MUC ) ) ) ) + Max( ( Max( Min( DS ,DS ),( RCSe - RRSe ) ) + ( ( RCSe * MLU ) * ( DS / DS ) ) ),Max( ( Max( DS,RCSe ) * ( MUC - MLU ) ),Max( ( MUM * MUR ),Min( RCSe ,RCSe ) ) ) ) ) ) + ( Max( Max( Max( ( ( MUM + DS ) * Min( MUM ,MLU ) ),( ( RRSe / MLU ) - ( MUM + MUM ) ) ),Min( ( ( CS * MUM ) - ( CS * MUM ) ) ,( ( MUM / MLU ) - ( RMSe / MUC ) ) ) ),( Max( ( ( MUR - MUM ) * ( MUR / MLU ) ),Max( ( CS * MUM ),( RMSe + CS ) ) ) + Max( Min( ( MUC / RMSe ) ,Max( MLU,MUR ) ),( ( MLU / CS ) * ( MLU - MLU ) ) ) ) ) - ( ( Max( ( ( DS - MUR ) + ( DS + RRSe ) ),( ( DS - RMSe ) * ( MLU + CS ) ) ) / ( ( Min( MUR ,MUC ) + ( RMSe - CS ) ) / ( ( MUC / MLU ) - ( MLU - RMSe ) ) ) ) + ( Max( Min( Max( MUR,MUC ) ,( RCSe / MUC ) ),( ( RMSe / MLU ) * ( MLU - MUM ) ) ) * ( ( Max( CS,RCSe ) * ( MLU * RCSe ) ) * Min( ( MUC + MLU ) ,Max( MUM,RMSe ) ) ) ) ) ) ) )", "obj1": 0.8191056910569106, "obj2": 0.14918092549583073}, {"determining": "Min( ( MDR / ( FirstVNF_Mem_Server + MRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / DS ) + ( MUM / MUC ) )", "obj1": 0.5467479674796748, "obj2": 0.306013918060451}, {"determining": "( ( MRS * Min( ARS ,FirstVNF_RAM_Server ) ) - Min( MRS ,MRS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MLU,RRSe ) )", "obj1": 0.48577235772357724, "obj2": 0.33004699547721433}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) - ( DS * CS ) )", "obj1": 0.18089430894308944, "obj2": 0.6120997357063815}, {"determining": "Max( ( ARS + RRS ),( ( ( AMS * CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) - ( ( MUR * DS ) + ( DS + MUR ) ) ) ) * DS ) )", "obj1": 0.17073170731707318, "obj2": 0.6587643893489153}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * RRS ) - ( ( BR * RRS ) - Min( MRS ,MRS ) ) )", "choosing": "( MLU / ( DS * CS ) )", "obj1": 0.11788617886178862, "obj2": 0.6783150464609344}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Max( FirstVNF_Mem,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * Min( ARS ,PN ) ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.02314309963996467}, {"determining": "( ( BR / RRS ) - Min( MRS ,Min( ( ( MDR - Min( MRS ,FirstVNF_Mem_Server ) ) * RRS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS - MLU ) + MLU )", "obj1": 0.6361788617886179, "obj2": 0.2665000655772383}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) / ( DS + MUR ) )", "obj1": 0.4349593495934959, "obj2": 0.4086948328979217}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MLU * MUM ) / ( DS - Max( DS,MUC ) ) )", "obj1": 0.8150406504065041, "obj2": 0.181972556839175}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.6869918699186992, "obj2": 0.2582208142370423}, {"determining": "Max( ( ARS + FirstVNF_RAM ),FirstVNF_RAM )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.5772357723577236, "obj2": 0.2828380227957031}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.25203252032520324, "obj2": 0.6088666457329321}, {"determining": "( ( AMS - CRS ) * MRS )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe * MUR ) + Max( MUR,CS ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.258130081300813, "obj2": 0.5536010316829036}, {"determining": "( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( MUR / CS ),( RMSe * RRSe ) ) + ( MUM / MUC ) )", "obj1": 0.4268292682926829, "obj2": 0.43325009859532865}, {"determining": "( ( Max( Min( ( Min( ( ( FirstVNF_Mem_Server + CRS ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( MRS * ARS ) + ( AMS * FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU - RRS ) + ( PN * BR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / Min( FirstVNF_CPU ,CRS ) ) ) ) ,Min( Max( ( ( BR - RRS ) / ( MDR * FirstVNF_CPU ) ),( ( MDR / ARS ) + ( RRS - CRS ) ) ) ,( ( ( MDR * FirstVNF_Mem ) * Max( RRS,FirstVNF_Mem_Server ) ) - ( Min( BR ,DDR ) + ( CRS + FirstVNF_CPU ) ) ) ) ),( Min( Max( Max( Max( FirstVNF_CPU_Server,ACS ),Max( BR,MRS ) ),( Max( CRS,CRS ) / ( FirstVNF_CPU * BR ) ) ) ,( Min( ( MRS + FirstVNF_CPU ) ,( ARS * FirstVNF_RAM ) ) + Min( Min( RRS ,DDR ) ,( MDR - AMS ) ) ) ) * Max( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) * ( FirstVNF_Mem_Server - AMS ) ) / ( Min( FirstVNF_CPU_Server ,RRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ),Max( ( ( BR * FirstVNF_RAM_Server ) * ( AMS / MDR ) ),( Min( ARS ,DDR ) * ( PN * CRS ) ) ) ) ) ) / ( Max( ( ( ( ( AMS * DDR ) + ( DDR + FirstVNF_RAM ) ) / ( Max( BR,MRS ) - ( FirstVNF_RAM * ACS ) ) ) * ( ( ( FirstVNF_RAM - Const ) * ( MRS + FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,MRS ) - ( AMS + CRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem,ARS ) * ( AMS * CRS ) ) - ( ( MDR - AMS ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( ( Min( FirstVNF_CPU_Server ,ACS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * Min( ( MDR / FirstVNF_Mem_Server ) ,( PN / AMS ) ) ) ) ) + Max( ( ( Min( ( FirstVNF_RAM - PN ) ,( MRS - ARS ) ) - ( ( DDR * ARS ) / Min( RRS ,RRS ) ) ) - Max( Min( Max( FirstVNF_Mem_Server,PN ) ,( PN - ARS ) ),Max( ( FirstVNF_Mem_Server + Const ),Min( MRS ,AMS ) ) ) ),Min( ( ( Min( CRS ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem / MRS ) ) + ( Max( FirstVNF_CPU,BR ) / ( MRS + MDR ) ) ) ,Min( ( ( MRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * RRS ) ) ,( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,Const ) ) ) ) ) ) ) - ( Max( ( ( ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MDR ) ) * ( ( MDR - ARS ) + ( FirstVNF_RAM_Server * BR ) ) ) * ( ( Min( ARS ,PN ) * ( CRS + PN ) ) - ( ( MDR * RRS ) - ( RRS * ARS ) ) ) ) + ( Min( ( ( FirstVNF_RAM_Server * Const ) + Max( DDR,FirstVNF_RAM_Server ) ) ,Min( ( BR * Const ) ,Max( Const,MRS ) ) ) / Min( ( Min( FirstVNF_RAM_Server ,CRS ) + ( FirstVNF_Mem + DDR ) ) ,( ( FirstVNF_RAM_Server + Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ),( Max( ( ( ( DDR / DDR ) * Max( BR,FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ),Max( ( ( ACS + AMS ) * Min( FirstVNF_Mem_Server ,MRS ) ),( ( ACS - PN ) + Max( AMS,MDR ) ) ) ) * ( Min( ( Min( CRS ,FirstVNF_Mem_Server ) * ( PN / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem - AMS ) * ( MDR * FirstVNF_RAM ) ) ) - Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) * Max( ( ( ( ( Min( PN ,BR ) + ( DDR / FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_RAM_Server,DDR ) * Max( MDR,PN ) ) ) * ( Max( ( AMS / CRS ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + Min( ACS ,RRS ) ) ) ) * Min( Max( ( ( FirstVNF_Mem / RRS ) - Min( ARS ,Const ) ),( ( ACS + Const ) - ( RRS * PN ) ) ) ,( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( ( Const * AMS ) / ( FirstVNF_RAM - ARS ) ) ) ) ),( ( ( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM * Const ) ) * Max( ( Const + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + BR ) ) ) - Min( Min( ( RRS * BR ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( ( MRS * AMS ),( PN + ACS ) ) ) ) + ( ( ( Min( MRS ,ARS ) + Min( BR ,FirstVNF_Mem ) ) / Max( ( MRS + ACS ),Min( FirstVNF_CPU ,DDR ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),( RRS / FirstVNF_Mem_Server ) ) / ( Min( MRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM / AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( Min( MUC ,RRSe ) - ( CS + RRSe ) ) * ( ( RMSe - CS ) + ( RCSe + CS ) ) ) ,Min( Min( ( MLU - RMSe ) ,( RRSe - CS ) ) ,( Min( MLU ,RMSe ) + ( MUM / CS ) ) ) ) - ( ( ( Max( MUC,RMSe ) / Min( DS ,MUR ) ) - ( ( RRSe + RCSe ) * ( MLU - MUR ) ) ) - Max( Max( ( RRSe / DS ),( MUC / DS ) ),( Min( RMSe ,MUC ) - ( RCSe - DS ) ) ) ) ) + Min( ( Min( ( ( RMSe * MUR ) + ( RRSe - RRSe ) ) ,( ( RMSe / CS ) + ( MUC - DS ) ) ) / ( ( Min( DS ,RMSe ) * Min( RMSe ,DS ) ) + ( Max( MUC,MLU ) / ( RCSe - RCSe ) ) ) ) ,( ( Min( Max( CS,RMSe ) ,Max( RMSe,MUR ) ) * Max( ( MUC + CS ),( CS * MLU ) ) ) - Min( ( ( RMSe * MUR ) * ( MLU - MLU ) ) ,( ( MUR - DS ) - ( MUR + CS ) ) ) ) ) ) - ( Min( ( ( ( ( MUM / MUM ) - ( MLU / DS ) ) / Max( ( RCSe / MUR ),( RCSe / MUC ) ) ) + ( ( ( RRSe * MUR ) * ( CS * MLU ) ) / ( ( RMSe * MUC ) / ( RMSe * MUC ) ) ) ) ,( Max( Max( Min( MLU ,MUC ),Min( DS ,MLU ) ),( Max( RMSe,MLU ) * ( MUM + DS ) ) ) - ( Max( ( MUC + RCSe ),Max( RRSe,MUR ) ) * ( ( RCSe * DS ) + ( RCSe - MUM ) ) ) ) ) / ( ( ( ( ( RMSe / RCSe ) * ( MUC - MUC ) ) * Max( Max( RCSe,CS ),( DS / DS ) ) ) + ( ( ( RCSe * CS ) + ( RRSe / RCSe ) ) - Max( ( CS + DS ),Max( RMSe,RRSe ) ) ) ) + ( Max( ( Min( RMSe ,RRSe ) / Min( CS ,RMSe ) ),( Min( RCSe ,RCSe ) / ( DS - CS ) ) ) - ( ( ( MUM * RRSe ) + ( MLU - DS ) ) - ( ( MLU / CS ) - ( MUC + MUC ) ) ) ) ) ) ),Min( ( ( Max( Max( ( ( DS * RMSe ) + ( RRSe - RMSe ) ),Max( ( MUC * RCSe ),( RRSe + MUC ) ) ),( ( ( RMSe - DS ) - ( RCSe * MUC ) ) - ( ( MUC - RRSe ) / ( MLU + RCSe ) ) ) ) / Min( ( ( Min( RMSe ,RCSe ) + Max( MLU,MUM ) ) / ( Min( RMSe ,RRSe ) * ( RRSe - RCSe ) ) ) ,Min( ( ( RMSe * MUM ) + ( MLU - MUM ) ) ,Min( Max( CS,DS ) ,( DS / DS ) ) ) ) ) * ( Max( Max( ( Min( MUC ,MUM ) + ( MLU - RMSe ) ),Min( ( MLU * MUC ) ,( RCSe + MLU ) ) ),( ( ( RRSe - RCSe ) - Max( RCSe,DS ) ) * Min( Max( DS,RMSe ) ,( MLU / MUM ) ) ) ) / ( Min( ( ( RCSe / DS ) * ( MUM - MLU ) ) ,( ( MUR + RCSe ) + ( MUR + MUM ) ) ) - ( Max( ( RCSe * RMSe ),( RCSe + MUM ) ) + Max( ( RMSe + RCSe ),( MUR / RMSe ) ) ) ) ) ) ,Min( Max( ( ( Min( ( CS * DS ) ,Min( CS ,MUC ) ) - Min( Min( RMSe ,RMSe ) ,Min( MLU ,MUM ) ) ) - ( ( Max( MLU,RRSe ) * Max( DS,RCSe ) ) - Max( Min( MLU ,RMSe ),( CS * MUM ) ) ) ),( ( Max( ( MLU * MUC ),( MUM - MLU ) ) + Min( ( MUC / RRSe ) ,( CS - RCSe ) ) ) * ( ( Max( RMSe,RCSe ) + ( MUM * DS ) ) * Min( Max( RMSe,RRSe ) ,( RCSe / MUC ) ) ) ) ) ,( ( ( ( Max( MUC,RRSe ) + ( MLU - DS ) ) * ( ( MUM * MUM ) / ( RRSe * DS ) ) ) / ( ( ( RRSe / RMSe ) + ( RCSe - RMSe ) ) + Min( Min( DS ,MLU ) ,( MUM - MLU ) ) ) ) / ( Min( ( Max( CS,MUC ) * ( DS / DS ) ) ,( Max( RMSe,RRSe ) + ( CS / RMSe ) ) ) / Min( Max( Min( MLU ,MUM ),( RMSe / DS ) ) ,( Min( DS ,MLU ) * Max( MUR,RMSe ) ) ) ) ) ) ) )", "obj1": 0.5975609756097561, "obj2": 0.27285039096220837}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / RRSe ) / ( DS + ( DS * CS ) ) )", "obj1": 0.14227642276422764, "obj2": 0.6729081273518456}, {"determining": "( ( ( ( ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),Min( ACS ,DDR ) ) ,Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - FirstVNF_Mem_Server ) ) ) ) / Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Min( DDR ,FirstVNF_RAM_Server ) ) * Max( ( CRS - FirstVNF_CPU ),( MRS / BR ) ) ),( ( ( MDR / MRS ) - Min( AMS ,Const ) ) / ( Max( ACS,DDR ) + Min( FirstVNF_CPU ,RRS ) ) ) ) ) + Min( ( Max( Min( ( CRS + FirstVNF_CPU_Server ) ,( MDR - Const ) ),Max( ( BR / FirstVNF_CPU_Server ),Max( AMS,ARS ) ) ) / ( ( Min( CRS ,PN ) / ( CRS * CRS ) ) * ( ( RRS + Const ) * ( FirstVNF_Mem * MRS ) ) ) ) ,( ( Min( Min( BR ,ARS ) ,Max( ARS,ACS ) ) - ( Max( CRS,FirstVNF_RAM ) + ( FirstVNF_CPU_Server - DDR ) ) ) + Max( Max( ( MDR + Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ),( ( CRS - BR ) / Min( RRS ,FirstVNF_Mem ) ) ) ) ) ) - ( Min( Max( ( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_CPU + DDR ) ) - ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server / RRS ) ) ),( ( ( BR * BR ) * Min( FirstVNF_RAM_Server ,AMS ) ) - ( ( MDR - CRS ) / ( ACS * FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem_Server + DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Min( ( RRS - ARS ) ,Min( AMS ,CRS ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,PN ) ) / Min( ( MDR - FirstVNF_RAM ) ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) * Max( ( Min( ( Min( FirstVNF_CPU_Server ,DDR ) + Max( DDR,FirstVNF_CPU ) ) ,( ( CRS * AMS ) * Max( Const,ARS ) ) ) - ( ( ( ARS + ARS ) * ( FirstVNF_RAM + RRS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / MDR ) ) ) ),Max( ( ( ( RRS / AMS ) + ( MDR + FirstVNF_Mem ) ) * ( ( MDR + FirstVNF_CPU ) / Min( MDR ,FirstVNF_CPU_Server ) ) ),Max( Max( ( AMS * PN ),( BR + ACS ) ),( Min( MRS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem / RRS ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( ACS / Const ) * ( MDR / MRS ) ),( ( FirstVNF_CPU_Server / AMS ) * Max( CRS,FirstVNF_CPU ) ) ) - ( Min( ( CRS + FirstVNF_RAM_Server ) ,( PN * MDR ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) + Max( FirstVNF_Mem,PN ) ) ) ) + ( Min( ( ( FirstVNF_CPU_Server - CRS ) / ( AMS - ARS ) ) ,( Min( MDR ,AMS ) - ( AMS - Const ) ) ) / ( Min( ( RRS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( ACS ,CRS ) ) ) ) ) - ( Min( ( ( ( ARS - MDR ) / ( MDR + FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ,Min( ( ( MDR - BR ) * ( FirstVNF_Mem * CRS ) ) ,( Min( ACS ,FirstVNF_CPU_Server ) / ( PN / FirstVNF_RAM ) ) ) ) + ( ( Min( ( MRS + DDR ) ,( FirstVNF_Mem_Server * RRS ) ) * ( ( ARS + FirstVNF_RAM_Server ) + ( BR - ACS ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( BR + FirstVNF_Mem ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) ) / ( ( Max( ( Min( Min( Const ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) + ( ( MDR * ACS ) - ( PN - FirstVNF_RAM_Server ) ) ),( ( Max( FirstVNF_Mem,AMS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem / BR ) + ( FirstVNF_Mem_Server * MDR ) ) ) ) - ( Min( ( Max( ACS,RRS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ,Min( ( FirstVNF_CPU / PN ) ,( MDR / FirstVNF_RAM ) ) ) - ( Max( ( ACS - BR ),Min( FirstVNF_CPU_Server ,ACS ) ) * Max( ( RRS + FirstVNF_RAM_Server ),Max( ACS,FirstVNF_RAM ) ) ) ) ) - ( Min( ( ( ( Const + MDR ) - ( Const - CRS ) ) * Min( Max( BR,MDR ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( FirstVNF_Mem_Server * DDR ),Min( AMS ,FirstVNF_Mem ) ) * ( Min( ARS ,MDR ) / ( BR - DDR ) ) ) ) + ( ( ( Min( FirstVNF_CPU_Server ,ARS ) * ( AMS - FirstVNF_Mem ) ) + Max( Max( MDR,ACS ),Max( PN,FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_Mem_Server / RRS ) ) - Min( ( BR - FirstVNF_RAM_Server ) ,( RRS / Const ) ) ) ) ) ) ) )", "choosing": "Max( ( RRSe / Max( ( Min( CS ,CS ) * ( MLU + MLU ) ),RRSe ) ),Min( ( Min( Max( ( MUM / ( ( MUR - CS ) * CS ) ),Min( ( ( MUR * CS ) * ( MUM + MLU ) ) ,MUM ) ) ,( ( RMSe / Min( MUM ,CS ) ) + RMSe ) ) - DS ) ,( CS + DS ) ) )", "obj1": 0.7682926829268293, "obj2": 0.18814878936071192}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - ( ( DS - CS ) / ( ( DS - CS ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.24390243902439024, "obj2": 0.6118851348411228}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5322928858426473}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MLU ) + ( CS * RMSe ) )", "obj1": 0.7439024390243902, "obj2": 0.2234295218686627}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MLU ) ,( RRSe - ( ( RCSe * CS ) + Max( MUR,CS ) ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5058390093393439}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( ( BR / RRS ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS - Max( ( DS * CS ),( Max( MLU,MLU ) / ( DS - MUC ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.3048780487804878, "obj2": 0.5095444766558691}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) ) ) )", "choosing": "( ( MUM + DS ) / MUM )", "obj1": 0.7520325203252033, "obj2": 0.19271660133824858}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.7276422764227642, "obj2": 0.23184900338109427}, {"determining": "Min( Max( FirstVNF_CPU,PN ) ,( ( MRS + ACS ) + ACS ) )", "choosing": "Min( ( MUM / MUC ) ,( RRSe - ( ( RCSe * MUR ) + ( RRSe - ( ( RCSe * MUR ) + ( MUR / CS ) ) ) ) ) )", "obj1": 0.3699186991869919, "obj2": 0.504607642353731}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9044715447154471, "obj2": 0.072748496530392}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + RCSe ) - Min( ( CS * MUC ) ,RMSe ) )", "obj1": 0.39634146341463417, "obj2": 0.44324324930257797}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9065040650406504, "obj2": 0.0709629027420639}, {"determining": "( Max( Max( ( ( Max( Max( ( MDR - AMS ),( FirstVNF_RAM - FirstVNF_Mem ) ),( Max( PN,FirstVNF_RAM ) - Max( CRS,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / ( MRS + AMS ) ) - ( ( ACS / FirstVNF_Mem ) + ( CRS * ACS ) ) ) ) / ( ( ( Max( FirstVNF_Mem,BR ) + Min( DDR ,Const ) ) * ( ( RRS - PN ) * ( Const - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,Min( DDR ,CRS ) ) - Max( Min( ACS ,Const ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ),( ( ( Max( ( ACS * BR ),( FirstVNF_Mem_Server - ACS ) ) - ( ( MDR + AMS ) / ( MRS + ARS ) ) ) / ( Max( ( CRS / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) * Min( ( Const - ACS ) ,( BR + DDR ) ) ) ) + Max( ( ( ( PN * FirstVNF_CPU ) / ( BR - FirstVNF_RAM_Server ) ) * ( ( CRS - FirstVNF_RAM ) * ( MDR + PN ) ) ),( ( ( DDR + ACS ) * ( ARS + BR ) ) / Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Max( ACS,RRS ) * ( MDR - Const ) ) / ( ( CRS - BR ) / ( CRS - MDR ) ) ) + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server / BR ),( FirstVNF_Mem_Server + ARS ) ) ) ) ,( ( ( Max( FirstVNF_CPU,DDR ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Min( CRS ,ACS ) + ( MDR - DDR ) ) ) + ( ( ( FirstVNF_RAM / DDR ) - Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( ARS ,FirstVNF_RAM ) ) ) ) ) + Max( ( ( ( ( PN + FirstVNF_CPU ) * ( BR * MDR ) ) + ( ( CRS + MDR ) * Min( CRS ,MRS ) ) ) * ( ( ( BR * FirstVNF_RAM_Server ) - Max( AMS,MRS ) ) / ( ( AMS / ARS ) - ( DDR * FirstVNF_CPU ) ) ) ),( ( Min( Min( BR ,FirstVNF_Mem ) ,( MRS * RRS ) ) + ( ( MRS - FirstVNF_CPU ) * ( RRS * FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_Mem_Server * DDR ) * ( BR - BR ) ) ,Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_RAM - Const ) ) / ( ( BR + AMS ) * ( FirstVNF_RAM_Server / AMS ) ) ) ,Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ( FirstVNF_CPU * CRS ) ) ,( ( MRS / ACS ) / ( PN / PN ) ) ) ) - ( Max( Max( ( AMS + ACS ),( AMS - FirstVNF_RAM ) ),Min( ( MDR - MDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Max( ( ( PN * AMS ) / ( BR * FirstVNF_Mem ) ),( Min( BR ,FirstVNF_Mem_Server ) + Max( Const,CRS ) ) ) ) ) - ( Min( Max( Min( ( DDR / BR ) ,Max( ARS,FirstVNF_Mem ) ),( Min( PN ,RRS ) * Min( FirstVNF_RAM ,RRS ) ) ) ,( ( Max( Const,CRS ) / ( FirstVNF_CPU_Server - MRS ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) * ( CRS / ACS ) ) ) ) / ( ( ( Max( BR,FirstVNF_CPU ) / ( BR * FirstVNF_Mem ) ) * Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,( PN * ACS ) ) ) + Max( ( ( FirstVNF_CPU_Server / BR ) / ( ARS * Const ) ),Max( Min( CRS ,FirstVNF_CPU ),( Const + ACS ) ) ) ) ) ),( ( ( Max( ( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,DDR ) ),( Max( CRS,FirstVNF_CPU ) * ( FirstVNF_Mem / RRS ) ) ) + ( ( Max( MDR,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * BR ) ) + ( Min( BR ,CRS ) * ( PN * MDR ) ) ) ) / Max( ( ( ( MRS * AMS ) / ( CRS + FirstVNF_RAM ) ) * Min( ( ACS - MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ),( ( ( MRS / BR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) - Min( ( ( Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,( Const + FirstVNF_Mem_Server ) ) - ( ( BR + RRS ) * ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( ( DDR + ARS ) / Max( RRS,AMS ) ) - Max( ( MRS - RRS ),( CRS * FirstVNF_Mem ) ) ) ) ,Max( ( Max( ( DDR * FirstVNF_CPU_Server ),( Const / FirstVNF_CPU ) ) - Min( ( MDR - ACS ) ,( ARS + MDR ) ) ),Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Max( Max( DDR,CRS ),( MDR + FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( Max( ( CS + CS ),( RRSe * RRSe ) ) + Min( ( MUR - MLU ) ,Min( RMSe ,CS ) ) ) - ( ( ( MLU + RMSe ) * ( DS - RRSe ) ) - ( ( DS - MUC ) * ( DS / DS ) ) ) ) / ( ( Min( Max( DS,RCSe ) ,Max( MUC,MUC ) ) + Max( Max( DS,RRSe ),Max( RRSe,MUC ) ) ) * ( Min( ( DS * DS ) ,( RMSe - MUM ) ) / ( ( CS * MLU ) * ( RRSe + MLU ) ) ) ) ) / ( Max( ( Max( ( MUC * MUR ),Min( RRSe ,CS ) ) / ( Max( RMSe,MLU ) * ( RMSe + CS ) ) ),( ( ( MUR * MLU ) - ( RRSe - RCSe ) ) - ( ( CS / RMSe ) - ( CS + MLU ) ) ) ) / ( ( ( ( RMSe / MUC ) - ( MUM / CS ) ) / ( Max( CS,RCSe ) * Max( DS,DS ) ) ) / Max( ( Min( CS ,CS ) / ( MUC * RCSe ) ),( ( RRSe / RMSe ) + ( RRSe * RCSe ) ) ) ) ) ),Max( ( Min( ( Min( Max( CS,MUR ) ,( RRSe - MUR ) ) / ( ( DS * DS ) - ( DS - MUM ) ) ) ,Max( ( ( MUM + RCSe ) / ( MUR - MUM ) ),( ( RMSe / MUM ) + Max( RMSe,CS ) ) ) ) + ( Min( Min( ( RCSe / DS ) ,( MUC * DS ) ) ,( Max( MLU,RRSe ) * ( CS * RRSe ) ) ) / ( Max( ( RRSe / RCSe ),( CS - MUM ) ) / Min( ( RRSe - MUC ) ,( MUR + RRSe ) ) ) ) ),( ( ( Max( Min( MLU ,MLU ),Min( DS ,DS ) ) - Min( Min( RMSe ,RRSe ) ,( MUC + MLU ) ) ) - ( Max( ( MUC + RMSe ),Max( MLU,RRSe ) ) * ( ( MUR * RRSe ) - ( RRSe - RCSe ) ) ) ) * Min( ( Min( ( MUM - MLU ) ,( MLU / MUR ) ) + ( ( RCSe + MLU ) / Min( MUC ,MUC ) ) ) ,( Min( ( RMSe / RRSe ) ,( RMSe - MLU ) ) * ( Max( CS,DS ) + ( MUC - MUM ) ) ) ) ) ) ) / Min( Max( ( Max( Max( ( ( RMSe + RCSe ) * ( MUM - RRSe ) ),( Max( MUC,MUC ) + ( RCSe + DS ) ) ),( ( ( RMSe * MLU ) * Max( CS,DS ) ) * ( ( RCSe * MLU ) * ( MLU - MUR ) ) ) ) * Max( ( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) - ( ( MLU / RMSe ) / ( MUC * DS ) ) ),( ( ( CS / RRSe ) + Min( MLU ,CS ) ) + ( ( RRSe + RMSe ) + ( MUR * RRSe ) ) ) ) ),( Max( ( ( ( MLU + RCSe ) * ( MUR + MUM ) ) - ( ( MUM - DS ) / Min( MUC ,MUC ) ) ),( ( Max( MUC,RCSe ) - ( CS / CS ) ) - Max( ( MUR * CS ),( RRSe - MUC ) ) ) ) * ( Min( ( ( DS * DS ) - ( RRSe / CS ) ) ,( Min( MUM ,RCSe ) / Max( MUM,RMSe ) ) ) - ( ( Max( MUR,RMSe ) - ( RCSe / MUC ) ) / ( Max( MUM,RRSe ) * ( MUC / RCSe ) ) ) ) ) ) ,( Min( Max( ( Min( Max( DS,MUC ) ,( MLU - RMSe ) ) - ( ( MUC / RCSe ) - ( RRSe - CS ) ) ),( Max( ( RCSe * MUC ),( MLU / DS ) ) - Max( Max( DS,DS ),( CS + MLU ) ) ) ) ,( ( ( ( MLU + RCSe ) - Max( RRSe,MUR ) ) * ( Min( MLU ,MUM ) / Max( MUR,DS ) ) ) - ( ( ( RMSe + DS ) - ( MUR + RRSe ) ) / ( Min( MUC ,DS ) * ( MUC - CS ) ) ) ) ) / Max( Min( ( ( ( MUM * MUC ) / Max( RCSe,MUC ) ) * ( ( RMSe / CS ) / ( MUC / MUM ) ) ) ,Min( ( ( RMSe + DS ) / ( MUM / RRSe ) ) ,Min( Max( CS,RCSe ) ,Max( RRSe,MLU ) ) ) ),Min( Max( ( ( RMSe * RMSe ) * ( MUC * RRSe ) ),( Min( MUM ,MUR ) - ( RRSe + DS ) ) ) ,Max( ( Min( RRSe ,RMSe ) + ( DS + RCSe ) ),( ( MUM - RMSe ) + ( RMSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.38414634146341464, "obj2": 0.4819945659120335}, {"determining": "( ( BR * ( ( BR * ACS ) - Min( MRS ,FirstVNF_Mem_Server ) ) ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM + RMSe ) + ( MLU / MUR ) ) - MUC ) + ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.021208218673737296}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.47560975609756095, "obj2": 0.3566568560720231}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.3882113821138211, "obj2": 0.4536306465430349}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - ( MUC / MLU ) ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5471781264016383}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9065040650406504, "obj2": 0.0709629027420639}, {"determining": "Min( Max( RRS,ARS ) ,Max( RRS,ARS ) )", "choosing": "Min( ( MUC / MLU ) ,MUC )", "obj1": 0.3821138211382114, "obj2": 0.49789676730846144}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + MRS ) + MRS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5490009642005547}, {"determining": "( ( ( MDR - MDR ) * ACS ) - Min( ARS ,( ( MRS * RRS ) - Min( MRS ,MRS ) ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4634146341463415, "obj2": 0.3641200325836689}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}, {"determining": "( ( Min( PN ,Const ) / ( ( ( MDR - MDR ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( DS + MUR ) / ( CS + MLU ) ) )", "obj1": 0.3780487804878049, "obj2": 0.49869667527866945}], "11": [{"determining": "( ( RRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + PN ) / PN ) )", "choosing": "Max( ( ( ( Max( ( ( Min( MUC ,CS ) - ( DS - RMSe ) ) - Max( ( RCSe + RMSe ),( MUM - CS ) ) ),Max( Min( ( MUR + MUC ) ,( DS / RRSe ) ),( ( CS * DS ) + Min( RCSe ,MUM ) ) ) ) - ( ( Min( ( DS / RMSe ) ,Min( MUC ,CS ) ) + ( ( MUM - MLU ) * Max( CS,MUR ) ) ) - ( ( ( CS / RMSe ) * Min( RMSe ,RMSe ) ) / ( Min( MUM ,RCSe ) - Max( CS,CS ) ) ) ) ) / ( ( ( ( ( MUR * RMSe ) + Min( MUC ,MLU ) ) / ( Min( RMSe ,MUR ) / ( MLU / MUR ) ) ) + ( ( Min( RCSe ,CS ) / Min( MLU ,MUM ) ) * ( Min( MLU ,MLU ) + ( MUM / CS ) ) ) ) + ( ( ( Max( RRSe,CS ) + Min( MUR ,CS ) ) * ( ( MUR + RMSe ) + ( MUM / MLU ) ) ) + ( ( ( CS * DS ) * ( CS / CS ) ) * ( Max( DS,RMSe ) - ( DS + DS ) ) ) ) ) ) + ( Min( ( ( Max( Max( RRSe,DS ),Min( CS ,MUC ) ) - ( ( RMSe + MUC ) * ( MUC * RRSe ) ) ) / ( ( ( RMSe / MUM ) / Max( CS,RMSe ) ) / ( ( CS / RRSe ) - Min( MUC ,MUR ) ) ) ) ,( Min( ( Min( MUM ,DS ) - Max( RRSe,MLU ) ) ,( ( MLU * MUM ) / ( RCSe / MUC ) ) ) - ( Max( Max( RMSe,MLU ),( MUC / RCSe ) ) + ( ( MUM / MUM ) - Max( RCSe,MUR ) ) ) ) ) / ( Max( Max( ( ( MUM + MUC ) - Max( DS,MUR ) ),( ( MUR / MUR ) + Min( MLU ,MUM ) ) ),( ( ( RRSe / MUR ) - ( RMSe - MUC ) ) - ( Min( MUR ,RMSe ) / Max( MLU,CS ) ) ) ) - Min( ( Min( Max( RMSe,MUM ) ,Max( MUM,MUR ) ) / Max( Min( CS ,DS ),Min( RCSe ,CS ) ) ) ,( ( ( RRSe + RRSe ) * ( RMSe + DS ) ) + ( ( RCSe * MUR ) / ( CS * CS ) ) ) ) ) ) ),( Max( ( ( Max( ( ( MUM + RCSe ) / ( MUC / MUR ) ),Max( ( RCSe * RMSe ),( CS * MUM ) ) ) / ( ( ( MUR * MLU ) * ( DS * RCSe ) ) * ( ( MUC / MLU ) * ( RMSe * RRSe ) ) ) ) + ( ( Max( ( MUC - MUR ),Max( MUR,CS ) ) + Min( ( RRSe * RCSe ) ,( MLU - RRSe ) ) ) * Min( Max( ( MUC + RMSe ),( DS - MUR ) ) ,Min( ( RCSe + RRSe ) ,( MUM - DS ) ) ) ) ),Min( Min( ( ( ( RCSe + MUC ) + Min( MUC ,RRSe ) ) / ( Min( MUM ,MUR ) - ( RCSe / MUR ) ) ) ,Max( ( Max( RRSe,RCSe ) - ( RMSe - MUR ) ),( Max( MUC,RCSe ) - ( RCSe - MUR ) ) ) ) ,Min( ( ( ( MUC * MLU ) - ( RMSe - MUM ) ) - ( ( MLU * CS ) + ( MUR + MUC ) ) ) ,Min( ( ( MUM / RRSe ) + Max( DS,MUR ) ) ,( ( DS * MUM ) + ( RCSe + RMSe ) ) ) ) ) ) / ( Max( ( ( ( ( RMSe + DS ) * Min( MUR ,MLU ) ) - ( Max( DS,RMSe ) / Max( RCSe,MUR ) ) ) / Min( ( ( MUC - RMSe ) - Min( MLU ,MLU ) ) ,Max( Max( MLU,RRSe ),( RRSe / MLU ) ) ) ),Max( ( Min( ( MUR * MUM ) ,Max( RCSe,RRSe ) ) + ( ( CS - DS ) + Max( RCSe,DS ) ) ),( Max( ( RRSe - DS ),( MUC * DS ) ) + Max( ( RMSe * MUM ),( RMSe * MUM ) ) ) ) ) + ( ( ( ( ( RCSe / RMSe ) - Min( MUC ,MLU ) ) / ( Min( RRSe ,DS ) + ( RRSe / RMSe ) ) ) + Max( Min( ( MUC / RMSe ) ,( RRSe + MUR ) ),Max( Max( RCSe,MLU ),( RCSe + RCSe ) ) ) ) - Max( ( ( Max( RRSe,MUM ) * ( MUM * MUC ) ) + ( ( MLU - RRSe ) / ( DS * CS ) ) ),( ( ( CS + MUM ) + ( DS - MUM ) ) - ( ( RRSe - MLU ) + ( RMSe * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( Min( ( Min( CRS ,FirstVNF_RAM ) * Max( ACS,MRS ) ) ,Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - ACS ) ) ) - Max( ( ( MDR * RRS ) * Max( PN,RRS ) ),Min( ( FirstVNF_RAM + ACS ) ,Max( RRS,FirstVNF_CPU_Server ) ) ) ) + Min( Min( Max( Max( RRS,MDR ),( Const / MDR ) ) ,( ( FirstVNF_Mem_Server / DDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) ,Max( ( ( FirstVNF_CPU / ARS ) + ( FirstVNF_CPU * FirstVNF_Mem ) ),( Max( DDR,FirstVNF_Mem_Server ) - ( AMS + FirstVNF_CPU_Server ) ) ) ) ) ,( Min( Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / ARS ) ) ,( ( ACS - BR ) * ( FirstVNF_RAM + RRS ) ) ) ,Min( ( ( Const - ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem + DDR ),( DDR / RRS ) ) ) ) * Min( Min( Max( Max( ACS,Const ),Min( FirstVNF_CPU ,DDR ) ) ,Min( ( ACS / ARS ) ,( MDR / CRS ) ) ) ,( ( ( DDR / FirstVNF_RAM ) * ( AMS + CRS ) ) + ( ( DDR / FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem_Server ) ) ) ) ) ) - ( Min( ( Max( ( ( RRS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / PN ) ),( ( Const * PN ) - ( AMS * ACS ) ) ) - ( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( DDR * MRS ) - ( RRS + FirstVNF_CPU ) ) ) ) ,Min( ( Max( ( Const * CRS ),Max( FirstVNF_RAM,PN ) ) + Min( ( FirstVNF_RAM + MDR ) ,Min( FirstVNF_CPU_Server ,Const ) ) ) ,Min( ( Max( ACS,BR ) + ( Const / FirstVNF_RAM_Server ) ) ,Max( Max( FirstVNF_CPU_Server,DDR ),( CRS / CRS ) ) ) ) ) - Min( Min( ( ( ( FirstVNF_CPU * FirstVNF_Mem ) / Min( ACS ,AMS ) ) - Max( Max( FirstVNF_RAM,ARS ),Max( ARS,CRS ) ) ) ,Min( Min( ( MDR - ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ,Max( Min( PN ,FirstVNF_RAM ),( BR * ARS ) ) ) ) ,Min( ( Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * AMS ) ) + ( Min( BR ,DDR ) + Max( FirstVNF_RAM,BR ) ) ) ,( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,Max( MRS,CRS ) ) * Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),( FirstVNF_RAM / RRS ) ) ) ) ) ) ) ,Min( ( ( Min( Max( ( ( ACS * FirstVNF_RAM ) * Min( RRS ,RRS ) ),( Max( Const,FirstVNF_Mem_Server ) + ( PN + AMS ) ) ) ,Max( Min( ( CRS - PN ) ,Min( FirstVNF_RAM ,MDR ) ),( ( CRS / FirstVNF_RAM ) + ( FirstVNF_RAM_Server / AMS ) ) ) ) / ( ( ( Max( MRS,CRS ) + ( CRS / FirstVNF_RAM_Server ) ) + ( ( BR + FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( Min( Min( RRS ,BR ) ,( MDR / FirstVNF_RAM ) ) + Max( ( Const / FirstVNF_RAM_Server ),Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( Min( FirstVNF_RAM_Server ,PN ) * ( FirstVNF_Mem_Server + AMS ) ) * Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( AMS / CRS ) ) ) + Min( ( ( DDR / FirstVNF_CPU ) * ( MDR * FirstVNF_Mem_Server ) ) ,( ( DDR - MDR ) - ( BR / AMS ) ) ) ) / ( ( Min( ( FirstVNF_RAM_Server * ACS ) ,( FirstVNF_CPU_Server - Const ) ) - ( ( CRS / RRS ) - ( CRS - RRS ) ) ) / Max( Min( Max( FirstVNF_RAM,ARS ) ,( FirstVNF_CPU + Const ) ),( ( MDR - BR ) + ( BR - MRS ) ) ) ) ) ) ,( ( ( Min( ( Max( FirstVNF_Mem_Server,BR ) + Max( Const,CRS ) ) ,( ( DDR - ACS ) / ( FirstVNF_Mem + MDR ) ) ) + ( ( ( BR * RRS ) + ( FirstVNF_RAM_Server * RRS ) ) - Max( ( CRS + PN ),( CRS - FirstVNF_Mem_Server ) ) ) ) + ( ( ( ( DDR * ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Max( BR,MRS ) ) ) + ( Max( ( DDR - FirstVNF_RAM ),Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + ( ( DDR + PN ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( Min( Min( Min( ( DDR + BR ) ,( PN * BR ) ) ,( ( FirstVNF_Mem * Const ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,( ( ( DDR * FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * ( ( Const * BR ) - ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( ACS + RRS ) - ( Const * ARS ) ) / Max( ( RRS / FirstVNF_RAM_Server ),( CRS / FirstVNF_RAM ) ) ) + ( ( ( AMS * FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( ARS + ARS ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Min( ( Max( Max( Min( ( ( Max( MUM,RCSe ) + ( RCSe + DS ) ) + ( ( CS / MLU ) / Max( MUC,RCSe ) ) ) ,( ( Min( RRSe ,MLU ) - ( RRSe * CS ) ) - ( Min( RMSe ,CS ) + ( MUC * DS ) ) ) ),( ( ( Min( RCSe ,MLU ) - ( MUC + RRSe ) ) + ( Min( MUM ,MUR ) * Min( MUC ,MUC ) ) ) / Min( ( Max( MUR,CS ) * Max( RCSe,MUR ) ) ,Min( ( MUR / MUC ) ,( MUM / DS ) ) ) ) ),( ( Min( ( ( MUR - MUR ) / ( MUC + MLU ) ) ,( ( RMSe - MUC ) / ( RMSe - RMSe ) ) ) + Min( ( ( CS * DS ) * Max( RMSe,CS ) ) ,( Min( MUR ,MUM ) / ( DS + RMSe ) ) ) ) - ( ( Max( Min( MLU ,MUC ),Max( DS,CS ) ) * Min( Max( DS,MLU ) ,( MUR - MUC ) ) ) - Max( ( Min( RCSe ,MUC ) + Min( MUC ,DS ) ),Max( ( MUC / RCSe ),( MLU - MUR ) ) ) ) ) ) * Max( ( Max( Min( Max( ( MUM + DS ),( RCSe * MLU ) ) ,( ( MUC / RRSe ) + ( RCSe / RCSe ) ) ),( ( ( MUC * RCSe ) / ( RRSe / MUR ) ) / ( ( RCSe - MLU ) - ( MUM + RRSe ) ) ) ) - Min( ( ( ( RCSe / RRSe ) / ( MLU * RRSe ) ) * Min( Min( MUM ,MLU ) ,Max( DS,CS ) ) ) ,( Min( ( DS / MUM ) ,( DS - MLU ) ) * ( ( DS + MUM ) * ( MUC / MUC ) ) ) ) ),Max( Max( ( Min( ( RMSe - RCSe ) ,Min( RRSe ,RMSe ) ) - Min( ( MLU * MUM ) ,Max( RCSe,DS ) ) ),Min( ( ( RCSe * DS ) - ( MUR / RRSe ) ) ,Max( ( RCSe / RCSe ),Max( CS,RCSe ) ) ) ),( Min( Max( ( MUM - MUC ),( RCSe * MUR ) ) ,( ( MUM - MUM ) + Max( DS,RMSe ) ) ) / ( Max( ( MUC * MLU ),( MUR / MUC ) ) / ( Max( RMSe,MLU ) / ( MLU * RCSe ) ) ) ) ) ) ) ,Min( ( ( Max( Min( ( ( RMSe * RRSe ) / ( MLU - MLU ) ) ,Min( ( RCSe / RCSe ) ,( MLU / RMSe ) ) ),( ( Max( CS,MUM ) + ( RMSe - MUC ) ) * Max( Min( DS ,RRSe ),Max( MUM,RCSe ) ) ) ) / ( Min( ( ( RMSe - RMSe ) + Min( MUM ,MUR ) ) ,Min( ( MUC - CS ) ,( MUM + MUR ) ) ) * ( ( Max( RMSe,RMSe ) - ( MLU - MUC ) ) + ( Max( MUM,MUR ) / ( RCSe - MUC ) ) ) ) ) - ( ( Min( ( ( RMSe / CS ) + Max( MUR,RMSe ) ) ,( ( RCSe / MUC ) * ( CS / RRSe ) ) ) * ( ( Min( MUR ,RCSe ) + Min( DS ,MUR ) ) * Min( Min( RCSe ,RCSe ) ,( RRSe - MUM ) ) ) ) / ( ( ( ( MUR * RMSe ) - ( MUC * MLU ) ) - ( Max( RCSe,CS ) + ( MLU + MUC ) ) ) * Max( ( ( DS + RRSe ) / ( RRSe + RMSe ) ),( ( MLU / CS ) + ( MLU - RCSe ) ) ) ) ) ) ,( Max( ( ( ( ( MUR / RMSe ) - ( MUM * RMSe ) ) / ( ( CS / MUM ) + Max( CS,RRSe ) ) ) + ( ( ( RRSe - DS ) / ( MUR + MUC ) ) - ( ( RMSe / RRSe ) / ( RMSe * RCSe ) ) ) ),Min( ( Max( Min( MUC ,RMSe ),Max( MUM,MLU ) ) * ( Max( MUC,RRSe ) * Max( RMSe,MUM ) ) ) ,( ( ( CS * MUC ) * ( RRSe - RRSe ) ) + Min( ( MLU * RMSe ) ,( MLU * RMSe ) ) ) ) ) * ( Max( ( Max( ( MUR * MLU ),( RCSe * MLU ) ) + Min( Max( MLU,MLU ) ,( CS + MUC ) ) ),Max( ( Min( RMSe ,MUM ) * Min( RMSe ,MUR ) ),( ( RMSe * RRSe ) * ( MUR + CS ) ) ) ) + ( ( ( ( MLU + RMSe ) * Max( MLU,MUR ) ) - ( ( MUC * CS ) + Max( DS,RRSe ) ) ) + Max( Min( ( MLU - RRSe ) ,( RMSe + RMSe ) ),Min( ( RRSe / DS ) ,( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_Mem_Server + MRS ) + RRS ),( ( FirstVNF_Mem_Server + MRS ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) * DS ) )", "obj1": 0.07520325203252033, "obj2": 0.7591594980593469}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MLU * MUM ) / ( DS - Max( DS,( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) ) ) )", "obj1": 0.8922764227642277, "obj2": 0.11181137243052452}, {"determining": "( ( ( Min( Max( Max( ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem_Server - MRS ) ),( ( FirstVNF_RAM - CRS ) + Min( CRS ,FirstVNF_RAM ) ) ),( ( ( FirstVNF_RAM - AMS ) * ( FirstVNF_Mem + RRS ) ) + Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + MRS ) ) ) ) ,( ( Max( Min( CRS ,DDR ),Max( FirstVNF_Mem_Server,Const ) ) - ( ( FirstVNF_Mem - PN ) / ( BR / FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_RAM_Server - Const ) - ( Const * MRS ) ) + ( ( RRS + CRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) + Max( ( Max( ( Max( RRS,FirstVNF_Mem_Server ) * Max( Const,DDR ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) + ( CRS * ARS ) ) ) - ( Max( Max( AMS,MDR ),Max( Const,FirstVNF_Mem_Server ) ) / Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM * MRS ) ) ) ),Max( Max( ( Min( ACS ,BR ) - ( FirstVNF_Mem_Server / BR ) ),Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,Max( BR,FirstVNF_Mem_Server ) ) ),( Min( ( PN * FirstVNF_Mem ) ,( BR + FirstVNF_RAM ) ) / Min( ( PN + MDR ) ,Min( RRS ,Const ) ) ) ) ) ) - Max( Max( Min( ( ( ( AMS / RRS ) + ( ACS + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_Mem_Server / RRS ) * Max( BR,FirstVNF_RAM_Server ) ) * Min( Min( MRS ,FirstVNF_Mem ) ,Min( ACS ,MDR ) ) ) ),Min( ( Min( ( ARS * ARS ) ,Max( ARS,RRS ) ) * Min( Max( CRS,CRS ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ,( Min( ( RRS - ACS ) ,Max( FirstVNF_Mem,MRS ) ) - ( ( BR * BR ) + ( BR + FirstVNF_CPU_Server ) ) ) ) ),Max( Min( ( ( Max( PN,BR ) + ( FirstVNF_Mem + FirstVNF_Mem ) ) / Max( Max( DDR,ARS ),( MRS - FirstVNF_CPU_Server ) ) ) ,( Max( Max( ARS,Const ),Max( ARS,FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,DDR ) * ( CRS * ACS ) ) ) ),( ( ( ( ARS / BR ) * ( FirstVNF_CPU_Server - ACS ) ) - ( ( ARS - AMS ) / Min( MDR ,FirstVNF_RAM ) ) ) + ( Max( ( AMS * CRS ),( Const * ARS ) ) - ( ( PN - AMS ) - ( DDR + ARS ) ) ) ) ) ) ) / ( Max( Min( ( ( ( Max( FirstVNF_Mem_Server,RRS ) * ( BR / ACS ) ) - Max( Max( BR,RRS ),( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server + CRS ),Max( MDR,BR ) ) / ( Min( MDR ,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ,( ( ( ( DDR * RRS ) - Min( BR ,Const ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) / Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( MDR * RRS ) ),( ( DDR * DDR ) / ( BR * MRS ) ) ) ) ),( ( ( ( ( AMS * PN ) / Max( AMS,Const ) ) - ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_CPU - PN ) ) ) + ( Min( ( FirstVNF_CPU - AMS ) ,( MDR / ACS ) ) / Min( ( BR - FirstVNF_Mem_Server ) ,( MDR / DDR ) ) ) ) / Max( ( Max( ( PN * Const ),Min( FirstVNF_CPU ,PN ) ) / Max( ( MRS + BR ),( RRS - BR ) ) ),( ( ( BR - MRS ) + ( BR * ARS ) ) - ( Min( AMS ,FirstVNF_CPU ) * Max( ARS,FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( ( ( ( ( AMS - BR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( DDR * FirstVNF_RAM_Server ) ) ) + Max( ( ( DDR - FirstVNF_CPU ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem - ARS ) / ( FirstVNF_CPU_Server * ACS ) ) ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,MRS ) ) + Max( Max( MDR,RRS ),( FirstVNF_Mem - AMS ) ) ) / ( ( ( FirstVNF_Mem_Server + ACS ) * ( PN + ARS ) ) / ( ( BR * FirstVNF_RAM_Server ) / ( AMS / AMS ) ) ) ) ) * Max( ( ( Max( ( PN - FirstVNF_RAM ),( RRS * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) * Max( BR,DDR ) ) ) + ( Min( ( DDR + FirstVNF_CPU ) ,( CRS * PN ) ) / ( Max( FirstVNF_CPU,Const ) * ( CRS * FirstVNF_RAM ) ) ) ),( ( ( ( FirstVNF_Mem_Server / MDR ) / ( DDR * PN ) ) * ( ( Const - FirstVNF_CPU_Server ) * ( BR / DDR ) ) ) * ( Min( ( AMS - BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) ) * ( Max( Const,FirstVNF_CPU ) * Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( RCSe ,RRSe ) + ( RRSe * MLU ) ) + ( Max( MUC,MLU ) * ( MUM * RRSe ) ) ) - Max( ( Min( DS ,MLU ) * Max( DS,MUM ) ),( ( MLU / RCSe ) + ( MUR + DS ) ) ) ),Min( ( ( Min( RMSe ,RMSe ) - ( RMSe / MUM ) ) / ( Max( DS,MUR ) * ( MUR - RRSe ) ) ) ,( Min( ( RRSe - CS ) ,( DS - MUR ) ) + Max( ( MUM / CS ),Min( RRSe ,RMSe ) ) ) ) ) + Max( ( ( ( ( RMSe * RRSe ) - Min( RRSe ,RCSe ) ) + ( Min( MLU ,MLU ) / ( MUM / CS ) ) ) * ( ( ( MUR + MUC ) * ( RMSe * RCSe ) ) / ( Max( MUM,MLU ) - Min( MLU ,RMSe ) ) ) ),Max( ( ( ( RCSe * RRSe ) * Min( MUM ,MUC ) ) - ( Max( DS,DS ) - ( MUM + RRSe ) ) ),( ( ( CS + MUM ) * Max( MUC,RCSe ) ) - ( ( MLU + DS ) + ( MUR + DS ) ) ) ) ) ) * ( Min( Min( Min( ( Min( MLU ,RRSe ) + ( MUR * MLU ) ) ,( ( DS - RRSe ) - Min( CS ,RCSe ) ) ) ,( ( ( MLU * MUC ) + ( RMSe - MUC ) ) / Max( ( MLU + MLU ),( RMSe + MLU ) ) ) ) ,Max( ( ( ( CS * DS ) - ( RCSe * MUR ) ) * Min( Min( RMSe ,RMSe ) ,Min( MUM ,DS ) ) ),Min( ( ( RMSe - MUM ) * Min( MUC ,MLU ) ) ,Max( ( MUR + RRSe ),( DS * MUR ) ) ) ) ) * ( ( ( ( ( MUM / MUM ) + ( RMSe - CS ) ) + Min( ( DS / DS ) ,Min( CS ,MUM ) ) ) / ( ( Max( MUC,MLU ) + Min( RRSe ,CS ) ) / ( ( RRSe - MUC ) + ( RCSe / MUM ) ) ) ) - ( ( Min( ( MUM * MLU ) ,( MUC + CS ) ) * Min( ( MLU + MUM ) ,Min( MUM ,MUC ) ) ) + Max( Max( ( RMSe - RMSe ),( MUR - CS ) ),Min( Min( CS ,RRSe ) ,( MLU + MUM ) ) ) ) ) ) ) - ( ( Min( Max( ( ( Max( RMSe,MLU ) / ( MUR * DS ) ) / ( ( RRSe + MUR ) + Max( CS,MLU ) ) ),( ( ( MUC - MUR ) + ( DS + RRSe ) ) * ( ( RMSe + MUM ) / Max( DS,MUR ) ) ) ) ,( ( ( ( CS - RCSe ) + ( MUC + MUM ) ) - Max( Min( MUR ,MLU ),( MUC - MUM ) ) ) - ( ( ( MLU * RRSe ) * ( DS * MUR ) ) / ( ( RMSe * RRSe ) / ( RMSe / RRSe ) ) ) ) ) - ( Max( ( ( ( CS / CS ) + ( MUC / MUC ) ) + ( ( CS + DS ) - ( MUR * RCSe ) ) ),Min( ( ( MLU - RMSe ) + ( RRSe / MUM ) ) ,( Max( RCSe,MUM ) / ( RRSe + MUC ) ) ) ) + Max( ( Max( Min( DS ,DS ),( RCSe - RRSe ) ) + ( ( RCSe * MLU ) * ( DS / DS ) ) ),Max( ( Max( DS,RCSe ) * ( MUC - MLU ) ),Max( ( MUM * MUR ),Min( RCSe ,RCSe ) ) ) ) ) ) + ( Max( Max( Max( ( ( MUM + DS ) * Min( MUM ,MLU ) ),( ( RRSe / MLU ) - ( MUM + MUM ) ) ),Min( ( ( CS * MUM ) - ( CS * MUM ) ) ,( ( MUM / MLU ) - ( RMSe / MUC ) ) ) ),( Max( ( ( MUR - MUM ) * ( MUR / MLU ) ),Max( ( CS * MUM ),( RMSe + CS ) ) ) + Max( Min( ( MUC / RMSe ) ,Max( MLU,MUR ) ),( ( MLU / CS ) * ( MLU - MLU ) ) ) ) ) - ( ( Max( ( ( DS - MUR ) + ( DS + RRSe ) ),( ( DS - RMSe ) * ( MLU + CS ) ) ) / ( ( Min( MUR ,MUC ) + ( RMSe - CS ) ) / ( ( MUC / MLU ) - ( MLU - RMSe ) ) ) ) + ( Max( Min( Max( MUR,MUC ) ,( RCSe / MUC ) ),( ( RMSe / MLU ) * ( MLU - MUM ) ) ) * ( ( Max( CS,RCSe ) * ( MLU * RCSe ) ) * Min( ( MUC + MLU ) ,Max( MUM,RMSe ) ) ) ) ) ) ) )", "obj1": 0.8191056910569106, "obj2": 0.14918092549583073}, {"determining": "Min( ( MDR / ( FirstVNF_Mem_Server + MRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / DS ) + ( MUM / MUC ) )", "obj1": 0.5467479674796748, "obj2": 0.306013918060451}, {"determining": "( ( MRS * Min( ARS ,FirstVNF_RAM_Server ) ) - Min( MRS ,MRS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MLU,RRSe ) )", "obj1": 0.48577235772357724, "obj2": 0.33004699547721433}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) - ( DS * CS ) )", "obj1": 0.18089430894308944, "obj2": 0.6120997357063815}, {"determining": "Max( ( ARS + RRS ),( ( ( AMS * CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) - ( ( MUR * DS ) + ( DS + MUR ) ) ) ) * DS ) )", "obj1": 0.17073170731707318, "obj2": 0.6587643893489153}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * RRS ) - ( ( BR * RRS ) - Min( MRS ,MRS ) ) )", "choosing": "( MLU / ( DS * CS ) )", "obj1": 0.11788617886178862, "obj2": 0.6783150464609344}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Max( FirstVNF_Mem,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * Min( ARS ,PN ) ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.02314309963996467}, {"determining": "( ( FirstVNF_RAM / CRS ) - ( ( FirstVNF_RAM / CRS ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( DS ,RRSe ) / ( Min( DS ,RRSe ) / Min( DS ,MUM ) ) )", "obj1": 0.6361788617886179, "obj2": 0.26631243534214466}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) / ( DS + MUR ) )", "obj1": 0.4349593495934959, "obj2": 0.4086948328979217}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MLU * MUM ) / ( DS - Max( DS,MUC ) ) )", "obj1": 0.8150406504065041, "obj2": 0.181972556839175}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.6869918699186992, "obj2": 0.2582208142370423}, {"determining": "Max( ( ARS + FirstVNF_RAM ),FirstVNF_RAM )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.5772357723577236, "obj2": 0.2828380227957031}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.25203252032520324, "obj2": 0.6088666457329321}, {"determining": "( ( AMS - CRS ) * MRS )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe * MUR ) + Max( MUR,CS ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.258130081300813, "obj2": 0.5536010316829036}, {"determining": "( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( MUR / CS ),( RMSe * RRSe ) ) + ( MUM / MUC ) )", "obj1": 0.4268292682926829, "obj2": 0.43325009859532865}, {"determining": "( ( Max( Min( ( Min( ( ( FirstVNF_Mem_Server + CRS ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( MRS * ARS ) + ( AMS * FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU - RRS ) + ( PN * BR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / Min( FirstVNF_CPU ,CRS ) ) ) ) ,Min( Max( ( ( BR - RRS ) / ( MDR * FirstVNF_CPU ) ),( ( MDR / ARS ) + ( RRS - CRS ) ) ) ,( ( ( MDR * FirstVNF_Mem ) * Max( RRS,FirstVNF_Mem_Server ) ) - ( Min( BR ,DDR ) + ( CRS + FirstVNF_CPU ) ) ) ) ),( Min( Max( Max( Max( FirstVNF_CPU_Server,ACS ),Max( BR,MRS ) ),( Max( CRS,CRS ) / ( FirstVNF_CPU * BR ) ) ) ,( Min( ( MRS + FirstVNF_CPU ) ,( ARS * FirstVNF_RAM ) ) + Min( Min( RRS ,DDR ) ,( MDR - AMS ) ) ) ) * Max( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) * ( FirstVNF_Mem_Server - AMS ) ) / ( Min( FirstVNF_CPU_Server ,RRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ),Max( ( ( BR * FirstVNF_RAM_Server ) * ( AMS / MDR ) ),( Min( ARS ,DDR ) * ( PN * CRS ) ) ) ) ) ) / ( Max( ( ( ( ( AMS * DDR ) + ( DDR + FirstVNF_RAM ) ) / ( Max( BR,MRS ) - ( FirstVNF_RAM * ACS ) ) ) * ( ( ( FirstVNF_RAM - Const ) * ( MRS + FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,MRS ) - ( AMS + CRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem,ARS ) * ( AMS * CRS ) ) - ( ( MDR - AMS ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( ( Min( FirstVNF_CPU_Server ,ACS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * Min( ( MDR / FirstVNF_Mem_Server ) ,( PN / AMS ) ) ) ) ) + Max( ( ( Min( ( FirstVNF_RAM - PN ) ,( MRS - ARS ) ) - ( ( DDR * ARS ) / Min( RRS ,RRS ) ) ) - Max( Min( Max( FirstVNF_Mem_Server,PN ) ,( PN - ARS ) ),Max( ( FirstVNF_Mem_Server + Const ),Min( MRS ,AMS ) ) ) ),Min( ( ( Min( CRS ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem / MRS ) ) + ( Max( FirstVNF_CPU,BR ) / ( MRS + MDR ) ) ) ,Min( ( ( MRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * RRS ) ) ,( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,Const ) ) ) ) ) ) ) - ( Max( ( ( ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MDR ) ) * ( ( MDR - ARS ) + ( FirstVNF_RAM_Server * BR ) ) ) * ( ( Min( ARS ,PN ) * ( CRS + PN ) ) - ( ( MDR * RRS ) - ( RRS * ARS ) ) ) ) + ( Min( ( ( FirstVNF_RAM_Server * Const ) + Max( DDR,FirstVNF_RAM_Server ) ) ,Min( ( BR * Const ) ,Max( Const,MRS ) ) ) / Min( ( Min( FirstVNF_RAM_Server ,CRS ) + ( FirstVNF_Mem + DDR ) ) ,( ( FirstVNF_RAM_Server + Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ),( Max( ( ( ( DDR / DDR ) * Max( BR,FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ),Max( ( ( ACS + AMS ) * Min( FirstVNF_Mem_Server ,MRS ) ),( ( ACS - PN ) + Max( AMS,MDR ) ) ) ) * ( Min( ( Min( CRS ,FirstVNF_Mem_Server ) * ( PN / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem - AMS ) * ( MDR * FirstVNF_RAM ) ) ) - Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) * Max( ( ( ( ( Min( PN ,BR ) + ( DDR / FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_RAM_Server,DDR ) * Max( MDR,PN ) ) ) * ( Max( ( AMS / CRS ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + Min( ACS ,RRS ) ) ) ) * Min( Max( ( ( FirstVNF_Mem / RRS ) - Min( ARS ,Const ) ),( ( ACS + Const ) - ( RRS * PN ) ) ) ,( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( ( Const * AMS ) / ( FirstVNF_RAM - ARS ) ) ) ) ),( ( ( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM * Const ) ) * Max( ( Const + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + BR ) ) ) - Min( Min( ( RRS * BR ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( ( MRS * AMS ),( PN + ACS ) ) ) ) + ( ( ( Min( MRS ,ARS ) + Min( BR ,FirstVNF_Mem ) ) / Max( ( MRS + ACS ),Min( FirstVNF_CPU ,DDR ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),( RRS / FirstVNF_Mem_Server ) ) / ( Min( MRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM / AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( Min( MUC ,RRSe ) - ( CS + RRSe ) ) * ( ( RMSe - CS ) + ( RCSe + CS ) ) ) ,Min( Min( ( MLU - RMSe ) ,( RRSe - CS ) ) ,( Min( MLU ,RMSe ) + ( MUM / CS ) ) ) ) - ( ( ( Max( MUC,RMSe ) / Min( DS ,MUR ) ) - ( ( RRSe + RCSe ) * ( MLU - MUR ) ) ) - Max( Max( ( RRSe / DS ),( MUC / DS ) ),( Min( RMSe ,MUC ) - ( RCSe - DS ) ) ) ) ) + Min( ( Min( ( ( RMSe * MUR ) + ( RRSe - RRSe ) ) ,( ( RMSe / CS ) + ( MUC - DS ) ) ) / ( ( Min( DS ,RMSe ) * Min( RMSe ,DS ) ) + ( Max( MUC,MLU ) / ( RCSe - RCSe ) ) ) ) ,( ( Min( Max( CS,RMSe ) ,Max( RMSe,MUR ) ) * Max( ( MUC + CS ),( CS * MLU ) ) ) - Min( ( ( RMSe * MUR ) * ( MLU - MLU ) ) ,( ( MUR - DS ) - ( MUR + CS ) ) ) ) ) ) - ( Min( ( ( ( ( MUM / MUM ) - ( MLU / DS ) ) / Max( ( RCSe / MUR ),( RCSe / MUC ) ) ) + ( ( ( RRSe * MUR ) * ( CS * MLU ) ) / ( ( RMSe * MUC ) / ( RMSe * MUC ) ) ) ) ,( Max( Max( Min( MLU ,MUC ),Min( DS ,MLU ) ),( Max( RMSe,MLU ) * ( MUM + DS ) ) ) - ( Max( ( MUC + RCSe ),Max( RRSe,MUR ) ) * ( ( RCSe * DS ) + ( RCSe - MUM ) ) ) ) ) / ( ( ( ( ( RMSe / RCSe ) * ( MUC - MUC ) ) * Max( Max( RCSe,CS ),( DS / DS ) ) ) + ( ( ( RCSe * CS ) + ( RRSe / RCSe ) ) - Max( ( CS + DS ),Max( RMSe,RRSe ) ) ) ) + ( Max( ( Min( RMSe ,RRSe ) / Min( CS ,RMSe ) ),( Min( RCSe ,RCSe ) / ( DS - CS ) ) ) - ( ( ( MUM * RRSe ) + ( MLU - DS ) ) - ( ( MLU / CS ) - ( MUC + MUC ) ) ) ) ) ) ),Min( ( ( Max( Max( ( ( DS * RMSe ) + ( RRSe - RMSe ) ),Max( ( MUC * RCSe ),( RRSe + MUC ) ) ),( ( ( RMSe - DS ) - ( RCSe * MUC ) ) - ( ( MUC - RRSe ) / ( MLU + RCSe ) ) ) ) / Min( ( ( Min( RMSe ,RCSe ) + Max( MLU,MUM ) ) / ( Min( RMSe ,RRSe ) * ( RRSe - RCSe ) ) ) ,Min( ( ( RMSe * MUM ) + ( MLU - MUM ) ) ,Min( Max( CS,DS ) ,( DS / DS ) ) ) ) ) * ( Max( Max( ( Min( MUC ,MUM ) + ( MLU - RMSe ) ),Min( ( MLU * MUC ) ,( RCSe + MLU ) ) ),( ( ( RRSe - RCSe ) - Max( RCSe,DS ) ) * Min( Max( DS,RMSe ) ,( MLU / MUM ) ) ) ) / ( Min( ( ( RCSe / DS ) * ( MUM - MLU ) ) ,( ( MUR + RCSe ) + ( MUR + MUM ) ) ) - ( Max( ( RCSe * RMSe ),( RCSe + MUM ) ) + Max( ( RMSe + RCSe ),( MUR / RMSe ) ) ) ) ) ) ,Min( Max( ( ( Min( ( CS * DS ) ,Min( CS ,MUC ) ) - Min( Min( RMSe ,RMSe ) ,Min( MLU ,MUM ) ) ) - ( ( Max( MLU,RRSe ) * Max( DS,RCSe ) ) - Max( Min( MLU ,RMSe ),( CS * MUM ) ) ) ),( ( Max( ( MLU * MUC ),( MUM - MLU ) ) + Min( ( MUC / RRSe ) ,( CS - RCSe ) ) ) * ( ( Max( RMSe,RCSe ) + ( MUM * DS ) ) * Min( Max( RMSe,RRSe ) ,( RCSe / MUC ) ) ) ) ) ,( ( ( ( Max( MUC,RRSe ) + ( MLU - DS ) ) * ( ( MUM * MUM ) / ( RRSe * DS ) ) ) / ( ( ( RRSe / RMSe ) + ( RCSe - RMSe ) ) + Min( Min( DS ,MLU ) ,( MUM - MLU ) ) ) ) / ( Min( ( Max( CS,MUC ) * ( DS / DS ) ) ,( Max( RMSe,RRSe ) + ( CS / RMSe ) ) ) / Min( Max( Min( MLU ,MUM ),( RMSe / DS ) ) ,( Min( DS ,MLU ) * Max( MUR,RMSe ) ) ) ) ) ) ) )", "obj1": 0.5975609756097561, "obj2": 0.27285039096220837}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / RRSe ) / ( DS + ( DS * CS ) ) )", "obj1": 0.14227642276422764, "obj2": 0.6729081273518456}, {"determining": "( ( ( ( ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),Min( ACS ,DDR ) ) ,Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - FirstVNF_Mem_Server ) ) ) ) / Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Min( DDR ,FirstVNF_RAM_Server ) ) * Max( ( CRS - FirstVNF_CPU ),( MRS / BR ) ) ),( ( ( MDR / MRS ) - Min( AMS ,Const ) ) / ( Max( ACS,DDR ) + Min( FirstVNF_CPU ,RRS ) ) ) ) ) + Min( ( Max( Min( ( CRS + FirstVNF_CPU_Server ) ,( MDR - Const ) ),Max( ( BR / FirstVNF_CPU_Server ),Max( AMS,ARS ) ) ) / ( ( Min( CRS ,PN ) / ( CRS * CRS ) ) * ( ( RRS + Const ) * ( FirstVNF_Mem * MRS ) ) ) ) ,( ( Min( Min( BR ,ARS ) ,Max( ARS,ACS ) ) - ( Max( CRS,FirstVNF_RAM ) + ( FirstVNF_CPU_Server - DDR ) ) ) + Max( Max( ( MDR + Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ),( ( CRS - BR ) / Min( RRS ,FirstVNF_Mem ) ) ) ) ) ) - ( Min( Max( ( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_CPU + DDR ) ) - ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server / RRS ) ) ),( ( ( BR * BR ) * Min( FirstVNF_RAM_Server ,AMS ) ) - ( ( MDR - CRS ) / ( ACS * FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem_Server + DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Min( ( RRS - ARS ) ,Min( AMS ,CRS ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,PN ) ) / Min( ( MDR - FirstVNF_RAM ) ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) * Max( ( Min( ( Min( FirstVNF_CPU_Server ,DDR ) + Max( DDR,FirstVNF_CPU ) ) ,( ( CRS * AMS ) * Max( Const,ARS ) ) ) - ( ( ( ARS + ARS ) * ( FirstVNF_RAM + RRS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / MDR ) ) ) ),Max( ( ( ( RRS / AMS ) + ( MDR + FirstVNF_Mem ) ) * ( ( MDR + FirstVNF_CPU ) / Min( MDR ,FirstVNF_CPU_Server ) ) ),Max( Max( ( AMS * PN ),( BR + ACS ) ),( Min( MRS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem / RRS ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( ACS / Const ) * ( MDR / MRS ) ),( ( FirstVNF_CPU_Server / AMS ) * Max( CRS,FirstVNF_CPU ) ) ) - ( Min( ( CRS + FirstVNF_RAM_Server ) ,( PN * MDR ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) + Max( FirstVNF_Mem,PN ) ) ) ) + ( Min( ( ( FirstVNF_CPU_Server - CRS ) / ( AMS - ARS ) ) ,( Min( MDR ,AMS ) - ( AMS - Const ) ) ) / ( Min( ( RRS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( ACS ,CRS ) ) ) ) ) - ( Min( ( ( ( ARS - MDR ) / ( MDR + FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ,Min( ( ( MDR - BR ) * ( FirstVNF_Mem * CRS ) ) ,( Min( ACS ,FirstVNF_CPU_Server ) / ( PN / FirstVNF_RAM ) ) ) ) + ( ( Min( ( MRS + DDR ) ,( FirstVNF_Mem_Server * RRS ) ) * ( ( ARS + FirstVNF_RAM_Server ) + ( BR - ACS ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( BR + FirstVNF_Mem ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) ) / ( ( Max( ( Min( Min( Const ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) + ( ( MDR * ACS ) - ( PN - FirstVNF_RAM_Server ) ) ),( ( Max( FirstVNF_Mem,AMS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem / BR ) + ( FirstVNF_Mem_Server * MDR ) ) ) ) - ( Min( ( Max( ACS,RRS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ,Min( ( FirstVNF_CPU / PN ) ,( MDR / FirstVNF_RAM ) ) ) - ( Max( ( ACS - BR ),Min( FirstVNF_CPU_Server ,ACS ) ) * Max( ( RRS + FirstVNF_RAM_Server ),Max( ACS,FirstVNF_RAM ) ) ) ) ) - ( Min( ( ( ( Const + MDR ) - ( Const - CRS ) ) * Min( Max( BR,MDR ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( FirstVNF_Mem_Server * DDR ),Min( AMS ,FirstVNF_Mem ) ) * ( Min( ARS ,MDR ) / ( BR - DDR ) ) ) ) + ( ( ( Min( FirstVNF_CPU_Server ,ARS ) * ( AMS - FirstVNF_Mem ) ) + Max( Max( MDR,ACS ),Max( PN,FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_Mem_Server / RRS ) ) - Min( ( BR - FirstVNF_RAM_Server ) ,( RRS / Const ) ) ) ) ) ) ) )", "choosing": "Max( ( RRSe / Max( ( Min( CS ,CS ) * ( MLU + MLU ) ),RRSe ) ),Min( ( Min( Max( ( MUM / ( ( MUR - CS ) * CS ) ),Min( ( ( MUR * CS ) * ( MUM + MLU ) ) ,MUM ) ) ,( ( RMSe / Min( MUM ,CS ) ) + RMSe ) ) - DS ) ,( CS + DS ) ) )", "obj1": 0.7682926829268293, "obj2": 0.18814878936071192}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - ( ( DS - CS ) / ( ( DS - CS ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.24390243902439024, "obj2": 0.6118851348411228}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5322928858426473}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MLU ) ,( RRSe - ( ( RCSe * CS ) + Max( MUR,CS ) ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5058390093393439}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( ( BR / RRS ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS - Max( ( DS * CS ),( Max( MLU,MLU ) / ( DS - MUC ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.3048780487804878, "obj2": 0.5095444766558691}, {"determining": "Min( Max( FirstVNF_CPU,PN ) ,( ( MRS + ACS ) + ACS ) )", "choosing": "Min( ( MUM / MUC ) ,( RRSe - ( ( RCSe * MUR ) + ( RRSe - ( ( RCSe * MUR ) + ( MUR / CS ) ) ) ) ) )", "obj1": 0.3699186991869919, "obj2": 0.504607642353731}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9044715447154471, "obj2": 0.072748496530392}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + RCSe ) - Min( ( CS * MUC ) ,RMSe ) )", "obj1": 0.39634146341463417, "obj2": 0.44324324930257797}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9065040650406504, "obj2": 0.0709629027420639}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.7276422764227642, "obj2": 0.23184900338109427}, {"determining": "( Max( Max( ( ( Max( Max( ( MDR - AMS ),( FirstVNF_RAM - FirstVNF_Mem ) ),( Max( PN,FirstVNF_RAM ) - Max( CRS,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / ( MRS + AMS ) ) - ( ( ACS / FirstVNF_Mem ) + ( CRS * ACS ) ) ) ) / ( ( ( Max( FirstVNF_Mem,BR ) + Min( DDR ,Const ) ) * ( ( RRS - PN ) * ( Const - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,Min( DDR ,CRS ) ) - Max( Min( ACS ,Const ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ),( ( ( Max( ( ACS * BR ),( FirstVNF_Mem_Server - ACS ) ) - ( ( MDR + AMS ) / ( MRS + ARS ) ) ) / ( Max( ( CRS / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) * Min( ( Const - ACS ) ,( BR + DDR ) ) ) ) + Max( ( ( ( PN * FirstVNF_CPU ) / ( BR - FirstVNF_RAM_Server ) ) * ( ( CRS - FirstVNF_RAM ) * ( MDR + PN ) ) ),( ( ( DDR + ACS ) * ( ARS + BR ) ) / Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Max( ACS,RRS ) * ( MDR - Const ) ) / ( ( CRS - BR ) / ( CRS - MDR ) ) ) + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server / BR ),( FirstVNF_Mem_Server + ARS ) ) ) ) ,( ( ( Max( FirstVNF_CPU,DDR ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Min( CRS ,ACS ) + ( MDR - DDR ) ) ) + ( ( ( FirstVNF_RAM / DDR ) - Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( ARS ,FirstVNF_RAM ) ) ) ) ) + Max( ( ( ( ( PN + FirstVNF_CPU ) * ( BR * MDR ) ) + ( ( CRS + MDR ) * Min( CRS ,MRS ) ) ) * ( ( ( BR * FirstVNF_RAM_Server ) - Max( AMS,MRS ) ) / ( ( AMS / ARS ) - ( DDR * FirstVNF_CPU ) ) ) ),( ( Min( Min( BR ,FirstVNF_Mem ) ,( MRS * RRS ) ) + ( ( MRS - FirstVNF_CPU ) * ( RRS * FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_Mem_Server * DDR ) * ( BR - BR ) ) ,Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_RAM - Const ) ) / ( ( BR + AMS ) * ( FirstVNF_RAM_Server / AMS ) ) ) ,Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ( FirstVNF_CPU * CRS ) ) ,( ( MRS / ACS ) / ( PN / PN ) ) ) ) - ( Max( Max( ( AMS + ACS ),( AMS - FirstVNF_RAM ) ),Min( ( MDR - MDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Max( ( ( PN * AMS ) / ( BR * FirstVNF_Mem ) ),( Min( BR ,FirstVNF_Mem_Server ) + Max( Const,CRS ) ) ) ) ) - ( Min( Max( Min( ( DDR / BR ) ,Max( ARS,FirstVNF_Mem ) ),( Min( PN ,RRS ) * Min( FirstVNF_RAM ,RRS ) ) ) ,( ( Max( Const,CRS ) / ( FirstVNF_CPU_Server - MRS ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) * ( CRS / ACS ) ) ) ) / ( ( ( Max( BR,FirstVNF_CPU ) / ( BR * FirstVNF_Mem ) ) * Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,( PN * ACS ) ) ) + Max( ( ( FirstVNF_CPU_Server / BR ) / ( ARS * Const ) ),Max( Min( CRS ,FirstVNF_CPU ),( Const + ACS ) ) ) ) ) ),( ( ( Max( ( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,DDR ) ),( Max( CRS,FirstVNF_CPU ) * ( FirstVNF_Mem / RRS ) ) ) + ( ( Max( MDR,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * BR ) ) + ( Min( BR ,CRS ) * ( PN * MDR ) ) ) ) / Max( ( ( ( MRS * AMS ) / ( CRS + FirstVNF_RAM ) ) * Min( ( ACS - MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ),( ( ( MRS / BR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) - Min( ( ( Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,( Const + FirstVNF_Mem_Server ) ) - ( ( BR + RRS ) * ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( ( DDR + ARS ) / Max( RRS,AMS ) ) - Max( ( MRS - RRS ),( CRS * FirstVNF_Mem ) ) ) ) ,Max( ( Max( ( DDR * FirstVNF_CPU_Server ),( Const / FirstVNF_CPU ) ) - Min( ( MDR - ACS ) ,( ARS + MDR ) ) ),Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Max( Max( DDR,CRS ),( MDR + FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( Max( ( CS + CS ),( RRSe * RRSe ) ) + Min( ( MUR - MLU ) ,Min( RMSe ,CS ) ) ) - ( ( ( MLU + RMSe ) * ( DS - RRSe ) ) - ( ( DS - MUC ) * ( DS / DS ) ) ) ) / ( ( Min( Max( DS,RCSe ) ,Max( MUC,MUC ) ) + Max( Max( DS,RRSe ),Max( RRSe,MUC ) ) ) * ( Min( ( DS * DS ) ,( RMSe - MUM ) ) / ( ( CS * MLU ) * ( RRSe + MLU ) ) ) ) ) / ( Max( ( Max( ( MUC * MUR ),Min( RRSe ,CS ) ) / ( Max( RMSe,MLU ) * ( RMSe + CS ) ) ),( ( ( MUR * MLU ) - ( RRSe - RCSe ) ) - ( ( CS / RMSe ) - ( CS + MLU ) ) ) ) / ( ( ( ( RMSe / MUC ) - ( MUM / CS ) ) / ( Max( CS,RCSe ) * Max( DS,DS ) ) ) / Max( ( Min( CS ,CS ) / ( MUC * RCSe ) ),( ( RRSe / RMSe ) + ( RRSe * RCSe ) ) ) ) ) ),Max( ( Min( ( Min( Max( CS,MUR ) ,( RRSe - MUR ) ) / ( ( DS * DS ) - ( DS - MUM ) ) ) ,Max( ( ( MUM + RCSe ) / ( MUR - MUM ) ),( ( RMSe / MUM ) + Max( RMSe,CS ) ) ) ) + ( Min( Min( ( RCSe / DS ) ,( MUC * DS ) ) ,( Max( MLU,RRSe ) * ( CS * RRSe ) ) ) / ( Max( ( RRSe / RCSe ),( CS - MUM ) ) / Min( ( RRSe - MUC ) ,( MUR + RRSe ) ) ) ) ),( ( ( Max( Min( MLU ,MLU ),Min( DS ,DS ) ) - Min( Min( RMSe ,RRSe ) ,( MUC + MLU ) ) ) - ( Max( ( MUC + RMSe ),Max( MLU,RRSe ) ) * ( ( MUR * RRSe ) - ( RRSe - RCSe ) ) ) ) * Min( ( Min( ( MUM - MLU ) ,( MLU / MUR ) ) + ( ( RCSe + MLU ) / Min( MUC ,MUC ) ) ) ,( Min( ( RMSe / RRSe ) ,( RMSe - MLU ) ) * ( Max( CS,DS ) + ( MUC - MUM ) ) ) ) ) ) ) / Min( Max( ( Max( Max( ( ( RMSe + RCSe ) * ( MUM - RRSe ) ),( Max( MUC,MUC ) + ( RCSe + DS ) ) ),( ( ( RMSe * MLU ) * Max( CS,DS ) ) * ( ( RCSe * MLU ) * ( MLU - MUR ) ) ) ) * Max( ( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) - ( ( MLU / RMSe ) / ( MUC * DS ) ) ),( ( ( CS / RRSe ) + Min( MLU ,CS ) ) + ( ( RRSe + RMSe ) + ( MUR * RRSe ) ) ) ) ),( Max( ( ( ( MLU + RCSe ) * ( MUR + MUM ) ) - ( ( MUM - DS ) / Min( MUC ,MUC ) ) ),( ( Max( MUC,RCSe ) - ( CS / CS ) ) - Max( ( MUR * CS ),( RRSe - MUC ) ) ) ) * ( Min( ( ( DS * DS ) - ( RRSe / CS ) ) ,( Min( MUM ,RCSe ) / Max( MUM,RMSe ) ) ) - ( ( Max( MUR,RMSe ) - ( RCSe / MUC ) ) / ( Max( MUM,RRSe ) * ( MUC / RCSe ) ) ) ) ) ) ,( Min( Max( ( Min( Max( DS,MUC ) ,( MLU - RMSe ) ) - ( ( MUC / RCSe ) - ( RRSe - CS ) ) ),( Max( ( RCSe * MUC ),( MLU / DS ) ) - Max( Max( DS,DS ),( CS + MLU ) ) ) ) ,( ( ( ( MLU + RCSe ) - Max( RRSe,MUR ) ) * ( Min( MLU ,MUM ) / Max( MUR,DS ) ) ) - ( ( ( RMSe + DS ) - ( MUR + RRSe ) ) / ( Min( MUC ,DS ) * ( MUC - CS ) ) ) ) ) / Max( Min( ( ( ( MUM * MUC ) / Max( RCSe,MUC ) ) * ( ( RMSe / CS ) / ( MUC / MUM ) ) ) ,Min( ( ( RMSe + DS ) / ( MUM / RRSe ) ) ,Min( Max( CS,RCSe ) ,Max( RRSe,MLU ) ) ) ),Min( Max( ( ( RMSe * RMSe ) * ( MUC * RRSe ) ),( Min( MUM ,MUR ) - ( RRSe + DS ) ) ) ,Max( ( Min( RRSe ,RMSe ) + ( DS + RCSe ) ),( ( MUM - RMSe ) + ( RMSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.38414634146341464, "obj2": 0.4819945659120335}, {"determining": "( ( BR * ( ( BR * ACS ) - Min( MRS ,FirstVNF_Mem_Server ) ) ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM + RMSe ) + ( MLU / MUR ) ) - MUC ) + ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.021208218673737296}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.47560975609756095, "obj2": 0.3566568560720231}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.3882113821138211, "obj2": 0.4536306465430349}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) ) ) )", "choosing": "( ( MUM + DS ) / MUM )", "obj1": 0.7520325203252033, "obj2": 0.19271660133824858}, {"determining": "( ( ( FirstVNF_RAM_Server + CRS ) * ACS ) - Min( ARS ,( ( MRS / RRS ) - Min( AMS ,MRS ) ) ) )", "choosing": "( Min( ( ( MLU - RCSe ) / ( Min( DS ,RRSe ) - MUC ) ) ,RRSe ) / Min( DS ,MUR ) )", "obj1": 0.7378048780487805, "obj2": 0.20636501828862083}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - ( MUC / MLU ) ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5471781264016383}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "( ( Max( ( ( ( Max( ( AMS + FirstVNF_CPU_Server ),( RRS * FirstVNF_CPU_Server ) ) - ( ( BR / FirstVNF_RAM_Server ) + ( AMS / FirstVNF_CPU ) ) ) - ( Max( ( DDR * FirstVNF_CPU ),( ACS * FirstVNF_CPU ) ) / ( Max( RRS,RRS ) / ( FirstVNF_RAM * AMS ) ) ) ) - ( Max( ( ( FirstVNF_RAM / ACS ) - Min( BR ,PN ) ),( Min( CRS ,FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) - ( ( Max( MDR,Const ) * ( FirstVNF_CPU / MDR ) ) * ( Min( FirstVNF_CPU_Server ,DDR ) / Max( Const,BR ) ) ) ) ),Min( ( Min( ( ( CRS + RRS ) * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ,Max( ( ARS * MRS ),( CRS + FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( MDR / BR ) ) * Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) ,( ( ( ( AMS - FirstVNF_CPU ) * ( BR + ACS ) ) * ( ( Const - FirstVNF_CPU ) + ( MRS / FirstVNF_CPU ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ( Const + FirstVNF_RAM ) ) + ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( PN * FirstVNF_Mem ) ) ) ) ) ) - Max( ( ( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( FirstVNF_Mem * Const ) ) * ( ( AMS * FirstVNF_RAM ) * ( Const / DDR ) ) ) + ( ( Min( MDR ,PN ) * ( FirstVNF_RAM / AMS ) ) * Max( ( RRS / FirstVNF_Mem ),( CRS - BR ) ) ) ) - Max( ( ( ( ARS / FirstVNF_RAM ) * Max( DDR,FirstVNF_CPU_Server ) ) + ( ( MDR / BR ) / Max( CRS,FirstVNF_Mem ) ) ),( ( ( DDR - DDR ) * ( MRS * MDR ) ) + Max( Max( Const,CRS ),Max( FirstVNF_RAM_Server,CRS ) ) ) ) ),( Min( Max( Max( ( FirstVNF_RAM - MRS ),( ARS / FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem_Server * Const ),( FirstVNF_Mem_Server + ARS ) ) ) ,( ( ( MDR - RRS ) / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) * ( MDR * PN ) ) ) ) - ( ( ( ( CRS + DDR ) / ( Const / BR ) ) * ( ( MRS + DDR ) - ( FirstVNF_RAM - BR ) ) ) / ( ( ( FirstVNF_Mem / ARS ) + ( FirstVNF_CPU_Server / RRS ) ) / Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),( Const * DDR ) ) ) ) ) ) ) / ( Max( Min( Min( Max( ( ( FirstVNF_RAM - FirstVNF_CPU ) * Max( Const,CRS ) ),Min( Max( DDR,Const ) ,( MDR * MDR ) ) ) ,( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( Const ,PN ) ) + ( Min( AMS ,CRS ) / ( DDR / MRS ) ) ) ) ,( ( ( Min( FirstVNF_CPU ,Const ) / ( ARS / RRS ) ) - ( ( AMS - FirstVNF_RAM_Server ) * ( ACS - RRS ) ) ) - ( ( ( Const / FirstVNF_RAM_Server ) - ( MDR + BR ) ) + Min( ( ARS - FirstVNF_Mem_Server ) ,( ARS / AMS ) ) ) ) ),( Min( Max( ( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_Mem_Server * MDR ) - ( FirstVNF_CPU_Server / PN ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ) * Max( ( FirstVNF_Mem_Server - Const ),Min( DDR ,RRS ) ) ) ) + ( ( ( Max( PN,RRS ) - ( FirstVNF_Mem * ARS ) ) + ( ( ARS - FirstVNF_RAM ) / ( PN + FirstVNF_Mem ) ) ) / Max( ( ( MDR * BR ) - ( RRS * BR ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( ( Max( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( AMS + AMS ) ),( Min( ARS ,Const ) * ( FirstVNF_Mem_Server / AMS ) ) ),( Min( ( PN / FirstVNF_Mem ) ,( AMS + MRS ) ) / Max( ( AMS - FirstVNF_CPU_Server ),( ARS + FirstVNF_CPU_Server ) ) ) ) / ( Min( Min( ( MDR - BR ) ,Max( DDR,PN ) ) ,Max( ( FirstVNF_CPU_Server * CRS ),( ACS * MRS ) ) ) * ( Min( Min( ARS ,MDR ) ,Min( MRS ,Const ) ) / Min( Max( CRS,ACS ) ,( ARS - FirstVNF_RAM ) ) ) ) ) - ( ( Max( ( ( DDR + Const ) / Max( FirstVNF_Mem,FirstVNF_Mem ) ),( Min( FirstVNF_CPU ,BR ) * ( FirstVNF_RAM + CRS ) ) ) + ( ( ( ACS - ACS ) - ( ARS - FirstVNF_CPU ) ) - ( ( ACS / AMS ) / ( ACS * FirstVNF_Mem ) ) ) ) / ( ( ( ( DDR / BR ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( BR / MDR ) + ( ARS * ARS ) ) ) + ( Max( ( Const / PN ),( FirstVNF_RAM_Server + AMS ) ) / Min( Min( ACS ,RRS ) ,Min( FirstVNF_CPU ,PN ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( Max( Min( ( ( RMSe * DS ) + ( RRSe / MLU ) ) ,( Max( RRSe,RCSe ) * ( RRSe / RMSe ) ) ),( ( ( DS + DS ) / ( RCSe + RRSe ) ) + Min( ( DS * MLU ) ,( RMSe + RCSe ) ) ) ) - ( ( ( ( MUM * CS ) + ( MUC * CS ) ) * ( Min( MUC ,RMSe ) - ( MUR + RMSe ) ) ) - ( ( ( MUM / MUC ) - Min( DS ,RMSe ) ) * Min( ( RRSe + MUM ) ,( RMSe / RMSe ) ) ) ) ),Max( Min( ( ( ( RMSe / CS ) * Min( MLU ,RMSe ) ) + Min( Max( MUC,MUM ) ,( MUM / MUM ) ) ) ,Min( Max( Max( DS,MUM ),Min( RRSe ,MLU ) ) ,( Min( DS ,DS ) * ( MUR * RMSe ) ) ) ),( ( ( ( RCSe - DS ) * ( RMSe + MUR ) ) + Max( ( RCSe - MUC ),Min( RCSe ,MUM ) ) ) - Min( ( ( MUM * RMSe ) + Min( MUM ,RRSe ) ) ,( ( MUM - MLU ) + Min( RRSe ,MLU ) ) ) ) ) ) / Min( Min( Min( ( ( Min( MUR ,RMSe ) + ( MUR * DS ) ) * ( Min( MUC ,MUC ) / ( RCSe + RRSe ) ) ) ,( Min( ( CS + DS ) ,( RCSe - MUM ) ) + ( ( RCSe / MLU ) * ( RMSe - MUM ) ) ) ) ,( ( ( ( MLU + RRSe ) / ( MLU + MLU ) ) / ( ( MUR / RCSe ) * ( CS * RMSe ) ) ) / ( Max( ( MUR + MUM ),( RCSe / RCSe ) ) / ( ( CS + CS ) / ( MUM / RRSe ) ) ) ) ) ,( ( ( Max( ( MUR - DS ),( MUC + CS ) ) / ( ( DS + RCSe ) / ( CS - MLU ) ) ) * Min( ( Max( MLU,MLU ) + ( DS - MUR ) ) ,( Max( CS,RRSe ) - ( MUC - MLU ) ) ) ) + ( ( ( ( RRSe + MUC ) / ( MUR + MUC ) ) - ( ( RCSe + RRSe ) + ( RRSe / RCSe ) ) ) - Max( ( ( CS / MLU ) / ( RCSe / RMSe ) ),( ( RMSe / MUC ) - ( CS * MUC ) ) ) ) ) ) ),( ( Max( ( ( ( ( DS - MUR ) - Min( MLU ,MLU ) ) / Max( ( DS + MLU ),Max( CS,DS ) ) ) * ( Min( ( MLU * RMSe ) ,Max( CS,RCSe ) ) * Min( ( MUC / MUM ) ,( MUC / RMSe ) ) ) ),( ( ( ( MUR + RCSe ) / ( RMSe + RMSe ) ) / ( Min( DS ,CS ) + ( MLU / RMSe ) ) ) * ( ( ( RRSe + RMSe ) / Max( MLU,RMSe ) ) / ( ( MUM * RMSe ) - ( MUR - RCSe ) ) ) ) ) * Min( ( Min( ( ( MUR * RRSe ) / ( MUR * MUM ) ) ,Min( ( RRSe - MLU ) ,Max( CS,MUM ) ) ) + ( ( ( RCSe - MUM ) / ( MUR * RMSe ) ) + ( ( RRSe + CS ) * ( MLU / CS ) ) ) ) ,( Max( ( ( RCSe - MLU ) - Min( DS ,MUR ) ),Min( ( MLU * RCSe ) ,( CS / RCSe ) ) ) - ( Max( Max( MUR,RRSe ),( MUR - MUR ) ) + ( ( MLU - CS ) + ( RRSe - RMSe ) ) ) ) ) ) / ( ( ( ( Min( ( MUR + RCSe ) ,( MUR * MUM ) ) - Min( ( MUM - MUM ) ,( MLU / MUR ) ) ) + ( Min( ( MUC * MUC ) ,( MUR * RRSe ) ) / ( Max( RMSe,MUM ) / ( MLU * RCSe ) ) ) ) - ( Max( ( Min( CS ,DS ) / ( MUR + DS ) ),( Max( CS,CS ) - ( DS * CS ) ) ) + Min( ( ( RCSe / MUR ) - ( RMSe * MUC ) ) ,Max( ( RMSe - MUM ),Min( RRSe ,MUC ) ) ) ) ) + ( Max( ( ( ( MLU * RMSe ) * ( RRSe * MUM ) ) + ( Min( DS ,CS ) * ( MUC + MUM ) ) ),( ( ( RMSe * CS ) / ( RRSe - MUC ) ) / ( ( RCSe - RCSe ) * ( MLU - DS ) ) ) ) * ( ( ( ( MUR * RCSe ) / Min( RCSe ,RMSe ) ) + Max( Min( CS ,RRSe ),( DS + MUC ) ) ) + ( Max( Max( DS,MUM ),( DS + RRSe ) ) * Max( Min( RRSe ,DS ),( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.7296747967479674, "obj2": 0.21741344667265847}, {"determining": "Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9065040650406504, "obj2": 0.0709629027420639}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "Min( Max( RRS,ARS ) ,Max( RRS,ARS ) )", "choosing": "Min( ( MUC / MLU ) ,MUC )", "obj1": 0.3821138211382114, "obj2": 0.49789676730846144}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + MRS ) + MRS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5490009642005547}, {"determining": "( ( ( MDR - MDR ) * ACS ) - Min( ARS ,( ( MRS * RRS ) - Min( MRS ,MRS ) ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4634146341463415, "obj2": 0.3641200325836689}, {"determining": "( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) + ( MRS / DDR ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.46747967479674796, "obj2": 0.3637963128903535}], "12": [{"determining": "( ( Max( ( FirstVNF_RAM_Server - MDR ),MRS ) * ACS ) - Min( ARS ,( ( MRS / RRS ) - Min( AMS ,MRS ) ) ) )", "choosing": "( Min( ( ( MLU - RCSe ) / ( DS - Max( DS,MUC ) ) ) ,RRSe ) / Min( DS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + PN ) / PN ) )", "choosing": "Max( ( ( ( Max( ( ( Min( MUC ,CS ) - ( DS - RMSe ) ) - Max( ( RCSe + RMSe ),( MUM - CS ) ) ),Max( Min( ( MUR + MUC ) ,( DS / RRSe ) ),( ( CS * DS ) + Min( RCSe ,MUM ) ) ) ) - ( ( Min( ( DS / RMSe ) ,Min( MUC ,CS ) ) + ( ( MUM - MLU ) * Max( CS,MUR ) ) ) - ( ( ( CS / RMSe ) * Min( RMSe ,RMSe ) ) / ( Min( MUM ,RCSe ) - Max( CS,CS ) ) ) ) ) / ( ( ( ( ( MUR * RMSe ) + Min( MUC ,MLU ) ) / ( Min( RMSe ,MUR ) / ( MLU / MUR ) ) ) + ( ( Min( RCSe ,CS ) / Min( MLU ,MUM ) ) * ( Min( MLU ,MLU ) + ( MUM / CS ) ) ) ) + ( ( ( Max( RRSe,CS ) + Min( MUR ,CS ) ) * ( ( MUR + RMSe ) + ( MUM / MLU ) ) ) + ( ( ( CS * DS ) * ( CS / CS ) ) * ( Max( DS,RMSe ) - ( DS + DS ) ) ) ) ) ) + ( Min( ( ( Max( Max( RRSe,DS ),Min( CS ,MUC ) ) - ( ( RMSe + MUC ) * ( MUC * RRSe ) ) ) / ( ( ( RMSe / MUM ) / Max( CS,RMSe ) ) / ( ( CS / RRSe ) - Min( MUC ,MUR ) ) ) ) ,( Min( ( Min( MUM ,DS ) - Max( RRSe,MLU ) ) ,( ( MLU * MUM ) / ( RCSe / MUC ) ) ) - ( Max( Max( RMSe,MLU ),( MUC / RCSe ) ) + ( ( MUM / MUM ) - Max( RCSe,MUR ) ) ) ) ) / ( Max( Max( ( ( MUM + MUC ) - Max( DS,MUR ) ),( ( MUR / MUR ) + Min( MLU ,MUM ) ) ),( ( ( RRSe / MUR ) - ( RMSe - MUC ) ) - ( Min( MUR ,RMSe ) / Max( MLU,CS ) ) ) ) - Min( ( Min( Max( RMSe,MUM ) ,Max( MUM,MUR ) ) / Max( Min( CS ,DS ),Min( RCSe ,CS ) ) ) ,( ( ( RRSe + RRSe ) * ( RMSe + DS ) ) + ( ( RCSe * MUR ) / ( CS * CS ) ) ) ) ) ) ),( Max( ( ( Max( ( ( MUM + RCSe ) / ( MUC / MUR ) ),Max( ( RCSe * RMSe ),( CS * MUM ) ) ) / ( ( ( MUR * MLU ) * ( DS * RCSe ) ) * ( ( MUC / MLU ) * ( RMSe * RRSe ) ) ) ) + ( ( Max( ( MUC - MUR ),Max( MUR,CS ) ) + Min( ( RRSe * RCSe ) ,( MLU - RRSe ) ) ) * Min( Max( ( MUC + RMSe ),( DS - MUR ) ) ,Min( ( RCSe + RRSe ) ,( MUM - DS ) ) ) ) ),Min( Min( ( ( ( RCSe + MUC ) + Min( MUC ,RRSe ) ) / ( Min( MUM ,MUR ) - ( RCSe / MUR ) ) ) ,Max( ( Max( RRSe,RCSe ) - ( RMSe - MUR ) ),( Max( MUC,RCSe ) - ( RCSe - MUR ) ) ) ) ,Min( ( ( ( MUC * MLU ) - ( RMSe - MUM ) ) - ( ( MLU * CS ) + ( MUR + MUC ) ) ) ,Min( ( ( MUM / RRSe ) + Max( DS,MUR ) ) ,( ( DS * MUM ) + ( RCSe + RMSe ) ) ) ) ) ) / ( Max( ( ( ( ( RMSe + DS ) * Min( MUR ,MLU ) ) - ( Max( DS,RMSe ) / Max( RCSe,MUR ) ) ) / Min( ( ( MUC - RMSe ) - Min( MLU ,MLU ) ) ,Max( Max( MLU,RRSe ),( RRSe / MLU ) ) ) ),Max( ( Min( ( MUR * MUM ) ,Max( RCSe,RRSe ) ) + ( ( CS - DS ) + Max( RCSe,DS ) ) ),( Max( ( RRSe - DS ),( MUC * DS ) ) + Max( ( RMSe * MUM ),( RMSe * MUM ) ) ) ) ) + ( ( ( ( ( RCSe / RMSe ) - Min( MUC ,MLU ) ) / ( Min( RRSe ,DS ) + ( RRSe / RMSe ) ) ) + Max( Min( ( MUC / RMSe ) ,( RRSe + MUR ) ),Max( Max( RCSe,MLU ),( RCSe + RCSe ) ) ) ) - Max( ( ( Max( RRSe,MUM ) * ( MUM * MUC ) ) + ( ( MLU - RRSe ) / ( DS * CS ) ) ),( ( ( CS + MUM ) + ( DS - MUM ) ) - ( ( RRSe - MLU ) + ( RMSe * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_Mem_Server + MRS ) + RRS ),( ( FirstVNF_Mem_Server + MRS ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) * DS ) )", "obj1": 0.07520325203252033, "obj2": 0.7591594980593469}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MLU * MUM ) / ( DS - Max( DS,( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) ) ) )", "obj1": 0.8922764227642277, "obj2": 0.11181137243052452}, {"determining": "( ( ( Min( Max( Max( ( ( FirstVNF_Mem / CRS ) / ( FirstVNF_Mem_Server - MRS ) ),( ( FirstVNF_RAM - CRS ) + Min( CRS ,FirstVNF_RAM ) ) ),( ( ( FirstVNF_RAM - AMS ) * ( FirstVNF_Mem + RRS ) ) + Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + MRS ) ) ) ) ,( ( Max( Min( CRS ,DDR ),Max( FirstVNF_Mem_Server,Const ) ) - ( ( FirstVNF_Mem - PN ) / ( BR / FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_RAM_Server - Const ) - ( Const * MRS ) ) + ( ( RRS + CRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) + Max( ( Max( ( Max( RRS,FirstVNF_Mem_Server ) * Max( Const,DDR ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) + ( CRS * ARS ) ) ) - ( Max( Max( AMS,MDR ),Max( Const,FirstVNF_Mem_Server ) ) / Min( ( DDR / FirstVNF_CPU_Server ) ,( FirstVNF_RAM * MRS ) ) ) ),Max( Max( ( Min( ACS ,BR ) - ( FirstVNF_Mem_Server / BR ) ),Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,Max( BR,FirstVNF_Mem_Server ) ) ),( Min( ( PN * FirstVNF_Mem ) ,( BR + FirstVNF_RAM ) ) / Min( ( PN + MDR ) ,Min( RRS ,Const ) ) ) ) ) ) - Max( Max( Min( ( ( ( AMS / RRS ) + ( ACS + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_Mem_Server / RRS ) * Max( BR,FirstVNF_RAM_Server ) ) * Min( Min( MRS ,FirstVNF_Mem ) ,Min( ACS ,MDR ) ) ) ),Min( ( Min( ( ARS * ARS ) ,Max( ARS,RRS ) ) * Min( Max( CRS,CRS ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ,( Min( ( RRS - ACS ) ,Max( FirstVNF_Mem,MRS ) ) - ( ( BR * BR ) + ( BR + FirstVNF_CPU_Server ) ) ) ) ),Max( Min( ( ( Max( PN,BR ) + ( FirstVNF_Mem + FirstVNF_Mem ) ) / Max( Max( DDR,ARS ),( MRS - FirstVNF_CPU_Server ) ) ) ,( Max( Max( ARS,Const ),Max( ARS,FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,DDR ) * ( CRS * ACS ) ) ) ),( ( ( ( ARS / BR ) * ( FirstVNF_CPU_Server - ACS ) ) - ( ( ARS - AMS ) / Min( MDR ,FirstVNF_RAM ) ) ) + ( Max( ( AMS * CRS ),( Const * ARS ) ) - ( ( PN - AMS ) - ( DDR + ARS ) ) ) ) ) ) ) / ( Max( Min( ( ( ( Max( FirstVNF_Mem_Server,RRS ) * ( BR / ACS ) ) - Max( Max( BR,RRS ),( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server + CRS ),Max( MDR,BR ) ) / ( Min( MDR ,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ,( ( ( ( DDR * RRS ) - Min( BR ,Const ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) / Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( MDR * RRS ) ),( ( DDR * DDR ) / ( BR * MRS ) ) ) ) ),( ( ( ( ( AMS * PN ) / Max( AMS,Const ) ) - ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_CPU - PN ) ) ) + ( Min( ( FirstVNF_CPU - AMS ) ,( MDR / ACS ) ) / Min( ( BR - FirstVNF_Mem_Server ) ,( MDR / DDR ) ) ) ) / Max( ( Max( ( PN * Const ),Min( FirstVNF_CPU ,PN ) ) / Max( ( MRS + BR ),( RRS - BR ) ) ),( ( ( BR - MRS ) + ( BR * ARS ) ) - ( Min( AMS ,FirstVNF_CPU ) * Max( ARS,FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( ( ( ( ( AMS - BR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( DDR * FirstVNF_RAM_Server ) ) ) + Max( ( ( DDR - FirstVNF_CPU ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem - ARS ) / ( FirstVNF_CPU_Server * ACS ) ) ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,MRS ) ) + Max( Max( MDR,RRS ),( FirstVNF_Mem - AMS ) ) ) / ( ( ( FirstVNF_Mem_Server + ACS ) * ( PN + ARS ) ) / ( ( BR * FirstVNF_RAM_Server ) / ( AMS / AMS ) ) ) ) ) * Max( ( ( Max( ( PN - FirstVNF_RAM ),( RRS * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) * Max( BR,DDR ) ) ) + ( Min( ( DDR + FirstVNF_CPU ) ,( CRS * PN ) ) / ( Max( FirstVNF_CPU,Const ) * ( CRS * FirstVNF_RAM ) ) ) ),( ( ( ( FirstVNF_Mem_Server / MDR ) / ( DDR * PN ) ) * ( ( Const - FirstVNF_CPU_Server ) * ( BR / DDR ) ) ) * ( Min( ( AMS - BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) ) * ( Max( Const,FirstVNF_CPU ) * Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( Min( RCSe ,RRSe ) + ( RRSe * MLU ) ) + ( Max( MUC,MLU ) * ( MUM * RRSe ) ) ) - Max( ( Min( DS ,MLU ) * Max( DS,MUM ) ),( ( MLU / RCSe ) + ( MUR + DS ) ) ) ),Min( ( ( Min( RMSe ,RMSe ) - ( RMSe / MUM ) ) / ( Max( DS,MUR ) * ( MUR - RRSe ) ) ) ,( Min( ( RRSe - CS ) ,( DS - MUR ) ) + Max( ( MUM / CS ),Min( RRSe ,RMSe ) ) ) ) ) + Max( ( ( ( ( RMSe * RRSe ) - Min( RRSe ,RCSe ) ) + ( Min( MLU ,MLU ) / ( MUM / CS ) ) ) * ( ( ( MUR + MUC ) * ( RMSe * RCSe ) ) / ( Max( MUM,MLU ) - Min( MLU ,RMSe ) ) ) ),Max( ( ( ( RCSe * RRSe ) * Min( MUM ,MUC ) ) - ( Max( DS,DS ) - ( MUM + RRSe ) ) ),( ( ( CS + MUM ) * Max( MUC,RCSe ) ) - ( ( MLU + DS ) + ( MUR + DS ) ) ) ) ) ) * ( Min( Min( Min( ( Min( MLU ,RRSe ) + ( MUR * MLU ) ) ,( ( DS - RRSe ) - Min( CS ,RCSe ) ) ) ,( ( ( MLU * MUC ) + ( RMSe - MUC ) ) / Max( ( MLU + MLU ),( RMSe + MLU ) ) ) ) ,Max( ( ( ( CS * DS ) - ( RCSe * MUR ) ) * Min( Min( RMSe ,RMSe ) ,Min( MUM ,DS ) ) ),Min( ( ( RMSe - MUM ) * Min( MUC ,MLU ) ) ,Max( ( MUR + RRSe ),( DS * MUR ) ) ) ) ) * ( ( ( ( ( MUM / MUM ) + ( RMSe - CS ) ) + Min( ( DS / DS ) ,Min( CS ,MUM ) ) ) / ( ( Max( MUC,MLU ) + Min( RRSe ,CS ) ) / ( ( RRSe - MUC ) + ( RCSe / MUM ) ) ) ) - ( ( Min( ( MUM * MLU ) ,( MUC + CS ) ) * Min( ( MLU + MUM ) ,Min( MUM ,MUC ) ) ) + Max( Max( ( RMSe - RMSe ),( MUR - CS ) ),Min( Min( CS ,RRSe ) ,( MLU + MUM ) ) ) ) ) ) ) - ( ( Min( Max( ( ( Max( RMSe,MLU ) / ( MUR * DS ) ) / ( ( RRSe + MUR ) + Max( CS,MLU ) ) ),( ( ( MUC - MUR ) + ( DS + RRSe ) ) * ( ( RMSe + MUM ) / Max( DS,MUR ) ) ) ) ,( ( ( ( CS - RCSe ) + ( MUC + MUM ) ) - Max( Min( MUR ,MLU ),( MUC - MUM ) ) ) - ( ( ( MLU * RRSe ) * ( DS * MUR ) ) / ( ( RMSe * RRSe ) / ( RMSe / RRSe ) ) ) ) ) - ( Max( ( ( ( CS / CS ) + ( MUC / MUC ) ) + ( ( CS + DS ) - ( MUR * RCSe ) ) ),Min( ( ( MLU - RMSe ) + ( RRSe / MUM ) ) ,( Max( RCSe,MUM ) / ( RRSe + MUC ) ) ) ) + Max( ( Max( Min( DS ,DS ),( RCSe - RRSe ) ) + ( ( RCSe * MLU ) * ( DS / DS ) ) ),Max( ( Max( DS,RCSe ) * ( MUC - MLU ) ),Max( ( MUM * MUR ),Min( RCSe ,RCSe ) ) ) ) ) ) + ( Max( Max( Max( ( ( MUM + DS ) * Min( MUM ,MLU ) ),( ( RRSe / MLU ) - ( MUM + MUM ) ) ),Min( ( ( CS * MUM ) - ( CS * MUM ) ) ,( ( MUM / MLU ) - ( RMSe / MUC ) ) ) ),( Max( ( ( MUR - MUM ) * ( MUR / MLU ) ),Max( ( CS * MUM ),( RMSe + CS ) ) ) + Max( Min( ( MUC / RMSe ) ,Max( MLU,MUR ) ),( ( MLU / CS ) * ( MLU - MLU ) ) ) ) ) - ( ( Max( ( ( DS - MUR ) + ( DS + RRSe ) ),( ( DS - RMSe ) * ( MLU + CS ) ) ) / ( ( Min( MUR ,MUC ) + ( RMSe - CS ) ) / ( ( MUC / MLU ) - ( MLU - RMSe ) ) ) ) + ( Max( Min( Max( MUR,MUC ) ,( RCSe / MUC ) ),( ( RMSe / MLU ) * ( MLU - MUM ) ) ) * ( ( Max( CS,RCSe ) * ( MLU * RCSe ) ) * Min( ( MUC + MLU ) ,Max( MUM,RMSe ) ) ) ) ) ) ) )", "obj1": 0.8191056910569106, "obj2": 0.14918092549583073}, {"determining": "Min( ( MDR / ( FirstVNF_Mem_Server + MRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / DS ) + ( MUM / MUC ) )", "obj1": 0.5467479674796748, "obj2": 0.306013918060451}, {"determining": "( ( MRS * Min( ARS ,FirstVNF_RAM_Server ) ) - Min( MRS ,MRS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MLU,RRSe ) )", "obj1": 0.48577235772357724, "obj2": 0.33004699547721433}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) - ( DS * CS ) )", "obj1": 0.18089430894308944, "obj2": 0.6120997357063815}, {"determining": "Max( ( ARS + RRS ),( ( ( AMS * CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) - ( ( MUR * DS ) + ( DS + MUR ) ) ) ) * DS ) )", "obj1": 0.17073170731707318, "obj2": 0.6587643893489153}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Max( FirstVNF_Mem,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * Min( ARS ,PN ) ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.02314309963996467}, {"determining": "( ( FirstVNF_RAM / CRS ) - ( ( FirstVNF_RAM / CRS ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( DS ,RRSe ) / ( Min( DS ,RRSe ) / Min( DS ,MUM ) ) )", "obj1": 0.6361788617886179, "obj2": 0.26631243534214466}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) / ( DS + MUR ) )", "obj1": 0.4349593495934959, "obj2": 0.4086948328979217}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MLU * MUM ) / ( DS - Max( DS,MUC ) ) )", "obj1": 0.8150406504065041, "obj2": 0.181972556839175}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.6869918699186992, "obj2": 0.2582208142370423}, {"determining": "Max( ( ARS + FirstVNF_RAM ),FirstVNF_RAM )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.5772357723577236, "obj2": 0.2828380227957031}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.25203252032520324, "obj2": 0.6088666457329321}, {"determining": "( ( AMS - CRS ) * MRS )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe * MUR ) + Max( MUR,CS ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.258130081300813, "obj2": 0.5536010316829036}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS / ACS ) ) / ACS ) )", "choosing": "( ( DS + RRSe ) / MUR )", "obj1": 0.7113821138211383, "obj2": 0.21649774340615371}, {"determining": "( ( BR / RRS ) - Min( MRS ,Min( MRS ,Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MLU,MLU ) / ( DS - ( DS - Max( ( DS * CS ),( MUR * DS ) ) ) ) )", "obj1": 0.11382113821138211, "obj2": 0.7082142076547748}, {"determining": "( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( MUR / CS ),( RMSe * RRSe ) ) + ( MUM / MUC ) )", "obj1": 0.4268292682926829, "obj2": 0.43325009859532865}, {"determining": "( ( Max( Min( ( Min( ( ( FirstVNF_Mem_Server + CRS ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( MRS * ARS ) + ( AMS * FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU - RRS ) + ( PN * BR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / Min( FirstVNF_CPU ,CRS ) ) ) ) ,Min( Max( ( ( BR - RRS ) / ( MDR * FirstVNF_CPU ) ),( ( MDR / ARS ) + ( RRS - CRS ) ) ) ,( ( ( MDR * FirstVNF_Mem ) * Max( RRS,FirstVNF_Mem_Server ) ) - ( Min( BR ,DDR ) + ( CRS + FirstVNF_CPU ) ) ) ) ),( Min( Max( Max( Max( FirstVNF_CPU_Server,ACS ),Max( BR,MRS ) ),( Max( CRS,CRS ) / ( FirstVNF_CPU * BR ) ) ) ,( Min( ( MRS + FirstVNF_CPU ) ,( ARS * FirstVNF_RAM ) ) + Min( Min( RRS ,DDR ) ,( MDR - AMS ) ) ) ) * Max( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) * ( FirstVNF_Mem_Server - AMS ) ) / ( Min( FirstVNF_CPU_Server ,RRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ),Max( ( ( BR * FirstVNF_RAM_Server ) * ( AMS / MDR ) ),( Min( ARS ,DDR ) * ( PN * CRS ) ) ) ) ) ) / ( Max( ( ( ( ( AMS * DDR ) + ( DDR + FirstVNF_RAM ) ) / ( Max( BR,MRS ) - ( FirstVNF_RAM * ACS ) ) ) * ( ( ( FirstVNF_RAM - Const ) * ( MRS + FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,MRS ) - ( AMS + CRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem,ARS ) * ( AMS * CRS ) ) - ( ( MDR - AMS ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( ( Min( FirstVNF_CPU_Server ,ACS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * Min( ( MDR / FirstVNF_Mem_Server ) ,( PN / AMS ) ) ) ) ) + Max( ( ( Min( ( FirstVNF_RAM - PN ) ,( MRS - ARS ) ) - ( ( DDR * ARS ) / Min( RRS ,RRS ) ) ) - Max( Min( Max( FirstVNF_Mem_Server,PN ) ,( PN - ARS ) ),Max( ( FirstVNF_Mem_Server + Const ),Min( MRS ,AMS ) ) ) ),Min( ( ( Min( CRS ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem / MRS ) ) + ( Max( FirstVNF_CPU,BR ) / ( MRS + MDR ) ) ) ,Min( ( ( MRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * RRS ) ) ,( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,Const ) ) ) ) ) ) ) - ( Max( ( ( ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MDR ) ) * ( ( MDR - ARS ) + ( FirstVNF_RAM_Server * BR ) ) ) * ( ( Min( ARS ,PN ) * ( CRS + PN ) ) - ( ( MDR * RRS ) - ( RRS * ARS ) ) ) ) + ( Min( ( ( FirstVNF_RAM_Server * Const ) + Max( DDR,FirstVNF_RAM_Server ) ) ,Min( ( BR * Const ) ,Max( Const,MRS ) ) ) / Min( ( Min( FirstVNF_RAM_Server ,CRS ) + ( FirstVNF_Mem + DDR ) ) ,( ( FirstVNF_RAM_Server + Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ),( Max( ( ( ( DDR / DDR ) * Max( BR,FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ),Max( ( ( ACS + AMS ) * Min( FirstVNF_Mem_Server ,MRS ) ),( ( ACS - PN ) + Max( AMS,MDR ) ) ) ) * ( Min( ( Min( CRS ,FirstVNF_Mem_Server ) * ( PN / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem - AMS ) * ( MDR * FirstVNF_RAM ) ) ) - Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) * Max( ( ( ( ( Min( PN ,BR ) + ( DDR / FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_RAM_Server,DDR ) * Max( MDR,PN ) ) ) * ( Max( ( AMS / CRS ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + Min( ACS ,RRS ) ) ) ) * Min( Max( ( ( FirstVNF_Mem / RRS ) - Min( ARS ,Const ) ),( ( ACS + Const ) - ( RRS * PN ) ) ) ,( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( ( Const * AMS ) / ( FirstVNF_RAM - ARS ) ) ) ) ),( ( ( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM * Const ) ) * Max( ( Const + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + BR ) ) ) - Min( Min( ( RRS * BR ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( ( MRS * AMS ),( PN + ACS ) ) ) ) + ( ( ( Min( MRS ,ARS ) + Min( BR ,FirstVNF_Mem ) ) / Max( ( MRS + ACS ),Min( FirstVNF_CPU ,DDR ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),( RRS / FirstVNF_Mem_Server ) ) / ( Min( MRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM / AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( Min( MUC ,RRSe ) - ( CS + RRSe ) ) * ( ( RMSe - CS ) + ( RCSe + CS ) ) ) ,Min( Min( ( MLU - RMSe ) ,( RRSe - CS ) ) ,( Min( MLU ,RMSe ) + ( MUM / CS ) ) ) ) - ( ( ( Max( MUC,RMSe ) / Min( DS ,MUR ) ) - ( ( RRSe + RCSe ) * ( MLU - MUR ) ) ) - Max( Max( ( RRSe / DS ),( MUC / DS ) ),( Min( RMSe ,MUC ) - ( RCSe - DS ) ) ) ) ) + Min( ( Min( ( ( RMSe * MUR ) + ( RRSe - RRSe ) ) ,( ( RMSe / CS ) + ( MUC - DS ) ) ) / ( ( Min( DS ,RMSe ) * Min( RMSe ,DS ) ) + ( Max( MUC,MLU ) / ( RCSe - RCSe ) ) ) ) ,( ( Min( Max( CS,RMSe ) ,Max( RMSe,MUR ) ) * Max( ( MUC + CS ),( CS * MLU ) ) ) - Min( ( ( RMSe * MUR ) * ( MLU - MLU ) ) ,( ( MUR - DS ) - ( MUR + CS ) ) ) ) ) ) - ( Min( ( ( ( ( MUM / MUM ) - ( MLU / DS ) ) / Max( ( RCSe / MUR ),( RCSe / MUC ) ) ) + ( ( ( RRSe * MUR ) * ( CS * MLU ) ) / ( ( RMSe * MUC ) / ( RMSe * MUC ) ) ) ) ,( Max( Max( Min( MLU ,MUC ),Min( DS ,MLU ) ),( Max( RMSe,MLU ) * ( MUM + DS ) ) ) - ( Max( ( MUC + RCSe ),Max( RRSe,MUR ) ) * ( ( RCSe * DS ) + ( RCSe - MUM ) ) ) ) ) / ( ( ( ( ( RMSe / RCSe ) * ( MUC - MUC ) ) * Max( Max( RCSe,CS ),( DS / DS ) ) ) + ( ( ( RCSe * CS ) + ( RRSe / RCSe ) ) - Max( ( CS + DS ),Max( RMSe,RRSe ) ) ) ) + ( Max( ( Min( RMSe ,RRSe ) / Min( CS ,RMSe ) ),( Min( RCSe ,RCSe ) / ( DS - CS ) ) ) - ( ( ( MUM * RRSe ) + ( MLU - DS ) ) - ( ( MLU / CS ) - ( MUC + MUC ) ) ) ) ) ) ),Min( ( ( Max( Max( ( ( DS * RMSe ) + ( RRSe - RMSe ) ),Max( ( MUC * RCSe ),( RRSe + MUC ) ) ),( ( ( RMSe - DS ) - ( RCSe * MUC ) ) - ( ( MUC - RRSe ) / ( MLU + RCSe ) ) ) ) / Min( ( ( Min( RMSe ,RCSe ) + Max( MLU,MUM ) ) / ( Min( RMSe ,RRSe ) * ( RRSe - RCSe ) ) ) ,Min( ( ( RMSe * MUM ) + ( MLU - MUM ) ) ,Min( Max( CS,DS ) ,( DS / DS ) ) ) ) ) * ( Max( Max( ( Min( MUC ,MUM ) + ( MLU - RMSe ) ),Min( ( MLU * MUC ) ,( RCSe + MLU ) ) ),( ( ( RRSe - RCSe ) - Max( RCSe,DS ) ) * Min( Max( DS,RMSe ) ,( MLU / MUM ) ) ) ) / ( Min( ( ( RCSe / DS ) * ( MUM - MLU ) ) ,( ( MUR + RCSe ) + ( MUR + MUM ) ) ) - ( Max( ( RCSe * RMSe ),( RCSe + MUM ) ) + Max( ( RMSe + RCSe ),( MUR / RMSe ) ) ) ) ) ) ,Min( Max( ( ( Min( ( CS * DS ) ,Min( CS ,MUC ) ) - Min( Min( RMSe ,RMSe ) ,Min( MLU ,MUM ) ) ) - ( ( Max( MLU,RRSe ) * Max( DS,RCSe ) ) - Max( Min( MLU ,RMSe ),( CS * MUM ) ) ) ),( ( Max( ( MLU * MUC ),( MUM - MLU ) ) + Min( ( MUC / RRSe ) ,( CS - RCSe ) ) ) * ( ( Max( RMSe,RCSe ) + ( MUM * DS ) ) * Min( Max( RMSe,RRSe ) ,( RCSe / MUC ) ) ) ) ) ,( ( ( ( Max( MUC,RRSe ) + ( MLU - DS ) ) * ( ( MUM * MUM ) / ( RRSe * DS ) ) ) / ( ( ( RRSe / RMSe ) + ( RCSe - RMSe ) ) + Min( Min( DS ,MLU ) ,( MUM - MLU ) ) ) ) / ( Min( ( Max( CS,MUC ) * ( DS / DS ) ) ,( Max( RMSe,RRSe ) + ( CS / RMSe ) ) ) / Min( Max( Min( MLU ,MUM ),( RMSe / DS ) ) ,( Min( DS ,MLU ) * Max( MUR,RMSe ) ) ) ) ) ) ) )", "obj1": 0.5975609756097561, "obj2": 0.27285039096220837}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_CPU / ( ( RRS * RRS ) - ( ( BR / FirstVNF_Mem_Server ) - Max( ARS,ARS ) ) ) ) )", "choosing": "( Max( RMSe,MLU ) - ( DS * CS ) )", "obj1": 0.12804878048780488, "obj2": 0.6713137537755509}, {"determining": "( ( ( ( ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),Min( ACS ,DDR ) ) ,Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - FirstVNF_Mem_Server ) ) ) ) / Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Min( DDR ,FirstVNF_RAM_Server ) ) * Max( ( CRS - FirstVNF_CPU ),( MRS / BR ) ) ),( ( ( MDR / MRS ) - Min( AMS ,Const ) ) / ( Max( ACS,DDR ) + Min( FirstVNF_CPU ,RRS ) ) ) ) ) + Min( ( Max( Min( ( CRS + FirstVNF_CPU_Server ) ,( MDR - Const ) ),Max( ( BR / FirstVNF_CPU_Server ),Max( AMS,ARS ) ) ) / ( ( Min( CRS ,PN ) / ( CRS * CRS ) ) * ( ( RRS + Const ) * ( FirstVNF_Mem * MRS ) ) ) ) ,( ( Min( Min( BR ,ARS ) ,Max( ARS,ACS ) ) - ( Max( CRS,FirstVNF_RAM ) + ( FirstVNF_CPU_Server - DDR ) ) ) + Max( Max( ( MDR + Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ),( ( CRS - BR ) / Min( RRS ,FirstVNF_Mem ) ) ) ) ) ) - ( Min( Max( ( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_CPU + DDR ) ) - ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server / RRS ) ) ),( ( ( BR * BR ) * Min( FirstVNF_RAM_Server ,AMS ) ) - ( ( MDR - CRS ) / ( ACS * FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem_Server + DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Min( ( RRS - ARS ) ,Min( AMS ,CRS ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,PN ) ) / Min( ( MDR - FirstVNF_RAM ) ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) * Max( ( Min( ( Min( FirstVNF_CPU_Server ,DDR ) + Max( DDR,FirstVNF_CPU ) ) ,( ( CRS * AMS ) * Max( Const,ARS ) ) ) - ( ( ( ARS + ARS ) * ( FirstVNF_RAM + RRS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / MDR ) ) ) ),Max( ( ( ( RRS / AMS ) + ( MDR + FirstVNF_Mem ) ) * ( ( MDR + FirstVNF_CPU ) / Min( MDR ,FirstVNF_CPU_Server ) ) ),Max( Max( ( AMS * PN ),( BR + ACS ) ),( Min( MRS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem / RRS ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( ACS / Const ) * ( MDR / MRS ) ),( ( FirstVNF_CPU_Server / AMS ) * Max( CRS,FirstVNF_CPU ) ) ) - ( Min( ( CRS + FirstVNF_RAM_Server ) ,( PN * MDR ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) + Max( FirstVNF_Mem,PN ) ) ) ) + ( Min( ( ( FirstVNF_CPU_Server - CRS ) / ( AMS - ARS ) ) ,( Min( MDR ,AMS ) - ( AMS - Const ) ) ) / ( Min( ( RRS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( ACS ,CRS ) ) ) ) ) - ( Min( ( ( ( ARS - MDR ) / ( MDR + FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ,Min( ( ( MDR - BR ) * ( FirstVNF_Mem * CRS ) ) ,( Min( ACS ,FirstVNF_CPU_Server ) / ( PN / FirstVNF_RAM ) ) ) ) + ( ( Min( ( MRS + DDR ) ,( FirstVNF_Mem_Server * RRS ) ) * ( ( ARS + FirstVNF_RAM_Server ) + ( BR - ACS ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( BR + FirstVNF_Mem ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) ) / ( ( Max( ( Min( Min( Const ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) + ( ( MDR * ACS ) - ( PN - FirstVNF_RAM_Server ) ) ),( ( Max( FirstVNF_Mem,AMS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem / BR ) + ( FirstVNF_Mem_Server * MDR ) ) ) ) - ( Min( ( Max( ACS,RRS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ,Min( ( FirstVNF_CPU / PN ) ,( MDR / FirstVNF_RAM ) ) ) - ( Max( ( ACS - BR ),Min( FirstVNF_CPU_Server ,ACS ) ) * Max( ( RRS + FirstVNF_RAM_Server ),Max( ACS,FirstVNF_RAM ) ) ) ) ) - ( Min( ( ( ( Const + MDR ) - ( Const - CRS ) ) * Min( Max( BR,MDR ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( FirstVNF_Mem_Server * DDR ),Min( AMS ,FirstVNF_Mem ) ) * ( Min( ARS ,MDR ) / ( BR - DDR ) ) ) ) + ( ( ( Min( FirstVNF_CPU_Server ,ARS ) * ( AMS - FirstVNF_Mem ) ) + Max( Max( MDR,ACS ),Max( PN,FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_Mem_Server / RRS ) ) - Min( ( BR - FirstVNF_RAM_Server ) ,( RRS / Const ) ) ) ) ) ) ) )", "choosing": "Max( ( RRSe / Max( ( Min( CS ,CS ) * ( MLU + MLU ) ),RRSe ) ),Min( ( Min( Max( ( MUM / ( ( MUR - CS ) * CS ) ),Min( ( ( MUR * CS ) * ( MUM + MLU ) ) ,MUM ) ) ,( ( RMSe / Min( MUM ,CS ) ) + RMSe ) ) - DS ) ,( CS + DS ) ) )", "obj1": 0.7682926829268293, "obj2": 0.18814878936071192}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - ( ( DS - CS ) / ( ( DS - CS ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.24390243902439024, "obj2": 0.6118851348411228}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( Min( MRS ,FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( DS - Max( ( DS * CS ),( ( Max( MLU,MLU ) / ( DS - MUC ) ) * DS ) ) ) / ( RMSe * DS ) )", "obj1": 0.28252032520325204, "obj2": 0.5204389282097773}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MLU ) ,( RRSe - ( ( RCSe * CS ) + Max( MUR,CS ) ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5058390093393439}, {"determining": "Min( Max( FirstVNF_CPU,PN ) ,( ( MRS + ACS ) + ACS ) )", "choosing": "Min( ( MUM / MUC ) ,( RRSe - ( ( RCSe * MUR ) + ( RRSe - ( ( RCSe * MUR ) + ( MUR / CS ) ) ) ) ) )", "obj1": 0.3699186991869919, "obj2": 0.504607642353731}, {"determining": "( ( ( FirstVNF_RAM_Server + CRS ) * ACS ) - Min( ARS ,( ( MRS / RRS ) - Min( AMS ,MRS ) ) ) )", "choosing": "( Min( ( ( MLU - RCSe ) / ( Min( DS ,RRSe ) - MUC ) ) ,RRSe ) / Min( DS ,MUR ) )", "obj1": 0.7378048780487805, "obj2": 0.20636501828862083}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9044715447154471, "obj2": 0.072748496530392}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + RCSe ) - Min( ( CS * MUC ) ,RMSe ) )", "obj1": 0.39634146341463417, "obj2": 0.44324324930257797}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9065040650406504, "obj2": 0.0709629027420639}, {"determining": "( ( BR * ( ( BR * ACS ) - Min( MRS ,FirstVNF_Mem_Server ) ) ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM + RMSe ) + ( MLU / MUR ) ) - MUC ) + ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.021208218673737296}, {"determining": "( ( Min( PN ,Const ) - Min( BR ,FirstVNF_RAM ) ) / ( Max( FirstVNF_CPU_Server,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.47560975609756095, "obj2": 0.3566568560720231}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * RRS ) - ( ( BR * RRS ) - Min( MRS ,MRS ) ) )", "choosing": "( MLU / ( DS * CS ) )", "obj1": 0.11788617886178862, "obj2": 0.6783150464609344}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( ( BR / RRS ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS - Max( ( DS * CS ),( Max( MLU,MLU ) / ( DS - MUC ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.3048780487804878, "obj2": 0.5095444766558691}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - ( MUC / MLU ) ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5471781264016383}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) ) ) )", "choosing": "( ( MUM + DS ) / MUM )", "obj1": 0.7520325203252033, "obj2": 0.19271660133824858}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( ( MUR / CS ),( RMSe * RRSe ) )", "obj1": 0.3882113821138211, "obj2": 0.4536306465430349}, {"determining": "Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "Min( Max( RRS,ARS ) ,Max( RRS,ARS ) )", "choosing": "Min( ( MUC / MLU ) ,MUC )", "obj1": 0.3821138211382114, "obj2": 0.49789676730846144}, {"determining": "Max( ( ARS + RRS ),( ( Min( MRS ,FirstVNF_RAM ) + MRS ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) ) )", "obj1": 0.3861788617886179, "obj2": 0.4729904349421182}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "( Max( Max( ( ( Max( Max( ( MDR - AMS ),( FirstVNF_RAM - FirstVNF_Mem ) ),( Max( PN,FirstVNF_RAM ) - Max( CRS,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / ( MRS + AMS ) ) - ( ( ACS / FirstVNF_Mem ) + ( CRS * ACS ) ) ) ) / ( ( ( Max( FirstVNF_Mem,BR ) + Min( DDR ,Const ) ) * ( ( RRS - PN ) * ( Const - FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,Min( DDR ,CRS ) ) - Max( Min( ACS ,Const ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ),( ( ( Max( ( ACS * BR ),( FirstVNF_Mem_Server - ACS ) ) - ( ( MDR + AMS ) / ( MRS + ARS ) ) ) / ( Max( ( CRS / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) * Min( ( Const - ACS ) ,( BR + DDR ) ) ) ) + Max( ( ( ( PN * FirstVNF_CPU ) / ( BR - FirstVNF_RAM_Server ) ) * ( ( CRS - FirstVNF_RAM ) * ( MDR + PN ) ) ),( ( ( DDR + ACS ) * ( ARS + BR ) ) / Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Max( ACS,RRS ) * ( MDR - Const ) ) / ( ( CRS - BR ) / ( CRS - MDR ) ) ) + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server / BR ),( FirstVNF_Mem_Server + ARS ) ) ) ) ,( ( ( Max( FirstVNF_CPU,DDR ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Min( CRS ,ACS ) + ( MDR - DDR ) ) ) + ( ( ( FirstVNF_RAM / DDR ) - Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( ARS ,FirstVNF_RAM ) ) ) ) ) + Max( ( ( ( ( PN + FirstVNF_CPU ) * ( BR * MDR ) ) + ( ( CRS + MDR ) * Min( CRS ,MRS ) ) ) * ( ( ( BR * FirstVNF_RAM_Server ) - Max( AMS,MRS ) ) / ( ( AMS / ARS ) - ( DDR * FirstVNF_CPU ) ) ) ),( ( Min( Min( BR ,FirstVNF_Mem ) ,( MRS * RRS ) ) + ( ( MRS - FirstVNF_CPU ) * ( RRS * FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_Mem_Server * DDR ) * ( BR - BR ) ) ,Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_RAM - Const ) ) / ( ( BR + AMS ) * ( FirstVNF_RAM_Server / AMS ) ) ) ,Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ( FirstVNF_CPU * CRS ) ) ,( ( MRS / ACS ) / ( PN / PN ) ) ) ) - ( Max( Max( ( AMS + ACS ),( AMS - FirstVNF_RAM ) ),Min( ( MDR - MDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Max( ( ( PN * AMS ) / ( BR * FirstVNF_Mem ) ),( Min( BR ,FirstVNF_Mem_Server ) + Max( Const,CRS ) ) ) ) ) - ( Min( Max( Min( ( DDR / BR ) ,Max( ARS,FirstVNF_Mem ) ),( Min( PN ,RRS ) * Min( FirstVNF_RAM ,RRS ) ) ) ,( ( Max( Const,CRS ) / ( FirstVNF_CPU_Server - MRS ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) * ( CRS / ACS ) ) ) ) / ( ( ( Max( BR,FirstVNF_CPU ) / ( BR * FirstVNF_Mem ) ) * Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,( PN * ACS ) ) ) + Max( ( ( FirstVNF_CPU_Server / BR ) / ( ARS * Const ) ),Max( Min( CRS ,FirstVNF_CPU ),( Const + ACS ) ) ) ) ) ),( ( ( Max( ( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,DDR ) ),( Max( CRS,FirstVNF_CPU ) * ( FirstVNF_Mem / RRS ) ) ) + ( ( Max( MDR,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * BR ) ) + ( Min( BR ,CRS ) * ( PN * MDR ) ) ) ) / Max( ( ( ( MRS * AMS ) / ( CRS + FirstVNF_RAM ) ) * Min( ( ACS - MRS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ),( ( ( MRS / BR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) - Min( ( ( Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,( Const + FirstVNF_Mem_Server ) ) - ( ( BR + RRS ) * ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( ( DDR + ARS ) / Max( RRS,AMS ) ) - Max( ( MRS - RRS ),( CRS * FirstVNF_Mem ) ) ) ) ,Max( ( Max( ( DDR * FirstVNF_CPU_Server ),( Const / FirstVNF_CPU ) ) - Min( ( MDR - ACS ) ,( ARS + MDR ) ) ),Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ,Max( Max( DDR,CRS ),( MDR + FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( Max( ( CS + CS ),( RRSe * RRSe ) ) + Min( ( MUR - MLU ) ,Min( RMSe ,CS ) ) ) - ( ( ( MLU + RMSe ) * ( DS - RRSe ) ) - ( ( DS - MUC ) * ( DS / DS ) ) ) ) / ( ( Min( Max( DS,RCSe ) ,Max( MUC,MUC ) ) + Max( Max( DS,RRSe ),Max( RRSe,MUC ) ) ) * ( Min( ( DS * DS ) ,( RMSe - MUM ) ) / ( ( CS * MLU ) * ( RRSe + MLU ) ) ) ) ) / ( Max( ( Max( ( MUC * MUR ),Min( RRSe ,CS ) ) / ( Max( RMSe,MLU ) * ( RMSe + CS ) ) ),( ( ( MUR * MLU ) - ( RRSe - RCSe ) ) - ( ( CS / RMSe ) - ( CS + MLU ) ) ) ) / ( ( ( ( RMSe / MUC ) - ( MUM / CS ) ) / ( Max( CS,RCSe ) * Max( DS,DS ) ) ) / Max( ( Min( CS ,CS ) / ( MUC * RCSe ) ),( ( RRSe / RMSe ) + ( RRSe * RCSe ) ) ) ) ) ),Max( ( Min( ( Min( Max( CS,MUR ) ,( RRSe - MUR ) ) / ( ( DS * DS ) - ( DS - MUM ) ) ) ,Max( ( ( MUM + RCSe ) / ( MUR - MUM ) ),( ( RMSe / MUM ) + Max( RMSe,CS ) ) ) ) + ( Min( Min( ( RCSe / DS ) ,( MUC * DS ) ) ,( Max( MLU,RRSe ) * ( CS * RRSe ) ) ) / ( Max( ( RRSe / RCSe ),( CS - MUM ) ) / Min( ( RRSe - MUC ) ,( MUR + RRSe ) ) ) ) ),( ( ( Max( Min( MLU ,MLU ),Min( DS ,DS ) ) - Min( Min( RMSe ,RRSe ) ,( MUC + MLU ) ) ) - ( Max( ( MUC + RMSe ),Max( MLU,RRSe ) ) * ( ( MUR * RRSe ) - ( RRSe - RCSe ) ) ) ) * Min( ( Min( ( MUM - MLU ) ,( MLU / MUR ) ) + ( ( RCSe + MLU ) / Min( MUC ,MUC ) ) ) ,( Min( ( RMSe / RRSe ) ,( RMSe - MLU ) ) * ( Max( CS,DS ) + ( MUC - MUM ) ) ) ) ) ) ) / Min( Max( ( Max( Max( ( ( RMSe + RCSe ) * ( MUM - RRSe ) ),( Max( MUC,MUC ) + ( RCSe + DS ) ) ),( ( ( RMSe * MLU ) * Max( CS,DS ) ) * ( ( RCSe * MLU ) * ( MLU - MUR ) ) ) ) * Max( ( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) - ( ( MLU / RMSe ) / ( MUC * DS ) ) ),( ( ( CS / RRSe ) + Min( MLU ,CS ) ) + ( ( RRSe + RMSe ) + ( MUR * RRSe ) ) ) ) ),( Max( ( ( ( MLU + RCSe ) * ( MUR + MUM ) ) - ( ( MUM - DS ) / Min( MUC ,MUC ) ) ),( ( Max( MUC,RCSe ) - ( CS / CS ) ) - Max( ( MUR * CS ),( RRSe - MUC ) ) ) ) * ( Min( ( ( DS * DS ) - ( RRSe / CS ) ) ,( Min( MUM ,RCSe ) / Max( MUM,RMSe ) ) ) - ( ( Max( MUR,RMSe ) - ( RCSe / MUC ) ) / ( Max( MUM,RRSe ) * ( MUC / RCSe ) ) ) ) ) ) ,( Min( Max( ( Min( Max( DS,MUC ) ,( MLU - RMSe ) ) - ( ( MUC / RCSe ) - ( RRSe - CS ) ) ),( Max( ( RCSe * MUC ),( MLU / DS ) ) - Max( Max( DS,DS ),( CS + MLU ) ) ) ) ,( ( ( ( MLU + RCSe ) - Max( RRSe,MUR ) ) * ( Min( MLU ,MUM ) / Max( MUR,DS ) ) ) - ( ( ( RMSe + DS ) - ( MUR + RRSe ) ) / ( Min( MUC ,DS ) * ( MUC - CS ) ) ) ) ) / Max( Min( ( ( ( MUM * MUC ) / Max( RCSe,MUC ) ) * ( ( RMSe / CS ) / ( MUC / MUM ) ) ) ,Min( ( ( RMSe + DS ) / ( MUM / RRSe ) ) ,Min( Max( CS,RCSe ) ,Max( RRSe,MLU ) ) ) ),Min( Max( ( ( RMSe * RMSe ) * ( MUC * RRSe ) ),( Min( MUM ,MUR ) - ( RRSe + DS ) ) ) ,Max( ( Min( RRSe ,RMSe ) + ( DS + RCSe ) ),( ( MUM - RMSe ) + ( RMSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.38414634146341464, "obj2": 0.4819945659120335}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9065040650406504, "obj2": 0.0709629027420639}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + MRS ) + MRS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5490009642005547}, {"determining": "( ( ( MDR - MDR ) * ACS ) - Min( ARS ,( ( MRS * RRS ) - Min( MRS ,MRS ) ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4634146341463415, "obj2": 0.3641200325836689}], "13": [{"determining": "Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( MUM ,DS ) + ( Min( ( RRSe + Max( CS,( DS + MLU ) ) ) ,( RMSe - CS ) ) - ( DS * MUR ) ) ) ,( ( CS / CS ) / Max( DS,( ( RRSe + ( MUR * MUC ) ) * ( MUR + ( MUM - RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - MDR ),MRS ) * ACS ) - Min( ARS ,( ( MRS / RRS ) - Min( AMS ,MRS ) ) ) )", "choosing": "( Min( ( ( MLU - RCSe ) / ( DS - Max( DS,MUC ) ) ) ,RRSe ) / Min( DS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_Mem_Server + MRS ) + RRS ),( ( FirstVNF_Mem_Server + MRS ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) * DS ) )", "obj1": 0.07520325203252033, "obj2": 0.7591594980593469}, {"determining": "( ( BR * PN ) - Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( MUC / MUR ) / ( DS - MUC ) )", "obj1": 0.7926829268292683, "obj2": 0.11607164119932754}, {"determining": "Min( ( MDR / ( FirstVNF_Mem_Server + MRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( DS - CS ) / DS ) + ( MUM / MUC ) )", "obj1": 0.5467479674796748, "obj2": 0.306013918060451}, {"determining": "( Max( Const,( RRS + FirstVNF_Mem ) ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_RAM - ARS ) * ( ( DDR / ARS ) / MRS ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( Max( ( Min( RMSe ,MUR ) - ( MUR / DS ) ),( Min( MUR ,DS ) + ( MUR * MUM ) ) ) - ( ( ( RRSe + RRSe ) + ( CS + RMSe ) ) / ( ( MUM / RRSe ) - ( RCSe / RRSe ) ) ) ) / ( Max( ( ( MUC - RMSe ) / ( CS * DS ) ),Max( ( DS / MUC ),( CS / RRSe ) ) ) / ( ( ( MUR / RMSe ) - ( MUR - MLU ) ) - Max( ( MUR * MUM ),( MLU * RRSe ) ) ) ) ),( Min( ( Min( Min( DS ,DS ) ,Min( MUC ,DS ) ) - Max( Max( MUR,DS ),( MUC * DS ) ) ) ,Max( ( ( RCSe / RRSe ) - ( MUR / DS ) ),Min( ( MLU + CS ) ,( RCSe / CS ) ) ) ) * ( ( Max( ( RRSe + RCSe ),( CS + DS ) ) + ( ( MLU / DS ) + Min( RMSe ,CS ) ) ) - ( Min( ( MLU - MUC ) ,( RRSe + RMSe ) ) / ( Min( RMSe ,RMSe ) * ( RCSe * RCSe ) ) ) ) ) ) ,( ( ( Min( ( ( DS - MUR ) - ( CS - RMSe ) ) ,( ( RMSe * DS ) * Max( MUR,RMSe ) ) ) / ( ( Max( RRSe,DS ) + Max( MUM,MUR ) ) - Max( ( MUM * MUM ),( RRSe + MUC ) ) ) ) / Max( ( ( Max( RRSe,DS ) / Max( RRSe,MUR ) ) * Max( Max( RRSe,CS ),( MLU / MUR ) ) ),( ( ( MLU * RRSe ) - ( RRSe * MUC ) ) / Min( ( DS / CS ) ,( MUC / MUC ) ) ) ) ) * ( Min( ( ( ( DS + RMSe ) + ( RMSe * MUC ) ) * Max( ( RCSe - RRSe ),Max( CS,MLU ) ) ) ,( Max( Max( RMSe,MUR ),( RRSe + MLU ) ) / Min( ( CS + MLU ) ,Max( RMSe,DS ) ) ) ) / ( ( Min( ( CS - RRSe ) ,( MLU + MUM ) ) / ( ( MUM + CS ) / ( MUR / MUM ) ) ) / Max( ( ( MLU - MUC ) + ( MUR / RRSe ) ),( Max( MUR,MUM ) - ( MUR - RMSe ) ) ) ) ) ) ) + ( ( ( ( ( Max( Min( MLU ,CS ),( CS + MUR ) ) * ( ( RRSe - RMSe ) + ( RCSe + CS ) ) ) / Max( ( Max( RMSe,RCSe ) - Min( MUR ,DS ) ),( ( RCSe - RCSe ) - Max( RRSe,RRSe ) ) ) ) + ( ( ( Min( DS ,MUM ) / Min( RRSe ,RMSe ) ) / ( ( MUM + MUC ) * ( RMSe / MUC ) ) ) / Min( ( ( MUR / DS ) * Min( RMSe ,MUM ) ) ,Max( Min( MUR ,MUM ),Max( MUC,MUM ) ) ) ) ) - Max( ( ( Min( ( MLU / MUM ) ,( MUM - MLU ) ) * Max( ( RCSe + MUC ),( DS + DS ) ) ) / Max( Min( Max( RRSe,DS ) ,( MLU + CS ) ),( ( MUM - MUR ) * ( DS / MLU ) ) ) ),Min( ( Max( Min( RCSe ,MUC ),( CS / RCSe ) ) * Max( ( MLU - MLU ),Min( RMSe ,MUR ) ) ) ,( Min( ( MUR + MUM ) ,( MUC / RMSe ) ) * ( ( RRSe / DS ) + ( MUM * MUC ) ) ) ) ) ) - ( ( ( ( Min( Min( CS ,MLU ) ,( RRSe / MUM ) ) * ( Max( MUM,MLU ) + ( CS / MUC ) ) ) * ( Min( ( DS - MUR ) ,( RMSe / MLU ) ) - ( ( DS - MLU ) + Min( RCSe ,RCSe ) ) ) ) - ( Max( Max( Min( DS ,RCSe ),( MLU - CS ) ),( ( RMSe + DS ) * Min( MLU ,DS ) ) ) + ( Min( Max( CS,RCSe ) ,( MUC / MUR ) ) * Min( ( RMSe + RMSe ) ,( MUR * RMSe ) ) ) ) ) / ( ( Max( ( ( RCSe + RRSe ) / ( RRSe * MUM ) ),( ( RMSe / MUC ) * ( MUM + RMSe ) ) ) + Max( Min( ( DS + RCSe ) ,( MLU * RCSe ) ),Max( ( RRSe * DS ),( RCSe / MUR ) ) ) ) - Min( Max( ( ( RMSe + RCSe ) / Max( MUC,MUC ) ),( ( RMSe / CS ) * Min( RCSe ,RCSe ) ) ) ,( Max( ( RMSe / MUC ),( RRSe - RMSe ) ) + ( Max( DS,DS ) - Max( MUC,CS ) ) ) ) ) ) ) )", "obj1": 0.8922764227642277, "obj2": 0.0865250346222578}, {"determining": "( ( ( ( ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),Min( ACS ,DDR ) ) ,Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - FirstVNF_Mem_Server ) ) ) ) / Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Min( DDR ,FirstVNF_RAM_Server ) ) * Max( ( CRS - FirstVNF_CPU ),( MRS / BR ) ) ),( ( ( MDR / MRS ) - Min( AMS ,Const ) ) / ( Max( ACS,DDR ) + Min( FirstVNF_CPU ,RRS ) ) ) ) ) + Min( ( Max( Min( ( CRS + FirstVNF_CPU_Server ) ,( MDR - Const ) ),Max( ( BR / FirstVNF_CPU_Server ),Max( AMS,ARS ) ) ) / ( ( Min( CRS ,PN ) / ( CRS * CRS ) ) * ( ( RRS + Const ) * ( FirstVNF_Mem * MRS ) ) ) ) ,( ( Min( Min( BR ,ARS ) ,Max( ARS,ACS ) ) - ( Max( CRS,FirstVNF_RAM ) + ( FirstVNF_CPU_Server - DDR ) ) ) + Max( Max( ( MDR + Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ),( ( CRS - BR ) / Min( RRS ,FirstVNF_Mem ) ) ) ) ) ) - ( Min( Max( ( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_CPU + DDR ) ) - ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server / RRS ) ) ),( ( ( BR * BR ) * Min( FirstVNF_RAM_Server ,AMS ) ) - ( ( MDR - CRS ) / ( ACS * FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem_Server + DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Min( ( RRS - ARS ) ,Min( AMS ,CRS ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,PN ) ) / Min( ( MDR - FirstVNF_RAM ) ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) * Max( ( Min( ( Min( FirstVNF_CPU_Server ,DDR ) + Max( DDR,FirstVNF_CPU ) ) ,( ( CRS * AMS ) * Max( Const,ARS ) ) ) - ( ( ( ARS + ARS ) * ( FirstVNF_RAM + RRS ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / MDR ) ) ) ),Max( ( ( ( RRS / AMS ) + ( MDR + FirstVNF_Mem ) ) * ( ( MDR + FirstVNF_CPU ) / Min( MDR ,FirstVNF_CPU_Server ) ) ),Max( Max( ( AMS * PN ),( BR + ACS ) ),( Min( MRS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem / RRS ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( ACS / Const ) * ( MDR / MRS ) ),( ( FirstVNF_CPU_Server / AMS ) * Max( CRS,FirstVNF_CPU ) ) ) - ( Min( ( CRS + FirstVNF_RAM_Server ) ,( PN * MDR ) ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) + Max( FirstVNF_Mem,PN ) ) ) ) + ( Min( ( ( FirstVNF_CPU_Server - CRS ) / ( AMS - ARS ) ) ,( Min( MDR ,AMS ) - ( AMS - Const ) ) ) / ( Min( ( RRS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( ACS ,CRS ) ) ) ) ) - ( Min( ( ( ( ARS - MDR ) / ( MDR + FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ,Min( ( ( MDR - BR ) * ( FirstVNF_Mem * CRS ) ) ,( Min( ACS ,FirstVNF_CPU_Server ) / ( PN / FirstVNF_RAM ) ) ) ) + ( ( Min( ( MRS + DDR ) ,( FirstVNF_Mem_Server * RRS ) ) * ( ( ARS + FirstVNF_RAM_Server ) + ( BR - ACS ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( BR + FirstVNF_Mem ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) ) / ( ( Max( ( Min( Min( Const ,MRS ) ,( RRS - FirstVNF_RAM_Server ) ) + ( ( MDR * ACS ) - ( PN - FirstVNF_RAM_Server ) ) ),( ( Max( FirstVNF_Mem,AMS ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem / BR ) + ( FirstVNF_Mem_Server * MDR ) ) ) ) - ( Min( ( Max( ACS,RRS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ,Min( ( FirstVNF_CPU / PN ) ,( MDR / FirstVNF_RAM ) ) ) - ( Max( ( ACS - BR ),Min( FirstVNF_CPU_Server ,ACS ) ) * Max( ( RRS + FirstVNF_RAM_Server ),Max( ACS,FirstVNF_RAM ) ) ) ) ) - ( Min( ( ( ( Const + MDR ) - ( Const - CRS ) ) * Min( Max( BR,MDR ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( FirstVNF_Mem_Server * DDR ),Min( AMS ,FirstVNF_Mem ) ) * ( Min( ARS ,MDR ) / ( BR - DDR ) ) ) ) + ( ( ( Min( FirstVNF_CPU_Server ,ARS ) * ( AMS - FirstVNF_Mem ) ) + Max( Max( MDR,ACS ),Max( PN,FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( FirstVNF_Mem_Server / RRS ) ) - Min( ( BR - FirstVNF_RAM_Server ) ,( RRS / Const ) ) ) ) ) ) ) )", "choosing": "Max( ( RRSe / Max( ( Min( CS ,CS ) * ( MLU + MLU ) ),RRSe ) ),Min( ( Min( Max( ( MUM / ( ( MUR - CS ) * CS ) ),Min( ( ( MUR * CS ) * ( MUM + MLU ) ) ,MUM ) ) ,( ( RMSe / Min( MUM ,CS ) ) + RMSe ) ) - DS ) ,( CS + DS ) ) )", "obj1": 0.7682926829268293, "obj2": 0.18814878936071192}, {"determining": "( ( ( Min( ARS ,PN ) + ( Const / DDR ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / Max( AMS,Const ) ) ) * Max( Min( Min( RRS ,AMS ) ,Min( MRS ,FirstVNF_RAM ) ),( ( CRS + FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "( CS / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) )", "obj1": 0.3617886178861789, "obj2": 0.47991741942939925}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) - ( DS * CS ) )", "obj1": 0.18089430894308944, "obj2": 0.6120997357063815}, {"determining": "Max( ( ARS + RRS ),( ( ( AMS * CRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) ) + RRS ) )", "choosing": "( ( DS - ( ( DS / CS ) / ( RMSe * DS ) ) ) / ( Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) - ( ( MUR * DS ) + ( DS + MUR ) ) ) ) * DS ) )", "obj1": 0.17073170731707318, "obj2": 0.6587643893489153}, {"determining": "( ( MRS * Min( ARS ,FirstVNF_RAM_Server ) ) - Min( MRS ,MRS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MLU,RRSe ) )", "obj1": 0.48577235772357724, "obj2": 0.33004699547721433}, {"determining": "( ( Min( ( FirstVNF_RAM / ACS ) ,Max( FirstVNF_Mem,Const ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM + MDR ) ) ) / ( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / CRS ) ) + ( ( FirstVNF_RAM * Min( ARS ,PN ) ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) - Min( DS ,CS ) ) * Min( ( DS / CS ) ,( MUM / MUM ) ) ) + ( Max( ( ( ( ( RCSe / MUR ) + ( MUC / DS ) ) - Max( ( RRSe * CS ),( RRSe + CS ) ) ) / ( ( ( MUC * MUM ) / ( RCSe / MLU ) ) * ( ( MUC - DS ) - ( DS / DS ) ) ) ),Max( MUM,MLU ) ) / ( ( DS / RMSe ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9349593495934959, "obj2": 0.02314309963996467}, {"determining": "( ( FirstVNF_RAM / CRS ) - ( ( FirstVNF_RAM / CRS ) - Min( MRS ,MRS ) ) )", "choosing": "( Min( DS ,RRSe ) / ( Min( DS ,RRSe ) / Min( DS ,MUM ) ) )", "obj1": 0.6361788617886179, "obj2": 0.26631243534214466}, {"determining": "Min( Max( FirstVNF_CPU,ARS ) ,( MRS + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / MLU ) ,( RRSe - ( ( RCSe * CS ) + Max( MUR,CS ) ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5058390093393439}, {"determining": "Max( ( ARS + FirstVNF_RAM ),FirstVNF_RAM )", "choosing": "( ( DS - CS ) / DS )", "obj1": 0.5772357723577236, "obj2": 0.2828380227957031}, {"determining": "( ( Max( ( ACS * RRS ),( FirstVNF_CPU / ACS ) ) * ACS ) / Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) ) / ( DS + MUR ) )", "obj1": 0.4349593495934959, "obj2": 0.4086948328979217}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_CPU / ACS ) )", "choosing": "( Max( ( MUR / MUR ),( DS / CS ) ) / ( Max( MUM,RRSe ) / ( MLU / RMSe ) ) )", "obj1": 0.25203252032520324, "obj2": 0.6088666457329321}, {"determining": "( ( AMS - CRS ) * MRS )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe * MUR ) + Max( MUR,CS ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.258130081300813, "obj2": 0.5536010316829036}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS / ACS ) ) / ACS ) )", "choosing": "( ( DS + RRSe ) / MUR )", "obj1": 0.7113821138211383, "obj2": 0.21649774340615371}, {"determining": "( ( BR / RRS ) - Min( MRS ,Min( MRS ,Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MLU,MLU ) / ( DS - ( DS - Max( ( DS * CS ),( MUR * DS ) ) ) ) )", "obj1": 0.11382113821138211, "obj2": 0.7082142076547748}, {"determining": "( ( ( MDR - BR ) * RRS ) - ( ( BR / RRS ) - ( MRS / MRS ) ) )", "choosing": "( Max( RMSe,MLU ) / CS )", "obj1": 0.3780487804878049, "obj2": 0.4452794208472156}, {"determining": "( ( Max( Min( ( Min( ( ( FirstVNF_Mem_Server + CRS ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( MRS * ARS ) + ( AMS * FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU - RRS ) + ( PN * BR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / Min( FirstVNF_CPU ,CRS ) ) ) ) ,Min( Max( ( ( BR - RRS ) / ( MDR * FirstVNF_CPU ) ),( ( MDR / ARS ) + ( RRS - CRS ) ) ) ,( ( ( MDR * FirstVNF_Mem ) * Max( RRS,FirstVNF_Mem_Server ) ) - ( Min( BR ,DDR ) + ( CRS + FirstVNF_CPU ) ) ) ) ),( Min( Max( Max( Max( FirstVNF_CPU_Server,ACS ),Max( BR,MRS ) ),( Max( CRS,CRS ) / ( FirstVNF_CPU * BR ) ) ) ,( Min( ( MRS + FirstVNF_CPU ) ,( ARS * FirstVNF_RAM ) ) + Min( Min( RRS ,DDR ) ,( MDR - AMS ) ) ) ) * Max( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) * ( FirstVNF_Mem_Server - AMS ) ) / ( Min( FirstVNF_CPU_Server ,RRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ),Max( ( ( BR * FirstVNF_RAM_Server ) * ( AMS / MDR ) ),( Min( ARS ,DDR ) * ( PN * CRS ) ) ) ) ) ) / ( Max( ( ( ( ( AMS * DDR ) + ( DDR + FirstVNF_RAM ) ) / ( Max( BR,MRS ) - ( FirstVNF_RAM * ACS ) ) ) * ( ( ( FirstVNF_RAM - Const ) * ( MRS + FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,MRS ) - ( AMS + CRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem,ARS ) * ( AMS * CRS ) ) - ( ( MDR - AMS ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( ( Min( FirstVNF_CPU_Server ,ACS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * Min( ( MDR / FirstVNF_Mem_Server ) ,( PN / AMS ) ) ) ) ) + Max( ( ( Min( ( FirstVNF_RAM - PN ) ,( MRS - ARS ) ) - ( ( DDR * ARS ) / Min( RRS ,RRS ) ) ) - Max( Min( Max( FirstVNF_Mem_Server,PN ) ,( PN - ARS ) ),Max( ( FirstVNF_Mem_Server + Const ),Min( MRS ,AMS ) ) ) ),Min( ( ( Min( CRS ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem / MRS ) ) + ( Max( FirstVNF_CPU,BR ) / ( MRS + MDR ) ) ) ,Min( ( ( MRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * RRS ) ) ,( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,Const ) ) ) ) ) ) ) - ( Max( ( ( ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MDR ) ) * ( ( MDR - ARS ) + ( FirstVNF_RAM_Server * BR ) ) ) * ( ( Min( ARS ,PN ) * ( CRS + PN ) ) - ( ( MDR * RRS ) - ( RRS * ARS ) ) ) ) + ( Min( ( ( FirstVNF_RAM_Server * Const ) + Max( DDR,FirstVNF_RAM_Server ) ) ,Min( ( BR * Const ) ,Max( Const,MRS ) ) ) / Min( ( Min( FirstVNF_RAM_Server ,CRS ) + ( FirstVNF_Mem + DDR ) ) ,( ( FirstVNF_RAM_Server + Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ),( Max( ( ( ( DDR / DDR ) * Max( BR,FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ),Max( ( ( ACS + AMS ) * Min( FirstVNF_Mem_Server ,MRS ) ),( ( ACS - PN ) + Max( AMS,MDR ) ) ) ) * ( Min( ( Min( CRS ,FirstVNF_Mem_Server ) * ( PN / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem - AMS ) * ( MDR * FirstVNF_RAM ) ) ) - Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) * Max( ( ( ( ( Min( PN ,BR ) + ( DDR / FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_RAM_Server,DDR ) * Max( MDR,PN ) ) ) * ( Max( ( AMS / CRS ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + Min( ACS ,RRS ) ) ) ) * Min( Max( ( ( FirstVNF_Mem / RRS ) - Min( ARS ,Const ) ),( ( ACS + Const ) - ( RRS * PN ) ) ) ,( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( ( Const * AMS ) / ( FirstVNF_RAM - ARS ) ) ) ) ),( ( ( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM * Const ) ) * Max( ( Const + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + BR ) ) ) - Min( Min( ( RRS * BR ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( ( MRS * AMS ),( PN + ACS ) ) ) ) + ( ( ( Min( MRS ,ARS ) + Min( BR ,FirstVNF_Mem ) ) / Max( ( MRS + ACS ),Min( FirstVNF_CPU ,DDR ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),( RRS / FirstVNF_Mem_Server ) ) / ( Min( MRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM / AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( Min( MUC ,RRSe ) - ( CS + RRSe ) ) * ( ( RMSe - CS ) + ( RCSe + CS ) ) ) ,Min( Min( ( MLU - RMSe ) ,( RRSe - CS ) ) ,( Min( MLU ,RMSe ) + ( MUM / CS ) ) ) ) - ( ( ( Max( MUC,RMSe ) / Min( DS ,MUR ) ) - ( ( RRSe + RCSe ) * ( MLU - MUR ) ) ) - Max( Max( ( RRSe / DS ),( MUC / DS ) ),( Min( RMSe ,MUC ) - ( RCSe - DS ) ) ) ) ) + Min( ( Min( ( ( RMSe * MUR ) + ( RRSe - RRSe ) ) ,( ( RMSe / CS ) + ( MUC - DS ) ) ) / ( ( Min( DS ,RMSe ) * Min( RMSe ,DS ) ) + ( Max( MUC,MLU ) / ( RCSe - RCSe ) ) ) ) ,( ( Min( Max( CS,RMSe ) ,Max( RMSe,MUR ) ) * Max( ( MUC + CS ),( CS * MLU ) ) ) - Min( ( ( RMSe * MUR ) * ( MLU - MLU ) ) ,( ( MUR - DS ) - ( MUR + CS ) ) ) ) ) ) - ( Min( ( ( ( ( MUM / MUM ) - ( MLU / DS ) ) / Max( ( RCSe / MUR ),( RCSe / MUC ) ) ) + ( ( ( RRSe * MUR ) * ( CS * MLU ) ) / ( ( RMSe * MUC ) / ( RMSe * MUC ) ) ) ) ,( Max( Max( Min( MLU ,MUC ),Min( DS ,MLU ) ),( Max( RMSe,MLU ) * ( MUM + DS ) ) ) - ( Max( ( MUC + RCSe ),Max( RRSe,MUR ) ) * ( ( RCSe * DS ) + ( RCSe - MUM ) ) ) ) ) / ( ( ( ( ( RMSe / RCSe ) * ( MUC - MUC ) ) * Max( Max( RCSe,CS ),( DS / DS ) ) ) + ( ( ( RCSe * CS ) + ( RRSe / RCSe ) ) - Max( ( CS + DS ),Max( RMSe,RRSe ) ) ) ) + ( Max( ( Min( RMSe ,RRSe ) / Min( CS ,RMSe ) ),( Min( RCSe ,RCSe ) / ( DS - CS ) ) ) - ( ( ( MUM * RRSe ) + ( MLU - DS ) ) - ( ( MLU / CS ) - ( MUC + MUC ) ) ) ) ) ) ),Min( ( ( Max( Max( ( ( DS * RMSe ) + ( RRSe - RMSe ) ),Max( ( MUC * RCSe ),( RRSe + MUC ) ) ),( ( ( RMSe - DS ) - ( RCSe * MUC ) ) - ( ( MUC - RRSe ) / ( MLU + RCSe ) ) ) ) / Min( ( ( Min( RMSe ,RCSe ) + Max( MLU,MUM ) ) / ( Min( RMSe ,RRSe ) * ( RRSe - RCSe ) ) ) ,Min( ( ( RMSe * MUM ) + ( MLU - MUM ) ) ,Min( Max( CS,DS ) ,( DS / DS ) ) ) ) ) * ( Max( Max( ( Min( MUC ,MUM ) + ( MLU - RMSe ) ),Min( ( MLU * MUC ) ,( RCSe + MLU ) ) ),( ( ( RRSe - RCSe ) - Max( RCSe,DS ) ) * Min( Max( DS,RMSe ) ,( MLU / MUM ) ) ) ) / ( Min( ( ( RCSe / DS ) * ( MUM - MLU ) ) ,( ( MUR + RCSe ) + ( MUR + MUM ) ) ) - ( Max( ( RCSe * RMSe ),( RCSe + MUM ) ) + Max( ( RMSe + RCSe ),( MUR / RMSe ) ) ) ) ) ) ,Min( Max( ( ( Min( ( CS * DS ) ,Min( CS ,MUC ) ) - Min( Min( RMSe ,RMSe ) ,Min( MLU ,MUM ) ) ) - ( ( Max( MLU,RRSe ) * Max( DS,RCSe ) ) - Max( Min( MLU ,RMSe ),( CS * MUM ) ) ) ),( ( Max( ( MLU * MUC ),( MUM - MLU ) ) + Min( ( MUC / RRSe ) ,( CS - RCSe ) ) ) * ( ( Max( RMSe,RCSe ) + ( MUM * DS ) ) * Min( Max( RMSe,RRSe ) ,( RCSe / MUC ) ) ) ) ) ,( ( ( ( Max( MUC,RRSe ) + ( MLU - DS ) ) * ( ( MUM * MUM ) / ( RRSe * DS ) ) ) / ( ( ( RRSe / RMSe ) + ( RCSe - RMSe ) ) + Min( Min( DS ,MLU ) ,( MUM - MLU ) ) ) ) / ( Min( ( Max( CS,MUC ) * ( DS / DS ) ) ,( Max( RMSe,RRSe ) + ( CS / RMSe ) ) ) / Min( Max( Min( MLU ,MUM ),( RMSe / DS ) ) ,( Min( DS ,MLU ) * Max( MUR,RMSe ) ) ) ) ) ) ) )", "obj1": 0.5975609756097561, "obj2": 0.27285039096220837}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_CPU / ( ( RRS * RRS ) - ( ( BR / FirstVNF_Mem_Server ) - Max( ARS,ARS ) ) ) ) )", "choosing": "( Max( RMSe,MLU ) - ( DS * CS ) )", "obj1": 0.12804878048780488, "obj2": 0.6713137537755509}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( RRS - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * MUR ) + ( MUM / MUC ) )", "obj1": 0.6869918699186992, "obj2": 0.2582208142370423}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) + MRS ) ) + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( DS - ( ( DS - CS ) / ( ( DS - CS ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.24390243902439024, "obj2": 0.6118851348411228}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( Min( MRS ,FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( DS - Max( ( DS * CS ),( ( Max( MLU,MLU ) / ( DS - MUC ) ) * DS ) ) ) / ( RMSe * DS ) )", "obj1": 0.28252032520325204, "obj2": 0.5204389282097773}, {"determining": "( ( ( FirstVNF_RAM_Server + CRS ) * ACS ) - Min( ARS ,( ( MRS / RRS ) - Min( AMS ,MRS ) ) ) )", "choosing": "( Min( ( ( MLU - RCSe ) / ( Min( DS ,RRSe ) - MUC ) ) ,RRSe ) / Min( DS ,MUR ) )", "obj1": 0.7378048780487805, "obj2": 0.20636501828862083}, {"determining": "Max( ( Min( AMS ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( MLU - DS ) + ( DS - DS ) )", "obj1": 0.10365853658536585, "obj2": 0.732950260958179}, {"determining": "Min( Max( ( AMS - BR ),Max( FirstVNF_RAM,DDR ) ) ,( ( ( BR / RRS ) - ( MRS / MRS ) ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( RMSe,RRSe ) / Min( ( ( CS - RMSe ) / ( DS / MUC ) ) ,Max( MUR,DS ) ) )", "obj1": 0.4735772357723577, "obj2": 0.34147640578165117}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + RCSe ) - Min( ( CS * MUC ) ,RMSe ) )", "obj1": 0.39634146341463417, "obj2": 0.44324324930257797}, {"determining": "( ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( RRS * Const ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - Min( PN ,Const ) ) - ( ( AMS / FirstVNF_Mem_Server ) * ( CRS + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( DS / MUR ) ) / MUM )", "obj1": 0.7012195121951219, "obj2": 0.2433469014356635}, {"determining": "Max( ( Min( ( ACS * DDR ) ,Const ) / PN ),Min( CRS ,Const ) )", "choosing": "( ( ( Max( MUR,RRSe ) / Min( MUR ,( MUR + DS ) ) ) - DS ) + ( DS - DS ) )", "obj1": 0.09349593495934959, "obj2": 0.7449005475588455}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9065040650406504, "obj2": 0.0709629027420639}, {"determining": "( ( BR * ( ( BR * ACS ) - Min( MRS ,FirstVNF_Mem_Server ) ) ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM + RMSe ) + ( MLU / MUR ) ) - MUC ) + ( MLU / MUR ) )", "obj1": 0.9552845528455285, "obj2": 0.021208218673737296}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * RRS ) - ( ( BR * RRS ) - Min( MRS ,MRS ) ) )", "choosing": "( MLU / ( DS * CS ) )", "obj1": 0.11788617886178862, "obj2": 0.6783150464609344}, {"determining": "( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU - PN ) ) / ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( MUR / CS ),( RMSe * RRSe ) ) + ( MUM / MUC ) )", "obj1": 0.4268292682926829, "obj2": 0.43325009859532865}, {"determining": "Max( ( Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + MRS ) ) * FirstVNF_CPU_Server ),( ( BR / RRS ) - Min( MRS ,Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS - Max( ( DS * CS ),( Max( MLU,MLU ) / ( DS - MUC ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.3048780487804878, "obj2": 0.5095444766558691}, {"determining": "( ( ( MDR - MDR ) * ACS ) - Min( ARS ,( ( MRS * RRS ) - Min( MRS ,MRS ) ) ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.4634146341463415, "obj2": 0.3641200325836689}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - ( MUC / MLU ) ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5471781264016383}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( RMSe / RMSe ) ) - ( Max( MLU,RCSe ) - ( CS - MUM ) ) ) ,( ( ( DS / DS ) + ( RCSe + MUM ) ) / ( Min( CS ,RMSe ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.01414478935473102}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( RRS * DDR ) ) / Max( Min( MDR ,Const ),( ( CRS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server * RRS ) ) ) )", "choosing": "( ( MUM + DS ) / MUM )", "obj1": 0.7520325203252033, "obj2": 0.19271660133824858}, {"determining": "Max( ( FirstVNF_CPU_Server * RRS ),( Min( ( MDR / FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUR + ( DS - Max( MUM,RRSe ) ) ) - ( DS * CS ) )", "obj1": 0.45934959349593496, "obj2": 0.375653445535118}, {"determining": "Min( Max( ( AMS - BR ),Max( FirstVNF_RAM,DDR ) ) ,( ( ( BR / RRS ) - ( MRS / MRS ) ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( RMSe,RRSe ) / DS )", "obj1": 0.4329268292682927, "obj2": 0.425453213653665}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - DDR )", "choosing": "( ( RRSe / ( ( RRSe / MUC ) + ( MUC / MUR ) ) ) + ( MUC / MUR ) )", "obj1": 0.6991869918699187, "obj2": 0.2563913410136995}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9065040650406504, "obj2": 0.0709629027420639}, {"determining": "( Max( ( AMS - BR ),Max( FirstVNF_RAM,DDR ) ) - ( MRS / MRS ) )", "choosing": "( RRSe / ( DS / MUC ) )", "obj1": 0.9004065040650406, "obj2": 0.08364022003588227}, {"determining": "( ( ( ( BR / DDR ) / Max( PN,CRS ) ) - ( ( AMS * FirstVNF_CPU ) / ( MRS + ARS ) ) ) - ( Max( ( ARS + AMS ),Max( Const,FirstVNF_Mem_Server ) ) + ( Max( DDR,ACS ) * Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Max( DS,MUM ) ) / Max( ( MUR + CS ),( MLU * RRSe ) ) ) * Min( Max( ( MUR - CS ),( RCSe - RCSe ) ) ,( Max( MUM,MUR ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.9898373983739838, "obj2": 0.004868402464346816}, {"determining": "Max( ( ARS + RRS ),( ( FirstVNF_Mem_Server + MRS ) + MRS ) )", "choosing": "Max( ( ( ( RCSe * DS ) - ( RRSe + MUC ) ) - ( ( RCSe / RMSe ) - Max( MUC,RMSe ) ) ),( ( ( MUR - MUM ) - ( CS * CS ) ) * ( ( MUR * DS ) + ( DS + MUR ) ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5490009642005547}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - MDR ),MRS ) )", "choosing": "( ( MUR + ( DS - RRSe ) ) - ( DS * CS ) )", "obj1": 0.9044715447154471, "obj2": 0.072748496530392}, {"determining": "( ( BR * FirstVNF_Mem_Server ) - ( FirstVNF_Mem - PN ) )", "choosing": "( ( Max( MLU,RCSe ) / ( DS - MUC ) ) + ( MUC / MUR ) )", "obj1": 0.9959349593495935, "obj2": 0.001494701285830921}]}