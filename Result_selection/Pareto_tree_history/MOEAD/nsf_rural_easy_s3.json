{"1": [{"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) )", "choosing": "( ( RCSe / RRSe ) - ( MUR / MUM ) )", "obj1": 0.1968503937007874, "obj2": 0.6933438100517509}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUR / MUC ) ,Max( ( CS / MLU ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS * BR ) ,RRS ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,RCSe ) / Max( ( ( RMSe + ( ( MLU / ( ( CS / CS ) / MUM ) ) - Min( ( DS * ( RCSe - DS ) ) ,MUC ) ) ) - ( CS / RRSe ) ),MUM ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( ( DDR - Const ) * ( MRS - ( MRS + ( BR + MRS ) ) ) )", "choosing": "Max( ( RRSe + RCSe ),Max( MLU,( DS - Min( ( ( RCSe / RRSe ) + Min( CS ,RCSe ) ) ,CS ) ) ) )", "obj1": 0.28937007874015747, "obj2": 0.6263834501492742}, {"determining": "Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Max( MUR,MLU ) ,( ( MUC - DS ) - ( ( MUR * MUR ) - CS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6674837071492834}, {"determining": "( Min( ARS ,FirstVNF_CPU_Server ) / ( CRS / ARS ) )", "choosing": "Min( ( RRSe + DS ) ,( RMSe - MLU ) )", "obj1": 0.2559055118110236, "obj2": 0.6600612809582986}, {"determining": "( ( Const - PN ) / ( MRS * MDR ) )", "choosing": "Max( ( DS * MLU ),( MUM * RCSe ) )", "obj1": 0.265748031496063, "obj2": 0.6508293449692824}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( RMSe * RCSe ) * ( RCSe - DS ) )", "obj1": 0.1968503937007874, "obj2": 0.7162993035553775}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( ARS - RRS ) )", "choosing": "( ( MLU * CS ) + ( MUR / MUC ) )", "obj1": 0.2106299212598425, "obj2": 0.7456253052985606}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( DDR * Max( Const,FirstVNF_Mem ) ) / DDR ) - Min( CRS ,MRS ) )", "choosing": "Min( ( CS * MUM ) ,Max( RRSe,( RCSe - Max( ( Max( ( RMSe / CS ),( ( MUM - MLU ) / Max( MUM,RCSe ) ) ) + Min( ( CS - MUR ) ,RCSe ) ),( MLU + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_Mem ) ) / AMS ) ,FirstVNF_CPU ) + MDR ) - FirstVNF_Mem_Server ) - ( AMS - RRS ) )", "choosing": "( Max( Max( RCSe,Min( RMSe ,MLU ) ),Min( MLU ,CS ) ) - Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( MRS * BR ) + BR ) )", "choosing": "Max( ( MUC * DS ),( RRSe - ( Max( RCSe,( Min( ( CS / CS ) ,( MUM - Min( RRSe ,RCSe ) ) ) - MUM ) ) + MUC ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6764243257071405}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( Min( AMS ,Const ),FirstVNF_RAM ) / ( FirstVNF_RAM_Server + MDR ) ) ) / ( ACS / ARS ) )", "choosing": "( ( ( RCSe * Max( DS,DS ) ) * CS ) / ( CS / CS ) )", "obj1": 0.18700787401574803, "obj2": 0.8132678495594553}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * FirstVNF_RAM_Server ),Max( ( FirstVNF_CPU - ( ( ( MRS + ( FirstVNF_CPU + MRS ) ) - Const ) / PN ) ),MRS ) ) - ( CRS * ARS ) )", "choosing": "Min( ( DS - RRSe ) ,( RRSe - Min( Min( RCSe ,( RCSe - Max( ( Min( MUR ,MUR ) - ( RRSe + CS ) ),( MUM + MLU ) ) ) ) ,( RRSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS * DDR ),( MDR * Max( Min( Min( FirstVNF_RAM_Server ,Min( Min( ARS ,DDR ) ,PN ) ) ,FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MLU + MUM ),( DS - RRSe ) )", "obj1": 0.22244094488188976, "obj2": 0.6878791617149403}, {"determining": "( ( ( DDR - FirstVNF_Mem ) / Min( Const ,MDR ) ) * ( ( DDR / ( PN - Max( MDR,( Min( ( MRS + FirstVNF_Mem ) ,ARS ) * FirstVNF_RAM ) ) ) ) * Min( FirstVNF_CPU ,ACS ) ) )", "choosing": "Min( ( ( MUC - ( RCSe / ( MUM * ( Max( ( MUC + MUM ),MUC ) + MUM ) ) ) ) * ( ( RMSe / ( ( RRSe * ( MUR / Min( CS ,RRSe ) ) ) - MUM ) ) + MUM ) ) ,Max( RCSe,( RRSe + ( ( RMSe - MUC ) / ( RRSe / ( ( RCSe - ( MUR + RRSe ) ) + ( MUC / MUC ) ) ) ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6794619178672231}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( CRS - MRS ) )", "choosing": "( ( DS * MUR ) + Min( CS ,MLU ) )", "obj1": 0.7480314960629921, "obj2": 0.244727741377841}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) )", "choosing": "( Min( MUC ,DS ) / ( DS + MUM ) )", "obj1": 0.3779527559055118, "obj2": 0.52421334169053}, {"determining": "( ( ACS + ACS ) * Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MUC ) - ( MUC / CS ) )", "obj1": 0.18503937007874016, "obj2": 0.8153768571982062}, {"determining": "( ( FirstVNF_Mem / RRS ) - ( CRS - MRS ) )", "choosing": "( ( MUC * RMSe ) * ( MLU / MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6591501979754117}, {"determining": "( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( CS + MLU ) * ( MLU + RRSe ) )", "obj1": 0.18503937007874016, "obj2": 0.7615572626918703}, {"determining": "( ( PN + ACS ) + ( AMS * ACS ) )", "choosing": "( ( RRSe - MLU ) / ( MLU + RCSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6920859230223064}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + Min( ( Max( CRS,AMS ) * ( ( ( BR / MDR ) + FirstVNF_CPU ) / AMS ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR / Max( ( MUC * DS ),( MUM / MUM ) ) ) - RCSe ) ,Max( Min( ( ( RCSe * CS ) / RCSe ) ,( DS * Min( ( RRSe / Min( DS ,CS ) ) ,( RCSe / MUC ) ) ) ),( ( DS * DS ) + ( ( ( MLU / RMSe ) - Min( DS ,( RCSe + ( MUM * RRSe ) ) ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS - MRS ) ,Max( Min( FirstVNF_Mem_Server ,Min( CRS ,ARS ) ),MRS ) )", "choosing": "( ( DS - RCSe ) + ( ( Min( ( RRSe + ( MUR * MLU ) ) ,( MUM + RRSe ) ) - MUR ) / RMSe ) )", "obj1": 0.28346456692913385, "obj2": 0.6213396519527913}, {"determining": "( ( RRS + PN ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,CS ) )", "obj1": 0.19488188976377951, "obj2": 0.7221659051700452}, {"determining": "( Max( ACS,Const ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + CS ) ,Max( CS,RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.8272841946908313}, {"determining": "( ( MRS / RRS ) / ( ARS / FirstVNF_RAM_Server ) )", "choosing": "Min( Max( CS,MUR ) ,( CS - RCSe ) )", "obj1": 0.1673228346456693, "obj2": 0.8604131945299877}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / ( CRS / ARS ) )", "choosing": "( Max( MUR,MLU ) - ( MUM + MUC ) )", "obj1": 0.1377952755905512, "obj2": 0.8192225190803114}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) * Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( MLU / RRSe ) )", "obj1": 0.2736220472440945, "obj2": 0.6551043482057571}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * MUM ) * Max( RMSe,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.6280561668176575}, {"determining": "( Max( Max( ( Const * DDR ),FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( ( FirstVNF_RAM_Server / ( PN / FirstVNF_RAM ) ) ,( CRS + ( ( Const + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / MRS ) ) ) ) )", "choosing": "Max( Max( ( MLU / RRSe ),( MUC / ( MUC - RRSe ) ) ),( ( ( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) - DS ) - Max( DS,Max( MUC,DS ) ) ) * MUM ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / RCSe ) + ( RCSe / MLU ) )", "obj1": 0.23031496062992127, "obj2": 0.7021451515985064}, {"determining": "( ( FirstVNF_RAM + DDR ) - Min( FirstVNF_CPU ,PN ) )", "choosing": "Min( ( RRSe - MUR ) ,Max( CS,MUC ) )", "obj1": 0.2263779527559055, "obj2": 0.6689452729458081}, {"determining": "Min( ( ( BR + ARS ) * Min( MDR ,FirstVNF_CPU ) ) ,( ( AMS * FirstVNF_RAM ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) )", "obj1": 0.33267716535433073, "obj2": 0.6130020624517427}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Max( MDR,FirstVNF_CPU_Server ) ) / ( Min( RRS ,FirstVNF_CPU ) * Max( PN,ACS ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6445007626198205}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( ( MRS / MRS ) - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( MUM,MLU ) )", "obj1": 0.2933070866141732, "obj2": 0.6050373523654551}, {"determining": "Min( ( MRS + DDR ) ,( ( FirstVNF_Mem_Server + ARS ) / ( DDR + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) / ( Max( ( MUC * ( ( ( MUM * ( RMSe - MUM ) ) + RCSe ) - ( Max( ( RCSe * MUR ),RRSe ) / ( MUM / RRSe ) ) ) ),( MLU / RMSe ) ) / MUR ) )", "obj1": 0.281496062992126, "obj2": 0.6022137387311355}, {"determining": "( Max( ( CRS / RRS ),( AMS * CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ),( MRS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( DS / DS ) ,( MUC / MUR ) ) * Min( ( MUC - RRSe ) ,Max( RCSe,MUC ) ) )", "obj1": 0.2559055118110236, "obj2": 0.684717226371199}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,FirstVNF_RAM ) * ( FirstVNF_CPU + ( Const + MDR ) ) )", "choosing": "Min( ( ( ( ( MLU + Min( MUM ,( MUC + MUR ) ) ) - MUR ) - RMSe ) + ( MLU + MLU ) ) ,( MUM + CS ) )", "obj1": 0.28346456692913385, "obj2": 0.6621752250818843}, {"determining": "( ( FirstVNF_Mem + Min( CRS ,ARS ) ) / Min( AMS ,MRS ) )", "choosing": "Max( Min( ( MUR + RCSe ) ,( MUR / DS ) ),Max( ( MUR - DS ),( RRSe / MUR ) ) )", "obj1": 0.2755905511811024, "obj2": 0.6502581077797273}, {"determining": "Max( ( Max( FirstVNF_RAM,AMS ) - ( DDR * PN ) ),( ( CRS * PN ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - ( MUR - RCSe ) ) + CS ) - Max( Min( RRSe ,RCSe ),DS ) )", "obj1": 0.20275590551181102, "obj2": 0.6829483799465793}, {"determining": "( ( AMS + Min( AMS ,BR ) ) - ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( MUM * MUM ) / Min( RCSe ,DS ) ) )", "obj1": 0.3169291338582677, "obj2": 0.599588539720452}, {"determining": "Max( ( ( PN - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ),( Max( FirstVNF_RAM,PN ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( MUC ,MLU ) ),( Max( RCSe,DS ) * Max( DS,MLU ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5745217039934857}, {"determining": "Min( ( RRS * Const ) ,Max( CRS,DDR ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,( ( RMSe - MUM ) / RCSe ) )", "obj1": 0.23031496062992127, "obj2": 0.6927164647586254}, {"determining": "Min( ( Max( CRS,FirstVNF_RAM ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ,( ( AMS / RRS ) + ( BR + ARS ) ) )", "choosing": "( Min( MUR ,MLU ) / ( MLU / MUR ) )", "obj1": 0.25, "obj2": 0.6646173982638671}, {"determining": "Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / DDR ) ,( DDR / RRS ) )", "choosing": "( ( MUC * Min( MUM ,MLU ) ) + ( MUR + Min( MUC ,MUC ) ) )", "obj1": 0.2755905511811024, "obj2": 0.6428560957701623}, {"determining": "Max( ( FirstVNF_CPU - FirstVNF_CPU ),( RRS + MDR ) )", "choosing": "( ( ( RMSe * MUC ) * Max( MLU,RCSe ) ) / Min( Max( MUC,DS ) ,( MUR * MUM ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6947107291103173}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( Const + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) + ( MLU + Max( MLU,RCSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ARS ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( ( CRS / ( ARS / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + MRS ) ) ) ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( Min( MUC ,MLU ) - ( RRSe * Min( MUC ,RCSe ) ) ) * ( ( MUR - MUM ) - Min( DS ,CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6342104502683534}, {"determining": "Max( ( DDR * FirstVNF_CPU ),( CRS * ACS ) )", "choosing": "( ( ( RCSe * DS ) / ( RCSe / RRSe ) ) + Max( ( MLU * MUC ),Max( RRSe,RCSe ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5726387435800265}, {"determining": "( ( ( DDR * MDR ) * ( MDR / PN ) ) + Max( ( AMS - FirstVNF_RAM ),( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( CS ,MUR ) - ( RMSe / RCSe ) ) ,( Min( MUR ,RMSe ) + ( MUM - MUR ) ) )", "obj1": 0.2047244094488189, "obj2": 0.8105774889762132}, {"determining": "Min( ( ( RRS + MRS ) + Min( FirstVNF_CPU ,ACS ) ) ,Min( ( Const / DDR ) ,Max( PN,BR ) ) )", "choosing": "Min( Max( ( MUR * MUM ),( RRSe / MUC ) ) ,( Min( RRSe ,RMSe ) * Min( RRSe ,CS ) ) )", "obj1": 0.2795275590551181, "obj2": 0.6476920289916697}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.6496062992125984, "obj2": 0.33505616590752535}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Min( MDR ,( BR - Const ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( MUR,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( Max( MUC,RRSe ) - ( ( Max( ( ( CS * MUC ) + Min( MLU ,DS ) ),CS ) * MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Min( PN ,( RRS / ( ( Const * Min( ( ACS + MRS ) ,MDR ) ) - PN ) ) ) ) / ( FirstVNF_RAM / BR ) )", "choosing": "( Min( ( MUM - ( RMSe - MUR ) ) ,RRSe ) + ( Min( MLU ,MUC ) * MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.6216875597580162}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( Min( DDR ,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( DS ,MUM ) * ( MUM * MUM ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) )", "obj1": 0.39173228346456695, "obj2": 0.5165517039634596}, {"determining": "Max( Max( ( FirstVNF_Mem + RRS ),Min( FirstVNF_RAM ,RRS ) ),( ( DDR * DDR ) + ( DDR - MRS ) ) )", "choosing": "( ( Min( RCSe ,RRSe ) * ( MLU / RMSe ) ) / ( ( RMSe + MUC ) - ( DS / DS ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7716733103969013}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "Max( Max( DS,( DS - MUC ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) )", "obj1": 0.421259842519685, "obj2": 0.47584024587368295}, {"determining": "( ( MDR / BR ) - ( CRS * MDR ) )", "choosing": "Min( ( Min( MUR ,MUM ) - ( CS / MUR ) ) ,( Max( MUR,CS ) - RRSe ) )", "obj1": 0.2736220472440945, "obj2": 0.6241954872754046}, {"determining": "Min( ( BR / AMS ) ,( ( FirstVNF_RAM_Server + MDR ) - Const ) )", "choosing": "( ( ( RCSe * MUC ) - RMSe ) + Min( MUM ,( RCSe * RMSe ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6783906885890418}, {"determining": "( ( ( FirstVNF_Mem + RRS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Min( Max( Min( CS ,MUC ),Min( CS ,MUM ) ) ,( ( CS + MUM ) / ( MUC * MUR ) ) )", "obj1": 0.3051181102362205, "obj2": 0.6497920979527252}, {"determining": "( ( ( FirstVNF_RAM_Server * AMS ) + ( MDR / AMS ) ) / Max( Min( MDR ,MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * CS ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "Max( ( Max( Max( AMS,FirstVNF_CPU ),Max( MRS,ACS ) ) - ( Min( DDR ,DDR ) * ( ACS * FirstVNF_CPU ) ) ),( ( ( FirstVNF_Mem_Server + CRS ) + ( DDR * CRS ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) * ( MDR / AMS ) ) ) )", "choosing": "( ( ( MUM * CS ) / MUC ) * ( DS * ( CS / RRSe ) ) )", "obj1": 0.3169291338582677, "obj2": 0.6167706989931645}, {"determining": "( Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU / MRS ) ,( MRS + AMS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + ( ACS + ACS ) ) ) )", "choosing": "Max( ( ( MUC - MUR ) + ( RRSe - ( MUM * DS ) ) ),( CS / RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8785158489088654}, {"determining": "Max( ( Min( ( BR - FirstVNF_Mem ) ,MDR ) / RRS ),Min( DDR ,MDR ) )", "choosing": "( Min( ( Min( RRSe ,RCSe ) * Min( MLU ,RMSe ) ) ,Max( Min( RMSe ,MUC ),( MUC - MUC ) ) ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6959735437353424}, {"determining": "( ( PN * Const ) - ( ( Min( FirstVNF_CPU_Server ,AMS ) / BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "( ( MUM + RMSe ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * RRS ) / ( FirstVNF_CPU_Server + Const ) )", "choosing": "( Max( ( ( CS + CS ) * ( DS - RMSe ) ),Min( ( MUR / MLU ) ,( MLU + CS ) ) ) + Min( Max( ( RCSe - MUM ),( MUM + MUR ) ) ,( ( RRSe + CS ) / ( MUR * MUC ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6769886549796029}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7617465095440685}, {"determining": "Min( ( ( ( MDR / Const ) - FirstVNF_CPU_Server ) * Max( ( CRS * CRS ),MRS ) ) ,Min( ( FirstVNF_Mem / ARS ) ,MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( MLU - Max( ( Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) - ( RCSe - RMSe ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "Max( ( FirstVNF_RAM / DDR ),( FirstVNF_CPU / MDR ) )", "choosing": "( ( MUR / ( MUC / CS ) ) * ( RMSe * RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.6812524222476661}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) / ( Min( ( MRS / DDR ) ,( FirstVNF_Mem_Server / BR ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( DDR,MRS ) ) ) )", "choosing": "Min( ( CS - ( DS / MUR ) ) ,Min( MUC ,( ( DS / MUC ) * CS ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5436927504336001}, {"determining": "( ( ( ( Const / FirstVNF_RAM_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server + CRS ) * ( ( FirstVNF_RAM_Server * DDR ) * FirstVNF_CPU_Server ) ) ) * ( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ) / ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,RRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( RCSe / ( RMSe - ( ( Max( CS,RCSe ) - Max( Min( ( MUM + RRSe ) ,MUC ),MUM ) ) + RRSe ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6989237396408006}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( ACS / FirstVNF_RAM ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM * MUR ) * ( CS / ( RCSe + MUR ) ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.6341300324116035}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) - Max( MRS,RRS ) ) / Min( Max( Const,ACS ) ,( BR / FirstVNF_CPU_Server ) ) ) + ( ( ( BR + FirstVNF_CPU_Server ) - ( Min( Max( ( MRS + ( DDR + DDR ) ),FirstVNF_RAM ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / ( ( MDR / FirstVNF_CPU ) + ( ACS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUM,RCSe ) - Max( RMSe,( Max( RRSe,CS ) + MUM ) ) )", "obj1": 0.1968503937007874, "obj2": 0.7348457083321026}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "( ( Const + ARS ) * Max( ARS,ACS ) )", "choosing": "Min( Min( Max( ( RMSe - MUC ),Max( RRSe,MUC ) ) ,( Max( MLU,MUM ) + ( MUR - RRSe ) ) ) ,Min( ( ( MUM / RRSe ) * ( RCSe / RCSe ) ) ,Max( ( RMSe - CS ),( MUM / MUM ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.6419060422646441}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( ( ( Max( ACS,PN ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * DDR ) ) / Max( FirstVNF_Mem,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( DS / ( MUM * DS ) ) ) / ( MUM / ( Max( MUR,DS ) + RCSe ) ) )", "obj1": 0.16535433070866143, "obj2": 0.8430918778483558}, {"determining": "( ( PN * FirstVNF_RAM_Server ) + ( ( DDR - FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6938112182849201}, {"determining": "( ( Min( ( PN * CRS ) ,( Const * Const ) ) * ( ( BR / Max( MDR,FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe - Max( RCSe,CS ) ) ) / ( MUR - Max( Min( MUM ,MUC ),( MUM * ( Max( RCSe,MLU ) + MUM ) ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( ( ( ( PN / Const ) + ACS ) - ( ARS / Min( FirstVNF_Mem ,CRS ) ) ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( MUR * DS ) ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "Max( ( ( Min( MRS ,FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,MDR ) ) / Max( ( MRS * Const ),( DDR / Const ) ) ),Max( Max( ( MDR + FirstVNF_Mem_Server ),( FirstVNF_RAM / BR ) ),( Min( ACS ,FirstVNF_Mem ) - ( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( Min( Min( MLU ,( DS + MLU ) ) ,MUR ) * Min( ( MUR * RMSe ) ,RMSe ) )", "obj1": 0.2952755905511811, "obj2": 0.6223557707853999}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.14960629921259844, "obj2": 0.8422387260959131}, {"determining": "Min( ( Min( ( CRS + BR ) ,( ARS - FirstVNF_CPU ) ) + ( Min( BR ,ARS ) - ( MRS + RRS ) ) ) ,( ( ( DDR / MRS ) - ( MDR * MRS ) ) - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Max( ( ( ( RMSe / RCSe ) * Min( MUC ,MUR ) ) / Max( ( RRSe / RCSe ),( MUM + DS ) ) ),Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.5923801849523864}, {"determining": "Min( Min( ( ( MDR * PN ) / ( FirstVNF_CPU_Server / CRS ) ) ,Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( ACS * ARS ) ) ) ,Max( ( ( AMS - FirstVNF_RAM_Server ) / Min( FirstVNF_Mem ,MRS ) ),Min( ( FirstVNF_RAM_Server / ARS ) ,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * DS ),( DS * RCSe ) ) * ( ( CS * MUM ) * ( RRSe / DS ) ) ) * ( ( ( MLU * RRSe ) + ( DS + CS ) ) * Min( ( MUC - MLU ) ,( MUC * CS ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.7262647789587703}, {"determining": "( Min( ACS ,MDR ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) )", "choosing": "Min( ( DS + DS ) ,( RRSe - ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.5984251968503937, "obj2": 0.4484432319469959}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ACS / RRS ),Max( ARS,ACS ) )", "choosing": "( ( Min( DS ,MUR ) - RMSe ) + Max( CS,( ( RRSe * MUC ) / RMSe ) ) )", "obj1": 0.1968503937007874, "obj2": 0.792493349385243}, {"determining": "Max( ( ( MDR / ( CRS - MRS ) ) + ( ACS * ( ( FirstVNF_Mem_Server - ACS ) / ARS ) ) ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) - ( MUM * MUR ) ) - ( RCSe - Max( RRSe,( Min( DS ,DS ) + Min( RRSe ,( ( MUM - RMSe ) - DS ) ) ) ) ) ) - ( ( Min( MUM ,CS ) / ( RCSe / DS ) ) + Max( Max( MUC,MLU ),( MUC - RMSe ) ) ) )", "obj1": 0.1377952755905512, "obj2": 0.8323290843547989}, {"determining": "Max( Max( Max( ( MRS * FirstVNF_RAM ),( PN - BR ) ),( ( RRS / FirstVNF_CPU_Server ) + ( MRS / CRS ) ) ),( Max( ( ARS + CRS ),( FirstVNF_RAM_Server - ACS ) ) + Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,MRS ) ) ) )", "choosing": "Min( Min( ( ( RMSe - MUM ) * MUR ) ,MUC ) ,( CS + RMSe ) )", "obj1": 0.21456692913385828, "obj2": 0.7201165762316188}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.6019376074856335}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,ACS ) + FirstVNF_Mem ) * ( FirstVNF_Mem - ( FirstVNF_RAM_Server + ( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) * Min( Min( CS ,MUR ) ,Min( ( MUR - MLU ) ,( DS - MUM ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}], "2": [{"determining": "Min( ( ( ( MDR / Const ) - FirstVNF_CPU_Server ) * Max( ( CRS * CRS ),MRS ) ) ,Min( ( FirstVNF_Mem / ARS ) ,MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( MLU - Max( ( Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) - ( RCSe - RMSe ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUR / MUC ) ,Max( ( CS / MLU ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( RCSe * DS ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ARS ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) )", "obj1": 0.5196850393700787, "obj2": 0.39356258229296526}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Min( ( ACS + ( PN / Const ) ) ,PN ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( CS - CS ) )", "obj1": 0.7362204724409449, "obj2": 0.21550922754825788}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Max( MDR,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( Min( Max( ( CS / RRSe ),( CS - DS ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.6141732283464567, "obj2": 0.33603143668319685}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.9153543307086615, "obj2": 0.09879421359217935}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( CRS - MRS ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( MUR + RRSe ) )", "obj1": 0.6614173228346457, "obj2": 0.3048491029466914}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.7007874015748031, "obj2": 0.23522966795442482}, {"determining": "Min( Min( ( ( MDR * PN ) / ( FirstVNF_CPU_Server / CRS ) ) ,Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( ACS * ARS ) ) ) ,Max( ( ( AMS - FirstVNF_RAM_Server ) / Min( FirstVNF_Mem ,MRS ) ),Min( ( FirstVNF_RAM_Server / Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) ) ) ,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * DS ),( DS * RCSe ) ) * ( ( CS * MUM ) * ( RRSe / DS ) ) ) * ( RCSe * Min( ( MUC - MLU ) ,( MUC * CS ) ) ) )", "obj1": 0.5098425196850394, "obj2": 0.44200248117253627}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( PN - DDR ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) ) )", "obj1": 0.11220472440944881, "obj2": 0.8491421516751189}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / MDR )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.15748031496062992, "obj2": 0.7452741998103787}, {"determining": "( ( ( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) / ( Min( ( MRS / DDR ) ,( FirstVNF_Mem_Server / BR ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( DDR,MRS ) ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( ( DS / MUR ) + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5328948775111575}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Max( AMS,( Max( FirstVNF_RAM,PN ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( MUC ,MLU ) ),( Max( RCSe,DS ) * Max( ( ( MUC - DS ) + ( MLU * CS ) ),MLU ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5797204072949681}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( MLU / RCSe ) + ( Max( ( DS / DS ),( DS / RCSe ) ) / MLU ) )", "obj1": 0.2204724409448819, "obj2": 0.6361291200915411}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ACS - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( ( DS - RCSe ) ,Min( MUR ,MUC ) ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.579965887889439}, {"determining": "( ( ( Max( ACS,PN ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * DDR ) ) / Max( FirstVNF_Mem,FirstVNF_Mem ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.43700787401574803, "obj2": 0.4615227601495371}, {"determining": "Max( ( ( Min( MRS ,FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,MDR ) ) / Max( ( MRS * Const ),( DDR / Const ) ) ),Max( Max( ( MDR + FirstVNF_Mem_Server ),( ARS / Min( FirstVNF_Mem ,CRS ) ) ),( Min( ACS ,FirstVNF_Mem ) - ( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( Min( Min( ( CS - CS ) ,( DS + MLU ) ) ,MUR ) * Min( ( MUR * RMSe ) ,RMSe ) )", "obj1": 0.21456692913385828, "obj2": 0.6665493306368274}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06784808502883448}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) + ( MLU + Max( MLU,RCSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + MDR )", "choosing": "Max( ( ( MUM - MUR ) + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) )", "obj1": 0.9409448818897638, "obj2": 0.05860025200978147}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ARS ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.6496062992125984, "obj2": 0.33505616590752535}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( Min( RMSe ,RRSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.9822834645669292, "obj2": 0.020974755598799775}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ARS ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * MUM )", "obj1": 0.6535433070866141, "obj2": 0.32746339364696103}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Min( ( Min( CRS ,DDR ) + Max( Const,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server + ARS ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / ( Min( RRS ,FirstVNF_CPU ) * Max( PN,ACS ) ) )", "choosing": "Max( Min( ( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) ) ,RMSe ),( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.2854330708661417, "obj2": 0.6003632951386998}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "Max( Max( ( FirstVNF_Mem + RRS ),Min( ( Min( DDR ,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem ) ) ,RRS ) ),( ( DDR * DDR ) + ( DDR - MRS ) ) )", "choosing": "( Min( ( Min( DS ,MUM ) * ( MUM * MUM ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) ) / ( ( RMSe + MUC ) - ( DS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49994796947808784}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,ACS ) + FirstVNF_Mem ) * ( FirstVNF_Mem - ( FirstVNF_RAM_Server + ( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) * Min( Min( CS ,MUR ) ,Min( ( MUR - MLU ) ,( DS - MUM ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( ( FirstVNF_Mem_Server / MRS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "Max( ( DS / DS ),( DS / MLU ) )", "obj1": 0.17716535433070865, "obj2": 0.7004067105104799}, {"determining": "( ( FirstVNF_CPU + MDR ) + Const )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / MUC ) )", "obj1": 0.2637795275590551, "obj2": 0.6197435315315948}, {"determining": "( ( CRS / ( ARS / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + MRS ) ) ) ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( Min( MUC ,MLU ) - ( RRSe * Min( MUC ,RCSe ) ) ) * ( ( MUR - MUM ) - Min( DS ,CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6342104502683534}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + DDR )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( ( MUR / ( MUC / CS ) ) * ( RMSe * RCSe ) ) ) * Max( ( Max( DS,DS ) / Max( RRSe,RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.778470495241659}, {"determining": "( ( RRS + ( Max( ACS,Const ) - ( DDR / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,Min( ( DS + CS ) ,Max( CS,RRSe ) ) ) - Max( RRSe,CS ) )", "obj1": 0.18110236220472442, "obj2": 0.6983842170839634}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) + ( MLU + Max( MLU,RCSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "( ( Const + ARS ) * Max( ARS,( ( FirstVNF_Mem_Server / MRS ) + Max( ACS,ARS ) ) ) )", "choosing": "Min( Min( Max( ( RMSe - MUC ),Max( RRSe,MUC ) ) ,( Max( MLU,MUM ) + ( MUR - RRSe ) ) ) ,( MUR * DS ) )", "obj1": 0.38188976377952755, "obj2": 0.5200768283314653}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.622647359971252}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( Min( DDR ,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( DS ,MUM ) * ( MUM * MUM ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5302922332683729}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "Max( Max( DS,( DS - MUC ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) )", "obj1": 0.421259842519685, "obj2": 0.47584024587368295}, {"determining": "( Max( ( FirstVNF_Mem + RRS ),Min( FirstVNF_RAM ,RRS ) ) - ( Min( DDR ,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( DS ,MUM ) * ( ( Min( RCSe ,RRSe ) * ( MLU / RMSe ) ) / ( ( RMSe + MUC ) - ( DS / DS ) ) ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5227197536789308}, {"determining": "( ( FirstVNF_CPU / RRS ) / ( ( MRS * BR ) + BR ) )", "choosing": "Max( ( MUC * DS ),( RRSe - ( Max( RCSe,( Min( ( CS / CS ) ,( MUM - Min( RRSe ,RCSe ) ) ) - MUM ) ) + MUC ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6764243257071405}, {"determining": "( ( ( Max( FirstVNF_RAM,AMS ) - ( DDR * PN ) ) + Min( AMS ,BR ) ) - ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( ( MUC - ( MUR - RCSe ) ) + CS ) / Min( RCSe ,DS ) ) )", "obj1": 0.41338582677165353, "obj2": 0.48209085503207916}, {"determining": "( ( Min( ( PN * CRS ) ,( Const * Const ) ) * ( ( BR / Max( MDR,FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe - Max( RCSe,CS ) ) ) / ( MUR - Max( Min( MUM ,MUC ),( MUM * ( Max( RCSe,MLU ) + MUM ) ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "( ( ( FirstVNF_RAM_Server * AMS ) + ( MDR / AMS ) ) / ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( ( RRSe * DS ) + ( MUR * DS ) ) )", "obj1": 0.38976377952755903, "obj2": 0.5100666777861086}, {"determining": "Max( Max( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),( PN - BR ) ),( ( RRS / FirstVNF_CPU_Server ) + ( MRS / CRS ) ) ),( Max( ( ARS + CRS ),( FirstVNF_RAM_Server - ACS ) ) + Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,MRS ) ) ) )", "choosing": "Min( Min( ( ( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) ) * MUR ) ,MUC ) ,( CS + RMSe ) )", "obj1": 0.25393700787401574, "obj2": 0.6204167800411464}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "( Min( MLU ,RCSe ) / Max( MUC,RCSe ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "( Min( ( MRS * BR ) ,RRS ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,RCSe ) / Max( ( ( RMSe + ( ( MLU / ( ( CS / CS ) / MUM ) ) - Min( ( DS * ( RCSe - DS ) ) ,MUC ) ) ) - ( CS / RRSe ) ),MUM ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6804479004122619}, {"determining": "( Min( ( ACS + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUC ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "( ( ( ( PN / Const ) + ACS ) - ( ARS / Min( FirstVNF_Mem ,CRS ) ) ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( MUR * DS ) ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "( ( ( FirstVNF_RAM_Server * AMS ) + ( MDR / AMS ) ) / Max( Min( MDR ,MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * CS ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "Max( Max( Max( ( MRS * FirstVNF_RAM ),( PN - BR ) ),AMS ),( Max( ( ARS + CRS ),( FirstVNF_RAM_Server - ACS ) ) + Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,MRS ) ) ) )", "choosing": "Min( Min( ( ( RMSe - MUM ) * MUR ) ,MUC ) ,( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) + RMSe ) )", "obj1": 0.19488188976377951, "obj2": 0.686937271308192}, {"determining": "( ( Const * BR ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUC ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.20275590551181102, "obj2": 0.6794722795435857}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) )", "obj1": 0.9330708661417323, "obj2": 0.06526994236978191}, {"determining": "( ( ( DDR * MDR ) * ( MDR / PN ) ) + Max( ( AMS - FirstVNF_RAM ),( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6342104502683534}, {"determining": "( ( FirstVNF_RAM_Server * DDR ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( Min( CS ,MUR ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6792268133248812}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( Const + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( ( FirstVNF_RAM_Server * AMS ) + ( MDR / AMS ) ) / Max( Min( MDR ,MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * CS ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( Const + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "( ( ( DDR * Max( Const,FirstVNF_Mem ) ) / DDR ) - Min( CRS ,MRS ) )", "choosing": "Min( ( CS * MUM ) ,Max( RRSe,( RCSe - Max( ( Max( ( RMSe / CS ),( ( MUM - MLU ) / Max( MUM,RCSe ) ) ) + Min( ( CS - MUR ) ,RCSe ) ),( MLU + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_Mem ) ) / AMS ) ,FirstVNF_CPU ) + MDR ) - FirstVNF_Mem_Server ) - ( AMS - RRS ) )", "choosing": "( Max( Max( RCSe,Min( RMSe ,MLU ) ),Min( MLU ,CS ) ) - Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * FirstVNF_RAM_Server ),Max( ( FirstVNF_CPU - ( ( ( MRS + ( FirstVNF_CPU + MRS ) ) - Const ) / PN ) ),MRS ) ) - ( CRS * ARS ) )", "choosing": "Min( ( DS - RRSe ) ,( RRSe - Min( Min( RCSe ,( RCSe - Max( ( Min( MUR ,MUR ) - ( RRSe + CS ) ),( MUM + MLU ) ) ) ) ,( RRSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + Min( ( Max( CRS,AMS ) * ( ( ( BR / MDR ) + FirstVNF_CPU ) / AMS ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR / Max( ( MUC * DS ),( MUM / MUM ) ) ) - RCSe ) ,Max( Min( ( ( RCSe * CS ) / RCSe ) ,( DS * Min( ( RRSe / Min( DS ,CS ) ) ,( RCSe / MUC ) ) ) ),( ( DS * DS ) + ( ( ( MLU / RMSe ) - Min( DS ,( RCSe + ( MUM * RRSe ) ) ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( Const * DDR ),FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( ( FirstVNF_RAM_Server / ( PN / FirstVNF_RAM ) ) ,( CRS + ( ( Const + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / MRS ) ) ) ) )", "choosing": "Max( Max( ( MLU / RRSe ),( MUC / ( MUC - RRSe ) ) ),( ( ( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) - DS ) - Max( DS,Max( MUC,DS ) ) ) * MUM ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Min( MDR ,( BR - Const ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( MUR,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( Max( MUC,RRSe ) - ( ( Max( ( ( CS * MUC ) + Min( MLU ,DS ) ),CS ) * MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( ( Min( FirstVNF_CPU_Server ,AMS ) / BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "( ( MUM + RMSe ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) + ( ( DDR - FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Max( ( MRS + ( Max( PN,FirstVNF_RAM ) * ( PN + FirstVNF_CPU_Server ) ) ),Min( FirstVNF_RAM_Server ,( MDR / ( AMS / ARS ) ) ) ) - FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( ( Max( RCSe,( RRSe * DS ) ) + Max( Min( RMSe ,( MUR * ( ( DS + MLU ) - Min( RCSe ,MLU ) ) ) ),( Max( ( RMSe + Max( CS,RCSe ) ),Max( Max( MLU,CS ),MUM ) ) - ( MUR + RRSe ) ) ) ) / ( Max( Max( Max( MUM,MUM ),( ( MUM - MLU ) / DS ) ),Max( ( RRSe * MUC ),MLU ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( RCSe / MUR ) - ( DS * RCSe ) ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( CS * CS ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - ( ( FirstVNF_CPU / Const ) / ( FirstVNF_CPU + BR ) ) )", "choosing": "Min( ( CS * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Max( ( DS * MUC ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "Max( ( DS * MUC ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( RCSe ,( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MDR ) - AMS )", "choosing": "Min( ( RRSe - MLU ) ,( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MDR ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( ( MUR * MLU ) ,( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( Max( CS,MUR ) ,( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MDR ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( ( MUR * MLU ) ,( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( ( ( MDR / Const ) - FirstVNF_CPU_Server ) * Max( ( CRS * CRS ),MRS ) ) ,Min( ( FirstVNF_Mem / ARS ) ,MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( MLU - Max( ( Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) - ( RCSe - RMSe ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( ( ( ( ( CRS * MRS ) - Const ) + AMS ) + FirstVNF_Mem ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( DS - ( Min( CS ,CS ) / RMSe ) ) ,RCSe ) ,( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( RCSe * DS ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( Max( ARS,FirstVNF_Mem ) - ( AMS + RRS ) )", "choosing": "Min( ( MUM + RMSe ) ,( RMSe - RRSe ) )", "obj1": 0.4940944881889764, "obj2": 0.37260476142742077}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Max( MDR,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( Min( Max( ( CS / RRSe ),( CS - DS ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.6141732283464567, "obj2": 0.33603143668319685}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.9153543307086615, "obj2": 0.09879421359217935}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( CRS - MRS ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( MUR + RRSe ) )", "obj1": 0.6614173228346457, "obj2": 0.3048491029466914}, {"determining": "( ( ( Min( BR ,DDR ) / ACS ) / ( FirstVNF_RAM / BR ) ) - ( Const - AMS ) )", "choosing": "( ( Min( ( MUM - MLU ) ,RRSe ) + Min( Min( MLU ,MUC ) ,MUM ) ) - Max( RRSe,MUR ) )", "obj1": 0.4862204724409449, "obj2": 0.45168754464694943}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( MLU / RCSe ) + ( Max( ( DS / DS ),( DS / RCSe ) ) / MLU ) )", "obj1": 0.2204724409448819, "obj2": 0.6361291200915411}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( RCSe / MUR ) - MUC )", "obj1": 0.19094488188976377, "obj2": 0.6922044347221213}, {"determining": "( ( ACS + ( AMS / FirstVNF_Mem ) ) * Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MUC ) - ( Max( ( ( CS / RMSe ) - ( DS - MUR ) ),( ( RRSe - RMSe ) - ( MUC + RRSe ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5500224104196128}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / MDR )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.15748031496062992, "obj2": 0.7452741998103787}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06784808502883448}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) + ( MLU + Max( MLU,RCSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + MDR )", "choosing": "Max( ( ( MUM - MUR ) + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) )", "obj1": 0.9409448818897638, "obj2": 0.05860025200978147}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.6496062992125984, "obj2": 0.33505616590752535}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,DS ) / MLU )", "obj1": 0.38188976377952755, "obj2": 0.5057856718695439}, {"determining": "( Min( RRS ,BR ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( ( MUR - MUM ) - ( ( RCSe / MUR ) - ( DS * RCSe ) ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6311405821196236}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( Min( RMSe ,RRSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.9822834645669292, "obj2": 0.020974755598799775}, {"determining": "( Max( ( FirstVNF_Mem + RRS ),Min( FirstVNF_RAM ,RRS ) ) - ( Min( DDR ,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( DS ,MUM ) * ( ( Min( RCSe ,RRSe ) * ( MLU / RMSe ) ) / ( ( RMSe + MUC ) - ( DS / DS ) ) ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5227197536789308}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( PN - DDR ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) ) )", "obj1": 0.11220472440944881, "obj2": 0.8491421516751189}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * MUM )", "obj1": 0.6535433070866141, "obj2": 0.32746339364696103}, {"determining": "( Min( RRS ,BR ) * ( ARS - RRS ) )", "choosing": "( ( RCSe / ( ( RCSe / MUR ) - ( DS * RCSe ) ) ) - ( ( MLU * CS ) + ( MUR / MUC ) ) )", "obj1": 0.281496062992126, "obj2": 0.5998304691370588}, {"determining": "( ( ( Max( ACS,PN ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * DDR ) ) / Max( FirstVNF_Mem,FirstVNF_Mem ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.43700787401574803, "obj2": 0.4615227601495371}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( CRS / ARS ) ) )", "choosing": "Min( ( ( MUC - DS ) + DS ) ,DS )", "obj1": 0.4566929133858268, "obj2": 0.45556948661247176}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ACS - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( ( DS - RCSe ) ,Min( MUR ,MUC ) ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.579965887889439}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( Min( RRS ,BR ) * ( ARS * Min( RRS ,BR ) ) )", "choosing": "( RCSe - ( DS * RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7751927871198783}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) + ( MLU + Max( MLU,RCSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "Max( Max( ( FirstVNF_Mem + RRS ),Min( ( Min( DDR ,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem ) ) ,RRS ) ),( ( DDR * DDR ) + ( DDR - MRS ) ) )", "choosing": "( Min( ( Min( DS ,MUM ) * ( MUM * MUM ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) ) / ( ( RMSe + MUC ) - ( DS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49994796947808784}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server * ARS ) )", "choosing": "Min( ( RCSe - ( Min( ( ( ( MUM + MUR ) / ( MLU - RRSe ) ) * ( RCSe + MUM ) ) ,RRSe ) * RCSe ) ) ,( ( Max( RMSe,MUR ) / MLU ) * MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "Min( Min( AMS ,Const ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU + MUM ) + RRSe ) / ( RCSe * DS ) )", "obj1": 0.1062992125984252, "obj2": 0.854762030302807}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "Max( Max( DS,( DS - MUC ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) )", "obj1": 0.421259842519685, "obj2": 0.47584024587368295}, {"determining": "Min( ( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( ( MUC / CS ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7936512165877238}, {"determining": "( BR / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( DS * MUC ) ) )", "obj1": 0.10433070866141732, "obj2": 0.8655700525140442}, {"determining": "( ( RRS + ( Max( ACS,Const ) - ( DDR / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,Min( ( DS + CS ) ,Max( CS,RRSe ) ) ) - Max( RRSe,CS ) )", "obj1": 0.18110236220472442, "obj2": 0.6983842170839634}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( DDR / Max( ( FirstVNF_CPU + BR ),( PN + ACS ) ) )", "choosing": "Min( ( DS / RCSe ) ,( ( ( MUC / DS ) * Max( RRSe,DS ) ) - MLU ) )", "obj1": 0.39960629921259844, "obj2": 0.4967064313890748}, {"determining": "( ( ( Max( FirstVNF_RAM,AMS ) - ( DDR * PN ) ) + Min( AMS ,BR ) ) - ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( ( MUC - ( MUR - RCSe ) ) + CS ) / Min( RCSe ,DS ) ) )", "obj1": 0.41338582677165353, "obj2": 0.48209085503207916}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ARS ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,ACS ) + FirstVNF_Mem ) * ( FirstVNF_Mem - ( FirstVNF_RAM_Server + ( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) * Min( Min( CS ,MUR ) ,Min( ( MUR - MLU ) ,( DS - MUM ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( MDR - DDR ) )", "choosing": "( Min( Max( MUR,MLU ) ,( MUM / CS ) ) / Max( MUC,RCSe ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ),RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.3051181102362205, "obj2": 0.5690344281291131}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "( Min( MLU ,RCSe ) / Max( MUC,RCSe ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5649638553814579}, {"determining": "( ( ( Const / FirstVNF_CPU ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),CS )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ARS ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( ( FirstVNF_CPU / Const ) / ( RRS / Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( ( FirstVNF_CPU_Server - BR ) / ( ACS / ARS ) ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( DS * MUC ) ) )", "obj1": 0.10433070866141732, "obj2": 0.8655700525140442}, {"determining": "( ( FirstVNF_CPU + MDR ) + FirstVNF_RAM )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( MUM * MUM ) / Min( RCSe ,DS ) ) ) )", "obj1": 0.3031496062992126, "obj2": 0.5759626966649366}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( ( FirstVNF_Mem_Server / MRS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "Max( ( DS / DS ),( DS / MLU ) )", "obj1": 0.17716535433070865, "obj2": 0.7004067105104799}, {"determining": "( ( AMS / FirstVNF_Mem ) / Max( ACS,Max( ARS,Const ) ) )", "choosing": "( Max( ( ( CS / RMSe ) - ( DS - MUR ) ),( ( RRSe - RMSe ) - ( MUC + RRSe ) ) ) / ( ( DS * MUC ) - ( MUC / CS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5779351186499512}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) )", "obj1": 0.9330708661417323, "obj2": 0.06526994236978191}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,FirstVNF_CPU ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( Const + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( CRS * Max( ARS,CRS ) )", "choosing": "( ( MUC * MUC ) - ( ( ( MUC * MUC ) - ( MUC / CS ) ) / CS ) )", "obj1": 0.2992125984251969, "obj2": 0.5761184756480313}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( Const + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "( ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( CS ,DS ) )", "obj1": 0.297244094488189, "obj2": 0.5775517398021927}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUR / MUC ) ,Max( ( CS / MLU ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Max( Const,FirstVNF_Mem ) ) / DDR ) - Min( CRS ,MRS ) )", "choosing": "Min( ( CS * MUM ) ,Max( RRSe,( RCSe - Max( ( Max( ( RMSe / CS ),( ( MUM - MLU ) / Max( MUM,RCSe ) ) ) + Min( ( CS - MUR ) ,RCSe ) ),( MLU + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_Mem ) ) / AMS ) ,FirstVNF_CPU ) + MDR ) - FirstVNF_Mem_Server ) - ( AMS - RRS ) )", "choosing": "( Max( Max( RCSe,Min( RMSe ,MLU ) ),Min( MLU ,CS ) ) - Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * FirstVNF_RAM_Server ),Max( ( FirstVNF_CPU - ( ( ( MRS + ( FirstVNF_CPU + MRS ) ) - Const ) / PN ) ),MRS ) ) - ( CRS * ARS ) )", "choosing": "Min( ( DS - RRSe ) ,( RRSe - Min( Min( RCSe ,( RCSe - Max( ( Min( MUR ,MUR ) - ( RRSe + CS ) ),( MUM + MLU ) ) ) ) ,( RRSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + Min( ( Max( CRS,AMS ) * ( ( ( BR / MDR ) + FirstVNF_CPU ) / AMS ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR / Max( ( MUC * DS ),( MUM / MUM ) ) ) - RCSe ) ,Max( Min( ( ( RCSe * CS ) / RCSe ) ,( DS * Min( ( RRSe / Min( DS ,CS ) ) ,( RCSe / MUC ) ) ) ),( ( DS * DS ) + ( ( ( MLU / RMSe ) - Min( DS ,( RCSe + ( MUM * RRSe ) ) ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( Const * DDR ),FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( ( FirstVNF_RAM_Server / ( PN / FirstVNF_RAM ) ) ,( CRS + ( ( Const + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / MRS ) ) ) ) )", "choosing": "Max( Max( ( MLU / RRSe ),( MUC / ( MUC - RRSe ) ) ),( ( ( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) - DS ) - Max( DS,Max( MUC,DS ) ) ) * MUM ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Min( MDR ,( BR - Const ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( MUR,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( Max( MUC,RRSe ) - ( ( Max( ( ( CS * MUC ) + Min( MLU ,DS ) ),CS ) * MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( ( Min( FirstVNF_CPU_Server ,AMS ) / BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "( ( MUM + RMSe ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) + ( ( DDR - FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Max( ( MRS + ( Max( PN,FirstVNF_RAM ) * ( PN + FirstVNF_CPU_Server ) ) ),Min( FirstVNF_RAM_Server ,( MDR / ( AMS / ARS ) ) ) ) - FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( ( Max( RCSe,( RRSe * DS ) ) + Max( Min( RMSe ,( MUR * ( ( DS + MLU ) - Min( RCSe ,MLU ) ) ) ),( Max( ( RMSe + Max( CS,RCSe ) ),Max( Max( MLU,CS ),MUM ) ) - ( MUR + RRSe ) ) ) ) / ( Max( Max( Max( MUM,MUM ),( ( MUM - MLU ) / DS ) ),Max( ( RRSe * MUC ),MLU ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( RCSe / MUR ) - ( DS * RCSe ) ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( CS * CS ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - ( ( FirstVNF_CPU / Const ) / ( FirstVNF_CPU + BR ) ) )", "choosing": "Min( ( CS * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Max( ( DS * MUC ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "Max( ( DS * MUC ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( RCSe ,( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( ( ( MDR / Const ) - FirstVNF_CPU_Server ) * Max( ( CRS * CRS ),MRS ) ) ,Min( ( FirstVNF_Mem / ARS ) ,MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( MLU - Max( ( Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) - ( RCSe - RMSe ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU / RRS ) / ( ( MRS * BR ) + BR ) ) ) / ( ACS / ARS ) )", "choosing": "Max( Min( ( CS / CS ) ,( MUM - Min( RRSe ,RCSe ) ) ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * MRS ) - Const ) + AMS ) + FirstVNF_Mem ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( DS - ( Min( CS ,CS ) / RMSe ) ) ,RCSe ) ,( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( RCSe * DS ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( Min( ( ( DDR / ( ( Min( FirstVNF_Mem_Server ,( RRS + Const ) ) - ACS ) + ( FirstVNF_CPU / DDR ) ) ) - AMS ) ,RRS ) - ( FirstVNF_Mem - ( PN - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( DS,MUM ) / MUC ) ,Max( Max( Max( MLU,( Min( MUM ,RCSe ) + Max( MUC,Max( ( MUR / MLU ),( DS + MUM ) ) ) ) ),( Max( MLU,MUR ) / Min( CS ,DS ) ) ),MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( CRS - MRS ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( MUR + RRSe ) )", "obj1": 0.6614173228346457, "obj2": 0.3048491029466914}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( RMSe - MUR ) ) )", "obj1": 0.9153543307086615, "obj2": 0.09879421359217935}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Max( MDR,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( Min( Max( ( CS / RRSe ),( CS - DS ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.6141732283464567, "obj2": 0.33603143668319685}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( CRS / ARS ) ) )", "choosing": "Min( ( ( MUC - DS ) + DS ) ,DS )", "obj1": 0.4566929133858268, "obj2": 0.45556948661247176}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ARS - Max( Const,MRS ) ) )", "choosing": "( Min( Max( Max( MUR,MLU ),MLU ) ,( MUM / CS ) ) / Max( MUC,RCSe ) )", "obj1": 0.6181102362204725, "obj2": 0.32163361487039444}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( MLU / RCSe ) + ( Max( ( DS / DS ),( DS / RCSe ) ) / MLU ) )", "obj1": 0.2204724409448819, "obj2": 0.6361291200915411}, {"determining": "( ( ACS + ( AMS / FirstVNF_Mem ) ) * Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MUC ) - ( Max( ( ( CS / RMSe ) - ( DS - MUR ) ),( ( RRSe - RMSe ) - ( MUC + RRSe ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5500224104196128}, {"determining": "( ( AMS / FirstVNF_Mem ) / Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6851272906128235}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + MDR )", "choosing": "Max( ( ( MUM - MUR ) + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) )", "obj1": 0.9409448818897638, "obj2": 0.05860025200978147}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / MDR )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.15748031496062992, "obj2": 0.7452741998103787}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06784808502883448}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "( Max( ( FirstVNF_Mem + RRS ),Min( FirstVNF_RAM ,RRS ) ) - ( Min( DDR ,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( DS ,MUM ) * ( ( Min( RCSe ,RRSe ) * ( MLU / RMSe ) ) / ( ( RMSe + MUC ) - ( DS / DS ) ) ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5227197536789308}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( PN - DDR ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) ) )", "obj1": 0.11220472440944881, "obj2": 0.8491421516751189}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( Min( RRS ,BR ) * ( ARS * ( ACS + Const ) ) )", "choosing": "( ( ( MUR + RRSe ) / MUR ) - ( DS * RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.864551952450125}, {"determining": "( ( ( Max( ACS,PN ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * DDR ) ) / Max( FirstVNF_Mem,FirstVNF_Mem ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.43700787401574803, "obj2": 0.4615227601495371}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( RRS ,BR ) * ( ARS - RRS ) )", "choosing": "( ( RCSe / ( ( RCSe / MUR ) - ( DS * RCSe ) ) ) - ( ( MLU * CS ) + ( MUR / MUC ) ) )", "obj1": 0.281496062992126, "obj2": 0.5998304691370588}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,DS ) / MLU )", "obj1": 0.38188976377952755, "obj2": 0.5057856718695439}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( Min( RMSe ,RRSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.9822834645669292, "obj2": 0.020974755598799775}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "( ( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUM / MUC ) + MLU ) - ( ( Min( MUM ,( MLU / MUC ) ) - RCSe ) * ( ( ( CS + MUC ) - RRSe ) - RMSe ) ) ) + RRSe ) ,( RCSe - RCSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6961594940394159}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( Min( RRS ,BR ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( ( MUR - MUM ) - ( ( RCSe / MUR ) - ( DS * RCSe ) ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6311405821196236}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( ( AMS * DDR ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( Max( ( MLU + MUM ),( MLU * RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5851381403593713}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "Max( Max( DS,( DS - MUC ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) )", "obj1": 0.421259842519685, "obj2": 0.47584024587368295}, {"determining": "Min( Min( AMS ,Const ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU + MUM ) + RRSe ) / ( RCSe * DS ) )", "obj1": 0.1062992125984252, "obj2": 0.854762030302807}, {"determining": "Min( ( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( ( MUC / CS ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7936512165877238}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( DDR / Max( ( FirstVNF_CPU + BR ),( PN + ACS ) ) )", "choosing": "Min( ( DS / RCSe ) ,( ( ( MUC / DS ) * Max( RRSe,DS ) ) - MLU ) )", "obj1": 0.39960629921259844, "obj2": 0.4967064313890748}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "Max( Max( ( FirstVNF_Mem + RRS ),Min( ( Min( DDR ,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem ) ) ,RRS ) ),( ( DDR * DDR ) + ( DDR - MRS ) ) )", "choosing": "( Min( ( Min( DS ,MUM ) * ( MUM * MUM ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) ) / ( ( RMSe + MUC ) - ( DS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49994796947808784}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( ( ACS / ARS ) / ( ( FirstVNF_CPU / MRS ) / ( Min( Max( MRS,FirstVNF_RAM ) ,ARS ) * CRS ) ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),( RRSe / RRSe ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,DS ) ),DS ) + MUC ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.5049928985661356}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,ACS ) + FirstVNF_Mem ) * ( FirstVNF_Mem - ( FirstVNF_RAM_Server + ( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) * Min( Min( CS ,MUR ) ,Min( ( MUR - MLU ) ,( DS - MUM ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / Max( Const,MRS ) )", "choosing": "( Min( Max( MUR,MLU ) ,Min( Max( MUR,MLU ) ,( MUM / CS ) ) ) / Max( MUC,RCSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6290344316309975}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ACS - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( ( DS - RCSe ) ,Min( MUR ,MUC ) ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.579965887889439}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.2952755905511811, "obj2": 0.5772554990064517}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( CRS * Max( ARS,CRS ) )", "choosing": "( ( MUC * MUC ) - ( ( ( MUC * MUC ) - ( MUC / CS ) ) / CS ) )", "obj1": 0.2992125984251969, "obj2": 0.5761184756480313}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5649638553814579}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( ARS - RRS ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.4330708661417323, "obj2": 0.4679061145987206}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + RRS ) / ( ( Const + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.4094488188976378, "obj2": 0.48675470469295795}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,FirstVNF_CPU ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( ( FirstVNF_Mem_Server / MRS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "Max( ( DS / DS ),( DS / MLU ) )", "obj1": 0.17716535433070865, "obj2": 0.7004067105104799}, {"determining": "( ( ( Max( FirstVNF_RAM,AMS ) - ( DDR * PN ) ) + Min( AMS ,BR ) ) - ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( ( MUC - ( MUR - RCSe ) ) + CS ) / Min( RCSe ,DS ) ) )", "obj1": 0.41338582677165353, "obj2": 0.48209085503207916}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( FirstVNF_CPU / Max( ACS,RRS ) )", "choosing": "Max( Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ),Min( MUR ,DS ) )", "obj1": 0.3031496062992126, "obj2": 0.5700092280220947}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ),RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.3051181102362205, "obj2": 0.5690344281291131}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) )", "obj1": 0.9330708661417323, "obj2": 0.06526994236978191}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server * ARS ) )", "choosing": "Min( ( RCSe - ( Min( ( ( ( MUM + MUR ) / ( MLU - RRSe ) ) * ( RCSe + MUM ) ) ,RRSe ) * RCSe ) ) ,( ( Max( RMSe,MUR ) / MLU ) * MUC ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( Const / FirstVNF_CPU ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),CS )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( Const + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( Const + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUR / MUC ) ,Max( ( CS / MLU ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Max( Const,FirstVNF_Mem ) ) / DDR ) - Min( CRS ,MRS ) )", "choosing": "Min( ( CS * MUM ) ,Max( RRSe,( RCSe - Max( ( Max( ( RMSe / CS ),( ( MUM - MLU ) / Max( MUM,RCSe ) ) ) + Min( ( CS - MUR ) ,RCSe ) ),( MLU + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_Mem ) ) / AMS ) ,FirstVNF_CPU ) + MDR ) - FirstVNF_Mem_Server ) - ( AMS - RRS ) )", "choosing": "( Max( Max( RCSe,Min( RMSe ,MLU ) ),Min( MLU ,CS ) ) - Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * FirstVNF_RAM_Server ),Max( ( FirstVNF_CPU - ( ( ( MRS + ( FirstVNF_CPU + MRS ) ) - Const ) / PN ) ),MRS ) ) - ( CRS * ARS ) )", "choosing": "Min( ( DS - RRSe ) ,( RRSe - Min( Min( RCSe ,( RCSe - Max( ( Min( MUR ,MUR ) - ( RRSe + CS ) ),( MUM + MLU ) ) ) ) ,( RRSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + Min( ( Max( CRS,AMS ) * ( ( ( BR / MDR ) + FirstVNF_CPU ) / AMS ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR / Max( ( MUC * DS ),( MUM / MUM ) ) ) - RCSe ) ,Max( Min( ( ( RCSe * CS ) / RCSe ) ,( DS * Min( ( RRSe / Min( DS ,CS ) ) ,( RCSe / MUC ) ) ) ),( ( DS * DS ) + ( ( ( MLU / RMSe ) - Min( DS ,( RCSe + ( MUM * RRSe ) ) ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( Const * DDR ),FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( ( FirstVNF_RAM_Server / ( PN / FirstVNF_RAM ) ) ,( CRS + ( ( Const + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / MRS ) ) ) ) )", "choosing": "Max( Max( ( MLU / RRSe ),( MUC / ( MUC - RRSe ) ) ),( ( ( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) - DS ) - Max( DS,Max( MUC,DS ) ) ) * MUM ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Min( MDR ,( BR - Const ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( MUR,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( Max( MUC,RRSe ) - ( ( Max( ( ( CS * MUC ) + Min( MLU ,DS ) ),CS ) * MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( ( Min( FirstVNF_CPU_Server ,AMS ) / BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "( ( MUM + RMSe ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) + ( ( DDR - FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Max( ( MRS + ( Max( PN,FirstVNF_RAM ) * ( PN + FirstVNF_CPU_Server ) ) ),Min( FirstVNF_RAM_Server ,( MDR / ( AMS / ARS ) ) ) ) - FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( ( Max( RCSe,( RRSe * DS ) ) + Max( Min( RMSe ,( MUR * ( ( DS + MLU ) - Min( RCSe ,MLU ) ) ) ),( Max( ( RMSe + Max( CS,RCSe ) ),Max( Max( MLU,CS ),MUM ) ) - ( MUR + RRSe ) ) ) ) / ( Max( Max( Max( MUM,MUM ),( ( MUM - MLU ) / DS ) ),Max( ( RRSe * MUC ),MLU ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( RCSe / MUR ) - ( DS * RCSe ) ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( CS * CS ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - ( ( FirstVNF_CPU / Const ) / ( FirstVNF_CPU + BR ) ) )", "choosing": "Min( ( CS * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Max( ( DS * MUC ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "Max( ( DS * MUC ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( ( ( MDR / Const ) - FirstVNF_CPU_Server ) * Max( ( CRS * CRS ),MRS ) ) ,Min( ( FirstVNF_Mem / ARS ) ,MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( MLU - Max( ( Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) - ( RCSe - RMSe ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU / RRS ) / ( ( MRS * BR ) + BR ) ) ) / ( ACS / ARS ) )", "choosing": "Max( Min( ( CS / CS ) ,( MUM - Min( RRSe ,RCSe ) ) ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / Min( ACS ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) * MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( MLU + RRSe ) / ( RCSe * DS ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( CRS - MRS ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( MUR + RRSe ) )", "obj1": 0.6614173228346457, "obj2": 0.3048491029466914}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Min( ( ( RRSe / ( CS * CS ) ) + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.9094488188976378, "obj2": 0.07907367112985697}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Max( MDR,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( Min( Max( ( CS / RRSe ),( CS - DS ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.6141732283464567, "obj2": 0.33603143668319685}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3449855871234423}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "Max( Max( ( FirstVNF_Mem + RRS ),Min( ( Min( DDR ,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem ) ) ,RRS ) ),( ( DDR * DDR ) + ( DDR - MRS ) ) )", "choosing": "( Min( ( Min( DS ,MUM ) * ( MUM * MUM ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) ) / ( ( RMSe + MUC ) - ( DS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49994796947808784}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ARS - Max( Const,MRS ) ) )", "choosing": "( Min( Max( Max( MUR,MLU ),MLU ) ,( MUM / CS ) ) / Max( MUC,RCSe ) )", "obj1": 0.6181102362204725, "obj2": 0.32163361487039444}, {"determining": "( ( ACS + ( AMS / FirstVNF_Mem ) ) * Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MUC ) - ( Max( ( ( CS / RMSe ) - ( DS - MUR ) ),( ( RRSe - RMSe ) - ( MUC + RRSe ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5500224104196128}, {"determining": "( ( AMS / FirstVNF_Mem ) / Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6851272906128235}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + MDR )", "choosing": "Max( ( ( MUM - MUR ) + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) )", "obj1": 0.9409448818897638, "obj2": 0.05860025200978147}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( MLU / RCSe ) + ( Max( ( DS / DS ),( DS / RCSe ) ) / MLU ) )", "obj1": 0.2204724409448819, "obj2": 0.6361291200915411}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( Max( ( FirstVNF_Mem + RRS ),Min( FirstVNF_RAM ,RRS ) ) - ( Min( DDR ,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( DS ,MUM ) * ( ( Min( RCSe ,RRSe ) * ( MLU / RMSe ) ) / ( ( RMSe + MUC ) - ( DS / DS ) ) ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5227197536789308}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( PN - DDR ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) ) )", "obj1": 0.11220472440944881, "obj2": 0.8491421516751189}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06784808502883448}, {"determining": "( Min( RRS ,BR ) * ( ARS * ( ACS + Const ) ) )", "choosing": "( ( ( MUR + RRSe ) / MUR ) - ( DS * RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.864551952450125}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,DS ) / MLU )", "obj1": 0.38188976377952755, "obj2": 0.5057856718695439}, {"determining": "( ( AMS / FirstVNF_Mem ) / Max( ACS,( ( CRS * MDR ) * ( RRS * RRS ) ) ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - Min( Max( RCSe,MUM ) ,( ( MLU / CS ) / RCSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7314625672556405}, {"determining": "( ( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUM / MUC ) + MLU ) - ( ( Min( MUM ,( MLU / MUC ) ) - RCSe ) * ( ( ( CS + MUC ) - RRSe ) - RMSe ) ) ) + RRSe ) ,( RCSe - RCSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6961594940394159}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( ( AMS * DDR ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( Max( ( MLU + MUM ),( MLU * RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5851381403593713}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( ( MDR - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM / CS ) ) / Max( MUC,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.025772453053337013}, {"determining": "( ARS - Min( ( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,( Const + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( ( RCSe - Min( RCSe ,Max( ( MLU - MUR ),MUR ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.23622047244094488, "obj2": 0.634635793328805}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Min( ACS ,AMS ) ) ) ) * AMS ) + RRS ) )", "choosing": "Min( ( RCSe - Min( Max( MUM,( ( ( MUR + ( CS + MUC ) ) + DS ) / RCSe ) ) ,RCSe ) ) ,Max( MUM,Min( ( MUM - ( MUM - Min( ( RMSe - MUM ) ,( MUC + RCSe ) ) ) ) ,( MUC - MUR ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.595212750095436}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "Min( Min( AMS ,Const ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU + MUM ) + RRSe ) / ( RCSe * DS ) )", "obj1": 0.1062992125984252, "obj2": 0.854762030302807}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "( ( ACS / ARS ) / ( ( FirstVNF_CPU / MRS ) / ( Min( Max( MRS,FirstVNF_RAM ) ,ARS ) * CRS ) ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),( RRSe / RRSe ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,DS ) ),DS ) + MUC ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.5049928985661356}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ACS - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( ( DS - RCSe ) ,Min( MUR ,MUC ) ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.579965887889439}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / Max( Const,MRS ) )", "choosing": "( Min( Max( MUR,MLU ) ,Min( Max( MUR,MLU ) ,( MUM / CS ) ) ) / Max( MUC,RCSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6290344316309975}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,ACS ) + FirstVNF_Mem ) * ( FirstVNF_Mem - ( FirstVNF_RAM_Server + ( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) * Min( Min( CS ,MUR ) ,Min( ( MUR - MLU ) ,( DS - MUM ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( Min( RMSe ,RRSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.9822834645669292, "obj2": 0.020974755598799775}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( RRSe + ( MUC + Min( MUR ,( MUM + MUR ) ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "Min( ( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( ( MUC / CS ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7936512165877238}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5649638553814579}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( Const / FirstVNF_CPU ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),CS )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( ( FirstVNF_Mem_Server / MRS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "Max( ( DS / DS ),( DS / MLU ) )", "obj1": 0.17716535433070865, "obj2": 0.7004067105104799}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( Max( MUR,MLU ) * CS ) ),Min( MUR ,DS ) )", "obj1": 0.27165354330708663, "obj2": 0.5963838201776409}, {"determining": "( Min( ( ( DDR / ( ( Min( FirstVNF_Mem_Server ,( RRS + Const ) ) - ACS ) + ( FirstVNF_CPU / DDR ) ) ) - AMS ) ,RRS ) - ( FirstVNF_Mem - ( PN - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( DS,MUM ) / MUC ) ,Max( Max( Max( MLU,( Min( MUM ,RCSe ) + Max( MUC,Max( ( MUR / MLU ),( DS + MUM ) ) ) ) ),( Max( MLU,MUR ) / Min( CS ,DS ) ) ),MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7916055588061249}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( RMSe - RRSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6301064793752152}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ),RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.3051181102362205, "obj2": 0.5690344281291131}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) )", "obj1": 0.9330708661417323, "obj2": 0.06526994236978191}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,FirstVNF_CPU ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Max( ACS,RRS ) )", "choosing": "Max( ( ( MUC + RMSe ) / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.30118110236220474, "obj2": 0.573230162663375}, {"determining": "( CRS * Max( ARS,CRS ) )", "choosing": "( ( MUC * MUC ) - ( ( ( MUC * MUC ) - ( MUC / CS ) ) / CS ) )", "obj1": 0.2992125984251969, "obj2": 0.5761184756480313}, {"determining": "( ( CRS - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) * ( AMS / Min( BR ,( ARS - ( Const / ( ACS - ( ( CRS * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( Max( MUR,( ( RMSe / RCSe ) / Min( ( ( ( MUR + MUC ) + MLU ) + MLU ) ,MLU ) ) ) * ( CS * MUR ) ) ,( RRSe + ( ( Max( MUC,MUM ) * Min( CS ,RMSe ) ) * ( RRSe * ( MUC / MLU ) ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.2952755905511811, "obj2": 0.5772554990064517}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( FirstVNF_CPU / Max( ACS,RRS ) )", "choosing": "Max( Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ),Min( MUR ,DS ) )", "obj1": 0.3031496062992126, "obj2": 0.5700092280220947}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.2952755905511811, "obj2": 0.5772554990064517}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( ( ( ( CRS * MRS ) - Const ) + AMS ) + FirstVNF_Mem ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( DS - ( Min( CS ,CS ) / RMSe ) ) ,RCSe ) ,( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUR / MUC ) ,Max( ( CS / MLU ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Max( Const,FirstVNF_Mem ) ) / DDR ) - Min( CRS ,MRS ) )", "choosing": "Min( ( CS * MUM ) ,Max( RRSe,( RCSe - Max( ( Max( ( RMSe / CS ),( ( MUM - MLU ) / Max( MUM,RCSe ) ) ) + Min( ( CS - MUR ) ,RCSe ) ),( MLU + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_Mem ) ) / AMS ) ,FirstVNF_CPU ) + MDR ) - FirstVNF_Mem_Server ) - ( AMS - RRS ) )", "choosing": "( Max( Max( RCSe,Min( RMSe ,MLU ) ),Min( MLU ,CS ) ) - Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * FirstVNF_RAM_Server ),Max( ( FirstVNF_CPU - ( ( ( MRS + ( FirstVNF_CPU + MRS ) ) - Const ) / PN ) ),MRS ) ) - ( CRS * ARS ) )", "choosing": "Min( ( DS - RRSe ) ,( RRSe - Min( Min( RCSe ,( RCSe - Max( ( Min( MUR ,MUR ) - ( RRSe + CS ) ),( MUM + MLU ) ) ) ) ,( RRSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + Min( ( Max( CRS,AMS ) * ( ( ( BR / MDR ) + FirstVNF_CPU ) / AMS ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR / Max( ( MUC * DS ),( MUM / MUM ) ) ) - RCSe ) ,Max( Min( ( ( RCSe * CS ) / RCSe ) ,( DS * Min( ( RRSe / Min( DS ,CS ) ) ,( RCSe / MUC ) ) ) ),( ( DS * DS ) + ( ( ( MLU / RMSe ) - Min( DS ,( RCSe + ( MUM * RRSe ) ) ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( Const * DDR ),FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( ( FirstVNF_RAM_Server / ( PN / FirstVNF_RAM ) ) ,( CRS + ( ( Const + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / MRS ) ) ) ) )", "choosing": "Max( Max( ( MLU / RRSe ),( MUC / ( MUC - RRSe ) ) ),( ( ( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) - DS ) - Max( DS,Max( MUC,DS ) ) ) * MUM ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Min( MDR ,( BR - Const ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( MUR,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( Max( MUC,RRSe ) - ( ( Max( ( ( CS * MUC ) + Min( MLU ,DS ) ),CS ) * MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( ( Min( FirstVNF_CPU_Server ,AMS ) / BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "( ( MUM + RMSe ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) + ( ( DDR - FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Max( ( MRS + ( Max( PN,FirstVNF_RAM ) * ( PN + FirstVNF_CPU_Server ) ) ),Min( FirstVNF_RAM_Server ,( MDR / ( AMS / ARS ) ) ) ) - FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( ( Max( RCSe,( RRSe * DS ) ) + Max( Min( RMSe ,( MUR * ( ( DS + MLU ) - Min( RCSe ,MLU ) ) ) ),( Max( ( RMSe + Max( CS,RCSe ) ),Max( Max( MLU,CS ),MUM ) ) - ( MUR + RRSe ) ) ) ) / ( Max( Max( Max( MUM,MUM ),( ( MUM - MLU ) / DS ) ),Max( ( RRSe * MUC ),MLU ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( RCSe / MUR ) - ( DS * RCSe ) ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( CS * CS ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - ( ( FirstVNF_CPU / Const ) / ( FirstVNF_CPU + BR ) ) )", "choosing": "Min( ( CS * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ACS * ( ( FirstVNF_Mem_Server - ACS ) / ARS ) ) - ( MDR + RRS ) )", "choosing": "( ( Min( DS ,DS ) + Min( RRSe ,( ( MUM - RMSe ) - DS ) ) ) - ( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( CRS - MRS ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( MUR + RRSe ) )", "obj1": 0.6614173228346457, "obj2": 0.3048491029466914}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Max( MDR,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( Min( Max( ( CS / RRSe ),( CS - DS ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.6141732283464567, "obj2": 0.33603143668319685}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "Max( Max( ( FirstVNF_Mem + RRS ),Min( ( Min( DDR ,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem ) ) ,RRS ) ),( ( DDR * DDR ) + ( DDR - MRS ) ) )", "choosing": "( Min( ( Min( DS ,MUM ) * ( MUM * MUM ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) ) / ( ( RMSe + MUC ) - ( DS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49994796947808784}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ARS - Max( Const,MRS ) ) )", "choosing": "( Min( Max( Max( MUR,MLU ),MLU ) ,( MUM / CS ) ) / Max( MUC,RCSe ) )", "obj1": 0.6181102362204725, "obj2": 0.32163361487039444}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Min( ( ( RRSe / ( CS * CS ) ) + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.9094488188976378, "obj2": 0.07907367112985697}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( ACS + ( AMS / FirstVNF_Mem ) ) * Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MUC ) - ( Max( ( ( CS / RMSe ) - ( DS - MUR ) ),( ( RRSe - RMSe ) - ( MUC + RRSe ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5500224104196128}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) ) - MDR ) / AMS ) ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / ( CS * MUR ) ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.6842648049071879}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( MLU / RCSe ) + ( Max( ( DS / DS ),( DS / RCSe ) ) / MLU ) )", "obj1": 0.2204724409448819, "obj2": 0.6361291200915411}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( PN - DDR ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) ) )", "obj1": 0.11220472440944881, "obj2": 0.8491421516751189}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06784808502883448}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,DS ) / MLU )", "obj1": 0.38188976377952755, "obj2": 0.5057856718695439}, {"determining": "( Min( RRS ,BR ) * ( ARS * ( ACS + Const ) ) )", "choosing": "( ( ( MUR + RRSe ) / MUR ) - ( DS * RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.864551952450125}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( MDR * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( AMS / FirstVNF_Mem ) / Max( ACS,( ( CRS * MDR ) * ( RRS * RRS ) ) ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - Min( Max( RCSe,MUM ) ,( ( MLU / CS ) / RCSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7314625672556405}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( ( AMS * DDR ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( Max( ( MLU + MUM ),( MLU * RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5851381403593713}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( ( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUM / MUC ) + MLU ) - ( ( Min( MUM ,( MLU / MUC ) ) - RCSe ) * ( ( ( CS + MUC ) - RRSe ) - RMSe ) ) ) + RRSe ) ,( RCSe - RCSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6961594940394159}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( ( MDR - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM / CS ) ) / Max( MUC,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.025772453053337013}, {"determining": "( ARS - Min( ( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,( Const + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( ( RCSe - Min( RCSe ,Max( ( MLU - MUR ),MUR ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.23622047244094488, "obj2": 0.634635793328805}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Min( ACS ,AMS ) ) ) ) * AMS ) + RRS ) )", "choosing": "Min( ( RCSe - Min( Max( MUM,( ( ( MUR + ( CS + MUC ) ) + DS ) / RCSe ) ) ,RCSe ) ) ,Max( MUM,Min( ( MUM - ( MUM - Min( ( RMSe - MUM ) ,( MUC + RCSe ) ) ) ) ,( MUC - MUR ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.595212750095436}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "Min( Min( AMS ,Const ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU + MUM ) + RRSe ) / ( RCSe * DS ) )", "obj1": 0.1062992125984252, "obj2": 0.854762030302807}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( ACS / ARS ) / ( ( FirstVNF_CPU / MRS ) / ( Min( Max( MRS,FirstVNF_RAM ) ,ARS ) * CRS ) ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),( RRSe / RRSe ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,DS ) ),DS ) + MUC ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.5049928985661356}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / Max( Const,MRS ) )", "choosing": "( Min( Max( MUR,MLU ) ,Min( Max( MUR,MLU ) ,( MUM / CS ) ) ) / Max( MUC,RCSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6290344316309975}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,ACS ) + FirstVNF_Mem ) * ( FirstVNF_Mem - ( FirstVNF_RAM_Server + ( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) * Min( Min( CS ,MUR ) ,Min( ( MUR - MLU ) ,( DS - MUM ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ACS - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( ( DS - RCSe ) ,Min( MUR ,MUC ) ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.579965887889439}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( Min( RMSe ,RRSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.9822834645669292, "obj2": 0.020974755598799775}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( RRSe + ( MUC + Min( MUR ,( MUM + MUR ) ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( FirstVNF_CPU * RRS ) * FirstVNF_Mem_Server )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * ( ( CS / MUC ) * MUC ) ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.2933070866141732, "obj2": 0.5771929661133206}, {"determining": "Min( ( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( ( MUC / CS ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7936512165877238}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5649638553814579}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,FirstVNF_CPU ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( ( FirstVNF_Mem_Server / MRS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "Max( ( DS / DS ),( DS / MLU ) )", "obj1": 0.17716535433070865, "obj2": 0.7004067105104799}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( Max( MUR,MLU ) * CS ) ),Min( MUR ,DS ) )", "obj1": 0.27165354330708663, "obj2": 0.5963838201776409}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7916055588061249}, {"determining": "( CRS * Max( ARS,CRS ) )", "choosing": "( ( MUC * MUC ) - ( ( ( MUC * MUC ) - ( MUC / CS ) ) / CS ) )", "obj1": 0.2992125984251969, "obj2": 0.5761184756480313}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( RMSe - RRSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6301064793752152}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ),RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.3051181102362205, "obj2": 0.5690344281291131}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) )", "obj1": 0.9330708661417323, "obj2": 0.06526994236978191}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( Const / FirstVNF_CPU ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),CS )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Max( ACS,RRS ) )", "choosing": "Max( ( ( MUC + RMSe ) / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.30118110236220474, "obj2": 0.573230162663375}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( RRSe + ( MUC + Min( MUR ,( MUM + MUR ) ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( FirstVNF_CPU / Max( ACS,RRS ) )", "choosing": "Max( Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ),Min( MUR ,DS ) )", "obj1": 0.3031496062992126, "obj2": 0.5700092280220947}, {"determining": "( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU / RRS ) / ( ( MRS * BR ) + BR ) ) ) / ( ACS / ARS ) )", "choosing": "Max( Min( ( CS / CS ) ,( MUM - Min( RRSe ,RCSe ) ) ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * MRS ) - Const ) + AMS ) + FirstVNF_Mem ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( DS - ( Min( CS ,CS ) / RMSe ) ) ,RCSe ) ,( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUR / MUC ) ,Max( ( CS / MLU ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Max( Const,FirstVNF_Mem ) ) / DDR ) - Min( CRS ,MRS ) )", "choosing": "Min( ( CS * MUM ) ,Max( RRSe,( RCSe - Max( ( Max( ( RMSe / CS ),( ( MUM - MLU ) / Max( MUM,RCSe ) ) ) + Min( ( CS - MUR ) ,RCSe ) ),( MLU + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_Mem ) ) / AMS ) ,FirstVNF_CPU ) + MDR ) - FirstVNF_Mem_Server ) - ( AMS - RRS ) )", "choosing": "( Max( Max( RCSe,Min( RMSe ,MLU ) ),Min( MLU ,CS ) ) - Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * FirstVNF_RAM_Server ),Max( ( FirstVNF_CPU - ( ( ( MRS + ( FirstVNF_CPU + MRS ) ) - Const ) / PN ) ),MRS ) ) - ( CRS * ARS ) )", "choosing": "Min( ( DS - RRSe ) ,( RRSe - Min( Min( RCSe ,( RCSe - Max( ( Min( MUR ,MUR ) - ( RRSe + CS ) ),( MUM + MLU ) ) ) ) ,( RRSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + Min( ( Max( CRS,AMS ) * ( ( ( BR / MDR ) + FirstVNF_CPU ) / AMS ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR / Max( ( MUC * DS ),( MUM / MUM ) ) ) - RCSe ) ,Max( Min( ( ( RCSe * CS ) / RCSe ) ,( DS * Min( ( RRSe / Min( DS ,CS ) ) ,( RCSe / MUC ) ) ) ),( ( DS * DS ) + ( ( ( MLU / RMSe ) - Min( DS ,( RCSe + ( MUM * RRSe ) ) ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( Const * DDR ),FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( ( FirstVNF_RAM_Server / ( PN / FirstVNF_RAM ) ) ,( CRS + ( ( Const + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / MRS ) ) ) ) )", "choosing": "Max( Max( ( MLU / RRSe ),( MUC / ( MUC - RRSe ) ) ),( ( ( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) - DS ) - Max( DS,Max( MUC,DS ) ) ) * MUM ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Min( MDR ,( BR - Const ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( MUR,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( Max( MUC,RRSe ) - ( ( Max( ( ( CS * MUC ) + Min( MLU ,DS ) ),CS ) * MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( ( Min( FirstVNF_CPU_Server ,AMS ) / BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "( ( MUM + RMSe ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) + ( ( DDR - FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( RRSe + ( MUC + ( RCSe * ( CS * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ( FirstVNF_Mem_Server - ACS ) / ARS ) ) - ( MDR + RRS ) )", "choosing": "( ( Min( DS ,DS ) + Min( RRSe ,( ( MUM - RMSe ) - DS ) ) ) - ( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Max( MDR,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( Min( Max( ( CS / RRSe ),( CS - DS ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.6141732283464567, "obj2": 0.33603143668319685}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( MDR * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49921015748910624}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ARS - Max( Const,MRS ) ) )", "choosing": "( Min( Max( Max( MUR,MLU ),MLU ) ,( MUM / CS ) ) / Max( MUC,RCSe ) )", "obj1": 0.6181102362204725, "obj2": 0.32163361487039444}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Min( ( ( RRSe / ( CS * CS ) ) + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.9094488188976378, "obj2": 0.07907367112985697}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) ) - MDR ) / AMS ) ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / ( CS * MUR ) ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.6842648049071879}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "( ( ACS + ( AMS / FirstVNF_Mem ) ) * Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MUC ) - ( Max( ( ( CS / RMSe ) - ( DS - MUR ) ),( ( RRSe - RMSe ) - ( MUC + RRSe ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5500224104196128}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( PN - DDR ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) ) )", "obj1": 0.11220472440944881, "obj2": 0.8491421516751189}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( Min( CRS ,BR ),BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,CS ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7838243108185198}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06784808502883448}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( RRS ,BR ) * ( ARS * ( ACS + Const ) ) )", "choosing": "( ( ( MUR + RRSe ) / MUR ) - ( DS * RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.864551952450125}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( ( ACS + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) ) ) + ( MDR * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( RMSe - MUC ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5082758184701893}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( MDR * FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + ( RCSe * ( CS * MUR ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5302095210865206}, {"determining": "( ( AMS / FirstVNF_Mem ) / Max( ACS,( ( CRS * MDR ) * ( RRS * RRS ) ) ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - Min( Max( RCSe,MUM ) ,( ( MLU / CS ) / RCSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7314625672556405}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( ( AMS * DDR ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( Max( ( MLU + MUM ),( MLU * RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5851381403593713}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( RMSe - RRSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6301064793752152}, {"determining": "( ( MDR - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM / CS ) ) / Max( MUC,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.025772453053337013}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Min( ACS ,AMS ) ) ) ) * AMS ) + RRS ) )", "choosing": "Min( ( RCSe - Min( Max( MUM,( ( ( MUR + ( CS + MUC ) ) + DS ) / RCSe ) ) ,RCSe ) ) ,Max( MUM,Min( ( MUM - ( MUM - Min( ( RMSe - MUM ) ,( MUC + RCSe ) ) ) ) ,( MUC - MUR ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.595212750095436}, {"determining": "( ( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUM / MUC ) + MLU ) - ( ( Min( MUM ,( MLU / MUC ) ) - RCSe ) * ( ( ( CS + MUC ) - RRSe ) - RMSe ) ) ) + RRSe ) ,( RCSe - RCSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6961594940394159}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "Min( Min( AMS ,Const ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU + MUM ) + RRSe ) / ( RCSe * DS ) )", "obj1": 0.1062992125984252, "obj2": 0.854762030302807}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / Max( Const,MRS ) )", "choosing": "( Min( Max( MUR,MLU ) ,Min( Max( MUR,MLU ) ,( MUM / CS ) ) ) / Max( MUC,RCSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6290344316309975}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ACS - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( ( DS - RCSe ) ,Min( MUR ,MUC ) ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.579965887889439}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( Min( RMSe ,RRSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.9822834645669292, "obj2": 0.020974755598799775}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( FirstVNF_CPU * RRS ) * FirstVNF_Mem_Server )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * ( ( CS / MUC ) * MUC ) ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.2933070866141732, "obj2": 0.5771929661133206}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,FirstVNF_CPU ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( Max( MUR,MLU ) * CS ) ),Min( MUR ,DS ) )", "obj1": 0.27165354330708663, "obj2": 0.5963838201776409}, {"determining": "( ( ( Const / FirstVNF_CPU ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),CS )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( CRS * Max( ARS,CRS ) )", "choosing": "( ( MUC * MUC ) - ( ( ( MUC * MUC ) - ( MUC / CS ) ) / CS ) )", "obj1": 0.2992125984251969, "obj2": 0.5761184756480313}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( ( FirstVNF_Mem_Server / MRS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "Max( ( DS / DS ),( DS / MLU ) )", "obj1": 0.17716535433070865, "obj2": 0.7004067105104799}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) )", "obj1": 0.9330708661417323, "obj2": 0.06526994236978191}, {"determining": "( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Max( ACS,RRS ) )", "choosing": "Max( ( ( MUC + RMSe ) / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.30118110236220474, "obj2": 0.573230162663375}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( MDR * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( CRS * MDR ) * ( Min( Max( DDR,( FirstVNF_Mem * MRS ) ) ,MDR ) / BR ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.3031496062992126, "obj2": 0.5694087384951194}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( MRS / ( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( MLU + MLU ) / Max( MUC,MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6981013253358558}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.3031496062992126, "obj2": 0.5694087384951194}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),FirstVNF_CPU ) / ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ),MLU ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU / RRS ) / ( ( MRS * BR ) + BR ) ) ) / ( ACS / ARS ) )", "choosing": "Max( Min( ( CS / CS ) ,( MUM - Min( RRSe ,RCSe ) ) ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * MRS ) - Const ) + AMS ) + FirstVNF_Mem ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( DS - ( Min( CS ,CS ) / RMSe ) ) ,RCSe ) ,( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUR / MUC ) ,Max( ( CS / MLU ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Max( Const,FirstVNF_Mem ) ) / DDR ) - Min( CRS ,MRS ) )", "choosing": "Min( ( CS * MUM ) ,Max( RRSe,( RCSe - Max( ( Max( ( RMSe / CS ),( ( MUM - MLU ) / Max( MUM,RCSe ) ) ) + Min( ( CS - MUR ) ,RCSe ) ),( MLU + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_Mem ) ) / AMS ) ,FirstVNF_CPU ) + MDR ) - FirstVNF_Mem_Server ) - ( AMS - RRS ) )", "choosing": "( Max( Max( RCSe,Min( RMSe ,MLU ) ),Min( MLU ,CS ) ) - Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * FirstVNF_RAM_Server ),Max( ( FirstVNF_CPU - ( ( ( MRS + ( FirstVNF_CPU + MRS ) ) - Const ) / PN ) ),MRS ) ) - ( CRS * ARS ) )", "choosing": "Min( ( DS - RRSe ) ,( RRSe - Min( Min( RCSe ,( RCSe - Max( ( Min( MUR ,MUR ) - ( RRSe + CS ) ),( MUM + MLU ) ) ) ) ,( RRSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + Min( ( Max( CRS,AMS ) * ( ( ( BR / MDR ) + FirstVNF_CPU ) / AMS ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR / Max( ( MUC * DS ),( MUM / MUM ) ) ) - RCSe ) ,Max( Min( ( ( RCSe * CS ) / RCSe ) ,( DS * Min( ( RRSe / Min( DS ,CS ) ) ,( RCSe / MUC ) ) ) ),( ( DS * DS ) + ( ( ( MLU / RMSe ) - Min( DS ,( RCSe + ( MUM * RRSe ) ) ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( Const * DDR ),FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( ( FirstVNF_RAM_Server / ( PN / FirstVNF_RAM ) ) ,( CRS + ( ( Const + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / MRS ) ) ) ) )", "choosing": "Max( Max( ( MLU / RRSe ),( MUC / ( MUC - RRSe ) ) ),( ( ( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) - DS ) - Max( DS,Max( MUC,DS ) ) ) * MUM ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Min( MDR ,( BR - Const ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( MUR,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( Max( MUC,RRSe ) - ( ( Max( ( ( CS * MUC ) + Min( MLU ,DS ) ),CS ) * MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( ( Min( FirstVNF_CPU_Server ,AMS ) / BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "( ( MUM + RMSe ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) + ( ( DDR - FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Max( DDR,MRS ) ) - Max( FirstVNF_RAM_Server,ARS ) ) * Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU * RCSe ) / MUC ),Max( MUC,( Min( CS ,( MUR * ( RMSe * MLU ) ) ) - Min( ( ( MUM / ( ( CS - RCSe ) - Max( MUC,DS ) ) ) + MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( AMS + FirstVNF_RAM_Server ) - ( ( MDR / ( CRS - MRS ) ) + ( ACS * ( ( FirstVNF_Mem_Server - ACS ) / ARS ) ) ) )", "choosing": "( ( Min( DS ,DS ) + Min( RRSe ,( ( MUM - RMSe ) - DS ) ) ) - ( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( RRSe + ( MUC + ( RCSe * ( CS * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( Min( FirstVNF_CPU ,( ( ( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,ARS ) ) - ( Const - AMS ) ) + FirstVNF_Mem_Server ) ) / Min( MDR ,Min( Max( ACS,PN ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,Max( Min( RCSe ,( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,( MUM * CS ) ) * MUC ) ),MUC ) ) / ( ( MUR - RCSe ) / MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.333708219059016}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ARS - Max( Const,MRS ) ) )", "choosing": "( Min( Max( Max( MUR,MLU ),MLU ) ,( MUM / CS ) ) / Max( MUC,RCSe ) )", "obj1": 0.6181102362204725, "obj2": 0.32163361487039444}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( MDR * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49921015748910624}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Min( ( ( RRSe / ( CS * CS ) ) + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.9094488188976378, "obj2": 0.07907367112985697}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "( ( ACS + ( AMS / FirstVNF_Mem ) ) * Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MUC ) - ( Max( ( ( CS / RMSe ) - ( DS - MUR ) ),( ( RRSe - RMSe ) - ( MUC + RRSe ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5500224104196128}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) ) - MDR ) / AMS ) ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / ( CS * MUR ) ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.6842648049071879}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( Min( CRS ,BR ),BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,CS ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7838243108185198}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06784808502883448}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( ( ACS + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) ) ) + ( MDR * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( RMSe - MUC ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5082758184701893}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( MDR * FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + ( RCSe * ( CS * MUR ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5302095210865206}, {"determining": "( ( AMS / FirstVNF_Mem ) / Max( ACS,( ( CRS * MDR ) * ( RRS * RRS ) ) ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - Min( Max( RCSe,MUM ) ,( ( MLU / CS ) / RCSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7314625672556405}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) )", "choosing": "Max( ( MUM / MUM ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) / Min( MDR ,Min( Max( ( ( ( MDR + Min( FirstVNF_CPU_Server ,ARS ) ) - FirstVNF_Mem_Server ) - ( Const - AMS ) ),PN ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,Max( Min( RCSe ,( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * ( DS * MUR ) ) ),MUC ) ) / ( ( MUR - RCSe ) / Max( MUC,RRSe ) ) )", "obj1": 0.2637795275590551, "obj2": 0.6082961438203031}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( ( AMS * DDR ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( Max( ( MLU + MUM ),( MLU * RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5851381403593713}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( RMSe - RRSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6301064793752152}, {"determining": "( ( MDR - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM / CS ) ) / Max( MUC,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.025772453053337013}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Min( ACS ,AMS ) ) ) ) * AMS ) + RRS ) )", "choosing": "Min( ( RCSe - Min( Max( MUM,( ( ( MUR + ( CS + MUC ) ) + DS ) / RCSe ) ) ,RCSe ) ) ,Max( MUM,Min( ( MUM - ( MUM - Min( ( RMSe - MUM ) ,( MUC + RCSe ) ) ) ) ,( MUC - MUR ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.595212750095436}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / Min( MDR ,( BR - FirstVNF_Mem_Server ) ) ),MRS ) ) )", "choosing": "( Min( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) ,RCSe ) / Max( MUC,MLU ) )", "obj1": 0.25, "obj2": 0.615286566880881}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( MUM,MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( ( RRSe - DS ) + MUM ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6919826571194391}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / Max( Const,MRS ) )", "choosing": "( Min( Max( MUR,MLU ) ,Min( Max( MUR,MLU ) ,( MUM / CS ) ) ) / Max( MUC,RCSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6290344316309975}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ACS - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( ( DS - RCSe ) ,Min( MUR ,MUC ) ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.579965887889439}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( Min( RMSe ,RRSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.9822834645669292, "obj2": 0.020974755598799775}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( FirstVNF_CPU * RRS ) * FirstVNF_Mem_Server )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * ( ( CS / MUC ) * MUC ) ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.2933070866141732, "obj2": 0.5771929661133206}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,FirstVNF_CPU ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( Max( MUR,MLU ) * CS ) ),Min( MUR ,DS ) )", "obj1": 0.27165354330708663, "obj2": 0.5963838201776409}, {"determining": "( ( ( Const / FirstVNF_CPU ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),CS )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),FirstVNF_CPU ) / ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ),MLU ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( CRS * Max( ARS,CRS ) )", "choosing": "( ( MUC * MUC ) - ( ( ( MUC * MUC ) - ( MUC / CS ) ) / CS ) )", "obj1": 0.2992125984251969, "obj2": 0.5761184756480313}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) )", "obj1": 0.9330708661417323, "obj2": 0.06526994236978191}, {"determining": "( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Max( ACS,RRS ) )", "choosing": "Max( ( ( MUC + RMSe ) / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.30118110236220474, "obj2": 0.573230162663375}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( CRS * MDR ) * ( Min( Max( DDR,( FirstVNF_Mem * MRS ) ) ,MDR ) / BR ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.3031496062992126, "obj2": 0.5694087384951194}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.3031496062992126, "obj2": 0.5694087384951194}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( ACS * ( ( FirstVNF_Mem_Server - ACS ) / ARS ) ) - ( MDR + RRS ) )", "choosing": "( ( Min( DS ,DS ) + Min( RRSe ,( ( MUM - RMSe ) - DS ) ) ) - ( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU / RRS ) / ( ( MRS * BR ) + BR ) ) ) / ( ACS / ARS ) )", "choosing": "Max( Min( ( CS / CS ) ,( MUM - Min( RRSe ,RCSe ) ) ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * MRS ) - Const ) + AMS ) + FirstVNF_Mem ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( DS - ( Min( CS ,CS ) / RMSe ) ) ,RCSe ) ,( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUR / MUC ) ,Max( ( CS / MLU ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Max( Const,FirstVNF_Mem ) ) / DDR ) - Min( CRS ,MRS ) )", "choosing": "Min( ( CS * MUM ) ,Max( RRSe,( RCSe - Max( ( Max( ( RMSe / CS ),( ( MUM - MLU ) / Max( MUM,RCSe ) ) ) + Min( ( CS - MUR ) ,RCSe ) ),( MLU + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_Mem ) ) / AMS ) ,FirstVNF_CPU ) + MDR ) - FirstVNF_Mem_Server ) - ( AMS - RRS ) )", "choosing": "( Max( Max( RCSe,Min( RMSe ,MLU ) ),Min( MLU ,CS ) ) - Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * FirstVNF_RAM_Server ),Max( ( FirstVNF_CPU - ( ( ( MRS + ( FirstVNF_CPU + MRS ) ) - Const ) / PN ) ),MRS ) ) - ( CRS * ARS ) )", "choosing": "Min( ( DS - RRSe ) ,( RRSe - Min( Min( RCSe ,( RCSe - Max( ( Min( MUR ,MUR ) - ( RRSe + CS ) ),( MUM + MLU ) ) ) ) ,( RRSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + Min( ( Max( CRS,AMS ) * ( ( ( BR / MDR ) + FirstVNF_CPU ) / AMS ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR / Max( ( MUC * DS ),( MUM / MUM ) ) ) - RCSe ) ,Max( Min( ( ( RCSe * CS ) / RCSe ) ,( DS * Min( ( RRSe / Min( DS ,CS ) ) ,( RCSe / MUC ) ) ) ),( ( DS * DS ) + ( ( ( MLU / RMSe ) - Min( DS ,( RCSe + ( MUM * RRSe ) ) ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( Const * DDR ),FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( ( FirstVNF_RAM_Server / ( PN / FirstVNF_RAM ) ) ,( CRS + ( ( Const + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / MRS ) ) ) ) )", "choosing": "Max( Max( ( MLU / RRSe ),( MUC / ( MUC - RRSe ) ) ),( ( ( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) - DS ) - Max( DS,Max( MUC,DS ) ) ) * MUM ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Min( MDR ,( BR - Const ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( MUR,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( Max( MUC,RRSe ) - ( ( Max( ( ( CS * MUC ) + Min( MLU ,DS ) ),CS ) * MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( ( Min( FirstVNF_CPU_Server ,AMS ) / BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "( ( MUM + RMSe ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) + ( ( DDR - FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( BR - Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MLU,CS ),( RMSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - ( ( MDR / ( CRS - MRS ) ) + ( ACS * ( ( FirstVNF_Mem_Server - ACS ) / ARS ) ) ) )", "choosing": "( ( Min( DS ,DS ) + Min( RRSe ,( ( MUM - RMSe ) - DS ) ) ) - ( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( ACS + ( AMS / FirstVNF_Mem ) ) * Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MUC ) - ( Max( ( ( CS / RMSe ) - ( DS - MUR ) ),( ( RRSe - RMSe ) - ( MUC + RRSe ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5500224104196128}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) ) - MDR ) / AMS ) ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / ( CS * MUR ) ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.6842648049071879}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6258486798952774}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( Min( CRS ,BR ),BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,CS ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7838243108185198}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( ( DDR * Max( Const,FirstVNF_Mem ) ) / DDR ) - Min( CRS ,MRS ) )", "choosing": "Min( ( CS * MUM ) ,Max( RRSe,( RCSe - Max( ( Max( ( RMSe / CS ),( ( MUM - MLU ) / Max( MUM,RCSe ) ) ) + Min( ( CS - MUR ) ,RCSe ) ),( MLU + RMSe ) ) ) ) )", "obj1": 0.9645669291338582, "obj2": 0.043301981446223936}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( MDR * FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + ( RCSe * ( CS * MUR ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5302095210865206}, {"determining": "( ( AMS / FirstVNF_Mem ) / Max( ACS,( ( CRS * MDR ) * ( RRS * RRS ) ) ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - Min( Max( RCSe,MUM ) ,( ( MLU / CS ) / RCSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7314625672556405}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( ( AMS * DDR ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( Max( ( MLU + MUM ),( MLU * RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5851381403593713}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * ( ( CS + ( CS * MUR ) ) + MUM ) ) * CS ) - ( MUM - ( MUC * ( MUC / MLU ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.07898106251846738}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06784808502883448}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) / Min( MDR ,Min( Max( ( ( ( MDR + Min( FirstVNF_CPU_Server ,ARS ) ) - FirstVNF_Mem_Server ) - ( Const - AMS ) ),PN ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,Max( Min( RCSe ,( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * ( DS * MUR ) ) ),MUC ) ) / ( ( MUR - RCSe ) / Max( MUC,RRSe ) ) )", "obj1": 0.2637795275590551, "obj2": 0.6082961438203031}, {"determining": "( ( MDR - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM / CS ) ) / Max( MUC,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.025772453053337013}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Min( ACS ,AMS ) ) ) ) * AMS ) + RRS ) )", "choosing": "Min( ( RCSe - Min( Max( MUM,( ( ( MUR + ( CS + MUC ) ) + DS ) / RCSe ) ) ,RCSe ) ) ,Max( MUM,Min( ( MUM - ( MUM - Min( ( RMSe - MUM ) ,( MUC + RCSe ) ) ) ) ,( MUC - MUR ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.595212750095436}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( ( ACS + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) ) ) + ( MDR * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( RMSe - MUC ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5082758184701893}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) )", "choosing": "Max( ( MUM / MUM ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Max( ( ( DDR / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_CPU ) / Min( ( AMS / FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( MUC / Min( MUM ,( ( RRSe - MUM ) * ( RMSe - RRSe ) ) ) ) ,( Min( MUC ,CS ) * MUC ) ),MLU ) / Max( MUC,Max( Min( ( MUC / Min( MUM ,( ( RRSe - MUM ) * ( RMSe - RRSe ) ) ) ) ,( Min( MUC ,CS ) * MUC ) ),MLU ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7096314159324452}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( MDR * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49921015748910624}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ACS - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( ( DS - RCSe ) ,Min( MUR ,MUC ) ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.579965887889439}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( Min( RMSe ,RRSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.9822834645669292, "obj2": 0.020974755598799775}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( FirstVNF_CPU * RRS ) * FirstVNF_Mem_Server )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * ( ( CS / MUC ) * MUC ) ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.2933070866141732, "obj2": 0.5771929661133206}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( MDR * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4994575717376136}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( MUM / MUM ),( Max( Max( CS,RMSe ),( MLU / ( CS / ( RCSe - DS ) ) ) ) / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.08006709634325801}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,FirstVNF_CPU ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "( Min( CRS ,BR ) * Max( ( ( RRS - PN ) * AMS ),DDR ) )", "choosing": "( ( ( Min( MUC ,( RRSe * MUC ) ) - RRSe ) * MUM ) - ( MUC * MUC ) )", "obj1": 0.18503937007874016, "obj2": 0.6923458801292407}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( Max( MUR,MLU ) * CS ) ),Min( MUR ,DS ) )", "obj1": 0.27165354330708663, "obj2": 0.5963838201776409}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( Const / FirstVNF_CPU ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),CS )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Min( ( ( RRSe / ( CS * CS ) ) + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.9094488188976378, "obj2": 0.07907367112985697}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( MUM,MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( ( RRSe - DS ) + MUM ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6919826571194391}, {"determining": "( CRS * Max( ARS,CRS ) )", "choosing": "( ( MUC * MUC ) - ( ( ( MUC * MUC ) - ( MUC / CS ) ) / CS ) )", "obj1": 0.2992125984251969, "obj2": 0.5761184756480313}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) )", "obj1": 0.9330708661417323, "obj2": 0.06526994236978191}, {"determining": "( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Max( ACS,RRS ) )", "choosing": "Max( ( ( MUC + RMSe ) / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.30118110236220474, "obj2": 0.573230162663375}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( CS + ( CS * MUR ) ) + MUM ) ,( MLU * MUM ) )", "obj1": 0.9645669291338582, "obj2": 0.043301981446223936}, {"determining": "( ( CRS * MDR ) * ( Min( Max( DDR,( FirstVNF_Mem * MRS ) ) ,MDR ) / BR ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.3031496062992126, "obj2": 0.5694087384951194}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + Min( Max( DDR,Min( ( CRS * ( Min( FirstVNF_CPU ,MDR ) - Min( FirstVNF_RAM ,BR ) ) ) ,( CRS / FirstVNF_RAM ) ) ) ,BR ) ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.600638914726057}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.3031496062992126, "obj2": 0.5694087384951194}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),FirstVNF_CPU ) / ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ),MLU ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) )", "choosing": "Max( ( MUM / MUM ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( RRSe + ( MUC + ( RCSe * ( CS * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ( FirstVNF_Mem_Server - ACS ) / ARS ) ) - ( MDR + RRS ) )", "choosing": "( ( Min( DS ,DS ) + Min( RRSe ,( ( MUM - RMSe ) - DS ) ) ) - ( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU / RRS ) / ( ( MRS * BR ) + BR ) ) ) / ( ACS / ARS ) )", "choosing": "Max( Min( ( CS / CS ) ,( MUM - Min( RRSe ,RCSe ) ) ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * MRS ) - Const ) + AMS ) + FirstVNF_Mem ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( DS - ( Min( CS ,CS ) / RMSe ) ) ,RCSe ) ,( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( ( Min( MRS ,DDR ) - Max( BR,( FirstVNF_RAM / MRS ) ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM + RCSe ),( MUC * MUC ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / PN ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( RCSe + MUR ) ,Max( DS,( ( ( Max( MUR,Min( RRSe ,MUC ) ) + MUR ) + MUM ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( BR - Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MLU,CS ),( RMSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "Min( Max( FirstVNF_Mem,Min( ( Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) * ( FirstVNF_RAM - Const ) ) ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,BR ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( ( MUM * CS ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5950523039185541}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) ) - MDR ) / AMS ) ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / ( CS * MUR ) ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.6842648049071879}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "( ( ( MUR - RCSe ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5460958515357056}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( MDR * FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + ( RCSe * ( CS * MUR ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5302095210865206}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( Min( CRS ,BR ),BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,CS ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7838243108185198}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) - MDR ) / AMS ) ) )", "choosing": "Min( ( RCSe - Min( ( ( ( CS / MUC ) * MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.2933070866141732, "obj2": 0.5682042746245346}, {"determining": "( ( ( DDR * Max( Const,FirstVNF_Mem ) ) / DDR ) - Min( CRS ,MRS ) )", "choosing": "Min( ( CS * MUM ) ,Max( RRSe,( RCSe - Max( ( Max( ( RMSe / CS ),( ( MUM - MLU ) / Max( MUM,RCSe ) ) ) + Min( ( CS - MUR ) ,RCSe ) ),( MLU + RMSe ) ) ) ) )", "obj1": 0.9645669291338582, "obj2": 0.043301981446223936}, {"determining": "( ( AMS / FirstVNF_Mem ) / Max( ACS,( ( CRS * MDR ) * ( RRS * RRS ) ) ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - Min( Max( RCSe,MUM ) ,( ( MLU / CS ) / RCSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7314625672556405}, {"determining": "( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6258486798952774}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( ( MUC - CS ) / Max( MUC,MLU ) )", "obj1": 0.28346456692913385, "obj2": 0.5925259571125304}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * ( ( CS + ( CS * MUR ) ) + MUM ) ) * CS ) - ( MUM - ( MUC * ( MUC / MLU ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.07898106251846738}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06784808502883448}, {"determining": "( ( MDR - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM / CS ) ) / Max( MUC,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.025772453053337013}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ACS - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( ( DS - RCSe ) ,Min( MUR ,MUC ) ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.579965887889439}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( ( ACS + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) ) ) + ( MDR * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( RMSe - MUC ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5082758184701893}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( ( ( DDR / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_CPU ) / Min( ( AMS / FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( MUC / Min( MUM ,( ( RRSe - MUM ) * ( RMSe - RRSe ) ) ) ) ,( Min( MUC ,CS ) * MUC ) ),MLU ) / Max( MUC,Max( Min( ( MUC / Min( MUM ,( ( RRSe - MUM ) * ( RMSe - RRSe ) ) ) ) ,( Min( MUC ,CS ) * MUC ) ),MLU ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7096314159324452}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( ( MUR / Max( ( MUC - RCSe ),RRSe ) ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5531263884700232}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( ( AMS * DDR ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( Max( ( MLU + MUM ),( MLU * RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5851381403593713}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( Min( RMSe ,RRSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.9822834645669292, "obj2": 0.020974755598799775}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( MUM / MUM ),( Max( Max( CS,RMSe ),( MLU / ( CS / ( RCSe - DS ) ) ) ) / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.08006709634325801}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "( Min( CRS ,BR ) * Max( ( ( RRS - PN ) * AMS ),DDR ) )", "choosing": "( ( ( Min( MUC ,( RRSe * MUC ) ) - RRSe ) * MUM ) - ( MUC * MUC ) )", "obj1": 0.18503937007874016, "obj2": 0.6923458801292407}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,FirstVNF_CPU ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Min( ( ( RRSe / ( CS * CS ) ) + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.9094488188976378, "obj2": 0.07907367112985697}, {"determining": "( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.328740157480315, "obj2": 0.5509167791133991}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( MUM,MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( ( RRSe - DS ) + MUM ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6919826571194391}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),FirstVNF_CPU ) / ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ),MLU ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) )", "obj1": 0.9330708661417323, "obj2": 0.06526994236978191}, {"determining": "( ( ( Const / FirstVNF_CPU ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),CS )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6258486798952774}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( CS + ( CS * MUR ) ) + MUM ) ,( MLU * MUM ) )", "obj1": 0.9645669291338582, "obj2": 0.043301981446223936}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.328740157480315, "obj2": 0.5509167791133991}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) )", "choosing": "Max( ( MUM / MUM ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - ( ( MDR / ( CRS - MRS ) ) + ( ACS * ( ( FirstVNF_Mem_Server - ACS ) / ARS ) ) ) )", "choosing": "( ( Min( DS ,DS ) + Min( RRSe ,( ( MUM - RMSe ) - DS ) ) ) - ( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( RRSe + ( MUC + ( RCSe * ( CS * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ( FirstVNF_Mem_Server - ACS ) / ARS ) ) - ( MDR + RRS ) )", "choosing": "( ( Min( DS ,DS ) + Min( RRSe ,( ( MUM - RMSe ) - DS ) ) ) - ( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU / RRS ) / ( ( MRS * BR ) + BR ) ) ) / ( ACS / ARS ) )", "choosing": "Max( Min( ( CS / CS ) ,( MUM - Min( RRSe ,RCSe ) ) ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * MRS ) - Const ) + AMS ) + FirstVNF_Mem ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( DS - ( Min( CS ,CS ) / RMSe ) ) ,RCSe ) ,( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( Min( Const ,Min( MDR ,FirstVNF_Mem ) ) * ( FirstVNF_RAM - ( ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) * ( PN + Const ) ) ) )", "choosing": "Max( Min( CS ,( Max( ( Max( RRSe,( ( MUR - MUR ) + ( MUM * CS ) ) ) / ( MUR - Min( ( RCSe - RRSe ) ,RMSe ) ) ),CS ) / ( DS / MUR ) ) ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / PN ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( RCSe + MUR ) ,Max( DS,( ( ( Max( MUR,Min( RRSe ,MUC ) ) + MUR ) + MUM ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) ) - MDR ) / AMS ) ) )", "choosing": "Min( ( RCSe - Min( ( ( CS / ( CS * MUR ) ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.6842648049071879}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "( ( ( MUR - RCSe ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5460958515357056}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001069}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( MDR * FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + ( RCSe * ( CS * MUR ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5302095210865206}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( Min( CRS ,BR ),BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,CS ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7838243108185198}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) - MDR ) / AMS ) ) )", "choosing": "Min( ( RCSe - Min( ( ( ( CS / MUC ) * MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.2933070866141732, "obj2": 0.5682042746245346}, {"determining": "( ( AMS / FirstVNF_Mem ) / Max( ACS,( ( CRS * MDR ) * ( RRS * RRS ) ) ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - Min( Max( RCSe,MUM ) ,( ( MLU / CS ) / RCSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7314625672556405}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( ( MUC - CS ) / Max( MUC,MLU ) )", "obj1": 0.28346456692913385, "obj2": 0.5925259571125304}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( ( FirstVNF_CPU * RRS ) * MDR )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * MUC ) ,( CS * MUR ) ) ) ,( MUM + DS ) )", "obj1": 0.23228346456692914, "obj2": 0.6317381374434841}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * ( ( CS + ( CS * MUR ) ) + MUM ) ) * CS ) - ( MUM - ( MUC * ( MUC / MLU ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.07898106251846738}, {"determining": "Min( Max( FirstVNF_Mem,Min( ( Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) * ( FirstVNF_RAM - Const ) ) ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,BR ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( ( MUM * CS ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5950523039185541}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06784808502883448}, {"determining": "( ( MDR - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM / CS ) ) / Max( MUC,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.025772453053337013}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ACS - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( ( DS - RCSe ) ,Min( MUR ,MUC ) ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.579965887889439}, {"determining": "( Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * Max( ( DS / MUM ),Max( MUR,MUC ) ) ) ),Min( MUR ,DS ) )", "obj1": 0.2618110236220472, "obj2": 0.5997182816722153}, {"determining": "( ( MDR - Max( Const,MRS ) ) / Min( MDR ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MLU ,RCSe ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6114603165064477}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) / ( FirstVNF_Mem * ACS ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,Max( Max( CS,( RRSe + MLU ) ),( ( CS - ( RCSe - DS ) ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( ( ( DDR / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_CPU ) / Min( ( AMS / FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( MUC / Min( MUM ,( ( RRSe - MUM ) * ( RMSe - RRSe ) ) ) ) ,( Min( MUC ,CS ) * MUC ) ),MLU ) / Max( MUC,Max( Min( ( MUC / Min( MUM ,( ( RRSe - MUM ) * ( RMSe - RRSe ) ) ) ) ,( Min( MUC ,CS ) * MUC ) ),MLU ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7096314159324452}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( ( MUR / Max( ( MUC - RCSe ),RRSe ) ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5531263884700232}, {"determining": "( Min( CRS ,BR ) * Max( ( ( RRS - PN ) * AMS ),DDR ) )", "choosing": "( ( ( Min( MUC ,( RRSe * MUC ) ) - RRSe ) * MUM ) - ( MUC * MUC ) )", "obj1": 0.18503937007874016, "obj2": 0.6923458801292407}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( ( AMS * DDR ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( Max( ( MLU + MUM ),( MLU * RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5851381403593713}, {"determining": "( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6258486798952774}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( Min( RMSe ,RRSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.9822834645669292, "obj2": 0.020974755598799775}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( MUM / MUM ),( Max( Max( CS,RMSe ),( MLU / ( CS / ( RCSe - DS ) ) ) ) / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.08006709634325801}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,FirstVNF_CPU ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Min( ( ( RRSe / ( CS * CS ) ) + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.9094488188976378, "obj2": 0.07907367112985697}, {"determining": "( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.328740157480315, "obj2": 0.5509167791133991}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),FirstVNF_CPU ) / ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ),MLU ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) )", "obj1": 0.9330708661417323, "obj2": 0.06526994236978191}, {"determining": "( ( ( Const / FirstVNF_CPU ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),CS )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.24015748031496062, "obj2": 0.6258486798952774}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.328740157480315, "obj2": 0.5509167791133991}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( MDR * ( Max( ( ( FirstVNF_Mem_Server + RRS ) * ( ARS - RRS ) ),( RRS / ( FirstVNF_CPU_Server / Max( ( ACS + FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) ) + FirstVNF_RAM_Server ) ) / Min( MDR ,Min( FirstVNF_RAM_Server ,AMS ) ) )", "choosing": "( ( Max( MLU,Max( ( Min( ( MLU - MUC ) ,Min( Min( DS ,RMSe ) ,RRSe ) ) + ( CS + ( ( RMSe + MLU ) + ( MLU - DS ) ) ) ),RRSe ) ) / Max( MUR,RCSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( BR - Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MLU,CS ),( RMSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - ( ( MDR / ( CRS - MRS ) ) + ( ACS * ( ( FirstVNF_Mem_Server - ACS ) / ARS ) ) ) )", "choosing": "( ( Min( DS ,DS ) + Min( RRSe ,( ( MUM - RMSe ) - DS ) ) ) - ( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( ( CRS * MDR ) - FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( ( CS * MUR ) + ( MUC + Min( MUR ,( MUM + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Min( MDR ,FirstVNF_Mem ) ) * ( FirstVNF_RAM - ( ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) * ( PN + Const ) ) ) )", "choosing": "Max( Min( CS ,( Max( ( Max( RRSe,( ( MUR - MUR ) + ( MUM * CS ) ) ) / ( MUR - Min( ( RCSe - RRSe ) ,RMSe ) ) ),CS ) / ( DS / MUR ) ) ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) ) ) ) )", "choosing": "Min( ( RCSe - Min( ( ( ( CS / MUC ) * MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.28346456692913385, "obj2": 0.5719446907732966}, {"determining": "Min( Max( FirstVNF_Mem,Min( ( Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) * ( FirstVNF_RAM - Const ) ) ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,BR ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( ( MUM * CS ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5950523039185541}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001069}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( Min( CRS ,BR ),BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,CS ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7838243108185198}, {"determining": "( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5505085895085584}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,( MDR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( ( DS * MUR ) * CS ) + ( CS * MUR ) ) + MUM ) ,( MLU * MUM ) )", "obj1": 0.9133858267716536, "obj2": 0.07176800984206497}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( MDR - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM / CS ) ) / Max( MUC,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.025772453053337013}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06784808502883448}, {"determining": "( ( FirstVNF_CPU * RRS ) * MDR )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * MUC ) ,( CS * MUR ) ) ) ,( MUM + DS ) )", "obj1": 0.23228346456692914, "obj2": 0.6317381374434841}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * Max( ( DS / MUM ),Max( MUR,MUC ) ) ) ),Min( MUR ,DS ) )", "obj1": 0.2618110236220472, "obj2": 0.5997182816722153}, {"determining": "( ( MDR - Max( Const,MRS ) ) / Min( MDR ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MLU ,RCSe ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6114603165064477}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( AMS - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( ( MUR - MLU ) * RRSe ) / Max( MUC,( MUR * RCSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6282531767017506}, {"determining": "( Max( ( ( DDR / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + FirstVNF_Mem_Server ),FirstVNF_CPU ) / Min( ( AMS / FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( MUC / Min( MUM ,( ( RRSe - MUM ) * ( RMSe - RRSe ) ) ) ) ,( Min( MUC ,CS ) * MUC ) ),MLU ) / Max( MUC,Max( Min( ( MUC / Min( MUM ,( ( RRSe - MUM ) * ( RMSe - RRSe ) ) ) ) ,( Min( MUC ,CS ) * MUC ) ),MLU ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7096314159324452}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( ( MUR / Max( ( MUC - RCSe ),RRSe ) ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5531263884700232}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( ( Min( ( Max( CRS,AMS ) * ( ( DDR - FirstVNF_CPU ) / FirstVNF_RAM ) ) ,PN ) + BR ) * FirstVNF_CPU ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + RMSe ) ) ) + MLU ),MLU ) )", "obj1": 0.1830708661417323, "obj2": 0.6918314287702436}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / ( MLU * RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6198629643478772}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( Min( RMSe ,RRSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.9822834645669292, "obj2": 0.020974755598799775}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( MUM / MUM ),( Max( Max( CS,RMSe ),( MLU / ( CS / ( RCSe - DS ) ) ) ) / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.08006709634325801}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Min( ( ( RRSe / ( CS * CS ) ) + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.9094488188976378, "obj2": 0.07907367112985697}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,FirstVNF_CPU ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) )", "obj1": 0.9330708661417323, "obj2": 0.06526994236978191}, {"determining": "( ( ( Const / FirstVNF_CPU ) / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),CS )", "obj1": 0.3110236220472441, "obj2": 0.5599006445983051}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),FirstVNF_CPU ) / ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) ),MLU ) )", "obj1": 0.3051181102362205, "obj2": 0.5628767808506903}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) / ( FirstVNF_Mem * ACS ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,Max( Max( CS,( RRSe + MLU ) ),( ( CS - ( RCSe - DS ) ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( MRS ,Const ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),( Max( CS,CS ) + RRSe ) )", "obj1": 0.937007874015748, "obj2": 0.064740941710343}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / PN ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( RCSe + MUR ) ,Max( DS,( ( ( Max( MUR,Min( RRSe ,MUC ) ) + MUR ) + MUM ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( BR - Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MLU,CS ),( RMSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - ( ( MDR / ( CRS - MRS ) ) + ( ACS * ( ( FirstVNF_Mem_Server - ACS ) / ARS ) ) ) )", "choosing": "( ( Min( DS ,DS ) + Min( RRSe ,( ( MUM - RMSe ) - DS ) ) ) - ( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( CRS * MDR ) * ( BR - Min( AMS ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( ( CRS * MDR ) - FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( ( CS * MUR ) + ( MUC + Min( MUR ,( MUM + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - ( MUC * ( Max( ( DS / MUM ),( MUR * MUC ) ) / ( MUC + DS ) ) ) ) )", "obj1": 0.75, "obj2": 0.17953259615581263}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) ) ) ) )", "choosing": "Min( ( RCSe - Min( ( ( ( CS / MUC ) * MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.28346456692913385, "obj2": 0.5719446907732966}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "( ( ( Min( ( Max( CRS,AMS ) * ( DDR + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server / RRS ) ) ) ) ,Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) ) + BR ) * ( AMS / PN ) ) - ( RRS + AMS ) )", "choosing": "Max( Min( CS ,( Max( RCSe,CS ) / ( Max( MUM,( Max( MLU,Min( DS ,MUC ) ) * MUR ) ) + ( MUM / RRSe ) ) ) ),Max( DS,MLU ) )", "obj1": 0.9488188976377953, "obj2": 0.04662302735044884}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( Min( CRS ,BR ),BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,CS ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7838243108185198}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( DDR / ( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5504388773434568}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,( MDR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( ( DS * MUR ) * CS ) + ( CS * MUR ) ) + MUM ) ,( MLU * MUM ) )", "obj1": 0.9133858267716536, "obj2": 0.07176800984206497}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.019434271990543407}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001069}, {"determining": "( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "( ( FirstVNF_CPU * RRS ) * MDR )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * MUC ) ,( CS * MUR ) ) ) ,( MUM + DS ) )", "obj1": 0.23228346456692914, "obj2": 0.6317381374434841}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( ( MUR / Max( ( MUC - RCSe ),RRSe ) ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5531263884700232}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - MLU ) * RRSe ) / Max( MUC,( MUR * RCSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.06362897240730715}, {"determining": "( Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * Max( ( DS / MUM ),Max( MUR,MUC ) ) ) ),Min( MUR ,DS ) )", "obj1": 0.2618110236220472, "obj2": 0.5997182816722153}, {"determining": "( ( MDR - Max( Const,MRS ) ) / Min( MDR ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MLU ,RCSe ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6114603165064477}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( AMS - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( ( MUR - MLU ) * RRSe ) / Max( MUC,( MUR * RCSe ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6282531767017506}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( ( Min( ( Max( CRS,AMS ) * ( ( DDR - FirstVNF_CPU ) / FirstVNF_RAM ) ) ,PN ) + BR ) * FirstVNF_CPU ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + RMSe ) ) ) + MLU ),MLU ) )", "obj1": 0.1830708661417323, "obj2": 0.6918314287702436}, {"determining": "Min( Max( FirstVNF_Mem,Min( ( Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) * ( FirstVNF_RAM - Const ) ) ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,BR ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( ( MUM * CS ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5950523039185541}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / ( MLU * RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6198629643478772}, {"determining": "( Max( AMS,Max( MRS,Max( ( FirstVNF_RAM_Server * DDR ),MRS ) ) ) - ( FirstVNF_RAM + RRS ) )", "choosing": "Min( ( ( ( MUC / CS ) / ( MUM / RRSe ) ) - RRSe ) ,( RRSe - DS ) )", "obj1": 0.35826771653543305, "obj2": 0.5250593865685473}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( MUM / MUM ),( Max( Max( CS,RMSe ),( MLU / ( CS / ( RCSe - DS ) ) ) ) / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.08006709634325801}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Min( ( ( RRSe / ( CS * CS ) ) + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.9094488188976378, "obj2": 0.07907367112985697}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( AMS / PN ) - BR ) / ( ( ( FirstVNF_CPU - FirstVNF_CPU ) * BR ) + ( ( DDR * ( BR + MRS ) ) * MRS ) ) )", "choosing": "( Min( DS ,MUM ) / Max( RRSe,( Max( MUR,MUC ) + Max( MLU,( ( MUC + ( Min( MLU ,CS ) + ( MUC + CS ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5505085895085584}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) / ( FirstVNF_Mem * ACS ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,Max( Max( CS,( RRSe + MLU ) ),( ( CS - ( RCSe - DS ) ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Min( Const ,Min( MDR ,FirstVNF_Mem ) ) * ( FirstVNF_RAM - ( ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) * ( PN + Const ) ) ) )", "choosing": "Max( Min( CS ,( Max( ( Max( RRSe,( ( MUR - MUR ) + ( MUM * CS ) ) ) / ( MUR - Min( ( RCSe - RRSe ) ,RMSe ) ) ),CS ) / ( DS / MUR ) ) ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / PN ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( RCSe + MUR ) ,Max( DS,( ( ( Max( MUR,Min( RRSe ,MUC ) ) + MUR ) + MUM ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( BR - Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MLU,CS ),( RMSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUR ,( Max( ( ( ( RRSe - DS ) + MUM ) - RMSe ),( ( ( DS / MLU ) * MUC ) + Min( RRSe ,CS ) ) ) / ( ( MLU / RMSe ) / RCSe ) ) ) * MUC ) - ( Max( MUC,RRSe ) / ( DS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * MDR ) * ( BR - Min( AMS ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - ( MUC * ( Max( ( DS / MUM ),( MUR * MUC ) ) / ( MUC + DS ) ) ) ) )", "obj1": 0.75, "obj2": 0.17953259615581263}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( Max( AMS,Max( Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ),( Min( BR ,( FirstVNF_CPU_Server / AMS ) ) + ARS ) ) ) / ( FirstVNF_CPU_Server * Min( Max( ( MDR * CRS ),AMS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Min( ( DS / MUM ) ,MLU ) ) / Max( MUC,Max( Min( ( ( Max( MUC,DS ) * RCSe ) - Min( ( DS / CS ) ,CS ) ) ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.799843523162675}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) ) ) ) )", "choosing": "Min( ( RCSe - Min( ( ( ( CS / MUC ) * MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.28346456692913385, "obj2": 0.5719446907732966}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "( ( ( Min( ( Max( CRS,AMS ) * ( DDR + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server / RRS ) ) ) ) ,Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) ) + BR ) * ( AMS / PN ) ) - ( RRS + AMS ) )", "choosing": "Max( Min( CS ,( Max( RCSe,CS ) / ( Max( MUM,( Max( MLU,Min( DS ,MUC ) ) * MUR ) ) + ( MUM / RRSe ) ) ) ),Max( DS,MLU ) )", "obj1": 0.9488188976377953, "obj2": 0.04662302735044884}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( Min( CRS ,BR ),BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,CS ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7838243108185198}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( ( DDR / ( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5504388773434568}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,( MDR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( ( DS * MUR ) * CS ) + ( CS * MUR ) ) + MUM ) ,( MLU * MUM ) )", "obj1": 0.9133858267716536, "obj2": 0.07176800984206497}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( ( FirstVNF_CPU * RRS ) * MDR )", "choosing": "Min( ( RCSe - Min( ( ( CS / MUC ) * MUC ) ,( CS * MUR ) ) ) ,( MUM + DS ) )", "obj1": 0.23228346456692914, "obj2": 0.6317381374434841}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.019434271990543407}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001069}, {"determining": "( ( MDR * CRS ) * ( AMS + ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( DS + MUM ) ) ,( MUR + RRSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5252472529417518}, {"determining": "( ( MDR - Max( Const,MRS ) ) / Min( MDR ,( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MLU ,RCSe ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6114603165064477}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( ( MUR / Max( ( MUC - RCSe ),RRSe ) ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5531263884700232}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.9291338582677166, "obj2": 0.06329232557111311}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( ( Min( ( Max( CRS,AMS ) * ( ( DDR - FirstVNF_CPU ) / FirstVNF_RAM ) ) ,PN ) + BR ) * FirstVNF_CPU ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + RMSe ) ) ) + MLU ),MLU ) )", "obj1": 0.1830708661417323, "obj2": 0.6918314287702436}, {"determining": "( Max( AMS,Max( MRS,Max( ( FirstVNF_RAM_Server * DDR ),MRS ) ) ) - ( FirstVNF_RAM + RRS ) )", "choosing": "Min( ( ( ( MUC / CS ) / ( MUM / RRSe ) ) - RRSe ) ,( RRSe - DS ) )", "obj1": 0.35826771653543305, "obj2": 0.5250593865685473}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( MUM / MUM ),( Max( Max( CS,RMSe ),( MLU / ( CS / ( RCSe - DS ) ) ) ) / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.08006709634325801}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Min( ( ( RRSe / ( CS * CS ) ) + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.9094488188976378, "obj2": 0.07907367112985697}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5505085895085584}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / ( MLU * RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6198629643478772}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) / ( FirstVNF_Mem * ACS ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,Max( Max( CS,( RRSe + MLU ) ),( ( CS - ( RCSe - DS ) ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( ( CRS * MDR ) - FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( ( CS * MUR ) + ( MUC + Min( MUR ,( MUM + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Min( MDR ,FirstVNF_Mem ) ) * ( FirstVNF_RAM - ( ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) * ( PN + Const ) ) ) )", "choosing": "Max( Min( CS ,( Max( ( Max( RRSe,( ( MUR - MUR ) + ( MUM * CS ) ) ) / ( MUR - Min( ( RCSe - RRSe ) ,RMSe ) ) ),CS ) / ( DS / MUR ) ) ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / PN ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( RCSe + MUR ) ,Max( DS,( ( ( Max( MUR,Min( RRSe ,MUC ) ) + MUR ) + MUM ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( BR - Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MLU,CS ),( RMSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( PN + Max( ( RRS + Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_Mem_Server + AMS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU_Server / ( DDR + ( DDR + CRS ) ) ) ) ) ) * ( ( ACS / ( DDR / CRS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( RRSe,( RRSe - MUC ) ),( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( ( ( DS / MLU ) * MUC ),MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( ( MLU / RMSe ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUR ,( Max( ( ( ( RRSe - DS ) + MUM ) - RMSe ),( ( ( DS / MLU ) * MUC ) + Min( RRSe ,CS ) ) ) / ( ( MLU / RMSe ) / RCSe ) ) ) * MUC ) - ( Max( MUC,RRSe ) / ( DS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - ( MUC * ( Max( ( DS / MUM ),( MUR * MUC ) ) / ( MUC + DS ) ) ) ) )", "obj1": 0.75, "obj2": 0.17953259615581263}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Max( AMS,Max( Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ),( Min( BR ,( FirstVNF_CPU_Server / AMS ) ) + ARS ) ) ) / ( FirstVNF_CPU_Server * Min( Max( ( MDR * CRS ),AMS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Min( ( DS / MUM ) ,MLU ) ) / Max( MUC,Max( Min( ( ( Max( MUC,DS ) * RCSe ) - Min( ( DS / CS ) ,CS ) ) ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.799843523162675}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) ) ) ) )", "choosing": "Min( ( RCSe - Min( ( ( ( CS / MUC ) * MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.28346456692913385, "obj2": 0.5719446907732966}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "( ( ( Min( ( Max( CRS,AMS ) * ( DDR + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server / RRS ) ) ) ) ,Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) ) + BR ) * ( AMS / PN ) ) - ( RRS + AMS ) )", "choosing": "Max( Min( CS ,( Max( RCSe,CS ) / ( Max( MUM,( Max( MLU,Min( DS ,MUC ) ) * MUR ) ) + ( MUM / RRSe ) ) ) ),Max( DS,MLU ) )", "obj1": 0.9488188976377953, "obj2": 0.04662302735044884}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( Min( CRS ,BR ),BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,CS ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7838243108185198}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( DDR / ( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5504388773434568}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,( MDR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( ( DS * MUR ) * CS ) + ( CS * MUR ) ) + MUM ) ,( MLU * MUM ) )", "obj1": 0.9133858267716536, "obj2": 0.07176800984206497}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.019434271990543407}, {"determining": "Min( Min( DDR ,( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( MUC * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7750615511036791}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001069}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( ( MUR / Max( ( MUC - RCSe ),RRSe ) ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5531263884700232}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.9291338582677166, "obj2": 0.06329232557111311}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( MDR - Max( Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( FirstVNF_Mem_Server * ( RRS - RRS ) ) ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( RCSe,RRSe ) )", "obj1": 0.9881889763779528, "obj2": 0.01365398863657898}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR + Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) - ( ( Min( ( Max( CRS,AMS ) * ( ( DDR - FirstVNF_CPU ) / FirstVNF_RAM ) ) ,PN ) + BR ) * FirstVNF_CPU ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + RMSe ) ) ) + MLU ),MLU ) )", "obj1": 0.1830708661417323, "obj2": 0.6918314287702436}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( MUM / MUM ),( Max( Max( CS,RMSe ),( MLU / ( CS / ( RCSe - DS ) ) ) ) / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.08006709634325801}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) ) )", "choosing": "Min( ( ( RRSe / ( CS * CS ) ) + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.9094488188976378, "obj2": 0.07907367112985697}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5505085895085584}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / ( MLU * RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6198629643478772}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ARS - Min( ( ( Min( ( Min( FirstVNF_RAM ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) ,RRS ) * ( Const - FirstVNF_CPU_Server ) ) / MRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) - Min( RCSe ,Max( ( MLU - MUR ),MUM ) ) ) ,MUM ) + MUM ) * CS ) - ( CS * RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.617314849796685}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) / ( FirstVNF_Mem * ACS ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,Max( Max( CS,( RRSe + MLU ) ),( ( CS - ( RCSe - DS ) ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( ( CRS * MDR ) * ( BR - Min( AMS ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( ( CRS * MDR ) - FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe * ( CS * MUR ) ) ,( ( CS * MUR ) + ( MUC + Min( MUR ,( MUM + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Min( MDR ,FirstVNF_Mem ) ) * ( FirstVNF_RAM - ( ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) * ( PN + Const ) ) ) )", "choosing": "Max( Min( CS ,( Max( ( Max( RRSe,( ( MUR - MUR ) + ( MUM * CS ) ) ) / ( MUR - Min( ( RCSe - RRSe ) ,RMSe ) ) ),CS ) / ( DS / MUR ) ) ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,DDR ) ) * ( MRS - ( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / PN ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( RCSe + MUR ) ,Max( DS,( ( ( Max( MUR,Min( RRSe ,MUC ) ) + MUR ) + MUM ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( BR - Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MLU,CS ),( RMSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( Min( Const ,Min( MDR ,( ( FirstVNF_CPU_Server - ARS ) - Const ) ) ) * ( FirstVNF_RAM + Const ) )", "choosing": "Max( Min( CS ,( Max( ( Max( RRSe,( ( MLU - MUR ) + ( MUM * CS ) ) ) / Min( MUR ,Min( ( RCSe - RMSe ) ,( RRSe / RCSe ) ) ) ),CS ) / ( DS / MUR ) ) ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( ( ( DS / MLU ) * MUC ),MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( ( MLU / RMSe ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - ( MUC * ( Max( ( DS / MUM ),( MUR * MUC ) ) / ( MUC + DS ) ) ) ) )", "obj1": 0.75, "obj2": 0.17953259615581263}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.46653543307086615, "obj2": 0.3372592150298493}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) ) ) ) )", "choosing": "Min( ( RCSe - Min( ( ( ( CS / MUC ) * MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.28346456692913385, "obj2": 0.5719446907732966}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.019434271990543407}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( DDR / ( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) ) ),RRSe ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5504388773434568}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,( MDR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( ( DS * MUR ) * CS ) + ( CS * MUR ) ) + MUM ) ,( MLU * MUM ) )", "obj1": 0.9133858267716536, "obj2": 0.07176800984206497}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7978207101422341}, {"determining": "( ( ( Min( ( Max( CRS,AMS ) * ( DDR + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server / RRS ) ) ) ) ,Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) ) + BR ) * ( AMS / PN ) ) - ( RRS + AMS ) )", "choosing": "Max( Min( CS ,( Max( RCSe,CS ) / ( Max( MUM,( Max( MLU,Min( DS ,MUC ) ) * MUR ) ) + ( MUM / RRSe ) ) ) ),Max( DS,MLU ) )", "obj1": 0.9488188976377953, "obj2": 0.04662302735044884}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001069}, {"determining": "( Min( Min( ARS ,FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU_Server ,RRS ) ) / ( FirstVNF_CPU - Max( DDR,Min( Min( Min( ( RRS - MRS ) ,( BR - ( AMS + FirstVNF_CPU_Server ) ) ) ,PN ) ,ACS ) ) ) )", "choosing": "Max( ( RRSe - ( ( MUR * Max( ( ( RMSe * ( RCSe - DS ) ) - Max( ( CS * RCSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / ( ( Max( MUC,Max( ( MUC + MUM ),( MLU * MLU ) ) ) / ( Max( RMSe,MLU ) * Max( MUR,( RCSe / MUR ) ) ) ) + CS ) ) ),Min( ( RCSe - ( ( ( Max( ( RCSe + MLU ),MLU ) - MUM ) * ( ( ( DS / MUM ) - ( RCSe - MUR ) ) - Min( ( RMSe - RMSe ) ,Max( MLU,RCSe ) ) ) ) - DS ) ) ,( RMSe + ( MUM / ( Max( RCSe,RRSe ) + ( Min( CS ,CS ) + MUC ) ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7978207101422341}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( ( MUR / Max( ( MUC - RCSe ),RRSe ) ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5531263884700232}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.9291338582677166, "obj2": 0.06329232557111311}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MUR ) ,( ( Min( DS ,( MUC - MUC ) ) - DS ) / ( ( ( DS - MLU ) * ( MUR + MLU ) ) + ( DS / DS ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0335552295063453}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( MUM / MUM ),( Max( Max( CS,RMSe ),( MLU / ( CS / ( RCSe - DS ) ) ) ) / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.08006709634325801}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const + ( ( Max( CRS,AMS ) * ( ( DDR - FirstVNF_CPU ) / FirstVNF_RAM ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + RMSe ) ) ) + Min( ( ( RCSe * CS ) / RCSe ) ,( Min( ( RRSe / Min( DS ,MLU ) ) ,( RCSe / MUC ) ) * RRSe ) ) ),MLU ) )", "obj1": 0.9094488188976378, "obj2": 0.07866984571357327}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( MDR - ( FirstVNF_Mem - PN ) ) / ( ( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - Min( Const ,MRS ) ) - ( RRS / PN ) ) )", "choosing": "( ( MUC - CS ) / Max( ( MUR / Min( DS ,( ( ( MUM - RRSe ) / MUC ) + DS ) ) ),MLU ) )", "obj1": 0.9468503937007874, "obj2": 0.050848488744944235}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( DDR / Min( ACS ,( FirstVNF_Mem - DDR ) ) ) / ( ARS / ARS ) )", "choosing": "Max( ( Max( MLU,MLU ) + ( MUR - MUC ) ),( MUR / Max( ( MUC - RCSe ),RRSe ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5505085895085584}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( RRS + MDR ) - ( ( AMS + BR ) * FirstVNF_CPU ) )", "choosing": "( ( DS - RCSe ) + Max( CS,MUR ) )", "obj1": 0.9665354330708661, "obj2": 0.034841146366621126}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) / ( FirstVNF_Mem * ACS ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,Max( Max( CS,( RRSe + MLU ) ),( ( CS - ( RCSe - DS ) ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * PN ) - Max( BR,ACS ) ) )", "choosing": "Max( ( RRSe - ( MUC - DS ) ),( RMSe + ( ( DS - Min( RRSe ,MLU ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( Const / FirstVNF_CPU ) / Max( ACS,RRS ) )", "choosing": "Max( ( RRSe / ( CS * CS ) ),Min( MUR ,DS ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Max( ( DS * MUC ),( RRSe / ( CS * CS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5518019952615114}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) - ( RRS / PN ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( MDR - ( FirstVNF_Mem - PN ) ) / ( ( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - Min( Const ,MRS ) ) - ( RRS / PN ) ) )", "choosing": "( ( MUC - CS ) / Max( ( MUR / Min( DS ,( ( ( MUM - RRSe ) / MUC ) + DS ) ) ),MLU ) )", "obj1": 0.9468503937007874, "obj2": 0.050848488744944235}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUR ,( Max( ( ( ( RRSe - DS ) + MUM ) - RMSe ),( ( ( DS / MLU ) * MUC ) + Min( RRSe ,CS ) ) ) / ( ( MLU / RMSe ) / RCSe ) ) ) * MUC ) - ( Max( MUC,RRSe ) / ( DS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( Min( Const ,Min( MDR ,( ( FirstVNF_CPU_Server - ARS ) - Const ) ) ) * ( FirstVNF_RAM + Const ) )", "choosing": "Max( Min( CS ,( Max( ( Max( RRSe,( ( MLU - MUR ) + ( MUM * CS ) ) ) / Min( MUR ,Min( ( RCSe - RMSe ) ,( RRSe / RCSe ) ) ) ),CS ) / ( DS / MUR ) ) ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Min( MDR ,( ( FirstVNF_CPU_Server - ARS ) - Const ) ) ) * ( FirstVNF_RAM + Const ) )", "choosing": "Max( Min( CS ,( Max( ( Max( RRSe,( ( MLU - MUR ) + ( MUM * CS ) ) ) / Min( MUR ,Min( ( RCSe - RMSe ) ,( RRSe / RCSe ) ) ) ),CS ) / ( DS / MUR ) ) ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - ( MUC * ( Max( ( DS / MUM ),( MUR * MUC ) ) / ( MUC + DS ) ) ) ) )", "obj1": 0.75, "obj2": 0.17953259615581263}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001068}, {"determining": "( ( FirstVNF_CPU + MDR ) + ( FirstVNF_CPU + MDR ) )", "choosing": "( ( MLU * ( DS * RCSe ) ) + ( MUR / DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8197532285472972}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) ) ) ) )", "choosing": "Min( ( RCSe - Min( ( ( ( CS / MUC ) * MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.28346456692913385, "obj2": 0.5719446907732966}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,( MDR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( ( DS * MUR ) * CS ) + ( CS * MUR ) ) + MUM ) ,( MLU * MUM ) )", "obj1": 0.9133858267716536, "obj2": 0.07176800984206497}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "( ( ( Min( ( Max( CRS,AMS ) * ( DDR + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server / RRS ) ) ) ) ,Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) ) + BR ) * ( AMS / PN ) ) - ( RRS + AMS ) )", "choosing": "Max( Min( CS ,( Max( RCSe,CS ) / ( Max( MUM,( Max( MLU,Min( DS ,MUC ) ) * MUR ) ) + ( MUM / RRSe ) ) ) ),Max( DS,MLU ) )", "obj1": 0.9488188976377953, "obj2": 0.04662302735044884}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Min( ( FirstVNF_RAM_Server + ( ( PN - FirstVNF_CPU ) / PN ) ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * DDR )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),DS )", "obj1": 0.9665354330708661, "obj2": 0.02193404204765623}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.019434271990543407}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.9291338582677166, "obj2": 0.06329232557111311}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( MUM / MUM ),( Max( Max( CS,RMSe ),( MLU / ( CS / ( RCSe - DS ) ) ) ) / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.08006709634325801}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const + ( ( Max( CRS,AMS ) * ( ( DDR - FirstVNF_CPU ) / FirstVNF_RAM ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + RMSe ) ) ) + Min( ( ( RCSe * CS ) / RCSe ) ,( Min( ( RRSe / Min( DS ,MLU ) ) ,( RCSe / MUC ) ) * RRSe ) ) ),MLU ) )", "obj1": 0.9094488188976378, "obj2": 0.07866984571357327}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( MDR - ( FirstVNF_Mem - PN ) ) / ( ( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - Min( Const ,MRS ) ) - ( RRS / PN ) ) )", "choosing": "( ( MUC - CS ) / Max( ( MUR / Min( DS ,( ( ( MUM - RRSe ) / MUC ) + DS ) ) ),MLU ) )", "obj1": 0.9468503937007874, "obj2": 0.050848488744944235}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) / ( FirstVNF_Mem * ACS ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,Max( Max( CS,( RRSe + MLU ) ),( ( CS - ( RCSe - DS ) ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * PN ) - Max( BR,ACS ) ) )", "choosing": "Max( ( RRSe - ( MUC - DS ) ),( RMSe + ( ( DS - Min( RRSe ,MLU ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) - ( RRS / PN ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( MDR - ( FirstVNF_Mem - PN ) ) / ( ( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - Min( Const ,MRS ) ) - ( RRS / PN ) ) )", "choosing": "( ( MUC - CS ) / Max( ( MUR / Min( DS ,( ( ( MUM - RRSe ) / MUC ) + DS ) ) ),MLU ) )", "obj1": 0.9468503937007874, "obj2": 0.050848488744944235}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( ( ( DS / MLU ) * MUC ),MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( ( MLU / RMSe ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,AMS ) + MRS ) + FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUR ,( Max( ( ( ( RRSe - DS ) + MUM ) - RMSe ),( ( ( DS / MLU ) * MUC ) + Min( RRSe ,CS ) ) ) / ( ( MLU / RMSe ) / RCSe ) ) ) * MUC ) - ( Max( MUC,RRSe ) / ( DS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Max( ( RRS + Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_Mem_Server + AMS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU_Server / ( DDR + CRS ) ) ) ) * ( ( ACS / ( DDR / CRS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( RRSe,( RRSe - MUC ) ),( MUR / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( PN + Max( ( RRS + Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_Mem_Server + AMS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU_Server / ( DDR + CRS ) ) ) ) ) * ( ( ACS / ( DDR / CRS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( RRSe,( RRSe - MUC ) ),( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( PN + Max( ( RRS + Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_Mem_Server + AMS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU_Server / ( DDR + CRS ) ) ) ) ) * ( ( ACS / ( DDR / CRS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( RRSe,( RRSe - MUC ) ),( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( Min( ARS ,Min( MDR ,( Max( Min( AMS ,RRS ),RRS ) * ( MDR / Min( RRS ,MDR ) ) ) ) ) * ( Min( ( Max( CRS,PN ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_RAM_Server ) ) + DDR ) ) ,( ( ACS + ACS ) / Max( MRS,FirstVNF_Mem ) ) ) + BR ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( ( MUM - MLU ) / RCSe ),( RMSe * ( Max( CS,MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Min( MDR ,( ( FirstVNF_CPU_Server - ARS ) - Const ) ) ) * ( FirstVNF_RAM + Const ) )", "choosing": "Max( Min( CS ,( Max( ( Max( RRSe,( ( MLU - MUR ) + ( MUM * CS ) ) ) / Min( MUR ,Min( ( RCSe - RMSe ) ,( RRSe / RCSe ) ) ) ),CS ) / ( DS / MUR ) ) ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - ( MUC * ( Max( ( DS / MUM ),( MUR * MUC ) ) / ( MUC + DS ) ) ) ) )", "obj1": 0.75, "obj2": 0.17953259615581263}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001068}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / ( RRS + ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) ) ) ) )", "choosing": "Min( ( RCSe - Min( ( ( ( CS / MUC ) * MUC ) * MUC ) ,RCSe ) ) ,( MUM + DS ) )", "obj1": 0.28346456692913385, "obj2": 0.5719446907732966}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Min( ( FirstVNF_RAM_Server + ( ( PN - FirstVNF_CPU ) / PN ) ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * DDR )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),DS )", "obj1": 0.9665354330708661, "obj2": 0.02193404204765623}, {"determining": "( ( ( Min( ( Max( CRS,AMS ) * ( DDR + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server / RRS ) ) ) ) ,Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) ) + BR ) * ( AMS / PN ) ) - ( RRS + AMS ) )", "choosing": "Max( Min( CS ,( Max( RCSe,CS ) / ( Max( MUM,( Max( MLU,Min( DS ,MUC ) ) * MUR ) ) + ( MUM / RRSe ) ) ) ),Max( DS,MLU ) )", "obj1": 0.9488188976377953, "obj2": 0.04662302735044884}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,( MDR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( ( DS * MUR ) * CS ) + ( CS * MUR ) ) + MUM ) ,( MLU * MUM ) )", "obj1": 0.9133858267716536, "obj2": 0.07176800984206497}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.9291338582677166, "obj2": 0.06329232557111311}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( Min( MDR ,( Max( Min( AMS ,RRS ),RRS ) * ( MDR / Min( RRS ,MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Min( MUC ,CS ),( MUM - MLU ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6302959854223175}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( MDR - ( FirstVNF_Mem - PN ) ) / ( ( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - Min( Const ,MRS ) ) - ( RRS / PN ) ) )", "choosing": "( ( MUC - CS ) / Max( ( MUR / Min( DS ,( ( ( MUM - RRSe ) / MUC ) + DS ) ) ),MLU ) )", "obj1": 0.9468503937007874, "obj2": 0.050848488744944235}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / Max( ( MRS + ARS ),BR ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + Max( RRSe,MUM ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( MUM,( MUR * RMSe ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9035433070866141, "obj2": 0.08186506538399121}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( MRS + ARS ) )", "choosing": "( Max( Max( RRSe,Max( RRSe,MUM ) ),( ( ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ) ) + ( ( RMSe - ( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUR - MUC ) ) ) * RRSe ) ) / Max( MUC,( MUR + MUC ) ) )", "obj1": 0.9114173228346457, "obj2": 0.07577421328558594}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( MUM / MUM ),( Max( Max( CS,RMSe ),( MLU / ( CS / ( RCSe - DS ) ) ) ) / RCSe ) )", "obj1": 0.90748031496063, "obj2": 0.08006709634325801}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const + ( ( Max( CRS,AMS ) * ( ( DDR - FirstVNF_CPU ) / FirstVNF_RAM ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + RMSe ) ) ) + Min( ( ( RCSe * CS ) / RCSe ) ,( Min( ( RRSe / Min( DS ,MLU ) ) ,( RCSe / MUC ) ) * RRSe ) ) ),MLU ) )", "obj1": 0.9094488188976378, "obj2": 0.07866984571357327}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) / ( FirstVNF_Mem * ACS ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,Max( Max( CS,( RRSe + MLU ) ),( ( CS - ( RCSe - DS ) ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * PN ) - Max( BR,ACS ) ) )", "choosing": "Max( ( RRSe - ( MUC - DS ) ),( RMSe + ( ( DS - Min( RRSe ,MLU ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) - ( RRS / PN ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}], "19": [{"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( MUC,RRSe ) ,( ( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) + MLU ) + DS ) ) - ( ( DS / MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Min( MDR ,( Max( Min( AMS ,RRS ),RRS ) * ( MDR / Min( RRS ,MDR ) ) ) ) ) * ( Min( ( Max( CRS,PN ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_RAM_Server ) ) + DDR ) ) ,( ( ACS + ACS ) / Max( MRS,FirstVNF_Mem ) ) ) + BR ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( ( MUM - MLU ) / RCSe ),( RMSe * ( Max( CS,MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - ( MUC * ( Max( ( DS / MUM ),( MUR * MUC ) ) / ( MUC + DS ) ) ) ) )", "obj1": 0.75, "obj2": 0.17953259615581263}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001068}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Min( ( FirstVNF_RAM_Server + ( ( PN - FirstVNF_CPU ) / PN ) ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * DDR )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),DS )", "obj1": 0.9665354330708661, "obj2": 0.02193404204765623}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.9291338582677166, "obj2": 0.06329232557111311}, {"determining": "( ( MDR - ( FirstVNF_Mem - PN ) ) / ( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) - Min( Const ,MRS ) ) - ( RRS / PN ) ) )", "choosing": "( Min( MLU ,( RCSe + MLU ) ) / ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.04649717846015506}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( ( Max( ( MRS + ARS ),BR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( FirstVNF_Mem - BR ) )", "choosing": "( Max( Max( RRSe,Max( RRSe,MUM ) ),( ( CS * MLU ) * ( MUR * RMSe ) ) ) / Max( MUC,( MUR + MUC ) ) )", "obj1": 0.9251968503937008, "obj2": 0.06870693719421327}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,( MDR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( ( DS * MUR ) * CS ) + ( CS * MUR ) ) + MUM ) ,( MLU * MUM ) )", "obj1": 0.9133858267716536, "obj2": 0.07176800984206497}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( Min( MDR ,( Max( Min( AMS ,RRS ),RRS ) * ( MDR / Min( RRS ,MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Min( MUC ,CS ),( MUM - MLU ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6302959854223175}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( ( FirstVNF_RAM + ( Max( ACS,AMS ) * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( MUM,MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) / ( MUC / CS ) ) ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.07986740243434931}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( ( MDR - ( FirstVNF_Mem - PN ) ) / ( ( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - Min( Const ,MRS ) ) - ( RRS / PN ) ) )", "choosing": "( ( MUC - CS ) / Max( ( MUR / Min( DS ,( ( ( MUM - RRSe ) / MUC ) + DS ) ) ),MLU ) )", "obj1": 0.9468503937007874, "obj2": 0.050848488744944235}, {"determining": "( ( ( Min( ( Max( CRS,AMS ) * ( DDR + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server / RRS ) ) ) ) ,Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) ) + BR ) * ( AMS / PN ) ) - ( RRS + AMS ) )", "choosing": "Max( Min( CS ,( Max( RCSe,CS ) / ( Max( MUM,( Max( MLU,Min( DS ,MUC ) ) * MUR ) ) + ( MUM / RRSe ) ) ) ),Max( DS,MLU ) )", "obj1": 0.9488188976377953, "obj2": 0.04662302735044884}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const + ( ( Max( CRS,AMS ) * ( ( DDR - FirstVNF_CPU ) / FirstVNF_RAM ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + RMSe ) ) ) + Min( ( ( RCSe * CS ) / RCSe ) ,( Min( ( RRSe / Min( DS ,MLU ) ) ,( RCSe / MUC ) ) * RRSe ) ) ),MLU ) )", "obj1": 0.9094488188976378, "obj2": 0.07866984571357327}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( MRS + ARS ) )", "choosing": "( Max( Max( RRSe,Max( RRSe,MUM ) ),( ( ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ) ) + ( ( RMSe - ( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUR - MUC ) ) ) * RRSe ) ) / Max( MUC,( MUR + MUC ) ) )", "obj1": 0.9114173228346457, "obj2": 0.07577421328558594}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) / ( FirstVNF_Mem * ACS ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,Max( Max( CS,( RRSe + MLU ) ),( ( CS - ( RCSe - DS ) ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}], "20": [{"determining": "( Max( FirstVNF_RAM,( FirstVNF_Mem * ( Max( Max( FirstVNF_CPU,DDR ),MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + ( MUM + MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( ( RMSe / ( ( MUR / MUR ) / MUR ) ) / ( CS / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( MUC,RRSe ) ,( ( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) + MLU ) + DS ) ) - ( ( DS / MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - ( MUC * ( Max( ( DS / MUM ),( MUR * MUC ) ) / ( MUC + DS ) ) ) ) )", "obj1": 0.75, "obj2": 0.17953259615581263}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( ( ACS / Max( DDR,MRS ) ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( PN + Max( ( RRS + Min( Max( ( MRS * RRS ),FirstVNF_Mem ) ,( Max( CRS,RRS ) / FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU_Server / ( DDR + CRS ) ) ) ) / CRS ) )", "choosing": "( ( ( Max( MLU,Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( CS,Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8589450091098221}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Min( ( FirstVNF_RAM_Server + ( ( PN - FirstVNF_CPU ) / PN ) ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * DDR )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),DS )", "obj1": 0.9665354330708661, "obj2": 0.02193404204765623}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001068}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),MRS ) ) / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.05132221144807827}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.9291338582677166, "obj2": 0.06329232557111311}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( ( Max( ( MRS + ARS ),BR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( FirstVNF_Mem - BR ) )", "choosing": "( Max( Max( RRSe,Max( RRSe,MUM ) ),( ( CS * MLU ) * ( MUR * RMSe ) ) ) / Max( MUC,( MUR + MUC ) ) )", "obj1": 0.9251968503937008, "obj2": 0.06870693719421327}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,( MDR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( ( DS * MUR ) * CS ) + ( CS * MUR ) ) + MUM ) ,( MLU * MUM ) )", "obj1": 0.9133858267716536, "obj2": 0.07176800984206497}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( ( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( RCSe,( Max( DS,DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.25, "obj2": 0.6120335715180573}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( Min( MDR ,( Max( Min( AMS ,RRS ),RRS ) * ( MDR / Min( RRS ,MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Min( MUC ,CS ),( MUM - MLU ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6302959854223175}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( ( Min( ( Max( CRS,AMS ) * ( DDR + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server / RRS ) ) ) ) ,Min( Const ,Min( MDR ,( FirstVNF_RAM - Const ) ) ) ) + BR ) * ( AMS / PN ) ) - ( RRS + AMS ) )", "choosing": "Max( Min( CS ,( Max( RCSe,CS ) / ( Max( MUM,( Max( MLU,Min( DS ,MUC ) ) * MUR ) ) + ( MUM / RRSe ) ) ) ),Max( DS,MLU ) )", "obj1": 0.9488188976377953, "obj2": 0.04662302735044884}, {"determining": "( ( ( DDR * ( ( ACS / Max( BR,Const ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Max( ( RRSe - ( RRSe - ( RRSe + ( MUR / ( MUM - MUM ) ) ) ) ),( RMSe + ( ( MUC / MLU ) - Min( ( RMSe * Max( MUR,MUC ) ) ,MUC ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.04641917639964138}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( ( FirstVNF_RAM + ( Max( ACS,AMS ) * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( MUM,MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) / ( MUC / CS ) ) ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.07986740243434931}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const + ( ( Max( CRS,AMS ) * ( ( DDR - FirstVNF_CPU ) / FirstVNF_RAM ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + RMSe ) ) ) + Min( ( ( RCSe * CS ) / RCSe ) ,( Min( ( RRSe / Min( DS ,MLU ) ) ,( RCSe / MUC ) ) * RRSe ) ) ),MLU ) )", "obj1": 0.9094488188976378, "obj2": 0.07866984571357327}, {"determining": "( ( MDR - ( FirstVNF_Mem - PN ) ) / ( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) - Min( Const ,MRS ) ) - ( RRS / PN ) ) )", "choosing": "( Min( MLU ,( RCSe + MLU ) ) / ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.04649717846015506}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( MRS + ARS ) )", "choosing": "( Max( Max( RRSe,Max( RRSe,MUM ) ),( ( ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ) ) + ( ( RMSe - ( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUR - MUC ) ) ) * RRSe ) ) / Max( MUC,( MUR + MUC ) ) )", "obj1": 0.9114173228346457, "obj2": 0.07577421328558594}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),Min( BR ,ARS ) ) / ( FirstVNF_Mem * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS - DS ) / Max( MUC,( Min( ( Min( MUC ,CS ) / RMSe ) ,( Max( CS,( RCSe * ( DS / MUC ) ) ) - ( ( ( RCSe - DS ) - CS ) / MLU ) ) ) / Max( MUC,DS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( BR + Min( ( Max( Min( ( ( MDR - ARS ) / AMS ) ,RRS ),MDR ) - Const ) ,MRS ) ) )", "choosing": "( ( MUM * MUM ) / Max( ( Max( MLU,( CS * Min( ( DS - RMSe ) ,( RMSe + Max( MUM,RCSe ) ) ) ) ) - RCSe ),CS ) )", "obj1": 0.9429133858267716, "obj2": 0.049414156673025934}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( ( AMS / PN ) - BR ) / ( ( ( FirstVNF_CPU - FirstVNF_CPU ) * BR ) + ( ( DDR * ( BR + MRS ) ) * MRS ) ) )", "choosing": "( Min( DS ,MUM ) / Max( RRSe,( Max( MUR,MUC ) + Max( MLU,( ( MUC + ( Min( MLU ,CS ) + ( MUC + CS ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.049414156673025934}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}], "21": [{"determining": "( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / ( RMSe * ( Max( CS,MUC ) + MLU ) ) ),( RMSe * ( Max( CS,MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_Mem * ( Max( Max( FirstVNF_CPU,DDR ),MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + ( MUM + MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( ( RMSe / ( ( MUR / MUR ) / MUR ) ) / ( CS / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,DS )", "obj1": 0.8759842519685039, "obj2": 0.09494917389349844}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ARS * ( PN - DDR ) ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - MLU ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - ( MUC * ( Max( ( DS / MUM ),( MUR * MUC ) ) / ( MUC + DS ) ) ) ) )", "obj1": 0.75, "obj2": 0.17953259615581263}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001068}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( ( ACS / Max( DDR,MRS ) ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( PN + Max( ( RRS + Min( Max( ( MRS * RRS ),FirstVNF_Mem ) ,( Max( CRS,RRS ) / FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU_Server / ( DDR + CRS ) ) ) ) / CRS ) )", "choosing": "( ( ( Max( MLU,Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( CS,Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8589450091098221}, {"determining": "( ( FirstVNF_RAM + ( Max( ACS,AMS ) * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( MUM,MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) / ( MUC / CS ) ) ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.07986740243434931}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Min( ( FirstVNF_RAM_Server + ( ( PN - FirstVNF_CPU ) / PN ) ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * DDR )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),DS )", "obj1": 0.9665354330708661, "obj2": 0.02193404204765623}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU / Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( DS,Max( Max( DS,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( MLU ,( Min( Min( RMSe ,MUC ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.25, "obj2": 0.6118470205612618}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( Min( MDR ,( Max( Min( AMS ,RRS ),RRS ) * ( MDR / Min( RRS ,MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Min( MUC ,CS ),( MUM - MLU ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6302959854223175}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ( ( BR / FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ),BR ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / ( MUR + ( ( MUC * ( RMSe / MUR ) ) / DS ) ) ) ) + Min( Min( RRSe ,RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6160503924266322}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * PN ) - ( BR + ACS ) ) )", "choosing": "Max( ( MUC + DS ),( RMSe + ( ( Min( RRSe ,CS ) - ( CS - ( MUM - MUM ) ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( MUC,RRSe ) ,( ( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) + MLU ) + DS ) ) - ( ( DS / MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ( ( ARS * ( PN - DDR ) ) + ( ARS * ( PN - DDR ) ) ) - PN ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - RMSe ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( ( RCSe + RMSe ) - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( PN + Max( ( AMS / ( ( DDR * CRS ) + ARS ) ),( ( BR * FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) ) * ( Min( MRS ,MDR ) - Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "Max( ( RRSe - ( RRSe - ( RRSe + ( MUR / ( MUM - MUM ) ) ) ) ),( RMSe + ( ( MUC / MLU ) - Min( ( ( MUC - Min( ( RRSe + MUR ) ,( MUC - MUC ) ) ) * Max( MUR,MUC ) ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( PN + Max( ( AMS / ( ( DDR * CRS ) + ARS ) ),( FirstVNF_CPU_Server / ACS ) ) ) ) * ( Min( MRS ,MDR ) - Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "Max( ( RRSe - ( RRSe - ( RRSe + ( MUR / ( MUM - MUM ) ) ) ) ),( RMSe + ( ( MUC / MLU ) - Min( ( RMSe * Max( MUR,MUC ) ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ( ( ACS / Max( ( PN + Const ),Const ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( CS * ( Max( Max( MLU,MUR ),MUC ) * CS ) ) + Min( ( MUR / MUM ) ,Max( CS,MUC ) ) ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Min( PN ,AMS ) + Max( ( RRS + Min( Max( BR,Const ) ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU_Server / ( ACS * ( CRS - RRS ) ) ) ) ) ) * Min( ( ( ARS + ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,AMS ) / PN ) ) / ( PN + Const ) ) ,Min( ( ACS - ( PN - AMS ) ) ,( DDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( RRSe / ( RRSe - MUC ) ),( RRSe * Max( ( ( RMSe + CS ) + MUR ),Max( MLU,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Min( PN ,AMS ) + Max( ( RRS + Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU_Server / ( ACS * ( CRS - RRS ) ) ) ) ) ) * Min( ( ( ARS + ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,AMS ) / PN ) ) / ( PN + Const ) ) ,Min( ( ACS - ( PN - AMS ) ) ,( DDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( RRSe / ( RRSe - MUC ) ),( RRSe * Max( ( ( RMSe + CS ) + MUR ),Min( ( MUR / MUM ) ,Max( CS,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Max( Const,FirstVNF_Mem ) ) / DDR ) - Min( CRS ,MRS ) )", "choosing": "Min( ( CS * MUM ) ,Max( RRSe,( RCSe - Max( ( Max( ( RMSe / CS ),( ( MUM - MLU ) / Max( MUM,RCSe ) ) ) + Min( ( CS - MUR ) ,RCSe ) ),( MLU + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM ) * Min( ( FirstVNF_CPU_Server / Min( AMS ,FirstVNF_Mem ) ) ,Min( Min( PN ,( PN - AMS ) ) ,( DDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( RRSe / ( RRSe * ( CS - Max( Min( MUC ,( MUR * ( MUC * MUM ) ) ),( ( RCSe * Min( RRSe ,RRSe ) ) / ( RMSe + RMSe ) ) ) ) ) ),( RRSe * ( ( MLU - MLU ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( ( ( ( CRS - Const ) / ( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - ARS ) ) * ( Min( ( Max( CRS,PN ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_RAM_Server ) ) + DDR ) ) ,( ( ACS + ACS ) / Max( MRS,FirstVNF_Mem ) ) ) + BR ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / RCSe ),( RMSe * ( Max( Max( CS,Max( MUM,MUM ) ),MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / ( RMSe * ( Max( CS,MUC ) + MLU ) ) ),( RMSe * ( Max( CS,MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( ARS * PN ) - Max( MDR,CRS ) )", "choosing": "( ( Max( Max( RRSe,MUM ),DS ) / ( MLU * MUM ) ) / RCSe )", "obj1": 0.7893700787401575, "obj2": 0.08478037414859907}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "( ( ACS / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RMSe * Min( MUC ,MUM ) ) * MUC ),Min( Min( MUC ,MUR ) ,( RCSe / RMSe ) ) ) / Max( MUC,Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08364311615585172}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ARS * ( PN - DDR ) ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - MLU ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - ( MUC * ( Max( ( DS / MUM ),( MUR * MUC ) ) / ( MUC + DS ) ) ) ) )", "obj1": 0.75, "obj2": 0.17953259615581263}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001068}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( ( ACS / Max( DDR,MRS ) ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( PN + Max( ( RRS + Min( Max( ( MRS * RRS ),FirstVNF_Mem ) ,( Max( CRS,RRS ) / FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU_Server / ( DDR + CRS ) ) ) ) / CRS ) )", "choosing": "( ( ( Max( MLU,Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( CS,Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8589450091098221}, {"determining": "( ( FirstVNF_RAM + ( Max( ACS,AMS ) * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( MUM,MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) / ( MUC / CS ) ) ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.07986740243434931}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,RRS ) ) / ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,FirstVNF_RAM ) * FirstVNF_RAM ) ) ),( MDR * CRS ) ) ) ) )", "choosing": "( ( Max( DS,Max( Max( MUR,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( ( Max( MUC,Max( ( DS * MUR ),MUC ) ) + MUC ) ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,Max( MUC,RMSe ) ) * MUC ) ),MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6523021125910696}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Min( ( FirstVNF_RAM_Server + ( ( PN - FirstVNF_CPU ) / PN ) ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * DDR )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),DS )", "obj1": 0.9665354330708661, "obj2": 0.02193404204765623}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU / Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( DS,Max( Max( DS,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( MLU ,( Min( Min( RMSe ,MUC ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.25, "obj2": 0.6118470205612618}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( Min( MDR ,( Max( Min( AMS ,RRS ),RRS ) * ( MDR / Min( RRS ,MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Min( MUC ,CS ),( MUM - MLU ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6302959854223175}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) * Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) / ( ( PN + FirstVNF_Mem_Server ) - DDR ) ),Max( ( ( FirstVNF_Mem_Server + Min( Const ,BR ) ) - ( FirstVNF_CPU + Const ) ),PN ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( RCSe / MUC ) ) / MUM ) ,Max( CS,( ( DS - MUR ) * ( CS * MLU ) ) ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( ( MUC - Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) ) * MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6188559904317373}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ( ( BR / FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ),BR ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / ( MUR + ( ( MUC * ( RMSe / MUR ) ) / DS ) ) ) ) + Min( Min( RRSe ,RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6160503924266322}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * PN ) - ( BR + ACS ) ) )", "choosing": "Max( ( MUC + DS ),( RMSe + ( ( Min( RRSe ,CS ) - ( CS - ( MUM - MUM ) ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_Mem * ( Max( Max( FirstVNF_CPU,DDR ),MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + ( MUM + MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( ( RMSe / ( ( MUR / MUR ) / MUR ) ) / ( CS / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( MUC,RRSe ) ,( ( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) + MLU ) + DS ) ) - ( ( DS / MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ( ( ARS * ( PN - DDR ) ) + ( ARS * ( PN - DDR ) ) ) - PN ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - RMSe ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( ( RCSe + RMSe ) - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( PN + Max( ( AMS / ( ( DDR * CRS ) + ARS ) ),( ( BR * FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) ) * ( Min( MRS ,MDR ) - Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "Max( ( RRSe - ( RRSe - ( RRSe + ( MUR / ( MUM - MUM ) ) ) ) ),( RMSe + ( ( MUC / MLU ) - Min( ( ( MUC - Min( ( RRSe + MUR ) ,( MUC - MUC ) ) ) * Max( MUR,MUC ) ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( PN + Max( ( AMS / ( ( DDR * CRS ) + ARS ) ),( FirstVNF_CPU_Server / ACS ) ) ) ) * ( Min( MRS ,MDR ) - Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "Max( ( RRSe - ( RRSe - ( RRSe + ( MUR / ( MUM - MUM ) ) ) ) ),( RMSe + ( ( MUC / MLU ) - Min( ( RMSe * Max( MUR,MUC ) ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ( ( ACS / Max( ( PN + Const ),Const ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( CS * ( Max( Max( MLU,MUR ),MUC ) * CS ) ) + Min( ( MUR / MUM ) ,Max( CS,MUC ) ) ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - ARS ) ) * ( PN + BR ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / RCSe ),Max( ( RRSe / RCSe ),( RMSe * ( Max( CS,MUC ) + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Const ) / ( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - ARS ) ) * ( Min( ( Max( CRS,PN ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_RAM_Server ) ) + DDR ) ) ,( ( ACS + ACS ) / Max( MRS,FirstVNF_Mem ) ) ) + BR ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / RCSe ),( RMSe * ( Max( Max( CS,Max( MUM,MUM ) ),MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( FirstVNF_RAM + ( Max( ACS,AMS ) * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( MUM,MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) / ( MUC / CS ) ) ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.07986740243434931}, {"determining": "( ( PN - MDR ) / Min( Min( ( BR * MRS ) ,Min( ( BR * MRS ) ,MRS ) ) ,MDR ) )", "choosing": "( ( MUC + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.0829073062226755}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ARS * ( PN - DDR ) ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - MLU ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( PN - MDR ) / Min( Min( ( BR * MRS ) ,MRS ) ,MDR ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( ( RMSe - ( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUR - MUC ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( MUM,( MUR * RMSe ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.7618110236220472, "obj2": 0.11429190972700283}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( ( Max( ARS,Max( ACS,RRS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,RRSe )", "obj1": 0.7519685039370079, "obj2": 0.16487443717985015}, {"determining": "( ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS * MUR ) * CS ) - ( MUM - ( MUC * ( Max( ( DS / MUM ),( MUR * MUC ) ) / ( MUC + DS ) ) ) ) )", "obj1": 0.75, "obj2": 0.17953259615581263}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server / Max( BR,Const ) ) / Const ) ) / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.9645669291338582, "obj2": 0.03837130576001068}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( ( ACS / Max( DDR,MRS ) ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( PN + Max( ( RRS + Min( Max( ( MRS * RRS ),FirstVNF_Mem ) ,( Max( CRS,RRS ) / FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU_Server / ( DDR + CRS ) ) ) ) / CRS ) )", "choosing": "( ( ( Max( MLU,Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( CS,Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8589450091098221}, {"determining": "( ( PN * Const ) - MDR )", "choosing": "( ( MUM + RMSe ) + Min( ( Max( MLU,RCSe ) * ( CS / RMSe ) ) ,( ( RMSe + MUR ) * ( MUC * RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.10554101552104424}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,RRS ) ) / ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,FirstVNF_RAM ) * FirstVNF_RAM ) ) ),( MDR * CRS ) ) ) ) )", "choosing": "( ( Max( DS,Max( Max( MUR,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( ( Max( MUC,Max( ( DS * MUR ),MUC ) ) + MUC ) ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,Max( MUC,RMSe ) ) * MUC ) ),MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6523021125910696}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Min( ( FirstVNF_RAM_Server + ( ( PN - FirstVNF_CPU ) / PN ) ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * DDR )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),DS )", "obj1": 0.9665354330708661, "obj2": 0.02193404204765623}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ACS,( BR + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,( ( RMSe * CS ) + DS ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( MUC * MUR ),( DS / MUM ) ) ,CS ) - MUC ) ),MUC ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6471800168613151}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU / Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( DS,Max( Max( DS,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( MLU ,( Min( Min( RMSe ,MUC ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.25, "obj2": 0.6118470205612618}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( Min( MDR ,( Max( Min( AMS ,RRS ),RRS ) * ( MDR / Min( RRS ,MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( Max( Min( MUC ,CS ),( MUM - MLU ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6302959854223175}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "Min( Min( RRS ,( ( Max( Min( RRS ,RRS ),FirstVNF_CPU_Server ) + ARS ) + MDR ) ) ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,Min( ( Min( ( DS / DS ) ,MUM ) + MUC ) ,( MLU - ( CS + RMSe ) ) ) ) + ( ( ( RMSe * RCSe ) / MUR ) / RCSe ) ) * ( MUR / RCSe ) ) - ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6155817864595258}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) * Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) / ( ( PN + FirstVNF_Mem_Server ) - DDR ) ),Max( ( ( FirstVNF_Mem_Server + Min( Const ,BR ) ) - ( FirstVNF_CPU + Const ) ),PN ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( RCSe / MUC ) ) / MUM ) ,Max( CS,( ( DS - MUR ) * ( CS * MLU ) ) ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( ( MUC - Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) ) * MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6188559904317373}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( MDR * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ( ( BR / FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Const ) ),BR ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / ( MUR + ( ( MUC * ( RMSe / MUR ) ) / DS ) ) ) ) + Min( Min( RRSe ,RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6160503924266322}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6914582272827478}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * PN ) - ( BR + ACS ) ) )", "choosing": "Max( ( MUC + DS ),( RMSe + ( ( Min( RRSe ,CS ) - ( CS - ( MUM - MUM ) ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / ( RMSe * ( Max( CS,MUC ) + MLU ) ) ),( RMSe * ( Max( CS,MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_Mem * ( Max( Max( FirstVNF_CPU,DDR ),MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + ( MUM + MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( ( RMSe / ( ( MUR / MUR ) / MUR ) ) / ( CS / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( MUC,RRSe ) ,( ( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) + MLU ) + DS ) ) - ( ( DS / MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ( ( ARS * ( PN - DDR ) ) + ( ARS * ( PN - DDR ) ) ) - PN ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - RMSe ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( ( RCSe + RMSe ) - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( AMS * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Min( ( PN + ( MDR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( Min( RRSe ,RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - ARS ) ) * ( PN + BR ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / RCSe ),Max( ( RRSe / RCSe ),( RMSe * ( Max( CS,MUC ) + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( FirstVNF_Mem_Server ,Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( FirstVNF_RAM + ( Max( ACS,AMS ) * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + Max( MUM,MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) / ( MUC / CS ) ) ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.07986740243434931}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ( ARS - FirstVNF_RAM ) - MDR ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( Min( RRSe ,MLU ) - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / ( RMSe / MUC ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.17897134191955447}, {"determining": "( ( PN - MDR ) / ( Min( ( ACS + ( MRS / ( BR - FirstVNF_CPU_Server ) ) ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Max( ( RCSe + DS ),MUR ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * MLU ) ),( DS * RCSe ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10470689687751558}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,( Min( FirstVNF_Mem ,MDR ) * MRS ) ) * MRS ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / RRSe )", "obj1": 0.7913385826771654, "obj2": 0.08156013422274476}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ARS * ( PN - DDR ) ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - MLU ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( CRS - Const ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( ( MUR / MUC ),( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01904497057805123}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( PN - MDR ) / Min( Min( ( BR * MRS ) ,Min( ( BR * MRS ) ,MRS ) ) ,MDR ) )", "choosing": "( ( MUC + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.0829073062226755}, {"determining": "( ( ( ACS / Max( DDR,MRS ) ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( PN + Max( ( RRS + Min( Max( ( MRS * RRS ),FirstVNF_Mem ) ,( Max( CRS,RRS ) / FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU_Server / ( DDR + CRS ) ) ) ) / CRS ) )", "choosing": "( ( ( Max( MLU,Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( CS,Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8589450091098221}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( FirstVNF_CPU / Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUC + DS ) / DS )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,RRS ) ) / ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,FirstVNF_RAM ) * FirstVNF_RAM ) ) ),( MDR * CRS ) ) ) ) )", "choosing": "( ( Max( DS,Max( Max( MUR,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( ( Max( MUC,Max( ( DS * MUR ),MUC ) ) + MUC ) ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,Max( MUC,RMSe ) ) * MUC ) ),MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6523021125910696}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ACS,( BR + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,( ( RMSe * CS ) + DS ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( MUC * MUR ),( DS / MUM ) ) ,CS ) - MUC ) ),MUC ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6471800168613151}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU / Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( DS,Max( Max( DS,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( MLU ,( Min( Min( RMSe ,MUC ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.25, "obj2": 0.6118470205612618}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( Min( RRSe ,MUC ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.627994462543046}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( Max( ( ( ( RRS + ( ( FirstVNF_RAM_Server / DDR ) * PN ) ) - PN ) * FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,FirstVNF_RAM ) * FirstVNF_RAM ) ) ),( MDR * CRS ) ) ) ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,( ( RMSe * CS ) + DS ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( MUC * MUR ),( DS / MUM ) ) ,CS ) - MUC ) ),MUC ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6152033269961852}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( Max( Min( CRS ,AMS ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( FirstVNF_RAM * Min( CRS ,FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),RRSe ) / Max( ( MUC + ( Max( RMSe,( ( MLU * RMSe ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( Max( RCSe,MUR ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6912076649095934}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) * Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) / ( ( PN + FirstVNF_Mem_Server ) - DDR ) ),Max( ( ( FirstVNF_Mem_Server + Min( Const ,BR ) ) - ( FirstVNF_CPU + Const ) ),PN ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( RCSe / MUC ) ) / MUM ) ,Max( CS,( ( DS - MUR ) * ( CS * MLU ) ) ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( ( MUC - Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) ) * MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6188559904317373}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * PN ) - ( BR + ACS ) ) )", "choosing": "Max( ( MUC + DS ),( RMSe + ( ( Min( RRSe ,CS ) - ( CS - ( MUM - MUM ) ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( ( CRS - Const ) / ( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - ARS ) ) * ( Min( ( Max( CRS,PN ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_RAM_Server ) ) + DDR ) ) ,( ( ACS + ACS ) / Max( MRS,FirstVNF_Mem ) ) ) + BR ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / RCSe ),( RMSe * ( Max( Max( CS,Max( MUM,MUM ) ),MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / ( RMSe * ( Max( CS,MUC ) + MLU ) ) ),( RMSe * ( Max( CS,MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_Mem * ( Max( Max( FirstVNF_CPU,DDR ),MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - ( Min( ( MUC + ( MUM + MUR ) ) ,RRSe ) * RCSe ) ) ,( MLU + ( MUC - Min( Max( RCSe,MUM ) ,( ( RMSe / ( ( MUR / MUR ) / MUR ) ) / ( CS / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( Max( MDR,MRS ) - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( MUC,RRSe ) ,( ( Min( ( Min( MUM ,CS ) * ( RRSe * RCSe ) ) ,MLU ) + MLU ) + DS ) ) - ( ( DS / MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ( ( ARS * ( PN - DDR ) ) + ( ARS * ( PN - DDR ) ) ) - PN ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - RMSe ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( ( RCSe + RMSe ) - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( PN + Max( ( Min( Min( ACS ,( PN - AMS ) ) ,( DDR - FirstVNF_CPU_Server ) ) / ( ( DDR * CRS ) + ARS ) ),( FirstVNF_CPU_Server / ACS ) ) ) ) * ( Min( MRS ,MDR ) - Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "Max( ( RRSe - ( RRSe - ( RRSe + ( MUR / ( MUM - MUM ) ) ) ) ),( RMSe + ( ( Min( RRSe ,RRSe ) / MLU ) - Min( ( RMSe * Max( MUR,MUC ) ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( PN + Max( ( AMS / ( ( DDR * CRS ) + ARS ) ),( FirstVNF_CPU_Server / ACS ) ) ) ) * ( Min( MRS ,MDR ) - Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "Max( ( RRSe / ( RRSe * ( CS - Max( ( ( RCSe * Min( RRSe ,RRSe ) ) / ( RMSe + RMSe ) ),Min( MUC ,( MUR * ( RMSe * MUM ) ) ) ) ) ) ),( RRSe * ( ( MLU - MUM ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( AMS * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Min( ( PN + ( MDR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe * RMSe ),( RMSe * ( ( ( ( ( Max( RCSe,MLU ) / ( MUC / MLU ) ) - Min( CS ,RRSe ) ) - Max( MUC,( MUR - DS ) ) ) / MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( AMS * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Min( ( PN + ( MDR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( Min( RRSe ,RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ( ARS - FirstVNF_RAM ) - MDR ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( Min( RRSe ,MLU ) - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / ( RMSe / MUC ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.17897134191955447}, {"determining": "( ( PN - MDR ) / ( Min( ( ACS + ( MRS / ( BR - FirstVNF_CPU_Server ) ) ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Max( ( RCSe + DS ),MUR ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * MLU ) ),( DS * RCSe ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10470689687751558}, {"determining": "( Max( RRS,ARS ) - ( PN / RRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( RMSe - RMSe ) - ( MLU - Max( ( MUC + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.22787129855762073}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) )", "obj1": 0.905511811023622, "obj2": 0.06946603438094415}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,MRS ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( RRSe,( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * Min( CS ,DS ) ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.07352972451049765}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ARS * ( PN - DDR ) ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - MLU ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( CRS - Const ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( ( MUR / MUC ),( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01904497057805123}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( FirstVNF_Mem_Server ,Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( PN - MDR ) / Min( Min( ( BR * MRS ) ,Min( ( BR * MRS ) ,MRS ) ) ,MDR ) )", "choosing": "( ( MUC + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.0829073062226755}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( DDR + ACS ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) * RCSe ) / Max( ( MUR * ( MUC - RCSe ) ),DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8219441496799375}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,RRS ) ) / ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,FirstVNF_RAM ) * FirstVNF_RAM ) ) ),( MDR * CRS ) ) ) ) )", "choosing": "( ( Max( DS,Max( Max( MUR,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( ( Max( MUC,Max( ( DS * MUR ),MUC ) ) + MUC ) ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,Max( MUC,RMSe ) ) * MUC ) ),MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6523021125910696}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "Min( ( DDR + FirstVNF_CPU_Server ) ,Min( ( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) ) ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( MUR + RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7516628136645643}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,( DDR + BR ) ) * ( BR + CRS ) ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Min( RCSe ,( Min( Max( MUM,( MUR * RMSe ) ) ,CS ) * MUC ) ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.0758833906048432}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,( Min( FirstVNF_Mem ,MDR ) * MRS ) ) * MRS ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / RRSe )", "obj1": 0.7913385826771654, "obj2": 0.08156013422274476}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ACS,( BR + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,( ( RMSe * CS ) + DS ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( MUC * MUR ),( DS / MUM ) ) ,CS ) - MUC ) ),MUC ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6471800168613151}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU / Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( DS,Max( Max( DS,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( MLU ,( Min( Min( RMSe ,MUC ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.25, "obj2": 0.6118470205612618}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( Min( RRSe ,MUC ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.627994462543046}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + DDR ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,RCSe ) / ( DS + ( CS - ( RMSe * Min( Min( Min( ( MLU * RMSe ) ,MUC ) ,MUM ) ,( DS - ( CS / MUM ) ) ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8219441496799375}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ARS - RRS ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( RMSe - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / MUC ) ) ) + MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6120794063239281}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( Max( Min( CRS ,AMS ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( FirstVNF_RAM * Min( CRS ,FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),RRSe ) / Max( ( MUC + ( Max( RMSe,( ( MLU * RMSe ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( Max( RCSe,MUR ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6912076649095934}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) * Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) / ( ( PN + FirstVNF_Mem_Server ) - DDR ) ),Max( ( ( FirstVNF_Mem_Server + Min( Const ,BR ) ) - ( FirstVNF_CPU + Const ) ),PN ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( RCSe / MUC ) ) / MUM ) ,Max( CS,( ( DS - MUR ) * ( CS * MLU ) ) ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( ( MUC - Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) ) * MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6188559904317373}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * PN ) - ( BR + ACS ) ) )", "choosing": "Max( ( MUC + DS ),( RMSe + ( ( Min( RRSe ,CS ) - ( CS - ( MUM - MUM ) ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - ARS ) ) * ( PN + BR ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / RCSe ),Max( ( RRSe / RCSe ),( RMSe * ( Max( CS,MUC ) + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Const ) / ( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - ARS ) ) * ( Min( ( Max( CRS,PN ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_RAM_Server ) ) + DDR ) ) ,( ( ACS + ACS ) / Max( MRS,FirstVNF_Mem ) ) ) + BR ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / RCSe ),( RMSe * ( Max( Max( CS,Max( MUM,MUM ) ),MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( FirstVNF_RAM_Server / ( ( MRS / PN ) + RRS ) ) ) - Min( ( PN + ( BR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe / ( RMSe * ( Max( CS,MUC ) + MLU ) ) ),( RMSe * ( Max( CS,MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( PN * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Const )", "choosing": "Max( ( RRSe - RMSe ),( ( MUC - ( RRSe + RMSe ) ) / ( MLU / Min( ( ( MUC * ( RMSe / MUR ) ) / DS ) ,( ( Max( RMSe,MLU ) + ( Max( MUM,MUC ) * CS ) ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( AMS * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Min( ( PN + ( MDR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe * RMSe ),( RMSe * ( ( ( ( ( Max( RCSe,MLU ) / ( MUC / MLU ) ) - Min( CS ,RRSe ) ) - Max( MUC,( MUR - DS ) ) ) / MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ( ARS - FirstVNF_RAM ) - MDR ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( Min( RRSe ,MLU ) - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / ( RMSe / MUC ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.17897134191955447}, {"determining": "( Max( RRS,ARS ) - ( PN / RRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( RMSe - RMSe ) - ( MLU - Max( ( MUC + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.22787129855762073}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) )", "obj1": 0.905511811023622, "obj2": 0.06946603438094415}, {"determining": "( ( PN - MDR ) / ( Min( ( ACS + ( MRS / ( BR - FirstVNF_CPU_Server ) ) ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Max( ( RCSe + DS ),MUR ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * MLU ) ),( DS * RCSe ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10470689687751558}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( Max( MUR,Max( ( Max( ( RCSe + DS ),MUR ) + MUR ),RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.812992125984252, "obj2": 0.07247896625822882}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( FirstVNF_Mem_Server ,Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ARS * ( PN - DDR ) ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - MLU ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( CRS - Const ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( ( MUR / MUC ),( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01904497057805123}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( PN - MDR ) / ( Min( Max( Max( ( ( FirstVNF_Mem / CRS ) * FirstVNF_CPU_Server ),Const ),PN ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( MUR + ( ( RRSe - ( ( CS + DS ) / ( MUM - MUC ) ) ) * MUR ) ) / ( Max( RRSe,( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08606479094610789}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + DDR ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,RCSe ) / ( DS + ( CS - ( RMSe * Min( Min( Min( ( MLU * RMSe ) ,MUC ) ,MUM ) ,( DS - ( CS / MUM ) ) ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8219441496799375}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,RRS ) ) / ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,FirstVNF_RAM ) * FirstVNF_RAM ) ) ),( MDR * CRS ) ) ) ) )", "choosing": "( ( Max( DS,Max( Max( MUR,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( ( Max( MUC,Max( ( DS * MUR ),MUC ) ) + MUC ) ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,Max( MUC,RMSe ) ) * MUC ) ),MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6523021125910696}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,( DDR + BR ) ) * ( BR + CRS ) ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Min( RCSe ,( Min( Max( MUM,( MUR * RMSe ) ) ,CS ) * MUC ) ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.0758833906048432}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,( Min( FirstVNF_Mem ,MDR ) * MRS ) ) * MRS ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / RRSe )", "obj1": 0.7913385826771654, "obj2": 0.08156013422274476}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ACS,( BR + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,( ( RMSe * CS ) + DS ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( MUC * MUR ),( DS / MUM ) ) ,CS ) - MUC ) ),MUC ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6471800168613151}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU / Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( DS,Max( Max( DS,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( MLU ,( Min( Min( RMSe ,MUC ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.25, "obj2": 0.6118470205612618}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( Min( RRSe ,MUC ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.627994462543046}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( PN - MDR ) / Min( Min( ( BR * MRS ) ,Min( ( BR * MRS ) ,MRS ) ) ,MDR ) )", "choosing": "( ( MUC + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.0829073062226755}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( DDR + ACS ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) * RCSe ) / Max( ( MUR * ( MUC - RCSe ) ),DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8219441496799375}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ARS - RRS ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( RMSe - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / MUC ) ) ) + MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6120794063239281}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "( Max( Min( CRS ,AMS ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( FirstVNF_RAM * Min( CRS ,FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),RRSe ) / Max( ( MUC + ( Max( RMSe,( ( MLU * RMSe ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( Max( RCSe,MUR ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6912076649095934}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ACS ) * PN ) + FirstVNF_Mem_Server ) / Min( ( FirstVNF_Mem * MDR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Max( Max( MUC,MLU ),RRSe ) ) / Max( Max( MUC,MLU ),RRSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) * Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) / ( ( PN + FirstVNF_Mem_Server ) - DDR ) ),Max( ( ( FirstVNF_Mem_Server + Min( Const ,BR ) ) - ( FirstVNF_CPU + Const ) ),PN ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( RCSe / MUC ) ) / MUM ) ,Max( CS,( ( DS - MUR ) * ( CS * MLU ) ) ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( ( MUC - Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) ) * MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6188559904317373}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * PN ) - ( BR + ACS ) ) )", "choosing": "Max( ( MUC + DS ),( RMSe + ( ( Min( RRSe ,CS ) - ( CS - ( MUM - MUM ) ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( AMS * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Min( ( PN + ( MDR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( Min( RRSe ,RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( PN * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Min( ( ( MDR * Min( FirstVNF_CPU ,MDR ) ) + PN ) ,( ( FirstVNF_RAM_Server / Max( BR,Max( RRS,Min( FirstVNF_CPU ,MDR ) ) ) ) + AMS ) ) )", "choosing": "Max( ( RRSe - RMSe ),( ( MUC - ( RRSe + RMSe ) ) / ( MLU / Min( MUM ,( ( MUC - ( RRSe + RMSe ) ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( PN * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Const )", "choosing": "Max( ( RRSe - RMSe ),( ( MUC - ( RRSe + RMSe ) ) / ( MLU / Min( ( ( MUC * ( RMSe / MUR ) ) / DS ) ,( ( Max( RMSe,MLU ) + ( Max( MUM,MUC ) * CS ) ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ( ARS - FirstVNF_RAM ) - MDR ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( Min( RRSe ,MLU ) - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / ( RMSe / MUC ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.17897134191955447}, {"determining": "( Max( RRS,ARS ) - ( PN / RRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( RMSe - RMSe ) - ( MLU - Max( ( MUC + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.22787129855762073}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) )", "obj1": 0.905511811023622, "obj2": 0.06946603438094415}, {"determining": "( ( PN - MDR ) / ( Min( ( ACS + ( MRS / ( BR - FirstVNF_CPU_Server ) ) ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Max( ( RCSe + DS ),MUR ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * MLU ) ),( DS * RCSe ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10470689687751558}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( Max( MUR,Max( ( Max( ( RCSe + DS ),MUR ) + MUR ),RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.812992125984252, "obj2": 0.07247896625822882}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ARS * ( PN - DDR ) ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - MLU ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( CRS - Const ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( ( MUR / MUC ),( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01904497057805123}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( FirstVNF_Mem_Server ,Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( PN - MDR ) / ( Min( Max( Max( ( ( FirstVNF_Mem / CRS ) * FirstVNF_CPU_Server ),Const ),PN ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( MUR + ( ( RRSe - ( ( CS + DS ) / ( MUM - MUC ) ) ) * MUR ) ) / ( Max( RRSe,( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08606479094610789}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( DDR + ACS ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) * RCSe ) / Max( ( MUR * ( MUC - RCSe ) ),DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8219441496799375}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,RRS ) ) / ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,FirstVNF_RAM ) * FirstVNF_RAM ) ) ),( MDR * CRS ) ) ) ) )", "choosing": "( ( Max( DS,Max( Max( MUR,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( ( Max( MUC,Max( ( DS * MUR ),MUC ) ) + MUC ) ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,Max( MUC,RMSe ) ) * MUC ) ),MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6523021125910696}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,( DDR + BR ) ) * ( BR + CRS ) ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Min( RCSe ,( Min( Max( MUM,( MUR * RMSe ) ) ,CS ) * MUC ) ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.0758833906048432}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,( Min( FirstVNF_Mem ,MDR ) * MRS ) ) * MRS ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / RRSe )", "obj1": 0.7913385826771654, "obj2": 0.08156013422274476}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ACS,( BR + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,( ( RMSe * CS ) + DS ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( MUC * MUR ),( DS / MUM ) ) ,CS ) - MUC ) ),MUC ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6471800168613151}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU / Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( DS,Max( Max( DS,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( MLU ,( Min( Min( RMSe ,MUC ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.25, "obj2": 0.6118470205612618}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( Min( RRSe ,MUC ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.627994462543046}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( PN - MDR ) / Min( Min( ( BR * MRS ) ,Min( ( BR * MRS ) ,MRS ) ) ,MDR ) )", "choosing": "( ( MUC + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.0829073062226755}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + DDR ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( Min( Max( MLU,RMSe ) ,RCSe ) / ( DS + ( CS - ( RMSe * Min( Min( Min( ( MLU * RMSe ) ,MUC ) ,MUM ) ,( DS - ( CS / MUM ) ) ) ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8219441496799375}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ARS - RRS ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( RMSe - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / MUC ) ) ) + MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6120794063239281}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "( Max( Min( CRS ,AMS ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( FirstVNF_RAM * Min( CRS ,FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),RRSe ) / Max( ( MUC + ( Max( RMSe,( ( MLU * RMSe ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( Max( RCSe,MUR ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6912076649095934}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) * ( ( Min( FirstVNF_CPU ,( ( CRS + PN ) * Min( FirstVNF_Mem_Server ,Min( ACS ,AMS ) ) ) ) * AMS ) + RRS ) )", "choosing": "Min( ( RCSe - Min( Max( MUM,( ( ( MUR + ( CS + MUC ) ) + DS ) / RCSe ) ) ,RCSe ) ) ,Max( MUM,Min( ( MUM - ( MUM - Min( ( ( DS * DS ) - MUM ) ,( MUC + RCSe ) ) ) ) ,( MUC - MUR ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7103353926152447}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) * Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) / ( ( PN + FirstVNF_Mem_Server ) - DDR ) ),Max( ( ( FirstVNF_Mem_Server + Min( Const ,BR ) ) - ( FirstVNF_CPU + Const ) ),PN ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( RCSe / MUC ) ) / MUM ) ,Max( CS,( ( DS - MUR ) * ( CS * MLU ) ) ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( ( MUC - Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) ) * MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6188559904317373}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * PN ) - ( BR + ACS ) ) )", "choosing": "Max( ( MUC + DS ),( RMSe + ( ( Min( RRSe ,CS ) - ( CS - ( MUM - MUM ) ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( AMS * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Min( ( PN + ( MDR * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + AMS ) ) )", "choosing": "Max( ( RRSe * RMSe ),( RMSe * ( ( ( ( ( Max( RCSe,MLU ) / ( MUC / MLU ) ) - Min( CS ,RRSe ) ) - Max( MUC,( MUR - DS ) ) ) / MUC ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "28": [{"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( PN * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Min( ( ( MDR * ( ( MRS + FirstVNF_Mem ) - ( BR - Const ) ) ) + PN ) ,( ( FirstVNF_RAM_Server / Max( BR,Max( RRS,Min( FirstVNF_CPU ,MDR ) ) ) ) + AMS ) ) )", "choosing": "Max( ( RRSe - RMSe ),( ( MUC - ( RRSe + RMSe ) ) / ( MLU / Min( MUM ,( ( DS * RRSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( PN * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Min( ( ( MDR * Min( FirstVNF_CPU ,MDR ) ) + PN ) ,( ( FirstVNF_RAM_Server / Max( BR,Max( RRS,Min( FirstVNF_CPU ,MDR ) ) ) ) + AMS ) ) )", "choosing": "Max( ( RRSe - RMSe ),( ( MUC - ( RRSe + RMSe ) ) / ( MLU / Min( MUM ,( ( MUC - ( RRSe + RMSe ) ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ( ARS - FirstVNF_RAM ) - MDR ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( Min( RRSe ,MLU ) - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / ( RMSe / MUC ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.17897134191955447}, {"determining": "( Max( RRS,ARS ) - ( PN / RRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( RMSe - RMSe ) - ( MLU - Max( ( MUC + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.22787129855762073}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) )", "obj1": 0.905511811023622, "obj2": 0.06946603438094415}, {"determining": "( ( PN - MDR ) / ( Min( ( ACS + ( MRS / ( BR - FirstVNF_CPU_Server ) ) ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Max( ( RCSe + DS ),MUR ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * MLU ) ),( DS * RCSe ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10470689687751558}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( Max( MUR,Max( ( Max( ( RCSe + DS ),MUR ) + MUR ),RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.812992125984252, "obj2": 0.07247896625822882}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( FirstVNF_Mem_Server ,Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ARS * ( PN - DDR ) ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - MLU ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( CRS - Const ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( ( MUR / MUC ),( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01904497057805123}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) - ( ( DDR + ACS ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) * RCSe ) / Max( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) * ( MUC - RCSe ) ),DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8250780202249193}, {"determining": "( ( PN - MDR ) / ( Min( Max( Max( ( ( FirstVNF_Mem / CRS ) * FirstVNF_CPU_Server ),Const ),PN ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( MUR + ( ( RRSe - ( ( CS + DS ) / ( MUM - MUC ) ) ) * MUR ) ) / ( Max( RRSe,( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08606479094610789}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,RRS ) ) / ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,FirstVNF_RAM ) * FirstVNF_RAM ) ) ),( MDR * CRS ) ) ) ) )", "choosing": "( ( Max( DS,Max( Max( MUR,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( ( Max( MUC,Max( ( DS * MUR ),MUC ) ) + MUC ) ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,Max( MUC,RMSe ) ) * MUC ) ),MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6523021125910696}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,( DDR + BR ) ) * ( BR + CRS ) ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Min( RCSe ,( Min( Max( MUM,( MUR * RMSe ) ) ,CS ) * MUC ) ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.0758833906048432}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,( Min( FirstVNF_Mem ,MDR ) * MRS ) ) * MRS ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / RRSe )", "obj1": 0.7913385826771654, "obj2": 0.08156013422274476}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ACS,( BR + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,( ( RMSe * CS ) + DS ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( MUC * MUR ),( DS / MUM ) ) ,CS ) - MUC ) ),MUC ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6471800168613151}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU / Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( DS,Max( Max( DS,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( MLU ,( Min( Min( RMSe ,MUC ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.25, "obj2": 0.6118470205612618}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( Min( RRSe ,MUC ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.627994462543046}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( PN - MDR ) / Min( Min( ( BR * MRS ) ,Min( ( BR * MRS ) ,MRS ) ) ,MDR ) )", "choosing": "( ( MUC + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.0829073062226755}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ARS - RRS ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( RMSe - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / MUC ) ) ) + MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6120794063239281}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) * ( ( Min( FirstVNF_CPU ,( ( CRS + PN ) * Min( FirstVNF_Mem_Server ,Min( ACS ,AMS ) ) ) ) * AMS ) + RRS ) )", "choosing": "Min( ( RCSe - Min( Max( MUM,( ( ( MUR + ( CS + MUC ) ) + DS ) / RCSe ) ) ,RCSe ) ) ,Max( MUM,Min( ( MUM - ( MUM - Min( ( ( DS * DS ) - MUM ) ,( MUC + RCSe ) ) ) ) ,( MUC - MUR ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7103353926152447}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( Min( CRS ,AMS ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( FirstVNF_RAM * Min( CRS ,FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),RRSe ) / Max( ( MUC + ( Max( RMSe,( ( MLU * RMSe ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( Max( RCSe,MUR ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6912076649095934}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) * Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) / ( ( PN + FirstVNF_Mem_Server ) - DDR ) ),Max( ( ( FirstVNF_Mem_Server + Min( Const ,BR ) ) - ( FirstVNF_CPU + Const ) ),PN ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( RCSe / MUC ) ) / MUM ) ,Max( CS,( ( DS - MUR ) * ( CS * MLU ) ) ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( ( MUC - Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) ) * MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6188559904317373}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( DDR + ACS ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) * RCSe ) / Max( ( MUR * ( MUC - RCSe ) ),DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8219441496799375}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Max( PN,( MRS - FirstVNF_CPU ) ) / ( AMS * Max( RRS,BR ) ) )", "choosing": "( ( MUC / MUR ) / Max( MUC,( RMSe - Min( RCSe ,( Min( Max( Max( RCSe,MUR ),( MUR * MUC ) ) ,CS ) * MUC ) ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6902447821332717}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * PN ) - ( BR + ACS ) ) )", "choosing": "Max( ( MUC + DS ),( RMSe + ( ( Min( RRSe ,CS ) - ( CS - ( MUM - MUM ) ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}], "29": [{"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - ( Min( ( ( ( MUM + MUR ) / ( MLU - RRSe ) ) * ( RCSe + MUM ) ) ,RRSe ) * RCSe ) ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( ( PN / ( FirstVNF_RAM_Server / ( DDR + ( PN * BR ) ) ) ) - ARS ) ) * Min( FirstVNF_RAM_Server ,CRS ) ) - Min( ( ( MDR * ( ( MRS + FirstVNF_Mem ) - ( BR - Const ) ) ) + PN ) ,( ( FirstVNF_RAM_Server / Max( BR,Max( RRS,Min( FirstVNF_CPU ,MDR ) ) ) ) + AMS ) ) )", "choosing": "Max( ( RRSe - RMSe ),( ( MUC - ( RRSe + RMSe ) ) / ( MLU / Min( MUM ,( ( DS * RRSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ( ARS - FirstVNF_RAM ) - MDR ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( Min( RRSe ,MLU ) - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / ( RMSe / MUC ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.17897134191955447}, {"determining": "( Max( RRS,ARS ) - ( PN / RRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( RMSe - RMSe ) - ( MLU - Max( ( MUC + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.22787129855762073}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) )", "obj1": 0.905511811023622, "obj2": 0.06946603438094415}, {"determining": "( ( PN - MDR ) / ( Min( ( ACS + ( MRS / ( BR - FirstVNF_CPU_Server ) ) ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Max( ( RCSe + DS ),MUR ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * MLU ) ),( DS * RCSe ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10470689687751558}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( Max( MUR,Max( ( Max( ( RCSe + DS ),MUR ) + MUR ),RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.812992125984252, "obj2": 0.07247896625822882}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ARS * ( PN - DDR ) ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - MLU ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( CRS - Const ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( ( MUR / MUC ),( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01904497057805123}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( FirstVNF_Mem_Server ,Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) - ( ( DDR + ACS ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) * RCSe ) / Max( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) * ( MUC - RCSe ) ),DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8250780202249193}, {"determining": "( ( PN - MDR ) / ( Min( Max( Max( ( ( FirstVNF_Mem / CRS ) * FirstVNF_CPU_Server ),Const ),PN ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( MUR + ( ( RRSe - ( ( CS + DS ) / ( MUM - MUC ) ) ) * MUR ) ) / ( Max( RRSe,( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08606479094610789}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,RRS ) ) / ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,FirstVNF_RAM ) * FirstVNF_RAM ) ) ),( MDR * CRS ) ) ) ) )", "choosing": "( ( Max( DS,Max( Max( MUR,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( ( Max( MUC,Max( ( DS * MUR ),MUC ) ) + MUC ) ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,Max( MUC,RMSe ) ) * MUC ) ),MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6523021125910696}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,( DDR + BR ) ) * ( BR + CRS ) ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Min( RCSe ,( Min( Max( MUM,( MUR * RMSe ) ) ,CS ) * MUC ) ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.0758833906048432}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,( Min( FirstVNF_Mem ,MDR ) * MRS ) ) * MRS ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / RRSe )", "obj1": 0.7913385826771654, "obj2": 0.08156013422274476}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ACS,( BR + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,( ( RMSe * CS ) + DS ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( MUC * MUR ),( DS / MUM ) ) ,CS ) - MUC ) ),MUC ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6471800168613151}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU / Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( DS,Max( Max( DS,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( MLU ,( Min( Min( RMSe ,MUC ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.25, "obj2": 0.6118470205612618}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( Min( RRSe ,MUC ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.627994462543046}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( PN - MDR ) / Min( Min( ( BR * MRS ) ,Min( ( BR * MRS ) ,MRS ) ) ,MDR ) )", "choosing": "( ( MUC + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.0829073062226755}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ARS - RRS ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( RMSe - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / MUC ) ) ) + MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6120794063239281}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) * ( ( Min( FirstVNF_CPU ,( ( CRS + PN ) * Min( FirstVNF_Mem_Server ,Min( ACS ,AMS ) ) ) ) * AMS ) + RRS ) )", "choosing": "Min( ( RCSe - Min( Max( MUM,( ( ( MUR + ( CS + MUC ) ) + DS ) / RCSe ) ) ,RCSe ) ) ,Max( MUM,Min( ( MUM - ( MUM - Min( ( ( DS * DS ) - MUM ) ,( MUC + RCSe ) ) ) ) ,( MUC - MUR ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7103353926152447}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( DDR + ACS ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) * RCSe ) / Max( ( MUR * ( MUC - RCSe ) ),DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8219441496799375}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( Min( CRS ,AMS ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( FirstVNF_RAM * Min( CRS ,FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),RRSe ) / Max( ( MUC + ( Max( RMSe,( ( MLU * RMSe ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( Max( RCSe,MUR ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6912076649095934}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) * Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) / ( ( PN + FirstVNF_Mem_Server ) - DDR ) ),Max( ( ( FirstVNF_Mem_Server + Min( Const ,BR ) ) - ( FirstVNF_CPU + Const ) ),PN ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( RCSe / MUC ) ) / MUM ) ,Max( CS,( ( DS - MUR ) * ( CS * MLU ) ) ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( ( MUC - Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) ) * MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6188559904317373}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( CRS * MDR ) * ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Max( PN,( MRS - FirstVNF_CPU ) ) / ( AMS * Max( RRS,BR ) ) )", "choosing": "( ( MUC / MUR ) / Max( MUC,( RMSe - Min( RCSe ,( Min( Max( Max( RCSe,MUR ),( MUR * MUC ) ) ,CS ) * MUC ) ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6902447821332717}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * PN ) - ( BR + ACS ) ) )", "choosing": "Max( ( MUC + DS ),( RMSe + ( ( Min( RRSe ,CS ) - ( CS - ( MUM - MUM ) ) ) * MUC ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}], "30": [{"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,ACS ) + FirstVNF_Mem ) * ( FirstVNF_Mem - ( FirstVNF_RAM_Server + ( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "Max( Min( CS ,( RCSe + ( CS * ( MUC / MUR ) ) ) ),( MUM + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - ( Min( ( ( ( MUM + MUR ) / ( MLU - RRSe ) ) * ( RCSe + MUM ) ) ,RRSe ) * RCSe ) ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ( ARS - FirstVNF_RAM ) - MDR ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( Min( RRSe ,MLU ) - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / ( RMSe / MUC ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.17897134191955447}, {"determining": "( Max( RRS,ARS ) - ( PN / RRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( RMSe - RMSe ) - ( MLU - Max( ( MUC + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.22787129855762073}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) )", "obj1": 0.905511811023622, "obj2": 0.06946603438094415}, {"determining": "( ( PN - MDR ) / ( Min( ( ACS + ( MRS / ( BR - FirstVNF_CPU_Server ) ) ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Max( ( RCSe + DS ),MUR ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * MLU ) ),( DS * RCSe ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10470689687751558}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( Max( MUR,Max( ( Max( ( RCSe + DS ),MUR ) + MUR ),RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.812992125984252, "obj2": 0.07247896625822882}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( FirstVNF_Mem_Server ,Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ARS * ( PN - DDR ) ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - MLU ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( CRS - Const ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( ( MUR / MUC ),( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01904497057805123}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) - ( ( DDR + ACS ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) * RCSe ) / Max( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) * ( MUC - RCSe ) ),DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8250780202249193}, {"determining": "( ( PN - MDR ) / ( Min( Max( Max( ( ( FirstVNF_Mem / CRS ) * FirstVNF_CPU_Server ),Const ),PN ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( MUR + ( ( RRSe - ( ( CS + DS ) / ( MUM - MUC ) ) ) * MUR ) ) / ( Max( RRSe,( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08606479094610789}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,RRS ) ) / ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,FirstVNF_RAM ) * FirstVNF_RAM ) ) ),( MDR * CRS ) ) ) ) )", "choosing": "( ( Max( DS,Max( Max( MUR,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( ( Max( MUC,Max( ( DS * MUR ),MUC ) ) + MUC ) ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,Max( MUC,RMSe ) ) * MUC ) ),MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6523021125910696}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( Max( MDR,ACS ) ,( ( RRS + Min( ( Min( FirstVNF_RAM_Server ,DDR ) - Min( ACS ,ACS ) ) ,( Min( CRS ,RRS ) * FirstVNF_RAM ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ARS ) - ( MRS + ARS ) ) ) ) ) )", "choosing": "( ( ( RMSe * Max( ( ( CS * ( MLU * ( MLU * RCSe ) ) ) / DS ),RRSe ) ) / Max( ( RCSe + ( Min( RCSe ,RMSe ) - Min( MUR ,MUC ) ) ),RRSe ) ) / ( ( Min( ( MLU * Max( RRSe,MLU ) ) ,Min( ( RRSe / RRSe ) ,MUM ) ) - ( RMSe / RMSe ) ) - Min( RRSe ,Min( Min( Min( RCSe ,RCSe ) ,Min( RCSe ,RRSe ) ) ,RCSe ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5375368227672087}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,( DDR + BR ) ) * ( BR + CRS ) ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Min( RCSe ,( Min( Max( MUM,( MUR * RMSe ) ) ,CS ) * MUC ) ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.0758833906048432}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,( Min( FirstVNF_Mem ,MDR ) * MRS ) ) * MRS ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / RRSe )", "obj1": 0.7913385826771654, "obj2": 0.08156013422274476}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ACS,( BR + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,( ( RMSe * CS ) + DS ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( MUC * MUR ),( DS / MUM ) ) ,CS ) - MUC ) ),MUC ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6471800168613151}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU / Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( DS,Max( Max( DS,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( MLU ,( Min( Min( RMSe ,MUC ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.25, "obj2": 0.6118470205612618}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( Min( RRSe ,MUC ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.627994462543046}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( PN - MDR ) / Min( Min( ( BR * MRS ) ,Min( ( BR * MRS ) ,MRS ) ) ,MDR ) )", "choosing": "( ( MUC + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.0829073062226755}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ARS - RRS ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( RMSe - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / MUC ) ) ) + MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6120794063239281}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( Max( MDR,ACS ) ,( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,RRS ) * FirstVNF_RAM ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ARS ) - MDR ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( Min( CS ,( Min( RCSe ,RMSe ) - Min( ( ( MUR / CS ) - RRSe ) ,MUC ) ) ),RRSe ) ) / ( MUM + Min( MUC ,RRSe ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7722154032332984}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) * ( ( Min( FirstVNF_CPU ,( ( CRS + PN ) * Min( FirstVNF_Mem_Server ,Min( ACS ,AMS ) ) ) ) * AMS ) + RRS ) )", "choosing": "Min( ( RCSe - Min( Max( MUM,( ( ( MUR + ( CS + MUC ) ) + DS ) / RCSe ) ) ,RCSe ) ) ,Max( MUM,Min( ( MUM - ( MUM - Min( ( ( DS * DS ) - MUM ) ,( MUC + RCSe ) ) ) ) ,( MUC - MUR ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7103353926152447}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( DDR + ACS ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) * RCSe ) / Max( ( MUR * ( MUC - RCSe ) ),DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8219441496799375}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( ( ( AMS / ( RRS + AMS ) ) - PN ) ,DDR ) ) / Min( Max( MDR,ACS ) ,( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,RRS ) * FirstVNF_RAM ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ARS ) - MDR ) ) ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( Min( CS ,( Min( RCSe ,RMSe ) - Min( ( ( CS / CS ) - RRSe ) ,MUC ) ) ),RRSe ) ) / ( MUM + Min( MUC ,RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7703721749287713}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( Max( Min( CRS ,AMS ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( FirstVNF_RAM * Min( CRS ,FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),RRSe ) / Max( ( MUC + ( Max( RMSe,( ( MLU * RMSe ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( Max( RCSe,MUR ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6912076649095934}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) * Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) / ( ( PN + FirstVNF_Mem_Server ) - DDR ) ),Max( ( ( FirstVNF_Mem_Server + Min( Const ,BR ) ) - ( FirstVNF_CPU + Const ) ),PN ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( RCSe / MUC ) ) / MUM ) ,Max( CS,( ( DS - MUR ) * ( CS * MLU ) ) ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( ( MUC - Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) ) * MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6188559904317373}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}], "31": [{"determining": "( ( ( AMS / ( ( PN / ( Max( MRS,ACS ) / Max( DDR,DDR ) ) ) - FirstVNF_CPU ) ) - Min( FirstVNF_RAM_Server ,CRS ) ) - Min( ( ( MDR * ( DDR - FirstVNF_RAM ) ) + PN ) ,( ( FirstVNF_CPU / Max( BR,Max( RRS,Min( ( Const * RRS ) ,( BR - FirstVNF_CPU_Server ) ) ) ) ) * AMS ) ) )", "choosing": "Max( ( RCSe + ( CS * ( MUC / MUR ) ) ),( ( MUC - ( RRSe + RMSe ) ) / ( DS / Min( ( ( ( Max( MUM,RMSe ) * MLU ) + ( Max( RRSe,MUC ) * ( MUM * RRSe ) ) ) / DS ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Max( ARS,ACS ) + FirstVNF_Mem ) * ( FirstVNF_Mem - ( FirstVNF_RAM_Server + ( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "Max( Min( CS ,( RCSe + ( CS * ( MUC / MUR ) ) ) ),( MUM + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( FirstVNF_RAM_Server / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( AMS + ( ACS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_CPU_Server,AMS ) + RRS ) )", "choosing": "( ( MUC * MUC ) - ( CS * ( ( ( ( RRSe - DS ) + MUM ) * MUR ) - RCSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.26913175226627567}, {"determining": "( ( FirstVNF_CPU_Server - ( ACS / ARS ) ) / ( ACS / ARS ) )", "choosing": "Max( ( DS * MUC ),Max( ( DS * MUC ),( RRSe / RRSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4255213879836365}, {"determining": "( ( Min( ARS ,Max( MRS,FirstVNF_RAM ) ) - ( MDR + FirstVNF_CPU ) ) / ( Const / ARS ) )", "choosing": "Max( Min( Max( MLU,MLU ) ,( MUR - MUR ) ),( Max( RCSe,( Max( ( MLU / Min( Max( RRSe,MUC ) ,Max( MUR,RRSe ) ) ),DS ) + MLU ) ) / RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.26620937789869115}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ( ARS - FirstVNF_RAM ) - MDR ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( Min( RRSe ,MLU ) - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / ( RMSe / MUC ) ) ) ) + MLU ) )", "obj1": 0.75, "obj2": 0.17897134191955447}, {"determining": "( Max( RRS,ARS ) - ( PN / RRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( RMSe - RMSe ) - ( MLU - Max( ( MUC + DS ),Min( Min( ( MLU + RCSe ) ,Max( Min( CS ,CS ),MUC ) ) ,( RMSe / ( Min( CS ,CS ) + ( RMSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.22787129855762073}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) )", "obj1": 0.905511811023622, "obj2": 0.06946603438094415}, {"determining": "( ( PN - MDR ) / ( Min( ( ACS + ( MRS / ( BR - FirstVNF_CPU_Server ) ) ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Max( ( RCSe + DS ),MUR ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * MLU ) ),( DS * RCSe ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10470689687751558}, {"determining": "( ( Const - ( ( FirstVNF_RAM / PN ) * MDR ) ) / ( ( FirstVNF_RAM / PN ) * MDR ) )", "choosing": "Max( ( RMSe * RCSe ),MUM )", "obj1": 0.6929133858267716, "obj2": 0.183917084105661}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( Max( MUR,Max( ( Max( ( RCSe + DS ),MUR ) + MUR ),RRSe ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.812992125984252, "obj2": 0.07247896625822882}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) / Min( ( ARS * ( PN - DDR ) ) ,Max( ( Min( FirstVNF_Mem ,( AMS - FirstVNF_Mem ) ) - FirstVNF_RAM_Server ),ACS ) ) )", "choosing": "( ( ( Max( Max( MUC,Min( Min( ( RCSe - MLU ) ,( MUM - DS ) ) ,( ( RCSe / MUR ) - MUC ) ) ),Max( ( ( RCSe + RMSe ) - ( RRSe - Max( CS,RMSe ) ) ),( ( RMSe + ( RMSe * MUC ) ) - RRSe ) ) ) + Max( ( MLU - ( MUR / RRSe ) ),Min( MUM ,RMSe ) ) ) * MUC ) / ( MUC * DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( ( CRS - Const ) / ( Max( FirstVNF_CPU_Server,( ( CRS - Const ) / FirstVNF_Mem_Server ) ) * Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( ( MUR / MUC ),( MUR / MUC ) ) / MUM ) ,( MUC / MUC ) ) ) ) - ( ( RRSe * CS ) - DS ) ),Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.01904497057805123}, {"determining": "( FirstVNF_Mem_Server / Min( ( MDR * FirstVNF_Mem ) ,( MRS * DDR ) ) )", "choosing": "( Max( Min( ( RRSe / MUC ) ,( RCSe + ( Min( Max( Min( MUC ,MUC ),Max( MUR,MUC ) ) ,CS ) * MUC ) ) ),CS ) / ( RMSe + ( CS / DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4895007227493133}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem ) ) * ( FirstVNF_Mem_Server / DDR ) ) + ( Const - FirstVNF_CPU_Server ) ) ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( Max( ( DS - Min( ( RMSe * RCSe ) ,CS ) ),RRSe ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.867115211508898}, {"determining": "( Max( FirstVNF_RAM,ARS ) - Max( Max( Min( FirstVNF_Mem_Server ,Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ),CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) / Max( MUC,( ( ( RCSe * ( MUC + ( RRSe * Min( MUC ,MUM ) ) ) ) + ( Min( ( ( MUM + MUR ) * RMSe ) ,CS ) * MUM ) ) / MUC ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3241100254848172}, {"determining": "( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,MLU ) - RRSe ) )", "obj1": 0.4547244094488189, "obj2": 0.3443677222647148}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) - ( ( DDR + ACS ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) * RCSe ) / Max( ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUM ) * ( MUC - RCSe ) ),DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8250780202249193}, {"determining": "( ( PN - MDR ) / ( Min( Max( Max( ( ( FirstVNF_Mem / CRS ) * FirstVNF_CPU_Server ),Const ),PN ) ,MRS ) * ( BR + CRS ) ) )", "choosing": "( ( MUR + ( ( RRSe - ( ( CS + DS ) / ( MUM - MUC ) ) ) * MUR ) ) / ( Max( RRSe,( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08606479094610789}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + Max( MRS,FirstVNF_RAM ) ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUC + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5865227841851406}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( CRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,Min( ( MLU + RCSe ) ,Max( ( CS + CS ),MUC ) ) ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5673979595129981}, {"determining": "( Max( MRS,MDR ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6823681400609712}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,RRS ) ) / ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( Min( CRS ,FirstVNF_RAM ) * FirstVNF_RAM ) ) ),( MDR * CRS ) ) ) ) )", "choosing": "( ( Max( DS,Max( Max( MUR,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( ( Max( MUC,Max( ( DS * MUR ),MUC ) ) + MUC ) ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,Max( MUC,RMSe ) ) * MUC ) ),MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6523021125910696}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5556156503904288}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( Max( MDR,ACS ) ,( ( RRS + Min( ( Min( FirstVNF_RAM_Server ,DDR ) - Min( ACS ,ACS ) ) ,( Min( CRS ,RRS ) * FirstVNF_RAM ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ARS ) - ( MRS + ARS ) ) ) ) ) )", "choosing": "( ( ( RMSe * Max( ( ( CS * ( MLU * ( MLU * RCSe ) ) ) / DS ),RRSe ) ) / Max( ( RCSe + ( Min( RCSe ,RMSe ) - Min( MUR ,MUC ) ) ),RRSe ) ) / ( ( Min( ( MLU * Max( RRSe,MLU ) ) ,Min( ( RRSe / RRSe ) ,MUM ) ) - ( RMSe / RMSe ) ) - Min( RRSe ,Min( Min( Min( RCSe ,RCSe ) ,Min( RCSe ,RRSe ) ) ,RCSe ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5375368227672087}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * FirstVNF_CPU )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( ( RMSe / DS ) / RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015988640272544007}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM ),FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MLU + MLU ) / Max( ( ( Max( DS,( RRSe - ( MUM - MLU ) ) ) * ( ( ( RCSe - MLU ) * MUC ) / ( CS + ( ( RMSe - MLU ) + Min( MLU ,MUR ) ) ) ) ) + MLU ),MLU ) )", "obj1": 0.1594488188976378, "obj2": 0.7162545808845836}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( CS + RRSe ) + RCSe ) ) / Min( MLU ,( Min( MLU ,RCSe ) / Max( ( ( RMSe + MUR ) + Min( MLU ,MUM ) ),MLU ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6323185261483482}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,MDR ) * MRS ) ,( DDR + BR ) ) * ( BR + CRS ) ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( Max( Min( RCSe ,( Min( Max( MUM,( MUR * RMSe ) ) ,CS ) * MUC ) ),( MUR - MUC ) ) / ( ( ( Max( ( ( MUM + MUC ) + ( RCSe * RMSe ) ),( DS * ( RMSe / RRSe ) ) ) / Max( CS,( MLU / RRSe ) ) ) / ( RRSe + MUR ) ) * ( MLU * ( RCSe / RCSe ) ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.0758833906048432}, {"determining": "( DDR + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / RRSe ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5208795828132391}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR + MUC ) ) / Max( MUR,DS ) ) / ( Min( Max( ( MUR * MUC ),( DS / MUM ) ) ,CS ) * MUC ) )", "obj1": 0.2578740157480315, "obj2": 0.5944406722607125}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - Const ) / MRS ) / Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( ( Max( RMSe,CS ) - CS ) - ( ( Max( Max( ( DS - RCSe ),MUM ),RCSe ) + RRSe ) + RCSe ) ) / Max( MLU,RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6390702775919042}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * RCSe ) ,CS ) / ( RCSe * DS ) )", "obj1": 0.10236220472440945, "obj2": 0.820459624986945}, {"determining": "Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ,( ( Min( MDR ,( FirstVNF_RAM - Const ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( CS * Min( ( CS / MUR ) ,Min( ( MLU - MUR ) ,( DS - MUM ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5291118214155416}, {"determining": "( ( FirstVNF_Mem - Max( ( MDR * CRS ),ACS ) ) / ( FirstVNF_CPU_Server - Min( Max( ( MDR * CRS ),ACS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( RRSe,MUM ) ) / Max( ( MUC + ( Max( RMSe,( ( CS * MLU ) * ( MUR * RMSe ) ) ) - ( MUC - ( CS * Min( MLU ,MUM ) ) ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( ( ( DS / MUM ) * ( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3372483227483336}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8032456808822541}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6042696238020417}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5454725591171106}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM_Server,DDR ) + FirstVNF_Mem_Server ) ) * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / ( MUR / MUC ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.5181633482762393}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,( ( ( ARS / FirstVNF_Mem_Server ) + RRS ) - ( Const * MRS ) ) ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( RMSe / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7730426883806094}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( Max( ACS,( Min( ACS ,( FirstVNF_Mem - DDR ) ) * CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,Max( ( MUC - RCSe ),RRSe ) ) ) / Max( MUR,RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.15354330708661418, "obj2": 0.744549476783412}, {"determining": "( ( PN - MDR ) / ( Min( ( Min( FirstVNF_Mem ,( Min( FirstVNF_Mem ,MDR ) * MRS ) ) * MRS ) ,MRS ) * MDR ) )", "choosing": "( ( RMSe + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( MUC,( RRSe * MLU ) ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / RRSe )", "obj1": 0.7913385826771654, "obj2": 0.08156013422274476}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "( ( CRS * MDR ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( ( CS - DS ) / Min( ( RCSe - ( MUM / ( MUC / RRSe ) ) ) ,DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5626250722917898}, {"determining": "( Max( ( AMS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,MDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ACS,( BR + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,( ( RMSe * CS ) + DS ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( MUC * MUR ),( DS / MUM ) ) ,CS ) - MUC ) ),MUC ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6471800168613151}, {"determining": "( Max( ( MDR * FirstVNF_CPU_Server ),Max( ( FirstVNF_CPU - ( ( ( MRS + ( FirstVNF_CPU + FirstVNF_CPU ) ) - Const ) / PN ) ),MRS ) ) - ( CRS * ARS ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( Min( CS ,( Min( RCSe ,RMSe ) - Min( ( ( MUR / CS ) - RRSe ) ,MUC ) ) ),RRSe ) ) / ( MUM + Min( MUC ,RRSe ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7700655764938238}, {"determining": "( Max( ( ( DDR * ( ( Max( BR,Const ) / FirstVNF_RAM_Server ) / Const ) ) / PN ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU / Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( DS,Max( Max( DS,MLU ),MUM ) ) / ( CS * MUR ) ) / Max( MUC,Max( Min( MLU ,( Min( Min( RMSe ,MUC ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.25, "obj2": 0.6118470205612618}, {"determining": "( ( CRS * MDR ) * ( ( ( FirstVNF_Mem_Server / RRS ) - MDR ) / AMS ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( ( RCSe - MUC ) / CS ) / RCSe ) ) ) + CS ) )", "obj1": 0.16338582677165353, "obj2": 0.7085852562814161}, {"determining": "( Min( ( ( ( PN - FirstVNF_CPU ) / PN ) + PN ) ,( Const + Max( DDR,( AMS - PN ) ) ) ) * Min( FirstVNF_RAM ,Min( CRS ,Min( FirstVNF_CPU ,ARS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MLU ) ,DS ),Max( MUM,( MLU / RMSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.009169438500292804}, {"determining": "( ( ACS * Min( Max( ACS,( MDR * ( Min( FirstVNF_RAM ,MDR ) - ( ARS - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_RAM_Server ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * DS ) * CS ) - ( MUR + ( Max( Min( RRSe ,MUC ),MUR ) * ( ( ( RRSe * MUR ) + ( MLU * Max( ( RCSe / MUC ),( CS * RRSe ) ) ) ) - ( ( RCSe + CS ) / CS ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.627994462543046}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( FirstVNF_RAM_Server * ( PN - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( Min( MUR ,( MUM + MUR ) ) / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.49692193234633536}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( FirstVNF_Mem_Server * MRS ) ,AMS ) ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( Max( MUR,Min( ( RCSe / RRSe ) ,( MUM / Min( DS ,RMSe ) ) ) ) - RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3380629613732152}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( ( CS * CS ) * RCSe ) )", "obj1": 0.19291338582677164, "obj2": 0.6479017493984799}, {"determining": "( ( ( MDR * Max( ( ARS / MDR ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / MLU ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8007305909780635}, {"determining": "( ( PN - MDR ) / Min( Min( ( BR * MRS ) ,Min( ( BR * MRS ) ,MRS ) ) ,MDR ) )", "choosing": "( ( MUC + Max( Min( ( Min( MUC ,MUM ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) ) ),MUC ) ) / ( RMSe * ( MUM + ( MUR + MUR ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.0829073062226755}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ARS / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( DS / ( ( RCSe + RRSe ) * MUR ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + Max( CS,MUC ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7942060729123996}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( ( RMSe - ( ( RRSe - DS ) + MUM ) ),( RMSe + DS ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5091583664284459}, {"determining": "( Max( Max( FirstVNF_Mem,Const ),FirstVNF_CPU_Server ) * ( Min( BR ,ARS ) - ( ( DDR - PN ) + CRS ) ) )", "choosing": "Max( ( RCSe - MUR ),( ( RRSe * MUM ) / MUC ) )", "obj1": 0.9822834645669292, "obj2": 0.007319899352936993}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( Max( ACS,( AMS + Min( ( MDR / RRS ) ,DDR ) ) ) ,FirstVNF_RAM_Server ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - ( MUR - RCSe ) ) / Max( MUR,Min( ( ( ( ( RMSe / MUM ) / MUC ) - ( RMSe - RCSe ) ) / RRSe ) ,CS ) ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),Max( MUR,MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6882520847415518}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ( ARS - RRS ) - MDR ) )", "choosing": "( ( ( RCSe / ( ( CS + DS ) * Min( ( MUM / ( RMSe - RMSe ) ) ,MUR ) ) ) - RMSe ) / ( ( Max( RMSe,RRSe ) * ( CS * ( RMSe / MUC ) ) ) + MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6120794063239281}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5023889934375065}, {"determining": "( Max( MRS,( Max( MRS,FirstVNF_CPU_Server ) / ( MDR - Max( Max( ( MDR + MRS ),DDR ),Const ) ) ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),( Min( MLU ,RCSe ) / Min( ( MUC + Min( MLU ,RCSe ) ) ,CS ) ) ) ) / Min( MLU ,( Min( MLU ,RMSe ) / Max( ( ( RMSe - MLU ) + Min( MLU ,MUR ) ),MLU ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6256342644729818}, {"determining": "( ( ACS - MDR ) / Min( Min( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem + ( MDR + FirstVNF_RAM_Server ) ),AMS ) ) ,MDR ) ,MDR ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Min( Max( ( DS / MUM ),( MUR * MUC ) ) ,CS ) ) / Max( MUC,Max( Min( RCSe ,( ( Min( CS ,RRSe ) - Min( ( RRSe * RCSe ) ,MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6207650641477411}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( ( ( ARS / ( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) ) ) + RRS ) - ( Const * MRS ) ) - Max( MRS,Const ) ) )", "choosing": "( Min( MLU ,Max( MLU,MLU ) ) / Max( MUC,MLU ) )", "obj1": 0.9901574803149606, "obj2": 0.004040202079906072}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( ( BR / FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( MUM,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.5039806826424518}, {"determining": "( Max( ARS,Max( MRS,( FirstVNF_CPU - ( ( ( MRS + ARS ) - Const ) / PN ) ) ) ) - ( PN * ARS ) )", "choosing": "( ( Max( DS,Max( RRSe,MUM ) ) / Max( ( MUC + ( Min( RCSe ,RMSe ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( ( DS / MUM ),( MUC * MUR ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7512767993766702}, {"determining": "( Max( Min( CRS ,AMS ),Min( FirstVNF_RAM_Server ,DDR ) ) / ( FirstVNF_CPU_Server * Min( FirstVNF_RAM_Server ,Max( ( RRS + Min( FirstVNF_RAM ,( FirstVNF_RAM * Min( CRS ,FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),RRSe ) / Max( ( MUC + ( Max( RMSe,( ( MLU * RMSe ) * ( MUR * RMSe ) ) ) - ( MUC - MUR ) ) ),RRSe ) ) / Max( MUC,Max( Min( RCSe ,( Min( Max( Max( RCSe,MUR ),( MUR * MUC ) ) ,CS ) * MUC ) ),MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6912076649095934}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( MUC * RRSe ) )", "obj1": 0.11023622047244094, "obj2": 0.802906051592188}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - Const ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - MUC ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7366066759361918}, {"determining": "( Min( PN ,( BR - ( ARS * MRS ) ) ) - ( MDR * AMS ) )", "choosing": "Max( ( MLU + Max( ( Min( MUC ,CS ) + ( RMSe - MLU ) ),CS ) ),( MLU * RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) * ( ( Min( FirstVNF_CPU ,( ( CRS + PN ) * Min( FirstVNF_Mem_Server ,Min( ACS ,AMS ) ) ) ) * AMS ) + RRS ) )", "choosing": "Min( ( RCSe - Min( Max( MUM,( ( ( MUR + ( CS + MUC ) ) + DS ) / RCSe ) ) ,RCSe ) ) ,Max( MUM,Min( ( MUM - ( MUM - Min( ( ( DS * DS ) - MUM ) ,( MUC + RCSe ) ) ) ) ,( MUC - MUR ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7103353926152447}, {"determining": "( ( CRS * MDR ) * FirstVNF_RAM_Server )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUC ) ,( ( MLU / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + CRS ) / ( MDR / Max( ( ( MDR * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM ) ) + Max( Const,PN ) ),RRS ) ) )", "choosing": "Max( ( ( ( MUR * Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - ( MLU / RCSe ) ),( CS + Max( CS,MUC ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7914009886814243}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),Min( DDR ,( ( AMS / ( RRS + ( BR * BR ) ) ) - PN ) ) ) / ( ( ARS - ( MRS * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( Max( MUM,RMSe ) / DS ) ) / Max( ( MUC * MLU ),Min( CS ,( Max( ( ( MUC - DS ) / RRSe ),MUC ) + RMSe ) ) ) ) / ( MUM * Min( RMSe ,RRSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6999940776211153}, {"determining": "( Max( Max( Const,FirstVNF_Mem ),FirstVNF_CPU_Server ) * ( ( Max( Max( FirstVNF_Mem,ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( AMS - PN ) ,PN ) ) - ACS ) )", "choosing": "Max( ( ( MLU / ( CS / ( RCSe - DS ) ) ) / MUM ),( DS / RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.6959640649006721}, {"determining": "( Max( MRS,( ( Max( ( RRS * FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( FirstVNF_CPU - ( Const * ( Const + FirstVNF_RAM ) ) ) ) * DDR ) ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,Max( ( DS + ( MUM / RCSe ) ),CS ) ) / Min( MLU ,( RMSe * CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.616880780982299}, {"determining": "( ( ( MDR * CRS ) + CRS ) / ( MDR / Max( ( FirstVNF_Mem_Server + Max( Const,PN ) ),Const ) ) )", "choosing": "Max( ( ( Max( MUR,Max( ( ( DS * CS ) - Max( ( MUC * RRSe ),Max( RRSe,MUC ) ) ),Min( CS ,RCSe ) ) ) / Min( MUC ,( DS / ( ( MLU / RCSe ) / CS ) ) ) ) - RCSe ),( CS + ( MUM + MUM ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6947618712676104}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Max( ( ( BR * ( AMS * ( PN / AMS ) ) ) * AMS ),Max( Const,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( DDR + ACS ) - Min( ( CRS / AMS ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RMSe ) * RCSe ) / Max( ( MUR * ( MUC - RCSe ) ),DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8219441496799375}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( Max( FirstVNF_RAM_Server,DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Max( ACS,Max( FirstVNF_Mem_Server,Const ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( MUC - Min( Max( RCSe,MUM ) ,( ( CS / CS ) / RCSe ) ) ) + RRSe ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( DDR + FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MLU / MLU ) / MUM ) / Min( MUC ,MLU ) )", "obj1": 0.23622047244094488, "obj2": 0.6203332415923384}, {"determining": "( ( ( ( BR * MDR ) + ( AMS / FirstVNF_CPU_Server ) ) - Min( ( ( ACS - ( ( ( MRS - MRS ) + ACS ) / Min( ( ARS + BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) / MDR ) ,( FirstVNF_RAM + MDR ) ) ) + Min( PN ,CRS ) )", "choosing": "( ( ( ( ( MUR + Max( ( Max( MUR,RCSe ) / Min( CS ,MUM ) ),RMSe ) ) - CS ) - CS ) - ( Min( MUM ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( ( ( ( RMSe * ( ( MUM + DS ) / DS ) ) / MUC ) - RRSe ) + ( RRSe - MLU ) ),( ( DS * DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5645150636164644}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_Mem * ( BR - Min( AMS ,FirstVNF_CPU ) ) ) ) * ( BR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.49114554240113967}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) * Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / Min( ( DDR - PN ) ,Min( ARS ,FirstVNF_CPU ) ) ) / ( ( PN + FirstVNF_Mem_Server ) - DDR ) ),Max( ( ( FirstVNF_Mem_Server + Min( Const ,BR ) ) - ( FirstVNF_CPU + Const ) ),PN ) ) ) )", "choosing": "Max( ( ( Max( MUR,RCSe ) / Max( RCSe,Min( ( Max( DS,( RCSe / MUC ) ) / MUM ) ,Max( CS,( ( DS - MUR ) * ( CS * MLU ) ) ) ) ) ) - ( ( RRSe * CS ) - DS ) ),( ( MUC - Max( MLU,Max( ( RRSe * DS ),Max( Max( CS,Max( MUM,MUM ) ),MUC ) ) ) ) * MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6188559904317373}, {"determining": "( ( Min( Max( AMS,FirstVNF_CPU_Server ) ,MRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( RMSe * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( RCSe,CS ),( RMSe + DS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5129904980781937}, {"determining": "( ( ( AMS / Const ) * FirstVNF_Mem ) / ( ( RRS * ( Const - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( RCSe - ( MUM / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) ) ,DS ) / ( CS - DS ) ) ) / ( Min( ( DS / CS ) ,( MLU - MUM ) ) + Max( Max( DS,CS ),( RMSe + DS ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.49943366711195086}, {"determining": "( Max( ( FirstVNF_Mem_Server * AMS ),Min( BR ,ARS ) ) / ( BR + ( ( Max( ( FirstVNF_CPU_Server / Const ),MDR ) - ( ( DDR + ACS ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,Min( MRS ,( ARS / MDR ) ) ) ) ) / MRS ) ) )", "choosing": "( ( MUR - DS ) / Max( ( Max( MUC,( MUR * RCSe ) ) - RCSe ),MUM ) )", "obj1": 0.9921259842519685, "obj2": 0.004033449315886712}, {"determining": "( ( ACS - MDR ) / Min( MDR ,Min( ( ( ARS + ACS ) / Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - AMS ) + MRS ) ),AMS ) ) ,MRS ) ) )", "choosing": "( ( Max( RRSe,( MUR - MUC ) ) / Max( MUR,DS ) ) / Max( MUC,Max( Min( ( ( ( DS - MUC ) + CS ) - MUC ) ,( ( Min( CS ,RRSe ) - Max( ( RRSe * MLU ),MUC ) ) / ( RMSe * ( MUM + ( MLU / MUR ) ) ) ) ),MUC ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7887255005131848}, {"determining": "( ( ( AMS + Const ) / ( FirstVNF_CPU - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) / ( ( RRS * ( Max( Max( PN,( RRS + ( MRS / FirstVNF_RAM ) ) ),RRS ) - FirstVNF_CPU_Server ) ) + ( AMS * MDR ) ) )", "choosing": "( Min( MLU ,( Min( ( ( RCSe / Max( ( MUM * RRSe ),( RCSe + MLU ) ) ) - MLU ) ,DS ) / ( CS - DS ) ) ) / ( ( Max( MUC,Max( ( RMSe - MLU ),RRSe ) ) - ( Min( ( ( ( MUM + MUR ) / ( MLU - RRSe ) ) * ( RCSe + MUM ) ) ,RRSe ) * RCSe ) ) - ( Min( MLU ,( ( ( MLU * MUM ) - MLU ) * MLU ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}]}