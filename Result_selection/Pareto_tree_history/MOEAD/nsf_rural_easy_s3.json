{"1": [{"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - Const ) )", "choosing": "( Max( MUM,RMSe ) - ( DS / DS ) )", "obj1": 0.9625984251968503, "obj2": 0.045070606492684254}, {"determining": "Min( ( ( FirstVNF_Mem_Server / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( MUM - MUC ) * ( RRSe + RCSe ) ) ,( ( RMSe * CS ) - ( DS / MLU ) ) ) - ( Max( ( DS / RCSe ),( MUR - RCSe ) ) * ( ( MUR / DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.809161842649082}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) )", "choosing": "Max( ( DS + CS ),( MUC / MUC ) )", "obj1": 0.1968503937007874, "obj2": 0.7971229920638447}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + MRS ) )", "choosing": "( ( CS * RCSe ) + Max( MUR,MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.8064909642122661}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.2559055118110236, "obj2": 0.6619361398702194}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) - ( ARS * MDR ) )", "choosing": "Min( ( RCSe / MLU ) ,Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - BR ) + ( MDR + MRS ) )", "choosing": "( ( CS * RCSe ) - ( RRSe - DS ) )", "obj1": 0.1830708661417323, "obj2": 0.8088516679521414}, {"determining": "( ( PN / ARS ) + ( AMS - BR ) )", "choosing": "Min( Max( CS,MUC ) ,( RRSe / MUC ) )", "obj1": 0.22244094488188976, "obj2": 0.7376034883182279}, {"determining": "Max( Min( AMS ,MRS ),( DDR - ACS ) )", "choosing": "( ( MUC - MLU ) / ( MUM + MUM ) )", "obj1": 0.2283464566929134, "obj2": 0.6948801645522095}, {"determining": "Max( ( Const + ARS ),Max( Const,BR ) )", "choosing": "( ( DS + MUC ) - Max( MUM,RCSe ) )", "obj1": 0.4074803149606299, "obj2": 0.49326687618096027}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.2795275590551181, "obj2": 0.6444656871591221}, {"determining": "( Max( PN,DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * MUC ) ,Max( MLU,RRSe ) )", "obj1": 0.7637795275590551, "obj2": 0.2113285753205982}, {"determining": "( Min( BR ,DDR ) + Min( FirstVNF_RAM_Server ,ACS ) )", "choosing": "( Max( RMSe,MUR ) * ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,AMS ) / ( CRS / CRS ) )", "choosing": "Max( ( MLU * MLU ),Max( MLU,MUC ) )", "obj1": 0.20275590551181102, "obj2": 0.7152036455929364}, {"determining": "( ( ACS - Const ) + ( Const + CRS ) )", "choosing": "( ( RRSe / RMSe ) * ( RMSe / DS ) )", "obj1": 0.13976377952755906, "obj2": 0.8035123874600938}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.21653543307086615, "obj2": 0.669992761515502}, {"determining": "( ( AMS / BR ) * Max( FirstVNF_CPU,Min( Const ,ARS ) ) )", "choosing": "( ( ( MLU + MUC ) / Min( MUM ,RCSe ) ) + ( RCSe * RMSe ) )", "obj1": 0.19291338582677164, "obj2": 0.8021972229105581}, {"determining": "( ( Max( MDR,DDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) / ( CRS / RRS ) )", "choosing": "( Min( ( MUR + CS ) ,( DS / MUR ) ) / ( MUM - ( MLU * RRSe ) ) )", "obj1": 0.281496062992126, "obj2": 0.6163444051509824}, {"determining": "( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( RRSe - MUR ) ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,MLU ) + Min( MLU ,Min( RRSe ,CS ) ) )", "obj1": 0.2578740157480315, "obj2": 0.6776452340202076}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - Min( Max( MRS,FirstVNF_CPU ) ,( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) - ( RMSe - RCSe ) ) - ( Min( MLU ,CS ) - ( RMSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) * ( ARS / BR ) )", "choosing": "( ( ( MUC * MUC ) * ( MLU + RRSe ) ) * Min( ( MUC / MUM ) ,( MUR * MUR ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5624007670095407}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM + DDR ) ) / Max( ACS,FirstVNF_RAM ) )", "choosing": "( Min( ( CS + MUM ) ,RMSe ) * ( ( MLU * RCSe ) / ( MUR * CS ) ) )", "obj1": 0.2795275590551181, "obj2": 0.6127628572745119}, {"determining": "( Min( Min( AMS ,ACS ) ,Max( DDR,BR ) ) * ( ( FirstVNF_CPU + DDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( CS / DS ) - Min( RMSe ,RMSe ) ),( Min( MUM ,RMSe ) * ( RRSe - MLU ) ) )", "obj1": 0.1220472440944882, "obj2": 0.8690571462261832}, {"determining": "Min( ( FirstVNF_CPU + DDR ) ,( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "Max( ( Max( MUR,MUR ) + ( RCSe * RMSe ) ),( ( MLU - RCSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6377706507066994}, {"determining": "( ( ARS + Const ) + ( RRS + FirstVNF_CPU ) )", "choosing": "( Max( ( RMSe + RCSe ),( MUC + RCSe ) ) / ( ( CS - CS ) - ( CS + CS ) ) )", "obj1": 0.19094488188976377, "obj2": 0.8166805307637466}, {"determining": "( ( ( FirstVNF_CPU_Server + ARS ) / ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_Mem - PN ) ,Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MLU,MLU ) + ( MUC - MUC ) ) + ( CS * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.8041348325817921}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) / Min( ( AMS / RRS ) ,CRS ) )", "choosing": "Max( ( Max( MUM,RCSe ) * ( RCSe * RMSe ) ),( RMSe * Min( MUR ,RRSe ) ) )", "obj1": 0.27755905511811024, "obj2": 0.6386970124607716}, {"determining": "( ( ( MRS * FirstVNF_Mem_Server ) + Max( BR,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU / ARS ) + ( Const / MDR ) ) )", "choosing": "Min( ( ( CS - MLU ) / ( MUC * RRSe ) ) ,( ( CS + RRSe ) - ( MUC - DS ) ) )", "obj1": 0.18110236220472442, "obj2": 0.8245031235170832}, {"determining": "( ( Min( MRS ,PN ) / ( FirstVNF_CPU / ACS ) ) + ( ( RRS - FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( CS ,RCSe ) / ( MUC + DS ) ) ,Max( ( CS * MUR ),Min( RRSe ,RCSe ) ) )", "obj1": 0.2204724409448819, "obj2": 0.7252806076973561}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * AMS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( Min( CS ,MLU ) - ( MUC - MLU ) ),( Max( RCSe,MUC ) - Min( MLU ,MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ) / ( MRS + PN ) )", "choosing": "( ( MUC + ( DS - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) )", "obj1": 0.30708661417322836, "obj2": 0.6222811589291766}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) * Max( PN,MRS ) ) - ( Max( CRS,ACS ) / Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( CS,RRSe ) - ( MUM * ( MUM - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6639869249591888}, {"determining": "( ( ( Min( ACS ,Const ) * ( DDR + FirstVNF_RAM_Server ) ) * ( ( Const - BR ) - ( ARS * MRS ) ) ) / ( Max( ( FirstVNF_RAM - CRS ),( ARS + RRS ) ) * ( ( FirstVNF_RAM - AMS ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( Min( Max( ( DS - MUC ),( RRSe / MUM ) ) ,RCSe ),Min( DS ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( ACS + MRS ) ) - ( ( RRS + FirstVNF_CPU ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_Mem_Server / Const ) - ( FirstVNF_RAM_Server - CRS ) ) + ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUM ) - ( Min( MUM ,MUR ) * RCSe ) ) / Min( MUC ,( MUC - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( MDR * FirstVNF_RAM ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,CS ) / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.12992125984251968, "obj2": 0.8756588439125716}, {"determining": "( Min( FirstVNF_Mem ,Min( ( MDR - FirstVNF_Mem_Server ) ,MDR ) ) - Max( CRS,RRS ) )", "choosing": "Max( Max( ( ( DS * DS ) * ( DS / RMSe ) ),Max( Min( MUR ,DS ),( MUR - RMSe ) ) ),( ( ( RRSe - MUM ) + ( CS - MUC ) ) + ( Min( MUC ,RCSe ) / ( MUC + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6897015414652222}, {"determining": "( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ) * ( AMS - ( BR - FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) )", "obj1": 0.14566929133858267, "obj2": 0.8562827823689244}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) + ( MUM + MUM ) ) ) ,Max( ( ( MUR + MUM ) / ( MUM / MUC ) ),DS ) )", "obj1": 0.9094488188976378, "obj2": 0.0908498078247631}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / Min( Min( CRS ,ARS ) ,( DDR * ARS ) ) ) / ( Min( ( FirstVNF_RAM_Server * CRS ) ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + Max( Min( DDR ,FirstVNF_RAM ),( DDR * AMS ) ) ) )", "choosing": "Min( ( Min( Max( RRSe,RRSe ) ,( RCSe + MUM ) ) / RCSe ) ,Min( ( MLU - CS ) ,Min( MUR ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * ACS ) - ( MRS / FirstVNF_Mem_Server ) ) - ( ( PN / ACS ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( Min( FirstVNF_Mem_Server ,Const ) * ( BR + FirstVNF_Mem_Server ) ) * Max( ( DDR * ACS ),( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( RMSe - RCSe ) / Min( RCSe ,RRSe ) ) ,Min( ( RCSe * DS ) ,Min( MUC ,MUC ) ) ) * ( ( ( RMSe * CS ) * ( RMSe + RRSe ) ) / Max( ( RCSe - MLU ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * AMS ) + ( ( ( PN / FirstVNF_RAM_Server ) + Min( Const ,FirstVNF_Mem_Server ) ) * MDR ) )", "choosing": "( ( RMSe - ( RRSe / Min( CS ,MUR ) ) ) + ( MUC + MUC ) )", "obj1": 0.2559055118110236, "obj2": 0.6721319708458716}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) / ( CRS * ACS ) )", "choosing": "( Max( ( ( RMSe - RMSe ) + CS ),( RMSe * MUR ) ) - Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) )", "obj1": 0.2795275590551181, "obj2": 0.6441935008368856}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5929298831984254}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server + CRS ) )", "choosing": "Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - MUM ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5634480469577144}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}], "2": [{"determining": "( ( ( ( CRS * ACS ) - ( MRS / FirstVNF_Mem_Server ) ) - ( ( PN / ACS ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( Min( FirstVNF_Mem_Server ,Const ) * ( BR + FirstVNF_Mem_Server ) ) * Max( ( DDR * ACS ),( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe - ( RRSe / Min( CS ,MUR ) ) ) + Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) - ( ARS * MDR ) )", "choosing": "Min( ( RCSe / MLU ) ,Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,CS ) / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8958969751409928}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) + ( MUM + MUM ) ) ) ,Max( ( ( MUR + MUM ) / ( MUM / MUC ) ),DS ) )", "obj1": 0.9094488188976378, "obj2": 0.0908498078247631}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Max( PN,DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - Max( MUM,MUC ) )", "obj1": 0.8169291338582677, "obj2": 0.15781410729306664}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * RCSe ) + MLU )", "obj1": 0.9547244094488189, "obj2": 0.0362565568509636}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ACS - AMS ) * ( Min( FirstVNF_CPU_Server ,AMS ) / ( CRS / CRS ) ) )", "choosing": "( Max( MUM,RCSe ) / MLU )", "obj1": 0.7598425196850394, "obj2": 0.19805796192221153}, {"determining": "Max( ( Const + ARS ),Max( Const,BR ) )", "choosing": "( ( DS + MUC ) - Max( MUM,RCSe ) )", "obj1": 0.4074803149606299, "obj2": 0.49326687618096027}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( Min( Min( AMS ,ACS ) ,Max( DDR,BR ) ) * ( ( FirstVNF_CPU + DDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( CS / DS ) - Min( RMSe ,RMSe ) ),( Min( MUM ,RMSe ) * ( RRSe - MLU ) ) )", "obj1": 0.1220472440944882, "obj2": 0.8690571462261832}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + MRS ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.3700787401574803, "obj2": 0.5368193402740579}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "Max( RRS,Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * Max( ( CS * MUR ),Min( RRSe ,RCSe ) ) ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6984167251939694}, {"determining": "( ( MDR - BR ) + ( MDR + MRS ) )", "choosing": "Min( ( RRSe * DS ) ,Min( MUM ,RRSe ) )", "obj1": 0.38188976377952755, "obj2": 0.5153107159921115}, {"determining": "( ( ACS + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUM / RMSe ) )", "obj1": 0.19881889763779528, "obj2": 0.6897788616670228}, {"determining": "( ( FirstVNF_Mem_Server * AMS ) + ( ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) * MDR ) )", "choosing": "( Min( ( ( RMSe - RCSe ) / Min( RCSe ,RRSe ) ) ,Min( ( RCSe * DS ) ,Min( MUC ,MUC ) ) ) * ( ( ( RMSe * CS ) * ( RMSe + RRSe ) ) / Max( ( RCSe - MLU ),( CS - RCSe ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.6319049713194362}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.8707788662526789}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5929298831984254}, {"determining": "( ( ACS - Const ) + Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( MUM,MUR ) ) * ( RMSe / DS ) )", "obj1": 0.16141732283464566, "obj2": 0.7486150769045602}, {"determining": "( ( FirstVNF_Mem_Server * AMS ) + ( ( ( ( ( Min( Const ,FirstVNF_CPU ) * BR ) + FirstVNF_RAM_Server ) / ( CRS * ACS ) ) + Min( DDR ,FirstVNF_Mem_Server ) ) * MDR ) )", "choosing": "( ( RMSe - ( ( Max( ( ( RMSe - RMSe ) + CS ),( RMSe * MUR ) ) - Max( ( ( DS + MUC ) * ( RRSe - CS ) ),( RCSe / MUM ) ) ) / Min( CS ,MUR ) ) ) + Min( MUC ,MUC ) )", "obj1": 0.2421259842519685, "obj2": 0.654859024057669}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( ( MUC + ( DS - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( ( PN - CRS ) * ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * DS ) * ( MLU + RRSe ) ) * Min( RRSe ,CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5642150191939467}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6639869249591888}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Const )", "choosing": "Max( ( Max( MUM,RMSe ) - ( DS / DS ) ),( MUC / MUC ) )", "obj1": 0.2106299212598425, "obj2": 0.6746733910601459}, {"determining": "Max( Min( AMS ,MRS ),Max( Const,MDR ) )", "choosing": "( ( ( MUC - MLU ) / ( MUM + MUM ) ) - Max( MUM,MUC ) )", "obj1": 0.2637795275590551, "obj2": 0.6065107745309295}, {"determining": "( ( MDR - BR ) + ( MDR + MRS ) )", "choosing": "Min( ( RRSe * DS ) ,Min( MUM ,RRSe ) )", "obj1": 0.3956692913385827, "obj2": 0.5025303218458581}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Const ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7705177289445121}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5805085009453665}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Max( Max( Min( ARS ,ARS ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( RMSe - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7605798010609408}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * MRS ) )", "choosing": "Max( ( Max( MUM,MUR ) + ( RCSe * RMSe ) ),( ( MLU / RCSe ) + ( MUM * RMSe ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6377706507066994}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * AMS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( Min( CS ,MLU ) - ( MUC - MLU ) ),( Max( RCSe,MUC ) - Min( MLU ,MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( Min( FirstVNF_Mem ,Min( ( MDR - FirstVNF_Mem_Server ) ,MDR ) ) - Max( CRS,RRS ) ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( Max( Max( ( ( DS * DS ) * ( DS / RMSe ) ),Max( Min( MUR ,DS ),( MUR - RMSe ) ) ),( ( ( RRSe - MUM ) + ( CS - MUC ) ) + ( Min( MUC ,RCSe ) / ( MUC + MUR ) ) ) ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7805513520064243}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server + CRS ) )", "choosing": "Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - MUM ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5593347685181256}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5805085009453665}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.1377952755905512, "obj2": 0.7842792400319626}, {"determining": "Max( Min( AMS ,MRS ),( DDR - ACS ) )", "choosing": "( ( DS + MUC ) - Max( MUM,MUC ) )", "obj1": 0.4035433070866142, "obj2": 0.5002902881799627}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5610383207296981}, {"determining": "( ( AMS / BR ) * Max( FirstVNF_CPU,Min( Const ,ARS ) ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.21653543307086615, "obj2": 0.669992761515502}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server + CRS ) )", "choosing": "Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - MUM ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5593347685181256}, {"determining": "Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) )", "choosing": "( ( MUM / RRSe ) / Max( MUM,MUR ) )", "obj1": 0.21653543307086615, "obj2": 0.669992761515502}, {"determining": "Min( ( FirstVNF_CPU + DDR ) ,( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "Max( ( Max( MUR,MUR ) + ( RCSe * RMSe ) ),( ( MLU - RCSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6377706507066994}, {"determining": "( Min( Min( AMS ,ACS ) ,Max( DDR,BR ) ) * ( ( FirstVNF_CPU + DDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( CS / DS ) - Min( RMSe ,RMSe ) ),( Min( MUM ,RMSe ) * ( RRSe - MLU ) ) )", "obj1": 0.1220472440944882, "obj2": 0.8690571462261832}, {"determining": "( ( PN - CRS ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * DS ) * ( MLU + RRSe ) ) * Min( ( MUC / MUM ) ,( MUR * MUR ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5595050699784383}, {"determining": "Max( ( ACS + ARS ),Max( Const,MDR ) )", "choosing": "( ( DS + MUC ) - Max( MUM,MUC ) )", "obj1": 0.4035433070866142, "obj2": 0.5002902881799627}, {"determining": "( Min( BR ,DDR ) + Min( FirstVNF_RAM_Server ,ACS ) )", "choosing": "( Max( RMSe,MUR ) * ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( BR - FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( MUM - MUC ) * ( RRSe + RCSe ) ) ,( ( RMSe * CS ) - ( DS + MUR ) ) ) - ( ( RMSe + RCSe ) + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * ACS ) - ( MRS / FirstVNF_Mem_Server ) ) - ( ( PN / ACS ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( Min( FirstVNF_Mem_Server ,Const ) * ( BR + FirstVNF_Mem_Server ) ) * Max( ( DDR * ACS ),( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe - ( RRSe / Min( CS ,MUR ) ) ) + Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,CS ) / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8958969751409928}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( Max( PN,DDR ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - Max( MUM,MUC ) )", "obj1": 0.8169291338582677, "obj2": 0.15781410729306664}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "( Max( ( ( ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) - ( FirstVNF_RAM / DDR ) ),( ( ACS / FirstVNF_Mem ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( AMS + PN ) / Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem ) * Max( RRS,Const ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( MRS / FirstVNF_Mem ) ) - Max( ( DDR * CRS ),( MRS - FirstVNF_RAM_Server ) ) ) / Max( ( Min( Const ,FirstVNF_CPU ) + ( AMS * ARS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) / ( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( CRS + ARS ) ) * ( Max( CRS,BR ) / ( BR / ARS ) ) ) + ( Max( ( ACS * PN ),Min( FirstVNF_Mem ,RRS ) ) / ( ( AMS / BR ) * ( FirstVNF_RAM / Const ) ) ) ) - ( ( ( ( DDR / RRS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - ACS ) + ( DDR * RRS ) ) ) + ( Min( ( DDR / Const ) ,( Const * ACS ) ) / Min( ( MRS - FirstVNF_Mem ) ,Min( MRS ,MDR ) ) ) ) ) ),( ( Max( ( ( ( RRS + RRS ) * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_CPU + PN ),( MDR * FirstVNF_Mem ) ) ),Min( ( ( FirstVNF_RAM - MRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ,( ( ACS - CRS ) * ( ARS - ACS ) ) ) ) - Max( ( ( ( AMS - ACS ) + ( FirstVNF_RAM_Server - MDR ) ) - Min( ( AMS / MDR ) ,Max( RRS,ACS ) ) ),( Max( ( FirstVNF_Mem - MDR ),Max( RRS,PN ) ) + ( ( Const - PN ) - Min( MDR ,FirstVNF_CPU ) ) ) ) ) - ( ( ( Max( Max( RRS,Const ),( FirstVNF_CPU * DDR ) ) * ( Max( MRS,DDR ) - ( FirstVNF_Mem * ARS ) ) ) + ( ( ( ACS / FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + Max( ( FirstVNF_RAM * MRS ),Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( Min( ( Max( AMS,MDR ) + ( MDR / FirstVNF_CPU_Server ) ) ,( ( Const * MRS ) / ( FirstVNF_CPU + RRS ) ) ) ,( ( Max( PN,ARS ) - Min( PN ,MDR ) ) / ( ( Const + FirstVNF_CPU ) / ( RRS + FirstVNF_CPU ) ) ) ) ) ) ) * ( ( ( ( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( Const + CRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( FirstVNF_CPU * BR ) ) ) - ( Max( ( Const / BR ),( DDR - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( Min( Max( ( RRS / CRS ),( FirstVNF_Mem * CRS ) ) ,Min( ( MDR - FirstVNF_RAM ) ,( DDR / MRS ) ) ) / ( ( Min( FirstVNF_Mem_Server ,AMS ) * Max( MDR,MRS ) ) + ( ( ARS / ARS ) * Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) + ( ( Max( Min( Min( RRS ,ARS ) ,( AMS / CRS ) ),( Min( MRS ,RRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_RAM_Server + MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / ( ( ACS + ARS ) + ( ARS / Const ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server / AMS ) * Min( MRS ,FirstVNF_CPU_Server ) ) - Max( ( CRS / ARS ),( MDR + BR ) ) ) * ( ( Max( FirstVNF_RAM,ARS ) + ( MRS * ARS ) ) / Max( ( MDR * MRS ),( FirstVNF_RAM_Server / PN ) ) ) ) ) ) / Min( ( ( ( Max( Max( Const,FirstVNF_CPU_Server ),Max( CRS,CRS ) ) / ( Max( FirstVNF_Mem,ARS ) - Max( MRS,RRS ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,ACS ) ) ,Min( ( FirstVNF_RAM_Server + DDR ) ,( PN - RRS ) ) ) ) - Max( ( Min( ( RRS / MRS ) ,Max( Const,FirstVNF_Mem_Server ) ) - ( ( ACS * MRS ) - Max( FirstVNF_RAM,CRS ) ) ),( ( ( FirstVNF_Mem_Server - MRS ) * Max( RRS,ACS ) ) + Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( ACS + FirstVNF_CPU_Server ) ) ) ) ) ,Max( ( ( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_Mem + DDR ) ) + ( ( FirstVNF_RAM / Const ) - ( DDR + Const ) ) ) + Min( Max( ( MRS + RRS ),Min( FirstVNF_RAM ,ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - Min( BR ,AMS ) ) ) ),( Min( ( ( AMS * FirstVNF_Mem ) - Min( DDR ,FirstVNF_CPU_Server ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),Min( ARS ,Const ) ) ) - ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( Min( ( ( Min( ( ( ( RMSe + RRSe ) / Min( MUM ,MUC ) ) / ( Max( RCSe,RCSe ) / Max( CS,RCSe ) ) ) ,Min( ( ( RRSe + RRSe ) + ( DS * RCSe ) ) ,( ( MUC / CS ) - ( MUM + MUR ) ) ) ) * Max( Min( Max( ( RCSe / DS ),( CS - DS ) ) ,( ( MLU / RCSe ) - Min( MLU ,MUC ) ) ),( ( ( MUC - MUM ) / Max( RCSe,RMSe ) ) / Min( ( RCSe * MUM ) ,( RMSe - MUM ) ) ) ) ) * ( Min( Max( Min( ( DS * MUC ) ,( CS * MLU ) ),Max( ( CS / RRSe ),( MUC + CS ) ) ) ,( ( Min( DS ,MUC ) + ( MUC + MUR ) ) - ( Min( MUM ,RRSe ) + ( MUR - RCSe ) ) ) ) - Max( ( ( Min( MUM ,MUM ) + ( MUM - MUM ) ) + ( ( MUC + MUR ) - ( MUC - RRSe ) ) ),Max( ( ( CS * MUR ) - Max( RMSe,CS ) ),( Max( RCSe,DS ) - ( RRSe * RCSe ) ) ) ) ) ) ,( Min( Max( ( ( ( DS * CS ) / ( MUC + CS ) ) * Max( ( MUC + CS ),Max( RRSe,DS ) ) ),( ( Max( RMSe,MUM ) + ( DS / MUR ) ) / Max( ( RMSe - MUR ),( RMSe + RCSe ) ) ) ) ,( ( ( ( CS - MLU ) - ( RMSe * RMSe ) ) - ( ( MUR / RRSe ) * ( MUC / MUR ) ) ) - ( ( ( DS * MUC ) * ( RMSe * RRSe ) ) + ( ( MLU + MUM ) * ( MUR * MLU ) ) ) ) ) / ( ( ( ( Max( MLU,MUR ) + Min( RCSe ,MUR ) ) + ( ( MUC * RRSe ) * ( CS * RRSe ) ) ) / ( ( Max( MUM,DS ) / Max( MUC,DS ) ) + ( Min( RMSe ,MLU ) - ( MLU - DS ) ) ) ) + ( ( ( ( MUR / RMSe ) - Max( DS,MUR ) ) - Max( Min( RCSe ,CS ),( MUC - DS ) ) ) / ( Min( ( RRSe / DS ) ,( CS + MUC ) ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) ) ) ) ) ,( ( ( Max( ( Min( ( RMSe / DS ) ,Min( RCSe ,MUM ) ) - Min( Min( MUC ,DS ) ,( MUM + RRSe ) ) ),( ( ( DS * RCSe ) * Min( DS ,RCSe ) ) / ( ( RMSe + CS ) / Min( MUM ,RMSe ) ) ) ) * Min( Max( ( ( RMSe - MUR ) + ( CS + CS ) ),( ( MLU + CS ) + ( RMSe - MLU ) ) ) ,Min( ( ( MUM - DS ) * Min( RRSe ,CS ) ) ,( ( MUM - MUM ) / Min( MLU ,MLU ) ) ) ) ) + Min( Min( Min( Min( ( MUR / RMSe ) ,( MUM - RMSe ) ) ,( ( RMSe / MLU ) / ( MLU / MUM ) ) ) ,( ( Min( RCSe ,MLU ) - ( CS / MUM ) ) / ( Max( MUM,RCSe ) * ( RRSe - MUM ) ) ) ) ,( ( Min( ( MUM / MUC ) ,Min( MUC ,RMSe ) ) - ( ( DS * CS ) / ( CS + CS ) ) ) - Max( ( ( DS + CS ) + ( MLU + CS ) ),( ( RMSe - DS ) + Min( RRSe ,MUR ) ) ) ) ) ) / ( ( Min( Min( Min( ( MUR - CS ) ,Min( MUR ,MUC ) ) ,Min( Max( RMSe,CS ) ,( RCSe + CS ) ) ) ,( ( ( RMSe + RMSe ) * ( DS + RMSe ) ) * ( ( CS * MLU ) * ( MUR * CS ) ) ) ) - ( ( ( ( MUM + CS ) + ( MUM / RCSe ) ) + ( Max( RRSe,RMSe ) + ( RRSe - MLU ) ) ) * Max( ( Min( RMSe ,RMSe ) * ( RRSe / DS ) ),( Max( MLU,CS ) - ( MLU * RCSe ) ) ) ) ) * Max( ( ( Max( Max( MUR,MUM ),( DS - RRSe ) ) * Max( Min( CS ,RRSe ),( CS / RCSe ) ) ) / Max( ( Min( MUC ,RRSe ) / Max( MUR,MUM ) ),( ( DS - DS ) - ( CS + CS ) ) ) ),( ( ( Min( RMSe ,RCSe ) * ( RRSe + MUC ) ) - ( Max( RMSe,RRSe ) / ( MUR + RMSe ) ) ) / ( Max( Max( MUM,MLU ),( DS / RRSe ) ) - Min( ( MUC + MUC ) ,( MLU - MUC ) ) ) ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.12401704503764294}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ACS - AMS ) * ( Min( FirstVNF_CPU_Server ,AMS ) / ( CRS / CRS ) ) )", "choosing": "( Max( MUM,RCSe ) / MLU )", "obj1": 0.7598425196850394, "obj2": 0.19805796192221153}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( Min( Min( AMS ,ACS ) ,Max( DDR,BR ) ) * ( ( FirstVNF_CPU + DDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( CS / DS ) - Min( RMSe ,RMSe ) ),( Min( MUM ,RMSe ) * ( RRSe - MLU ) ) )", "obj1": 0.1220472440944882, "obj2": 0.8690571462261832}, {"determining": "Min( ( FirstVNF_RAM / DDR ) ,( FirstVNF_CPU_Server * MRS ) )", "choosing": "Min( ( DS * DS ) ,Min( MUM ,( RRSe - DS ) ) )", "obj1": 0.43700787401574803, "obj2": 0.46199878856288096}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) + ( MDR + MRS ) )", "choosing": "Min( ( RRSe * ( RCSe * RMSe ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.968503937007874, "obj2": 0.03470149558096801}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU + Const ) )", "choosing": "Min( ( RRSe * DS ) ,( RMSe - DS ) )", "obj1": 0.9940944881889764, "obj2": 0.006643650612294831}, {"determining": "Max( RRS,Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * Max( ( CS * MUR ),Min( RRSe ,RCSe ) ) ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6984167251939694}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( ( ACS - Const ) + Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( MUM,MUR ) ) * ( RMSe / DS ) )", "obj1": 0.16141732283464566, "obj2": 0.7486150769045602}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.7460629921259843, "obj2": 0.21275487776204344}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6639869249591888}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * AMS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( Min( CS ,MLU ) - ( MUC - MLU ) ),( Max( RCSe,MUC ) - Min( MLU ,MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "Max( ( Const + ARS ),Max( Const,BR ) )", "choosing": "( ( DS + MUC ) - Max( MUM,RCSe ) )", "obj1": 0.41338582677165353, "obj2": 0.4913495477416472}, {"determining": "( ( DDR - PN ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "Max( ( Max( MUM,MUR ) + ( RCSe * RMSe ) ),( ( MLU / RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.8996062992125984, "obj2": 0.10056294004022852}, {"determining": "( ( Const + ARS ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( MUC / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.874122612932497}, {"determining": "( ( PN - CRS ) * ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * DS ) * ( MLU + RRSe ) ) * Min( RRSe ,CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5642150191939467}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) + ( MUM + MUM ) ) ) ,Max( ( ( MUR + MUM ) / ( MUM / MUC ) ),DS ) )", "obj1": 0.9094488188976378, "obj2": 0.0908498078247631}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( RMSe ,( RMSe - Min( RMSe ,MLU ) ) ),Max( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),RRSe ) * ( MLU - Min( MUM ,RMSe ) ) ),Min( ( Max( CS,( DS - RMSe ) ) / RCSe ) ,MUC ) ) )", "obj1": 0.952755905511811, "obj2": 0.037117121971955595}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Const ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7705177289445121}, {"determining": "( ( PN / ARS ) + ( AMS - BR ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.234251968503937, "obj2": 0.6410599459097948}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Max( Max( Min( ARS ,ARS ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( RMSe - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7605798010609408}, {"determining": "( ( PN / ARS ) + ( AMS - BR ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.234251968503937, "obj2": 0.6410599459097948}, {"determining": "( ( MDR - BR ) + ( FirstVNF_RAM / DDR ) )", "choosing": "Min( ( RRSe * DS ) ,( MUR * RMSe ) )", "obj1": 0.37401574803149606, "obj2": 0.523961739215679}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5805085009453665}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5610383207296981}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5805085009453665}, {"determining": "( ( ACS + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUM / RMSe ) )", "obj1": 0.19881889763779528, "obj2": 0.6897788616670228}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( ( FirstVNF_Mem_Server + DDR ) / Min( FirstVNF_CPU ,BR ) ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( ( MUC + ( DS - RCSe ) ) - Max( RRSe,( MUC - MUR ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( Min( FirstVNF_Mem ,Min( ( MDR - FirstVNF_Mem_Server ) ,MDR ) ) - Max( CRS,RRS ) ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( Max( Max( ( ( DS * DS ) * ( DS / RMSe ) ),Max( Min( MUR ,DS ),( MUR - RMSe ) ) ),( ( ( RRSe - MUM ) + ( CS - MUC ) ) + ( Min( MUC ,RCSe ) / ( MUC + MUR ) ) ) ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7805513520064243}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( ( MLU - Min( MUM ,RMSe ) ) * RCSe ) + MLU )", "obj1": 0.3641732283464567, "obj2": 0.5371234086362859}, {"determining": "Max( ( Const + ARS ),Max( Max( ( Const + ARS ),Max( Const,MDR ) ),MDR ) )", "choosing": "( DS / ( MUM + MUM ) )", "obj1": 0.3700787401574803, "obj2": 0.5338019638769572}, {"determining": "Max( Min( AMS ,MRS ),( Const / ACS ) )", "choosing": "( ( MUC - MLU ) / ( DS - MUM ) )", "obj1": 0.20275590551181102, "obj2": 0.6764535066613256}], "4": [{"determining": "( ( DDR - PN ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "Max( ( Max( MUM,MUR ) + ( RCSe * RMSe ) ),( ( MLU / RCSe ) + ( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( MUM - MUC ) * ( RRSe + RCSe ) ) ,( ( RMSe * CS ) - ( DS + MUR ) ) ) - ( ( RMSe + RCSe ) + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,CS ) / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8958969751409928}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ARS - Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe * DS ) ,Min( MUR ,RRSe ) )", "obj1": 0.812992125984252, "obj2": 0.12489625119025387}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( ACS - AMS ) * ( Min( FirstVNF_CPU_Server ,AMS ) / ( CRS / CRS ) ) )", "choosing": "( Max( MUM,RCSe ) / MLU )", "obj1": 0.7598425196850394, "obj2": 0.19805796192221153}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Max( ( ( ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) - ( FirstVNF_RAM / DDR ) ),( ( ACS / FirstVNF_Mem ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( AMS + PN ) / Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem ) * Max( RRS,Const ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( MRS / FirstVNF_Mem ) ) - Max( ( DDR * CRS ),( MRS - FirstVNF_RAM_Server ) ) ) / Max( ( Min( Const ,FirstVNF_CPU ) + ( AMS * ARS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) / ( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( CRS + ARS ) ) * ( Max( CRS,BR ) / ( BR / ARS ) ) ) + ( Max( ( ACS * PN ),Min( FirstVNF_Mem ,RRS ) ) / ( ( AMS / BR ) * ( FirstVNF_RAM / Const ) ) ) ) - ( ( ( ( DDR / RRS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - ACS ) + ( DDR * RRS ) ) ) + ( Min( ( DDR / Const ) ,( Const * ACS ) ) / Min( ( MRS - FirstVNF_Mem ) ,Min( MRS ,MDR ) ) ) ) ) ),( ( Max( ( ( ( RRS + RRS ) * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_CPU + PN ),( MDR * FirstVNF_Mem ) ) ),Min( ( ( FirstVNF_RAM - MRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ,( ( ACS - CRS ) * ( ARS - ACS ) ) ) ) - Max( ( ( ( AMS - ACS ) + ( FirstVNF_RAM_Server - MDR ) ) - Min( ( AMS / MDR ) ,Max( RRS,ACS ) ) ),( Max( ( FirstVNF_Mem - MDR ),Max( RRS,PN ) ) + ( ( Const - PN ) - Min( MDR ,FirstVNF_CPU ) ) ) ) ) - ( ( ( Max( Max( RRS,Const ),( FirstVNF_CPU * DDR ) ) * ( Max( MRS,DDR ) - ( FirstVNF_Mem * ARS ) ) ) + ( ( ( ACS / FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + Max( ( FirstVNF_RAM * MRS ),Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( Min( ( Max( AMS,MDR ) + ( MDR / FirstVNF_CPU_Server ) ) ,( ( Const * MRS ) / ( FirstVNF_CPU + RRS ) ) ) ,( ( Max( PN,ARS ) - Min( PN ,MDR ) ) / ( ( Const + FirstVNF_CPU ) / ( RRS + FirstVNF_CPU ) ) ) ) ) ) ) * ( ( ( ( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( Const + CRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( FirstVNF_CPU * BR ) ) ) - ( Max( ( Const / BR ),( DDR - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( Min( Max( ( RRS / CRS ),( FirstVNF_Mem * CRS ) ) ,Min( ( MDR - FirstVNF_RAM ) ,( DDR / MRS ) ) ) / ( ( Min( FirstVNF_Mem_Server ,AMS ) * Max( MDR,MRS ) ) + ( ( ARS / ARS ) * Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) + ( ( Max( Min( Min( RRS ,ARS ) ,( AMS / CRS ) ),( Min( MRS ,RRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_RAM_Server + MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / ( ( ACS + ARS ) + ( ARS / Const ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server / AMS ) * Min( MRS ,FirstVNF_CPU_Server ) ) - Max( ( CRS / ARS ),( MDR + BR ) ) ) * ( ( Max( FirstVNF_RAM,ARS ) + ( MRS * ARS ) ) / Max( ( MDR * MRS ),( FirstVNF_RAM_Server / PN ) ) ) ) ) ) / Min( ( ( ( Max( Max( Const,FirstVNF_CPU_Server ),Max( CRS,CRS ) ) / ( Max( FirstVNF_Mem,ARS ) - Max( MRS,RRS ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,ACS ) ) ,Min( ( FirstVNF_RAM_Server + DDR ) ,( PN - RRS ) ) ) ) - Max( ( Min( ( RRS / MRS ) ,Max( Const,FirstVNF_Mem_Server ) ) - ( ( ACS * MRS ) - Max( FirstVNF_RAM,CRS ) ) ),( ( ( FirstVNF_Mem_Server - MRS ) * Max( RRS,ACS ) ) + Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( ACS + FirstVNF_CPU_Server ) ) ) ) ) ,Max( ( ( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_Mem + DDR ) ) + ( ( FirstVNF_RAM / Const ) - ( DDR + Const ) ) ) + Min( Max( ( MRS + RRS ),Min( FirstVNF_RAM ,ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - Min( BR ,AMS ) ) ) ),( Min( ( ( AMS * FirstVNF_Mem ) - Min( DDR ,FirstVNF_CPU_Server ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),Min( ARS ,Const ) ) ) - ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( Min( ( ( Min( ( ( ( RMSe + RRSe ) / Min( MUM ,MUC ) ) / ( Max( RCSe,RCSe ) / Max( CS,RCSe ) ) ) ,Min( ( ( RRSe + RRSe ) + ( DS * RCSe ) ) ,( ( MUC / CS ) - ( MUM + MUR ) ) ) ) * Max( Min( Max( ( RCSe / DS ),( CS - DS ) ) ,( ( MLU / RCSe ) - Min( MLU ,MUC ) ) ),( ( ( MUC - MUM ) / Max( RCSe,RMSe ) ) / Min( ( RCSe * MUM ) ,( RMSe - MUM ) ) ) ) ) * ( Min( Max( Min( ( DS * MUC ) ,( CS * MLU ) ),Max( ( CS / RRSe ),( MUC + CS ) ) ) ,( ( Min( DS ,MUC ) + ( MUC + MUR ) ) - ( Min( MUM ,RRSe ) + ( MUR - RCSe ) ) ) ) - Max( ( ( Min( MUM ,MUM ) + ( MUM - MUM ) ) + ( ( MUC + MUR ) - ( MUC - RRSe ) ) ),Max( ( ( CS * MUR ) - Max( RMSe,CS ) ),( Max( RCSe,DS ) - ( RRSe * RCSe ) ) ) ) ) ) ,( Min( Max( ( ( ( DS * CS ) / ( MUC + CS ) ) * Max( ( MUC + CS ),Max( RRSe,DS ) ) ),( ( Max( RMSe,MUM ) + ( DS / MUR ) ) / Max( ( RMSe - MUR ),( RMSe + RCSe ) ) ) ) ,( ( ( ( CS - MLU ) - ( RMSe * RMSe ) ) - ( ( MUR / RRSe ) * ( MUC / MUR ) ) ) - ( ( ( DS * MUC ) * ( RMSe * RRSe ) ) + ( ( MLU + MUM ) * ( MUR * MLU ) ) ) ) ) / ( ( ( ( Max( MLU,MUR ) + Min( RCSe ,MUR ) ) + ( ( MUC * RRSe ) * ( CS * RRSe ) ) ) / ( ( Max( MUM,DS ) / Max( MUC,DS ) ) + ( Min( RMSe ,MLU ) - ( MLU - DS ) ) ) ) + ( ( ( ( MUR / RMSe ) - Max( DS,MUR ) ) - Max( Min( RCSe ,CS ),( MUC - DS ) ) ) / ( Min( ( RRSe / DS ) ,( CS + MUC ) ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) ) ) ) ) ,( ( ( Max( ( Min( ( RMSe / DS ) ,Min( RCSe ,MUM ) ) - Min( Min( MUC ,DS ) ,( MUM + RRSe ) ) ),( ( ( DS * RCSe ) * Min( DS ,RCSe ) ) / ( ( RMSe + CS ) / Min( MUM ,RMSe ) ) ) ) * Min( Max( ( ( RMSe - MUR ) + ( CS + CS ) ),( ( MLU + CS ) + ( RMSe - MLU ) ) ) ,Min( ( ( MUM - DS ) * Min( RRSe ,CS ) ) ,( ( MUM - MUM ) / Min( MLU ,MLU ) ) ) ) ) + Min( Min( Min( Min( ( MUR / RMSe ) ,( MUM - RMSe ) ) ,( ( RMSe / MLU ) / ( MLU / MUM ) ) ) ,( ( Min( RCSe ,MLU ) - ( CS / MUM ) ) / ( Max( MUM,RCSe ) * ( RRSe - MUM ) ) ) ) ,( ( Min( ( MUM / MUC ) ,Min( MUC ,RMSe ) ) - ( ( DS * CS ) / ( CS + CS ) ) ) - Max( ( ( DS + CS ) + ( MLU + CS ) ),( ( RMSe - DS ) + Min( RRSe ,MUR ) ) ) ) ) ) / ( ( Min( Min( Min( ( MUR - CS ) ,Min( MUR ,MUC ) ) ,Min( Max( RMSe,CS ) ,( RCSe + CS ) ) ) ,( ( ( RMSe + RMSe ) * ( DS + RMSe ) ) * ( ( CS * MLU ) * ( MUR * CS ) ) ) ) - ( ( ( ( MUM + CS ) + ( MUM / RCSe ) ) + ( Max( RRSe,RMSe ) + ( RRSe - MLU ) ) ) * Max( ( Min( RMSe ,RMSe ) * ( RRSe / DS ) ),( Max( MLU,CS ) - ( MLU * RCSe ) ) ) ) ) * Max( ( ( Max( Max( MUR,MUM ),( DS - RRSe ) ) * Max( Min( CS ,RRSe ),( CS / RCSe ) ) ) / Max( ( Min( MUC ,RRSe ) / Max( MUR,MUM ) ),( ( DS - DS ) - ( CS + CS ) ) ) ),( ( ( Min( RMSe ,RCSe ) * ( RRSe + MUC ) ) - ( Max( RMSe,RRSe ) / ( MUR + RMSe ) ) ) / ( Max( Max( MUM,MLU ),( DS / RRSe ) ) - Min( ( MUC + MUC ) ,( MLU - MUC ) ) ) ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.12401704503764294}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( Min( Min( AMS ,ACS ) ,Max( DDR,BR ) ) * ( ( FirstVNF_CPU + DDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( CS / DS ) - Min( RMSe ,RMSe ) ),( Min( MUM ,RMSe ) * ( RRSe - MLU ) ) )", "obj1": 0.1220472440944882, "obj2": 0.8690571462261832}, {"determining": "Min( ( FirstVNF_RAM / DDR ) ,( FirstVNF_CPU_Server * MRS ) )", "choosing": "Min( ( DS * DS ) ,Min( MUM ,( RRSe - DS ) ) )", "obj1": 0.43700787401574803, "obj2": 0.46199878856288096}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "Max( RRS,Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * Max( ( CS * MUR ),Min( RRSe ,RCSe ) ) ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6984167251939694}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( BR / ( ( ACS + AMS ) - ( DDR * MRS ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUM / RRSe ) )", "obj1": 0.3956692913385827, "obj2": 0.5113993168921632}, {"determining": "( ( Const + ARS ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( MUC / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.874122612932497}, {"determining": "( ( MDR - BR ) + ( FirstVNF_RAM / DDR ) )", "choosing": "Min( ( RRSe * DS ) ,( MUR * RMSe ) )", "obj1": 0.37401574803149606, "obj2": 0.523961739215679}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( ACS - Const ) + Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( MUM,MUR ) ) * ( RMSe / DS ) )", "obj1": 0.16141732283464566, "obj2": 0.7486150769045602}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.7460629921259843, "obj2": 0.21275487776204344}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "( ( PN / ARS ) + ( AMS - BR ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( ( DDR - PN ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "Max( ( Max( MUM,MUR ) + ( RCSe * RMSe ) ),( ( MLU / RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.8996062992125984, "obj2": 0.10056294004022852}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( BR / DDR ) )", "choosing": "( Min( MUC ,DS ) * ( RMSe / RRSe ) )", "obj1": 0.40551181102362205, "obj2": 0.5063925192307664}, {"determining": "( ( PN - CRS ) * ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * DS ) * ( MLU + RRSe ) ) * Min( RRSe ,CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5642150191939467}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) + ( MUM + MUM ) ) ) ,Max( ( ( MUR + MUM ) / ( MUM / MUC ) ),DS ) )", "obj1": 0.9094488188976378, "obj2": 0.0908498078247631}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( Min( FirstVNF_Mem ,Min( ( MDR - FirstVNF_Mem_Server ) ,MDR ) ) - Max( CRS,RRS ) ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( Max( Max( ( ( DS * DS ) * ( DS / RMSe ) ),Max( Min( MUR ,DS ),( MUR - RMSe ) ) ),( ( ( RRSe - MUM ) + ( CS - MUC ) ) + ( Min( MUC ,RCSe ) / ( MUC + MUR ) ) ) ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7805513520064243}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( RMSe ,( RMSe - Min( RMSe ,MLU ) ) ),Max( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),RRSe ) * ( MLU - Min( MUM ,RMSe ) ) ),Min( ( Max( CS,( DS - RMSe ) ) / RCSe ) ,MUC ) ) )", "obj1": 0.952755905511811, "obj2": 0.037117121971955595}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "( ( MUC - MLU ) / ( MUM - MUM ) )", "obj1": 0.2106299212598425, "obj2": 0.670015059849951}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Const ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7705177289445121}, {"determining": "Max( ( Max( ( ( Max( ( Max( FirstVNF_CPU_Server,PN ) / ( ARS * DDR ) ),Max( ( CRS / FirstVNF_CPU ),( MRS + DDR ) ) ) + ( ( ( FirstVNF_RAM_Server / Const ) * ( MDR / CRS ) ) / Max( ( PN * Const ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - ( Min( ( Max( DDR,ACS ) / Min( MDR ,ACS ) ) ,( ( FirstVNF_Mem + RRS ) + ( CRS - DDR ) ) ) / ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( AMS + FirstVNF_CPU ) ) * ( Min( ARS ,FirstVNF_Mem ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) ),Min( Max( ( ( ( ACS / ACS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) / ( ( MDR * FirstVNF_Mem ) * Max( MDR,CRS ) ) ),( ( ( DDR * FirstVNF_CPU_Server ) + ( Const * FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server / ARS ) - Max( MRS,FirstVNF_RAM ) ) ) ) ,Max( ( Max( ( MDR / BR ),( ARS / CRS ) ) - Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU / ARS ) ) ),( Max( ( RRS + PN ),( FirstVNF_RAM_Server / DDR ) ) + ( ( AMS - CRS ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) / Max( ( ( Min( ( ( MRS * ACS ) / ( FirstVNF_RAM_Server / DDR ) ) ,( ( BR / CRS ) / ( Const - FirstVNF_RAM_Server ) ) ) / Max( Max( ( BR / ARS ),Min( DDR ,FirstVNF_CPU_Server ) ),( ( AMS * FirstVNF_RAM ) * ( DDR - FirstVNF_RAM ) ) ) ) / ( ( ( ( ACS + FirstVNF_RAM ) + ( FirstVNF_Mem_Server + CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) * Max( Min( ( CRS + BR ) ,( ACS + AMS ) ),( Min( PN ,Const ) - ( FirstVNF_CPU + Const ) ) ) ) ),( ( ( ( Min( FirstVNF_Mem ,Const ) + Max( DDR,FirstVNF_Mem ) ) * ( ( MDR / ARS ) - Max( PN,FirstVNF_Mem ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( Const + FirstVNF_CPU_Server ) ) ,( Min( Const ,CRS ) / Max( Const,AMS ) ) ) ) * ( ( Max( Min( BR ,AMS ),( RRS / MRS ) ) * Max( Min( ACS ,ACS ),( FirstVNF_RAM + FirstVNF_Mem ) ) ) + Max( Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_CPU ,Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( FirstVNF_Mem - PN ) ) ) ) ) ) ),( Max( ( ( ( ( ( BR * FirstVNF_Mem_Server ) / ( ARS - BR ) ) * ( ( FirstVNF_RAM_Server + BR ) + ( FirstVNF_RAM_Server / BR ) ) ) + ( ( ( CRS * ACS ) - ( BR * Const ) ) / Min( ( MDR + FirstVNF_Mem ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) / ( ( Min( Min( MRS ,ACS ) ,( Const * FirstVNF_Mem_Server ) ) + ( ( CRS / MDR ) / Min( ARS ,MRS ) ) ) + ( Max( Min( FirstVNF_CPU_Server ,RRS ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * ( ( Const + MDR ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) ),( Min( ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( MRS * FirstVNF_Mem ) ) / ( ( RRS + MDR ) + Max( CRS,ARS ) ) ) ,Max( Max( ( MDR + FirstVNF_CPU ),( CRS / DDR ) ),Max( ( MDR / FirstVNF_Mem_Server ),( MRS * Const ) ) ) ) + Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( MRS + MRS ) ) / ( ( MDR / FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_CPU ) ) ) ,Min( ( ( FirstVNF_RAM - BR ) * Min( ACS ,RRS ) ) ,Min( ( DDR - FirstVNF_RAM ) ,Max( AMS,FirstVNF_RAM ) ) ) ) ) ) * ( ( Min( Min( ( ( FirstVNF_CPU * BR ) / ( MRS + DDR ) ) ,( ( MDR * FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) ,( ( Max( RRS,ACS ) / ( MRS - RRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_RAM ) * ( MRS + DDR ) ) ) ) * ( ( ( ( FirstVNF_CPU / CRS ) * ( MRS - DDR ) ) / ( ( Const + MRS ) / Max( DDR,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_CPU_Server * MRS ) * ( BR / FirstVNF_RAM_Server ) ),( ( ACS / CRS ) * ( DDR / MDR ) ) ) ) ) * Min( ( ( Max( ( ARS * CRS ),( ACS - DDR ) ) * Max( ( FirstVNF_CPU_Server - Const ),Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( MDR / CRS ) ) + ( Min( RRS ,DDR ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ,Min( Min( ( ( MDR - ARS ) + ( MRS + MRS ) ) ,( Min( DDR ,RRS ) / ( FirstVNF_RAM_Server * Const ) ) ) ,( ( ( BR + ARS ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( MDR + DDR ) - ( DDR * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( ( MUC - MUR ) * Min( MUM ,MUC ) ) / ( ( RMSe + MLU ) + ( DS - MUM ) ) ) ,( ( Max( MLU,RMSe ) - ( RCSe * RCSe ) ) * ( ( CS + RRSe ) * Max( RRSe,CS ) ) ) ) + Max( ( ( ( MLU - MUR ) / Min( MLU ,RRSe ) ) * ( ( RMSe + RCSe ) - Min( DS ,RMSe ) ) ),Min( Max( ( CS / RCSe ),( RCSe / DS ) ) ,( Max( MLU,MLU ) + Min( CS ,MUR ) ) ) ) ) - ( Max( ( ( ( DS - MLU ) / Min( MUM ,RMSe ) ) + ( Min( MUC ,RCSe ) / ( MUM / CS ) ) ),( Max( Min( MLU ,MUC ),Max( MLU,RMSe ) ) * Max( Max( RRSe,CS ),Min( MLU ,MLU ) ) ) ) - ( ( ( Max( RCSe,DS ) + ( DS - RRSe ) ) + ( ( MUM + MUM ) - ( RRSe + MLU ) ) ) - ( Max( ( CS + MLU ),Max( CS,RMSe ) ) - Max( Max( RMSe,RMSe ),Max( DS,MUR ) ) ) ) ) ) - Min( Max( Max( ( ( ( DS * RMSe ) + ( MLU - MUR ) ) + ( ( MUC - RCSe ) - Max( CS,MUR ) ) ),Min( ( Min( CS ,MUM ) * ( RCSe - DS ) ) ,Max( Min( RMSe ,DS ),( DS / MUC ) ) ) ),( ( ( ( CS * RMSe ) + ( RCSe - DS ) ) * ( ( MUM / RCSe ) - Min( MUR ,MUC ) ) ) + Min( Min( Max( MUM,MLU ) ,( CS * RRSe ) ) ,( ( RMSe - MUR ) - ( DS * MUM ) ) ) ) ) ,( Max( Max( ( Min( RCSe ,CS ) - ( MUC - RRSe ) ),Min( ( RCSe - CS ) ,( MLU * RRSe ) ) ),( ( ( RCSe * MUC ) + ( MUC - RCSe ) ) / ( ( DS + RCSe ) * ( CS + RCSe ) ) ) ) + ( Min( Max( Min( CS ,RMSe ),( CS + MUM ) ) ,Min( ( MUM - DS ) ,Min( RRSe ,DS ) ) ) / ( ( ( MUM / RCSe ) - ( RCSe - MLU ) ) - ( Max( MUM,DS ) + ( DS / MUC ) ) ) ) ) ) ) ,( Max( Max( ( ( ( ( RRSe - RCSe ) + Min( RRSe ,MLU ) ) + ( ( CS + MLU ) + ( MLU / DS ) ) ) * ( Min( ( MUR + RMSe ) ,Max( MLU,MUC ) ) / ( ( DS + RCSe ) + ( MUC - MLU ) ) ) ),( Min( ( Max( RMSe,MUM ) * ( MUM + MLU ) ) ,Max( Min( DS ,RCSe ),( MLU * DS ) ) ) + Max( ( Max( MUM,MUR ) / ( MUC + MUR ) ),( Min( RRSe ,CS ) - Max( RRSe,MLU ) ) ) ) ),( ( ( Max( ( MUR + RRSe ),Min( RMSe ,MLU ) ) / ( ( MUC - MLU ) + ( RMSe / MLU ) ) ) * Min( ( ( CS - DS ) + Min( MUC ,MUR ) ) ,( Max( MLU,RRSe ) - ( MUM / MUR ) ) ) ) + ( ( ( ( MLU + RRSe ) - Max( MUC,RCSe ) ) / Max( Max( DS,MUC ),( RCSe * CS ) ) ) + ( Max( Min( MLU ,RRSe ),( MLU + RRSe ) ) * ( Min( MLU ,MUM ) + Min( MUM ,DS ) ) ) ) ) ) * Min( ( Max( Max( ( Min( DS ,RCSe ) - ( MUR + RRSe ) ),( ( MUR * DS ) + ( RCSe + RRSe ) ) ),Max( ( Min( RCSe ,MUC ) * ( MUC * RCSe ) ),Max( ( RRSe * RCSe ),( MLU - MUM ) ) ) ) / Min( ( Max( Min( RMSe ,RRSe ),Min( DS ,CS ) ) / Max( ( RMSe + RCSe ),( CS / MUM ) ) ) ,Max( ( ( RRSe / MUC ) + ( MLU + MUR ) ),( ( MUR * DS ) + Min( MUM ,RRSe ) ) ) ) ) ,( ( ( ( ( DS * RCSe ) + ( DS * MUC ) ) / Max( ( RCSe + MUC ),Max( DS,RCSe ) ) ) + ( Min( Max( MLU,MLU ) ,( MLU / RRSe ) ) - Max( Max( MUM,MUR ),( MUM / RRSe ) ) ) ) / ( Max( ( ( RCSe - MUM ) - Min( MUC ,MLU ) ),( ( MUC * MUM ) / ( MUR * MUR ) ) ) + Max( Min( Max( DS,MLU ) ,( MLU - RCSe ) ),( Min( RRSe ,CS ) - ( MUR * DS ) ) ) ) ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.025706172087324664}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( AMS - BR ) )", "choosing": "( MUM / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6577783564343185}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Max( Max( Min( ARS ,ARS ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( RMSe - ( ( RRSe + DS ) - ( MLU - MUM ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7605798010609408}, {"determining": "Max( ( MDR * FirstVNF_RAM ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,( RMSe * DS ) ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6966525598115572}, {"determining": "( Max( PN,PN ) - ( ARS + ( Const - ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) - ( DS / RMSe ) ) + ( MUM / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( RMSe / RMSe ) )", "obj1": 0.234251968503937, "obj2": 0.6374966933747159}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5805085009453665}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5610383207296981}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) + ( MDR + MRS ) )", "choosing": "Min( ( RRSe * ( RCSe * RMSe ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.968503937007874, "obj2": 0.03470149558096801}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5805085009453665}], "5": [{"determining": "( ( ( ACS + RRS ) - ACS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( ( DS / RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "Max( ( Max( MUM,MUR ) + ( RCSe * RMSe ) ),( ( MLU / RCSe ) + ( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,CS ) / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8958969751409928}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ARS - Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe * DS ) ,Min( MUR ,RRSe ) )", "obj1": 0.812992125984252, "obj2": 0.12489625119025387}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( ACS - AMS ) * ( Min( FirstVNF_CPU_Server ,AMS ) / ( CRS / CRS ) ) )", "choosing": "( Max( MUM,RCSe ) / MLU )", "obj1": 0.7598425196850394, "obj2": 0.19805796192221153}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Max( ( ( ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) - ( FirstVNF_RAM / DDR ) ),( ( ACS / FirstVNF_Mem ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( AMS + PN ) / Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem ) * Max( RRS,Const ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( MRS / FirstVNF_Mem ) ) - Max( ( DDR * CRS ),( MRS - FirstVNF_RAM_Server ) ) ) / Max( ( Min( Const ,FirstVNF_CPU ) + ( AMS * ARS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) / ( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( CRS + ARS ) ) * ( Max( CRS,BR ) / ( BR / ARS ) ) ) + ( Max( ( ACS * PN ),Min( FirstVNF_Mem ,RRS ) ) / ( ( AMS / BR ) * ( FirstVNF_RAM / Const ) ) ) ) - ( ( ( ( DDR / RRS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - ACS ) + ( DDR * RRS ) ) ) + ( Min( ( DDR / Const ) ,( Const * ACS ) ) / Min( ( MRS - FirstVNF_Mem ) ,Min( MRS ,MDR ) ) ) ) ) ),( ( Max( ( ( ( RRS + RRS ) * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_CPU + PN ),( MDR * FirstVNF_Mem ) ) ),Min( ( ( FirstVNF_RAM - MRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ,( ( ACS - CRS ) * ( ARS - ACS ) ) ) ) - Max( ( ( ( AMS - ACS ) + ( FirstVNF_RAM_Server - MDR ) ) - Min( ( AMS / MDR ) ,Max( RRS,ACS ) ) ),( Max( ( FirstVNF_Mem - MDR ),Max( RRS,PN ) ) + ( ( Const - PN ) - Min( MDR ,FirstVNF_CPU ) ) ) ) ) - ( ( ( Max( Max( RRS,Const ),( FirstVNF_CPU * DDR ) ) * ( Max( MRS,DDR ) - ( FirstVNF_Mem * ARS ) ) ) + ( ( ( ACS / FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + Max( ( FirstVNF_RAM * MRS ),Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( Min( ( Max( AMS,MDR ) + ( MDR / FirstVNF_CPU_Server ) ) ,( ( Const * MRS ) / ( FirstVNF_CPU + RRS ) ) ) ,( ( Max( PN,ARS ) - Min( PN ,MDR ) ) / ( ( Const + FirstVNF_CPU ) / ( RRS + FirstVNF_CPU ) ) ) ) ) ) ) * ( ( ( ( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ,( Const + CRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( FirstVNF_CPU * BR ) ) ) - ( Max( ( Const / BR ),( DDR - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU + ARS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( Min( Max( ( RRS / CRS ),( FirstVNF_Mem * CRS ) ) ,Min( ( MDR - FirstVNF_RAM ) ,( DDR / MRS ) ) ) / ( ( Min( FirstVNF_Mem_Server ,AMS ) * Max( MDR,MRS ) ) + ( ( ARS / ARS ) * Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) + ( ( Max( Min( Min( RRS ,ARS ) ,( AMS / CRS ) ),( Min( MRS ,RRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_RAM_Server + MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / ( ( ACS + ARS ) + ( ARS / Const ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server / AMS ) * Min( MRS ,FirstVNF_CPU_Server ) ) - Max( ( CRS / ARS ),( MDR + BR ) ) ) * ( ( Max( FirstVNF_RAM,ARS ) + ( MRS * ARS ) ) / Max( ( MDR * MRS ),( FirstVNF_RAM_Server / PN ) ) ) ) ) ) / Min( ( ( ( Max( Max( Const,FirstVNF_CPU_Server ),Max( CRS,CRS ) ) / ( Max( FirstVNF_Mem,ARS ) - Max( MRS,RRS ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,ACS ) ) ,Min( ( FirstVNF_RAM_Server + DDR ) ,( PN - RRS ) ) ) ) - Max( ( Min( ( RRS / MRS ) ,Max( Const,FirstVNF_Mem_Server ) ) - ( ( ACS * MRS ) - Max( FirstVNF_RAM,CRS ) ) ),( ( ( FirstVNF_Mem_Server - MRS ) * Max( RRS,ACS ) ) + Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( ACS + FirstVNF_CPU_Server ) ) ) ) ) ,Max( ( ( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_Mem + DDR ) ) + ( ( FirstVNF_RAM / Const ) - ( DDR + Const ) ) ) + Min( Max( ( MRS + RRS ),Min( FirstVNF_RAM ,ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - Min( BR ,AMS ) ) ) ),( Min( ( ( AMS * FirstVNF_Mem ) - Min( DDR ,FirstVNF_CPU_Server ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),Min( ARS ,Const ) ) ) - ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( Min( ( ( Min( ( ( ( RMSe + RRSe ) / Min( MUM ,MUC ) ) / ( Max( RCSe,RCSe ) / Max( CS,RCSe ) ) ) ,Min( ( ( RRSe + RRSe ) + ( DS * RCSe ) ) ,( ( MUC / CS ) - ( MUM + MUR ) ) ) ) * Max( Min( Max( ( RCSe / DS ),( CS - DS ) ) ,( ( MLU / RCSe ) - Min( MLU ,MUC ) ) ),( ( ( MUC - MUM ) / Max( RCSe,RMSe ) ) / Min( ( RCSe * MUM ) ,( RMSe - MUM ) ) ) ) ) * ( Min( Max( Min( ( DS * MUC ) ,( CS * MLU ) ),Max( ( CS / RRSe ),( MUC + CS ) ) ) ,( ( Min( DS ,MUC ) + ( MUC + MUR ) ) - ( Min( MUM ,RRSe ) + ( MUR - RCSe ) ) ) ) - Max( ( ( Min( MUM ,MUM ) + ( MUM - MUM ) ) + ( ( MUC + MUR ) - ( MUC - RRSe ) ) ),Max( ( ( CS * MUR ) - Max( RMSe,CS ) ),( Max( RCSe,DS ) - ( RRSe * RCSe ) ) ) ) ) ) ,( Min( Max( ( ( ( DS * CS ) / ( MUC + CS ) ) * Max( ( MUC + CS ),Max( RRSe,DS ) ) ),( ( Max( RMSe,MUM ) + ( DS / MUR ) ) / Max( ( RMSe - MUR ),( RMSe + RCSe ) ) ) ) ,( ( ( ( CS - MLU ) - ( RMSe * RMSe ) ) - ( ( MUR / RRSe ) * ( MUC / MUR ) ) ) - ( ( ( DS * MUC ) * ( RMSe * RRSe ) ) + ( ( MLU + MUM ) * ( MUR * MLU ) ) ) ) ) / ( ( ( ( Max( MLU,MUR ) + Min( RCSe ,MUR ) ) + ( ( MUC * RRSe ) * ( CS * RRSe ) ) ) / ( ( Max( MUM,DS ) / Max( MUC,DS ) ) + ( Min( RMSe ,MLU ) - ( MLU - DS ) ) ) ) + ( ( ( ( MUR / RMSe ) - Max( DS,MUR ) ) - Max( Min( RCSe ,CS ),( MUC - DS ) ) ) / ( Min( ( RRSe / DS ) ,( CS + MUC ) ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) ) ) ) ) ,( ( ( Max( ( Min( ( RMSe / DS ) ,Min( RCSe ,MUM ) ) - Min( Min( MUC ,DS ) ,( MUM + RRSe ) ) ),( ( ( DS * RCSe ) * Min( DS ,RCSe ) ) / ( ( RMSe + CS ) / Min( MUM ,RMSe ) ) ) ) * Min( Max( ( ( RMSe - MUR ) + ( CS + CS ) ),( ( MLU + CS ) + ( RMSe - MLU ) ) ) ,Min( ( ( MUM - DS ) * Min( RRSe ,CS ) ) ,( ( MUM - MUM ) / Min( MLU ,MLU ) ) ) ) ) + Min( Min( Min( Min( ( MUR / RMSe ) ,( MUM - RMSe ) ) ,( ( RMSe / MLU ) / ( MLU / MUM ) ) ) ,( ( Min( RCSe ,MLU ) - ( CS / MUM ) ) / ( Max( MUM,RCSe ) * ( RRSe - MUM ) ) ) ) ,( ( Min( ( MUM / MUC ) ,Min( MUC ,RMSe ) ) - ( ( DS * CS ) / ( CS + CS ) ) ) - Max( ( ( DS + CS ) + ( MLU + CS ) ),( ( RMSe - DS ) + Min( RRSe ,MUR ) ) ) ) ) ) / ( ( Min( Min( Min( ( MUR - CS ) ,Min( MUR ,MUC ) ) ,Min( Max( RMSe,CS ) ,( RCSe + CS ) ) ) ,( ( ( RMSe + RMSe ) * ( DS + RMSe ) ) * ( ( CS * MLU ) * ( MUR * CS ) ) ) ) - ( ( ( ( MUM + CS ) + ( MUM / RCSe ) ) + ( Max( RRSe,RMSe ) + ( RRSe - MLU ) ) ) * Max( ( Min( RMSe ,RMSe ) * ( RRSe / DS ) ),( Max( MLU,CS ) - ( MLU * RCSe ) ) ) ) ) * Max( ( ( Max( Max( MUR,MUM ),( DS - RRSe ) ) * Max( Min( CS ,RRSe ),( CS / RCSe ) ) ) / Max( ( Min( MUC ,RRSe ) / Max( MUR,MUM ) ),( ( DS - DS ) - ( CS + CS ) ) ) ),( ( ( Min( RMSe ,RCSe ) * ( RRSe + MUC ) ) - ( Max( RMSe,RRSe ) / ( MUR + RMSe ) ) ) / ( Max( Max( MUM,MLU ),( DS / RRSe ) ) - Min( ( MUC + MUC ) ,( MLU - MUC ) ) ) ) ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.12401704503764294}, {"determining": "( ( Max( ( Const + ARS ),( Const * MDR ) ) * FirstVNF_RAM ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( MLU / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8427318037003809}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "Min( ( FirstVNF_RAM / DDR ) ,( FirstVNF_CPU_Server * MRS ) )", "choosing": "Min( ( DS * DS ) ,Min( MUM ,( RRSe - DS ) ) )", "obj1": 0.43700787401574803, "obj2": 0.46199878856288096}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( Const + ARS ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( MUC / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.874122612932497}, {"determining": "( ( MDR - BR ) + ( FirstVNF_RAM / DDR ) )", "choosing": "Min( ( RRSe * DS ) ,( MUR * RMSe ) )", "obj1": 0.37401574803149606, "obj2": 0.523961739215679}, {"determining": "( ( FirstVNF_CPU * ( BR / FirstVNF_Mem_Server ) ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC - Min( RMSe ,DS ) ) ) + ( RMSe / RMSe ) )", "obj1": 0.3425196850393701, "obj2": 0.5509348205978742}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "Max( RRS,Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * Max( ( CS * MUR ),Min( RRSe ,RCSe ) ) ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6984167251939694}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( RMSe ,( RMSe - Min( RMSe ,MLU ) ) ),Max( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),RRSe ) * ( MLU - Min( MUM ,RMSe ) ) ),Min( ( Max( CS,( DS - RMSe ) ) / RCSe ) ,MUC ) ) )", "obj1": 0.952755905511811, "obj2": 0.037117121971955595}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.7460629921259843, "obj2": 0.21275487776204344}, {"determining": "( ( ACS - Const ) + Max( Min( FirstVNF_CPU ,PN ),Min( PN ,MRS ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( MUM,MUR ) ) * ( RMSe / DS ) )", "obj1": 0.16141732283464566, "obj2": 0.7486150769045602}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) * ( RMSe / RMSe ) )", "obj1": 0.23031496062992127, "obj2": 0.6463776530722966}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( RMSe / RMSe ) )", "obj1": 0.234251968503937, "obj2": 0.6374966933747159}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7210444509263246}, {"determining": "( ( DDR - PN ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "Max( ( Max( MUM,MUR ) + ( RCSe * RMSe ) ),( ( MLU / RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.8996062992125984, "obj2": 0.10056294004022852}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( Max( PN,PN ) - PN )", "choosing": "( Min( ( RCSe * DS ) ,Min( MUM ,RRSe ) ) + ( MUM / RMSe ) )", "obj1": 0.39763779527559057, "obj2": 0.5011765290747577}, {"determining": "( Min( DDR ,DDR ) - ( DDR / RRS ) )", "choosing": "( Max( MUM,RMSe ) - Max( MLU,( MUM / MLU ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6638291802681712}, {"determining": "Max( Min( AMS ,MRS ),( Const / ACS ) )", "choosing": "( ( MUC - MLU ) / ( DS - MUM ) )", "obj1": 0.2047244094488189, "obj2": 0.6778515136482093}, {"determining": "Max( ( MDR * FirstVNF_RAM ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,( RMSe * DS ) ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6966525598115572}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Max( ( AMS / FirstVNF_CPU ),RRS ) - BR ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) / DS ) / ( ( DS * MUC ) + ( MUM + MUM ) ) ) ,Max( ( ( MUR + MUM ) / ( MUM / MUC ) ),DS ) )", "obj1": 0.9094488188976378, "obj2": 0.0908498078247631}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( Min( FirstVNF_Mem ,Min( ( MDR - FirstVNF_Mem_Server ) ,MDR ) ) - Max( CRS,RRS ) ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( Max( Max( ( ( DS * DS ) * ( DS / RMSe ) ),Max( Min( MUR ,DS ),( MUR - RMSe ) ) ),( ( ( RRSe - MUM ) + ( CS - MUC ) ) + ( Min( MUC ,RCSe ) / ( MUC + MUR ) ) ) ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7805513520064243}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Const ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7705177289445121}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) + ( MDR + MRS ) )", "choosing": "Min( ( RRSe * ( RCSe * RMSe ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.968503937007874, "obj2": 0.03470149558096801}, {"determining": "Max( ( Max( ( ( Max( ( Max( FirstVNF_CPU_Server,PN ) / ( ARS * DDR ) ),Max( ( CRS / FirstVNF_CPU ),( MRS + DDR ) ) ) + ( ( ( FirstVNF_RAM_Server / Const ) * ( MDR / CRS ) ) / Max( ( PN * Const ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - ( Min( ( Max( DDR,ACS ) / Min( MDR ,ACS ) ) ,( ( FirstVNF_Mem + RRS ) + ( CRS - DDR ) ) ) / ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( AMS + FirstVNF_CPU ) ) * ( Min( ARS ,FirstVNF_Mem ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) ),Min( Max( ( ( ( ACS / ACS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) / ( ( MDR * FirstVNF_Mem ) * Max( MDR,CRS ) ) ),( ( ( DDR * FirstVNF_CPU_Server ) + ( Const * FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server / ARS ) - Max( MRS,FirstVNF_RAM ) ) ) ) ,Max( ( Max( ( MDR / BR ),( ARS / CRS ) ) - Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU / ARS ) ) ),( Max( ( RRS + PN ),( FirstVNF_RAM_Server / DDR ) ) + ( ( AMS - CRS ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) / Max( ( ( Min( ( ( MRS * ACS ) / ( FirstVNF_RAM_Server / DDR ) ) ,( ( BR / CRS ) / ( Const - FirstVNF_RAM_Server ) ) ) / Max( Max( ( BR / ARS ),Min( DDR ,FirstVNF_CPU_Server ) ),( ( AMS * FirstVNF_RAM ) * ( DDR - FirstVNF_RAM ) ) ) ) / ( ( ( ( ACS + FirstVNF_RAM ) + ( FirstVNF_Mem_Server + CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) * Max( Min( ( CRS + BR ) ,( ACS + AMS ) ),( Min( PN ,Const ) - ( FirstVNF_CPU + Const ) ) ) ) ),( ( ( ( Min( FirstVNF_Mem ,Const ) + Max( DDR,FirstVNF_Mem ) ) * ( ( MDR / ARS ) - Max( PN,FirstVNF_Mem ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( Const + FirstVNF_CPU_Server ) ) ,( Min( Const ,CRS ) / Max( Const,AMS ) ) ) ) * ( ( Max( Min( BR ,AMS ),( RRS / MRS ) ) * Max( Min( ACS ,ACS ),( FirstVNF_RAM + FirstVNF_Mem ) ) ) + Max( Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_CPU ,Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( FirstVNF_Mem - PN ) ) ) ) ) ) ),( Max( ( ( ( ( ( BR * FirstVNF_Mem_Server ) / ( ARS - BR ) ) * ( ( FirstVNF_RAM_Server + BR ) + ( FirstVNF_RAM_Server / BR ) ) ) + ( ( ( CRS * ACS ) - ( BR * Const ) ) / Min( ( MDR + FirstVNF_Mem ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) / ( ( Min( Min( MRS ,ACS ) ,( Const * FirstVNF_Mem_Server ) ) + ( ( CRS / MDR ) / Min( ARS ,MRS ) ) ) + ( Max( Min( FirstVNF_CPU_Server ,RRS ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * ( ( Const + MDR ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) ),( Min( ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( MRS * FirstVNF_Mem ) ) / ( ( RRS + MDR ) + Max( CRS,ARS ) ) ) ,Max( Max( ( MDR + FirstVNF_CPU ),( CRS / DDR ) ),Max( ( MDR / FirstVNF_Mem_Server ),( MRS * Const ) ) ) ) + Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( MRS + MRS ) ) / ( ( MDR / FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_CPU ) ) ) ,Min( ( ( FirstVNF_RAM - BR ) * Min( ACS ,RRS ) ) ,Min( ( DDR - FirstVNF_RAM ) ,Max( AMS,FirstVNF_RAM ) ) ) ) ) ) * ( ( Min( Min( ( ( FirstVNF_CPU * BR ) / ( MRS + DDR ) ) ,( ( MDR * FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) ,( ( Max( RRS,ACS ) / ( MRS - RRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_RAM ) * ( MRS + DDR ) ) ) ) * ( ( ( ( FirstVNF_CPU / CRS ) * ( MRS - DDR ) ) / ( ( Const + MRS ) / Max( DDR,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_CPU_Server * MRS ) * ( BR / FirstVNF_RAM_Server ) ),( ( ACS / CRS ) * ( DDR / MDR ) ) ) ) ) * Min( ( ( Max( ( ARS * CRS ),( ACS - DDR ) ) * Max( ( FirstVNF_CPU_Server - Const ),Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( MDR / CRS ) ) + ( Min( RRS ,DDR ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ,Min( Min( ( ( MDR - ARS ) + ( MRS + MRS ) ) ,( Min( DDR ,RRS ) / ( FirstVNF_RAM_Server * Const ) ) ) ,( ( ( BR + ARS ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( MDR + DDR ) - ( DDR * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( ( MUC - MUR ) * Min( MUM ,MUC ) ) / ( ( RMSe + MLU ) + ( DS - MUM ) ) ) ,( ( Max( MLU,RMSe ) - ( RCSe * RCSe ) ) * ( ( CS + RRSe ) * Max( RRSe,CS ) ) ) ) + Max( ( ( ( MLU - MUR ) / Min( MLU ,RRSe ) ) * ( ( RMSe + RCSe ) - Min( DS ,RMSe ) ) ),Min( Max( ( CS / RCSe ),( RCSe / DS ) ) ,( Max( MLU,MLU ) + Min( CS ,MUR ) ) ) ) ) - ( Max( ( ( ( DS - MLU ) / Min( MUM ,RMSe ) ) + ( Min( MUC ,RCSe ) / ( MUM / CS ) ) ),( Max( Min( MLU ,MUC ),Max( MLU,RMSe ) ) * Max( Max( RRSe,CS ),Min( MLU ,MLU ) ) ) ) - ( ( ( Max( RCSe,DS ) + ( DS - RRSe ) ) + ( ( MUM + MUM ) - ( RRSe + MLU ) ) ) - ( Max( ( CS + MLU ),Max( CS,RMSe ) ) - Max( Max( RMSe,RMSe ),Max( DS,MUR ) ) ) ) ) ) - Min( Max( Max( ( ( ( DS * RMSe ) + ( MLU - MUR ) ) + ( ( MUC - RCSe ) - Max( CS,MUR ) ) ),Min( ( Min( CS ,MUM ) * ( RCSe - DS ) ) ,Max( Min( RMSe ,DS ),( DS / MUC ) ) ) ),( ( ( ( CS * RMSe ) + ( RCSe - DS ) ) * ( ( MUM / RCSe ) - Min( MUR ,MUC ) ) ) + Min( Min( Max( MUM,MLU ) ,( CS * RRSe ) ) ,( ( RMSe - MUR ) - ( DS * MUM ) ) ) ) ) ,( Max( Max( ( Min( RCSe ,CS ) - ( MUC - RRSe ) ),Min( ( RCSe - CS ) ,( MLU * RRSe ) ) ),( ( ( RCSe * MUC ) + ( MUC - RCSe ) ) / ( ( DS + RCSe ) * ( CS + RCSe ) ) ) ) + ( Min( Max( Min( CS ,RMSe ),( CS + MUM ) ) ,Min( ( MUM - DS ) ,Min( RRSe ,DS ) ) ) / ( ( ( MUM / RCSe ) - ( RCSe - MLU ) ) - ( Max( MUM,DS ) + ( DS / MUC ) ) ) ) ) ) ) ,( Max( Max( ( ( ( ( RRSe - RCSe ) + Min( RRSe ,MLU ) ) + ( ( CS + MLU ) + ( MLU / DS ) ) ) * ( Min( ( MUR + RMSe ) ,Max( MLU,MUC ) ) / ( ( DS + RCSe ) + ( MUC - MLU ) ) ) ),( Min( ( Max( RMSe,MUM ) * ( MUM + MLU ) ) ,Max( Min( DS ,RCSe ),( MLU * DS ) ) ) + Max( ( Max( MUM,MUR ) / ( MUC + MUR ) ),( Min( RRSe ,CS ) - Max( RRSe,MLU ) ) ) ) ),( ( ( Max( ( MUR + RRSe ),Min( RMSe ,MLU ) ) / ( ( MUC - MLU ) + ( RMSe / MLU ) ) ) * Min( ( ( CS - DS ) + Min( MUC ,MUR ) ) ,( Max( MLU,RRSe ) - ( MUM / MUR ) ) ) ) + ( ( ( ( MLU + RRSe ) - Max( MUC,RCSe ) ) / Max( Max( DS,MUC ),( RCSe * CS ) ) ) + ( Max( Min( MLU ,RRSe ),( MLU + RRSe ) ) * ( Min( MLU ,MUM ) + Min( MUM ,DS ) ) ) ) ) ) * Min( ( Max( Max( ( Min( DS ,RCSe ) - ( MUR + RRSe ) ),( ( MUR * DS ) + ( RCSe + RRSe ) ) ),Max( ( Min( RCSe ,MUC ) * ( MUC * RCSe ) ),Max( ( RRSe * RCSe ),( MLU - MUM ) ) ) ) / Min( ( Max( Min( RMSe ,RRSe ),Min( DS ,CS ) ) / Max( ( RMSe + RCSe ),( CS / MUM ) ) ) ,Max( ( ( RRSe / MUC ) + ( MLU + MUR ) ),( ( MUR * DS ) + Min( MUM ,RRSe ) ) ) ) ) ,( ( ( ( ( DS * RCSe ) + ( DS * MUC ) ) / Max( ( RCSe + MUC ),Max( DS,RCSe ) ) ) + ( Min( Max( MLU,MLU ) ,( MLU / RRSe ) ) - Max( Max( MUM,MUR ),( MUM / RRSe ) ) ) ) / ( Max( ( ( RCSe - MUM ) - Min( MUC ,MLU ) ),( ( MUC * MUM ) / ( MUR * MUR ) ) ) + Max( Min( Max( DS,MLU ) ,( MLU - RCSe ) ),( Min( RRSe ,CS ) - ( MUR * DS ) ) ) ) ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.025706172087324664}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( ( Max( MUM,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7563482106010063}, {"determining": "( Max( PN,PN ) - ( ARS + ( Const - ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) - ( DS / RMSe ) ) + ( MUM / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5805085009453665}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5805085009453665}], "6": [{"determining": "Min( Max( Max( Max( ( ( ( Max( PN,FirstVNF_CPU_Server ) - ( DDR - Const ) ) + ( ( RRS - Const ) / Max( MRS,CRS ) ) ) * ( ( ( ACS - MRS ) - ( FirstVNF_CPU_Server + Const ) ) + ( ( MDR * BR ) * Min( FirstVNF_CPU_Server ,MDR ) ) ) ),( ( Min( ( ARS / ARS ) ,( CRS / PN ) ) + Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,Min( CRS ,MRS ) ) ) + ( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( FirstVNF_CPU * AMS ) ) * Min( ( RRS - AMS ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ),( ( ( Min( Max( RRS,RRS ) ,( Const - RRS ) ) + Max( Max( DDR,RRS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / DDR ) + ( ACS * ACS ) ) ,Max( ( MRS * FirstVNF_CPU ),( RRS / FirstVNF_CPU_Server ) ) ) ) + Min( Max( Max( ( ARS - MDR ),( FirstVNF_CPU_Server - DDR ) ),( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( ARS + MDR ) ) ) ) ) ),( ( ( ( ( Min( RRS ,PN ) * ( RRS / FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) + Min( ( ( AMS + FirstVNF_CPU ) / ( BR - MRS ) ) ,( ( BR - BR ) * ( ARS / MDR ) ) ) ) - ( ( ( ( Const + CRS ) / ( BR - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM + BR ) * ( DDR / MRS ) ) ) / Min( Max( ( MRS / FirstVNF_CPU_Server ),( BR + FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_CPU * MRS ),( AMS - FirstVNF_Mem_Server ) ) ) ) ) - Max( Max( Min( Min( ( RRS - FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_CPU ) ) ,( Min( Const ,ARS ) * ( ARS * MRS ) ) ),Min( ( ( MDR - ACS ) / Max( RRS,DDR ) ) ,Min( Max( ACS,DDR ) ,( ACS + RRS ) ) ) ),Min( ( ( ( ACS * BR ) * Max( MRS,PN ) ) - ( ( Const + ACS ) + Max( PN,FirstVNF_RAM_Server ) ) ) ,( ( ( AMS * FirstVNF_RAM ) / ( MDR + PN ) ) / Min( Min( ACS ,Const ) ,Max( PN,PN ) ) ) ) ) ) ) ,( Min( ( Min( Max( ( ( FirstVNF_RAM_Server + ARS ) + Max( RRS,FirstVNF_CPU_Server ) ),Max( ( AMS - BR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ,( ( ( Const / MRS ) - ( FirstVNF_CPU_Server - Const ) ) * ( ( RRS / MDR ) / Max( AMS,CRS ) ) ) ) * Min( ( ( Min( BR ,CRS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Max( ( RRS - Const ),( PN + MDR ) ) ) ,Max( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( ACS - ACS ) ),( Min( FirstVNF_RAM ,RRS ) - ( FirstVNF_CPU_Server - Const ) ) ) ) ) ,( ( ( Min( ( RRS + FirstVNF_CPU_Server ) ,Max( DDR,FirstVNF_RAM_Server ) ) + Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_CPU_Server * PN ) ) ) / ( ( ( Const - PN ) - Min( AMS ,FirstVNF_Mem_Server ) ) + ( Max( PN,CRS ) + ( CRS / FirstVNF_RAM ) ) ) ) * ( ( Max( Min( BR ,DDR ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( ACS,PN ) ) ) - ( ( Min( Const ,Const ) + ( FirstVNF_RAM + BR ) ) + Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) ) / Max( ( ( ( ( ( AMS + AMS ) * ( RRS * MDR ) ) + ( Max( FirstVNF_CPU_Server,AMS ) * ( FirstVNF_Mem_Server + Const ) ) ) - ( ( ( RRS - CRS ) * ( AMS + MRS ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - ( ARS + MDR ) ) ) ) - ( ( ( Min( BR ,CRS ) * ( MDR + PN ) ) + ( ( ACS / FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server / CRS ) ) ) / ( ( Max( FirstVNF_Mem_Server,CRS ) * Min( BR ,FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( ACS * Const ) ) ) ) ),( Max( Min( ( ( CRS * DDR ) / Max( ACS,Const ) ) ,( ( AMS / PN ) * Max( AMS,ARS ) ) ),( ( ( MRS / ARS ) + ( CRS - BR ) ) / Max( ( MDR - FirstVNF_Mem ),( FirstVNF_RAM * MDR ) ) ) ) + Min( ( ( ( FirstVNF_Mem + ACS ) * ( FirstVNF_Mem_Server - MRS ) ) - ( Min( FirstVNF_RAM_Server ,ARS ) - ( DDR - DDR ) ) ) ,( ( Min( AMS ,PN ) * ( Const + PN ) ) * Min( Min( DDR ,ACS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUR / ( ( DS * DS ) + RCSe ) ) ,MUM ),( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS + RRS ) - ACS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( ( DS / RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,CS ) / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8958969751409928}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ARS - Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe * DS ) ,Min( MUR ,RRSe ) )", "obj1": 0.812992125984252, "obj2": 0.12489625119025387}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( Min( DDR ,DDR ) - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / RMSe ) - ( MLU * ( MUM / MLU ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16700036073611893}, {"determining": "( ( ACS - AMS ) * ( Min( FirstVNF_CPU_Server ,AMS ) / ( CRS / CRS ) ) )", "choosing": "( Max( MUM,RCSe ) / MLU )", "obj1": 0.7598425196850394, "obj2": 0.19805796192221153}, {"determining": "( ( Max( ( Const + ARS ),( Const * MDR ) ) * FirstVNF_RAM ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( MLU / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8427318037003809}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "Min( ( FirstVNF_RAM / DDR ) ,( FirstVNF_CPU_Server * MRS ) )", "choosing": "Min( ( DS * DS ) ,Min( MUM ,( RRSe - DS ) ) )", "obj1": 0.43700787401574803, "obj2": 0.46199878856288096}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( Const + ARS ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( MUC / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.874122612932497}, {"determining": "( ( MDR - BR ) + ( FirstVNF_RAM / DDR ) )", "choosing": "Min( ( RRSe * DS ) ,( MUR * RMSe ) )", "obj1": 0.37401574803149606, "obj2": 0.523961739215679}, {"determining": "( ( FirstVNF_CPU * ( BR / FirstVNF_Mem_Server ) ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC - Min( RMSe ,DS ) ) ) + ( RMSe / RMSe ) )", "obj1": 0.3425196850393701, "obj2": 0.5509348205978742}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( RMSe ,( RMSe - Min( RMSe ,MLU ) ) ),Max( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),RRSe ) * ( MLU - Min( MUM ,RMSe ) ) ),Min( ( Max( CS,( DS - RMSe ) ) / RCSe ) ,MUC ) ) )", "obj1": 0.952755905511811, "obj2": 0.037117121971955595}, {"determining": "( Max( PN,PN ) - PN )", "choosing": "( Min( ( RCSe * DS ) ,Min( MUM ,RRSe ) ) + ( MUM / RMSe ) )", "obj1": 0.39763779527559057, "obj2": 0.5011765290747577}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.7460629921259843, "obj2": 0.21275487776204344}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "( ( ACS + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / RMSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7448034903250995}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Const ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7705177289445121}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( ( FirstVNF_RAM_Server - Const ) + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( Max( MUM,RMSe ) * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7097384300351613}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( ( Max( MUM,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7563482106010063}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + MDR )", "choosing": "( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),MUM ) * ( MLU - Min( MUM ,RMSe ) ) ) * ( MUR / RRSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7787184117017015}, {"determining": "Max( RRS,Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * Max( ( CS * MUR ),Min( RRSe ,RCSe ) ) ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6984167251939694}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) + ( MDR + MRS ) )", "choosing": "Min( ( RRSe * ( RCSe * RMSe ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.968503937007874, "obj2": 0.03470149558096801}, {"determining": "Max( ( Max( ( ( Max( ( Max( FirstVNF_CPU_Server,PN ) / ( ARS * DDR ) ),Max( ( CRS / FirstVNF_CPU ),( MRS + DDR ) ) ) + ( ( ( FirstVNF_RAM_Server / Const ) * ( MDR / CRS ) ) / Max( ( PN * Const ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - ( Min( ( Max( DDR,ACS ) / Min( MDR ,ACS ) ) ,( ( FirstVNF_Mem + RRS ) + ( CRS - DDR ) ) ) / ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( AMS + FirstVNF_CPU ) ) * ( Min( ARS ,FirstVNF_Mem ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) ),Min( Max( ( ( ( ACS / ACS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) / ( ( MDR * FirstVNF_Mem ) * Max( MDR,CRS ) ) ),( ( ( DDR * FirstVNF_CPU_Server ) + ( Const * FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server / ARS ) - Max( MRS,FirstVNF_RAM ) ) ) ) ,Max( ( Max( ( MDR / BR ),( ARS / CRS ) ) - Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU / ARS ) ) ),( Max( ( RRS + PN ),( FirstVNF_RAM_Server / DDR ) ) + ( ( AMS - CRS ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) / Max( ( ( Min( ( ( MRS * ACS ) / ( FirstVNF_RAM_Server / DDR ) ) ,( ( BR / CRS ) / ( Const - FirstVNF_RAM_Server ) ) ) / Max( Max( ( BR / ARS ),Min( DDR ,FirstVNF_CPU_Server ) ),( ( AMS * FirstVNF_RAM ) * ( DDR - FirstVNF_RAM ) ) ) ) / ( ( ( ( ACS + FirstVNF_RAM ) + ( FirstVNF_Mem_Server + CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) * Max( Min( ( CRS + BR ) ,( ACS + AMS ) ),( Min( PN ,Const ) - ( FirstVNF_CPU + Const ) ) ) ) ),( ( ( ( Min( FirstVNF_Mem ,Const ) + Max( DDR,FirstVNF_Mem ) ) * ( ( MDR / ARS ) - Max( PN,FirstVNF_Mem ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( Const + FirstVNF_CPU_Server ) ) ,( Min( Const ,CRS ) / Max( Const,AMS ) ) ) ) * ( ( Max( Min( BR ,AMS ),( RRS / MRS ) ) * Max( Min( ACS ,ACS ),( FirstVNF_RAM + FirstVNF_Mem ) ) ) + Max( Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_CPU ,Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( FirstVNF_Mem - PN ) ) ) ) ) ) ),( Max( ( ( ( ( ( BR * FirstVNF_Mem_Server ) / ( ARS - BR ) ) * ( ( FirstVNF_RAM_Server + BR ) + ( FirstVNF_RAM_Server / BR ) ) ) + ( ( ( CRS * ACS ) - ( BR * Const ) ) / Min( ( MDR + FirstVNF_Mem ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) / ( ( Min( Min( MRS ,ACS ) ,( Const * FirstVNF_Mem_Server ) ) + ( ( CRS / MDR ) / Min( ARS ,MRS ) ) ) + ( Max( Min( FirstVNF_CPU_Server ,RRS ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * ( ( Const + MDR ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) ),( Min( ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( MRS * FirstVNF_Mem ) ) / ( ( RRS + MDR ) + Max( CRS,ARS ) ) ) ,Max( Max( ( MDR + FirstVNF_CPU ),( CRS / DDR ) ),Max( ( MDR / FirstVNF_Mem_Server ),( MRS * Const ) ) ) ) + Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( MRS + MRS ) ) / ( ( MDR / FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_CPU ) ) ) ,Min( ( ( FirstVNF_RAM - BR ) * Min( ACS ,RRS ) ) ,Min( ( DDR - FirstVNF_RAM ) ,Max( AMS,FirstVNF_RAM ) ) ) ) ) ) * ( ( Min( Min( ( ( FirstVNF_CPU * BR ) / ( MRS + DDR ) ) ,( ( MDR * FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) ,( ( Max( RRS,ACS ) / ( MRS - RRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_RAM ) * ( MRS + DDR ) ) ) ) * ( ( ( ( FirstVNF_CPU / CRS ) * ( MRS - DDR ) ) / ( ( Const + MRS ) / Max( DDR,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_CPU_Server * MRS ) * ( BR / FirstVNF_RAM_Server ) ),( ( ACS / CRS ) * ( DDR / MDR ) ) ) ) ) * Min( ( ( Max( ( ARS * CRS ),( ACS - DDR ) ) * Max( ( FirstVNF_CPU_Server - Const ),Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( MDR / CRS ) ) + ( Min( RRS ,DDR ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ,Min( Min( ( ( MDR - ARS ) + ( MRS + MRS ) ) ,( Min( DDR ,RRS ) / ( FirstVNF_RAM_Server * Const ) ) ) ,( ( ( BR + ARS ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( MDR + DDR ) - ( DDR * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( ( MUC - MUR ) * Min( MUM ,MUC ) ) / ( ( RMSe + MLU ) + ( DS - MUM ) ) ) ,( ( Max( MLU,RMSe ) - ( RCSe * RCSe ) ) * ( ( CS + RRSe ) * Max( RRSe,CS ) ) ) ) + Max( ( ( ( MLU - MUR ) / Min( MLU ,RRSe ) ) * ( ( RMSe + RCSe ) - Min( DS ,RMSe ) ) ),Min( Max( ( CS / RCSe ),( RCSe / DS ) ) ,( Max( MLU,MLU ) + Min( CS ,MUR ) ) ) ) ) - ( Max( ( ( ( DS - MLU ) / Min( MUM ,RMSe ) ) + ( Min( MUC ,RCSe ) / ( MUM / CS ) ) ),( Max( Min( MLU ,MUC ),Max( MLU,RMSe ) ) * Max( Max( RRSe,CS ),Min( MLU ,MLU ) ) ) ) - ( ( ( Max( RCSe,DS ) + ( DS - RRSe ) ) + ( ( MUM + MUM ) - ( RRSe + MLU ) ) ) - ( Max( ( CS + MLU ),Max( CS,RMSe ) ) - Max( Max( RMSe,RMSe ),Max( DS,MUR ) ) ) ) ) ) - Min( Max( Max( ( ( ( DS * RMSe ) + ( MLU - MUR ) ) + ( ( MUC - RCSe ) - Max( CS,MUR ) ) ),Min( ( Min( CS ,MUM ) * ( RCSe - DS ) ) ,Max( Min( RMSe ,DS ),( DS / MUC ) ) ) ),( ( ( ( CS * RMSe ) + ( RCSe - DS ) ) * ( ( MUM / RCSe ) - Min( MUR ,MUC ) ) ) + Min( Min( Max( MUM,MLU ) ,( CS * RRSe ) ) ,( ( RMSe - MUR ) - ( DS * MUM ) ) ) ) ) ,( Max( Max( ( Min( RCSe ,CS ) - ( MUC - RRSe ) ),Min( ( RCSe - CS ) ,( MLU * RRSe ) ) ),( ( ( RCSe * MUC ) + ( MUC - RCSe ) ) / ( ( DS + RCSe ) * ( CS + RCSe ) ) ) ) + ( Min( Max( Min( CS ,RMSe ),( CS + MUM ) ) ,Min( ( MUM - DS ) ,Min( RRSe ,DS ) ) ) / ( ( ( MUM / RCSe ) - ( RCSe - MLU ) ) - ( Max( MUM,DS ) + ( DS / MUC ) ) ) ) ) ) ) ,( Max( Max( ( ( ( ( RRSe - RCSe ) + Min( RRSe ,MLU ) ) + ( ( CS + MLU ) + ( MLU / DS ) ) ) * ( Min( ( MUR + RMSe ) ,Max( MLU,MUC ) ) / ( ( DS + RCSe ) + ( MUC - MLU ) ) ) ),( Min( ( Max( RMSe,MUM ) * ( MUM + MLU ) ) ,Max( Min( DS ,RCSe ),( MLU * DS ) ) ) + Max( ( Max( MUM,MUR ) / ( MUC + MUR ) ),( Min( RRSe ,CS ) - Max( RRSe,MLU ) ) ) ) ),( ( ( Max( ( MUR + RRSe ),Min( RMSe ,MLU ) ) / ( ( MUC - MLU ) + ( RMSe / MLU ) ) ) * Min( ( ( CS - DS ) + Min( MUC ,MUR ) ) ,( Max( MLU,RRSe ) - ( MUM / MUR ) ) ) ) + ( ( ( ( MLU + RRSe ) - Max( MUC,RCSe ) ) / Max( Max( DS,MUC ),( RCSe * CS ) ) ) + ( Max( Min( MLU ,RRSe ),( MLU + RRSe ) ) * ( Min( MLU ,MUM ) + Min( MUM ,DS ) ) ) ) ) ) * Min( ( Max( Max( ( Min( DS ,RCSe ) - ( MUR + RRSe ) ),( ( MUR * DS ) + ( RCSe + RRSe ) ) ),Max( ( Min( RCSe ,MUC ) * ( MUC * RCSe ) ),Max( ( RRSe * RCSe ),( MLU - MUM ) ) ) ) / Min( ( Max( Min( RMSe ,RRSe ),Min( DS ,CS ) ) / Max( ( RMSe + RCSe ),( CS / MUM ) ) ) ,Max( ( ( RRSe / MUC ) + ( MLU + MUR ) ),( ( MUR * DS ) + Min( MUM ,RRSe ) ) ) ) ) ,( ( ( ( ( DS * RCSe ) + ( DS * MUC ) ) / Max( ( RCSe + MUC ),Max( DS,RCSe ) ) ) + ( Min( Max( MLU,MLU ) ,( MLU / RRSe ) ) - Max( Max( MUM,MUR ),( MUM / RRSe ) ) ) ) / ( Max( ( ( RCSe - MUM ) - Min( MUC ,MLU ) ),( ( MUC * MUM ) / ( MUR * MUR ) ) ) + Max( Min( Max( DS,MLU ) ,( MLU - RCSe ) ),( Min( RRSe ,CS ) - ( MUR * DS ) ) ) ) ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.025706172087324664}, {"determining": "( ( ACS + RRS ) - ( FirstVNF_RAM_Server - Const ) )", "choosing": "( Max( MUM,RMSe ) - MUC )", "obj1": 0.2204724409448819, "obj2": 0.6548073312592392}, {"determining": "( Max( PN,PN ) - ( ARS + ( Const - ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) - ( DS / RMSe ) ) + ( MUM / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) * ( RMSe / RMSe ) )", "obj1": 0.23031496062992127, "obj2": 0.6463776530722966}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5805085009453665}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * ( Max( ACS,Max( DDR,CRS ) ) / CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MLU ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5805085009453665}, {"determining": "Min( ( ACS + RRS ) ,( FirstVNF_RAM_Server - Const ) )", "choosing": "( Min( MUC ,DS ) - MUC )", "obj1": 0.19881889763779528, "obj2": 0.6840639417121119}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( RMSe / RMSe ) )", "obj1": 0.234251968503937, "obj2": 0.6374966933747159}], "7": [{"determining": "( Min( DDR ,DDR ) - ( DDR / RRS ) )", "choosing": "( Max( MUM,RMSe ) - Max( MLU,( MUM / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Max( ( ( ( Max( PN,FirstVNF_CPU_Server ) - ( DDR - Const ) ) + ( ( RRS - Const ) / Max( MRS,CRS ) ) ) * ( ( ( ACS - MRS ) - ( FirstVNF_CPU_Server + Const ) ) + ( ( MDR * BR ) * Min( FirstVNF_CPU_Server ,MDR ) ) ) ),( ( Min( ( ARS / ARS ) ,( CRS / PN ) ) + Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,Min( CRS ,MRS ) ) ) + ( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( FirstVNF_CPU * AMS ) ) * Min( ( RRS - AMS ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ),( ( ( Min( Max( RRS,RRS ) ,( Const - RRS ) ) + Max( Max( DDR,RRS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / DDR ) + ( ACS * ACS ) ) ,Max( ( MRS * FirstVNF_CPU ),( RRS / FirstVNF_CPU_Server ) ) ) ) + Min( Max( Max( ( ARS - MDR ),( FirstVNF_CPU_Server - DDR ) ),( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( ARS + MDR ) ) ) ) ) ),( ( ( ( ( Min( RRS ,PN ) * ( RRS / FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) + Min( ( ( AMS + FirstVNF_CPU ) / ( BR - MRS ) ) ,( ( BR - BR ) * ( ARS / MDR ) ) ) ) - ( ( ( ( Const + CRS ) / ( BR - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM + BR ) * ( DDR / MRS ) ) ) / Min( Max( ( MRS / FirstVNF_CPU_Server ),( BR + FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_CPU * MRS ),( AMS - FirstVNF_Mem_Server ) ) ) ) ) - Max( Max( Min( Min( ( RRS - FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_CPU ) ) ,( Min( Const ,ARS ) * ( ARS * MRS ) ) ),Min( ( ( MDR - ACS ) / Max( RRS,DDR ) ) ,Min( Max( ACS,DDR ) ,( ACS + RRS ) ) ) ),Min( ( ( ( ACS * BR ) * Max( MRS,PN ) ) - ( ( Const + ACS ) + Max( PN,FirstVNF_RAM_Server ) ) ) ,( ( ( AMS * FirstVNF_RAM ) / ( MDR + PN ) ) / Min( Min( ACS ,Const ) ,Max( PN,PN ) ) ) ) ) ) ) ,( Min( ( Min( Max( ( ( FirstVNF_RAM_Server + ARS ) + Max( RRS,FirstVNF_CPU_Server ) ),Max( ( AMS - BR ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ,( ( ( Const / MRS ) - ( FirstVNF_CPU_Server - Const ) ) * ( ( RRS / MDR ) / Max( AMS,CRS ) ) ) ) * Min( ( ( Min( BR ,CRS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Max( ( RRS - Const ),( PN + MDR ) ) ) ,Max( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( ACS - ACS ) ),( Min( FirstVNF_RAM ,RRS ) - ( FirstVNF_CPU_Server - Const ) ) ) ) ) ,( ( ( Min( ( RRS + FirstVNF_CPU_Server ) ,Max( DDR,FirstVNF_RAM_Server ) ) + Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_CPU_Server * PN ) ) ) / ( ( ( Const - PN ) - Min( AMS ,FirstVNF_Mem_Server ) ) + ( Max( PN,CRS ) + ( CRS / FirstVNF_RAM ) ) ) ) * ( ( Max( Min( BR ,DDR ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( ACS,PN ) ) ) - ( ( Min( Const ,Const ) + ( FirstVNF_RAM + BR ) ) + Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) ) / Max( ( ( ( ( ( AMS + AMS ) * ( RRS * MDR ) ) + ( Max( FirstVNF_CPU_Server,AMS ) * ( FirstVNF_Mem_Server + Const ) ) ) - ( ( ( RRS - CRS ) * ( AMS + MRS ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - ( ARS + MDR ) ) ) ) - ( ( ( Min( BR ,CRS ) * ( MDR + PN ) ) + ( ( ACS / FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server / CRS ) ) ) / ( ( Max( FirstVNF_Mem_Server,CRS ) * Min( BR ,FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( ACS * Const ) ) ) ) ),( Max( Min( ( ( CRS * DDR ) / Max( ACS,Const ) ) ,( ( AMS / PN ) * Max( AMS,ARS ) ) ),( ( ( MRS / ARS ) + ( CRS - BR ) ) / Max( ( MDR - FirstVNF_Mem ),( FirstVNF_RAM * MDR ) ) ) ) + Min( ( ( ( FirstVNF_Mem + ACS ) * ( FirstVNF_Mem_Server - MRS ) ) - ( Min( FirstVNF_RAM_Server ,ARS ) - ( DDR - DDR ) ) ) ,( ( Min( AMS ,PN ) * ( Const + PN ) ) * Min( Min( DDR ,ACS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUR / ( ( DS * DS ) + RCSe ) ) ,MUM ),( MUC / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( CS / ( MUM + MUM ) )", "obj1": 0.09645669291338582, "obj2": 0.9014721575447899}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( Min( DDR ,DDR ) - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / RMSe ) - ( MLU * ( MUM / MLU ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16700036073611893}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ACS - AMS ) * ( Min( FirstVNF_CPU_Server ,AMS ) / ( CRS / CRS ) ) )", "choosing": "( Max( MUM,RCSe ) / MLU )", "obj1": 0.7598425196850394, "obj2": 0.19805796192221153}, {"determining": "( ARS - Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe * DS ) ,Min( MUR ,RRSe ) )", "obj1": 0.812992125984252, "obj2": 0.12489625119025387}, {"determining": "( ( CRS - CRS ) - ( ( DDR - PN ) - Max( BR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / ( RCSe * DS ) ) + MUM )", "obj1": 0.11614173228346457, "obj2": 0.8171521331312505}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "Min( ( FirstVNF_RAM / DDR ) ,( FirstVNF_CPU_Server * MRS ) )", "choosing": "Min( ( DS * DS ) ,Min( MUM ,( RRSe - DS ) ) )", "obj1": 0.43700787401574803, "obj2": 0.46199878856288096}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( Const + ARS ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( MUC / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.874122612932497}, {"determining": "( ( FirstVNF_CPU * ( BR / FirstVNF_Mem_Server ) ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC - Min( RMSe ,DS ) ) ) + ( RMSe / RMSe ) )", "obj1": 0.3425196850393701, "obj2": 0.5509348205978742}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( ( MDR - BR ) + ( FirstVNF_RAM / DDR ) )", "choosing": "Min( ( RRSe * DS ) ,( MUR * RMSe ) )", "obj1": 0.37401574803149606, "obj2": 0.523961739215679}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( RMSe ,( RMSe - Min( RMSe ,MLU ) ) ),Max( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),RRSe ) * ( MLU - Min( MUM ,RMSe ) ) ),Min( ( Max( CS,( DS - RMSe ) ) / RCSe ) ,MUC ) ) )", "obj1": 0.952755905511811, "obj2": 0.037117121971955595}, {"determining": "( Max( PN,PN ) - PN )", "choosing": "( Min( ( RCSe * DS ) ,Min( MUM ,RRSe ) ) + ( MUM / RMSe ) )", "obj1": 0.39763779527559057, "obj2": 0.5011765290747577}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.7460629921259843, "obj2": 0.21275487776204344}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( RMSe / RMSe ) )", "obj1": 0.234251968503937, "obj2": 0.6374966933747159}, {"determining": "( ( ACS + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / RMSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7418871293789597}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( ( ACS + RRS ) - ( ( ACS + RRS ) - ACS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5389211849907691}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( ( Max( MUM,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7563482106010063}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) + ( MDR + MRS ) )", "choosing": "Min( ( RRSe * ( RCSe * RMSe ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.968503937007874, "obj2": 0.03470149558096801}, {"determining": "Max( ( Max( ( ( Max( ( Max( FirstVNF_CPU_Server,PN ) / ( ARS * DDR ) ),Max( ( CRS / FirstVNF_CPU ),( MRS + DDR ) ) ) + ( ( ( FirstVNF_RAM_Server / Const ) * ( MDR / CRS ) ) / Max( ( PN * Const ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - ( Min( ( Max( DDR,ACS ) / Min( MDR ,ACS ) ) ,( ( FirstVNF_Mem + RRS ) + ( CRS - DDR ) ) ) / ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( AMS + FirstVNF_CPU ) ) * ( Min( ARS ,FirstVNF_Mem ) + Max( AMS,FirstVNF_Mem_Server ) ) ) ) ),Min( Max( ( ( ( ACS / ACS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) / ( ( MDR * FirstVNF_Mem ) * Max( MDR,CRS ) ) ),( ( ( DDR * FirstVNF_CPU_Server ) + ( Const * FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server / ARS ) - Max( MRS,FirstVNF_RAM ) ) ) ) ,Max( ( Max( ( MDR / BR ),( ARS / CRS ) ) - Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU / ARS ) ) ),( Max( ( RRS + PN ),( FirstVNF_RAM_Server / DDR ) ) + ( ( AMS - CRS ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) / Max( ( ( Min( ( ( MRS * ACS ) / ( FirstVNF_RAM_Server / DDR ) ) ,( ( BR / CRS ) / ( Const - FirstVNF_RAM_Server ) ) ) / Max( Max( ( BR / ARS ),Min( DDR ,FirstVNF_CPU_Server ) ),( ( AMS * FirstVNF_RAM ) * ( DDR - FirstVNF_RAM ) ) ) ) / ( ( ( ( ACS + FirstVNF_RAM ) + ( FirstVNF_Mem_Server + CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) * Max( Min( ( CRS + BR ) ,( ACS + AMS ) ),( Min( PN ,Const ) - ( FirstVNF_CPU + Const ) ) ) ) ),( ( ( ( Min( FirstVNF_Mem ,Const ) + Max( DDR,FirstVNF_Mem ) ) * ( ( MDR / ARS ) - Max( PN,FirstVNF_Mem ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( Const + FirstVNF_CPU_Server ) ) ,( Min( Const ,CRS ) / Max( Const,AMS ) ) ) ) * ( ( Max( Min( BR ,AMS ),( RRS / MRS ) ) * Max( Min( ACS ,ACS ),( FirstVNF_RAM + FirstVNF_Mem ) ) ) + Max( Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_CPU ,Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( FirstVNF_Mem - PN ) ) ) ) ) ) ),( Max( ( ( ( ( ( BR * FirstVNF_Mem_Server ) / ( ARS - BR ) ) * ( ( FirstVNF_RAM_Server + BR ) + ( FirstVNF_RAM_Server / BR ) ) ) + ( ( ( CRS * ACS ) - ( BR * Const ) ) / Min( ( MDR + FirstVNF_Mem ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) / ( ( Min( Min( MRS ,ACS ) ,( Const * FirstVNF_Mem_Server ) ) + ( ( CRS / MDR ) / Min( ARS ,MRS ) ) ) + ( Max( Min( FirstVNF_CPU_Server ,RRS ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * ( ( Const + MDR ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) ),( Min( ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( MRS * FirstVNF_Mem ) ) / ( ( RRS + MDR ) + Max( CRS,ARS ) ) ) ,Max( Max( ( MDR + FirstVNF_CPU ),( CRS / DDR ) ),Max( ( MDR / FirstVNF_Mem_Server ),( MRS * Const ) ) ) ) + Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( MRS + MRS ) ) / ( ( MDR / FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_CPU ) ) ) ,Min( ( ( FirstVNF_RAM - BR ) * Min( ACS ,RRS ) ) ,Min( ( DDR - FirstVNF_RAM ) ,Max( AMS,FirstVNF_RAM ) ) ) ) ) ) * ( ( Min( Min( ( ( FirstVNF_CPU * BR ) / ( MRS + DDR ) ) ,( ( MDR * FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) ,( ( Max( RRS,ACS ) / ( MRS - RRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_RAM ) * ( MRS + DDR ) ) ) ) * ( ( ( ( FirstVNF_CPU / CRS ) * ( MRS - DDR ) ) / ( ( Const + MRS ) / Max( DDR,FirstVNF_Mem_Server ) ) ) - Max( ( ( FirstVNF_CPU_Server * MRS ) * ( BR / FirstVNF_RAM_Server ) ),( ( ACS / CRS ) * ( DDR / MDR ) ) ) ) ) * Min( ( ( Max( ( ARS * CRS ),( ACS - DDR ) ) * Max( ( FirstVNF_CPU_Server - Const ),Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( MDR / CRS ) ) + ( Min( RRS ,DDR ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ,Min( Min( ( ( MDR - ARS ) + ( MRS + MRS ) ) ,( Min( DDR ,RRS ) / ( FirstVNF_RAM_Server * Const ) ) ) ,( ( ( BR + ARS ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( MDR + DDR ) - ( DDR * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( ( MUC - MUR ) * Min( MUM ,MUC ) ) / ( ( RMSe + MLU ) + ( DS - MUM ) ) ) ,( ( Max( MLU,RMSe ) - ( RCSe * RCSe ) ) * ( ( CS + RRSe ) * Max( RRSe,CS ) ) ) ) + Max( ( ( ( MLU - MUR ) / Min( MLU ,RRSe ) ) * ( ( RMSe + RCSe ) - Min( DS ,RMSe ) ) ),Min( Max( ( CS / RCSe ),( RCSe / DS ) ) ,( Max( MLU,MLU ) + Min( CS ,MUR ) ) ) ) ) - ( Max( ( ( ( DS - MLU ) / Min( MUM ,RMSe ) ) + ( Min( MUC ,RCSe ) / ( MUM / CS ) ) ),( Max( Min( MLU ,MUC ),Max( MLU,RMSe ) ) * Max( Max( RRSe,CS ),Min( MLU ,MLU ) ) ) ) - ( ( ( Max( RCSe,DS ) + ( DS - RRSe ) ) + ( ( MUM + MUM ) - ( RRSe + MLU ) ) ) - ( Max( ( CS + MLU ),Max( CS,RMSe ) ) - Max( Max( RMSe,RMSe ),Max( DS,MUR ) ) ) ) ) ) - Min( Max( Max( ( ( ( DS * RMSe ) + ( MLU - MUR ) ) + ( ( MUC - RCSe ) - Max( CS,MUR ) ) ),Min( ( Min( CS ,MUM ) * ( RCSe - DS ) ) ,Max( Min( RMSe ,DS ),( DS / MUC ) ) ) ),( ( ( ( CS * RMSe ) + ( RCSe - DS ) ) * ( ( MUM / RCSe ) - Min( MUR ,MUC ) ) ) + Min( Min( Max( MUM,MLU ) ,( CS * RRSe ) ) ,( ( RMSe - MUR ) - ( DS * MUM ) ) ) ) ) ,( Max( Max( ( Min( RCSe ,CS ) - ( MUC - RRSe ) ),Min( ( RCSe - CS ) ,( MLU * RRSe ) ) ),( ( ( RCSe * MUC ) + ( MUC - RCSe ) ) / ( ( DS + RCSe ) * ( CS + RCSe ) ) ) ) + ( Min( Max( Min( CS ,RMSe ),( CS + MUM ) ) ,Min( ( MUM - DS ) ,Min( RRSe ,DS ) ) ) / ( ( ( MUM / RCSe ) - ( RCSe - MLU ) ) - ( Max( MUM,DS ) + ( DS / MUC ) ) ) ) ) ) ) ,( Max( Max( ( ( ( ( RRSe - RCSe ) + Min( RRSe ,MLU ) ) + ( ( CS + MLU ) + ( MLU / DS ) ) ) * ( Min( ( MUR + RMSe ) ,Max( MLU,MUC ) ) / ( ( DS + RCSe ) + ( MUC - MLU ) ) ) ),( Min( ( Max( RMSe,MUM ) * ( MUM + MLU ) ) ,Max( Min( DS ,RCSe ),( MLU * DS ) ) ) + Max( ( Max( MUM,MUR ) / ( MUC + MUR ) ),( Min( RRSe ,CS ) - Max( RRSe,MLU ) ) ) ) ),( ( ( Max( ( MUR + RRSe ),Min( RMSe ,MLU ) ) / ( ( MUC - MLU ) + ( RMSe / MLU ) ) ) * Min( ( ( CS - DS ) + Min( MUC ,MUR ) ) ,( Max( MLU,RRSe ) - ( MUM / MUR ) ) ) ) + ( ( ( ( MLU + RRSe ) - Max( MUC,RCSe ) ) / Max( Max( DS,MUC ),( RCSe * CS ) ) ) + ( Max( Min( MLU ,RRSe ),( MLU + RRSe ) ) * ( Min( MLU ,MUM ) + Min( MUM ,DS ) ) ) ) ) ) * Min( ( Max( Max( ( Min( DS ,RCSe ) - ( MUR + RRSe ) ),( ( MUR * DS ) + ( RCSe + RRSe ) ) ),Max( ( Min( RCSe ,MUC ) * ( MUC * RCSe ) ),Max( ( RRSe * RCSe ),( MLU - MUM ) ) ) ) / Min( ( Max( Min( RMSe ,RRSe ),Min( DS ,CS ) ) / Max( ( RMSe + RCSe ),( CS / MUM ) ) ) ,Max( ( ( RRSe / MUC ) + ( MLU + MUR ) ),( ( MUR * DS ) + Min( MUM ,RRSe ) ) ) ) ) ,( ( ( ( ( DS * RCSe ) + ( DS * MUC ) ) / Max( ( RCSe + MUC ),Max( DS,RCSe ) ) ) + ( Min( Max( MLU,MLU ) ,( MLU / RRSe ) ) - Max( Max( MUM,MUR ),( MUM / RRSe ) ) ) ) / ( Max( ( ( RCSe - MUM ) - Min( MUC ,MLU ) ),( ( MUC * MUM ) / ( MUR * MUR ) ) ) + Max( Min( Max( DS,MLU ) ,( MLU - RCSe ) ),( Min( RRSe ,CS ) - ( MUR * DS ) ) ) ) ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.025706172087324664}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ACS )", "choosing": "( Max( MUM,Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) ) ) - ( DS / RMSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7618339326922269}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "( Max( CS,CS ) / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8828582830853415}, {"determining": "( ( MDR * FirstVNF_RAM ) * Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,CS ) / Min( ( RMSe * DS ) ,( ( CS + DS ) / CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8958969751409928}, {"determining": "( Max( PN,PN ) - ( ARS + ( Const - ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) - ( DS / RMSe ) ) + ( MUM / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) * ( RMSe / RMSe ) )", "obj1": 0.23031496062992127, "obj2": 0.6463776530722966}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "Max( ( Const + ARS ),Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC / Max( MLU,MUR ) ) / ( MUM + MUM ) )", "obj1": 0.2125984251968504, "obj2": 0.6734760489038826}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( RCSe / RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7785181377487251}], "8": [{"determining": "( Min( DDR ,DDR ) - ( DDR / RRS ) )", "choosing": "( ( RMSe / MUR ) + ( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,DDR ) - ( DDR / RRS ) )", "choosing": "( Max( MUM,RMSe ) - Max( MLU,( MUM / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( CS / ( MUM + MUM ) )", "obj1": 0.09645669291338582, "obj2": 0.9014721575447899}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "Max( ( MUM - MLU ),( DS - RRSe ) )", "obj1": 0.7440944881889764, "obj2": 0.2296898040612146}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( MUM + ( ( MUM + MLU ) + RCSe ) ) + MUC )", "obj1": 0.7992125984251969, "obj2": 0.14825925183617103}, {"determining": "( ( ACS - AMS ) * ( Min( FirstVNF_CPU_Server ,AMS ) / ( CRS / CRS ) ) )", "choosing": "( Max( MUM,RCSe ) / MLU )", "obj1": 0.7598425196850394, "obj2": 0.19805796192221153}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ARS - Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe * DS ) ,Min( MUR ,RRSe ) )", "obj1": 0.812992125984252, "obj2": 0.12489625119025387}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( ACS + RRS ) - ACS )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.0984251968503937, "obj2": 0.8350820559228547}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( FirstVNF_CPU * ( BR / FirstVNF_Mem_Server ) ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC - Min( RMSe ,DS ) ) ) + ( RMSe / RMSe ) )", "obj1": 0.3425196850393701, "obj2": 0.5509348205978742}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( ( CRS - CRS ) - ( DDR + ( DDR - ( FirstVNF_CPU_Server + RRS ) ) ) )", "choosing": "( ( MUM + ( ( MUM / MLU ) + RCSe ) ) + MUM )", "obj1": 0.4507874015748031, "obj2": 0.46022186098916673}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( RMSe ,( RMSe - Min( RMSe ,MLU ) ) ),Max( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),RRSe ) * ( MLU - Min( MUM ,RMSe ) ) ),Min( ( Max( CS,( DS - RMSe ) ) / RCSe ) ,MUC ) ) )", "obj1": 0.952755905511811, "obj2": 0.037117121971955595}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( ( ACS + RRS ) - ( FirstVNF_RAM_Server * MRS ) ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( DS / CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7196097728515987}, {"determining": "( ( MDR - BR ) + ( FirstVNF_RAM / DDR ) )", "choosing": "Min( ( RRSe * DS ) ,( MUR * RMSe ) )", "obj1": 0.37401574803149606, "obj2": 0.523961739215679}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( Max( PN,PN ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + Max( CS,RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.025667307596041803}, {"determining": "Max( Min( AMS ,MRS ),( Const / ACS ) )", "choosing": "( ( MUC - MLU ) / ( DS - MUM ) )", "obj1": 0.2125984251968504, "obj2": 0.6722431368360604}, {"determining": "( ( ACS + RRS ) - ( ACS + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49964159650399637}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) * ( RMSe / RMSe ) )", "obj1": 0.23031496062992127, "obj2": 0.6463776530722966}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.7460629921259843, "obj2": 0.21275487776204344}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( RMSe / RMSe ) )", "obj1": 0.234251968503937, "obj2": 0.6374966933747159}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( Min( DDR ,DDR ) - Min( ACS ,DDR ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUC,RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.669626975147265}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( ( RMSe * ( MLU + RRSe ) ) * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.8168457247595339}, {"determining": "( ( ACS + RRS ) - ( ( ACS + RRS ) - ACS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5389211849907691}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( ( Max( MUM,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7563482106010063}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ACS )", "choosing": "( Max( MUM,Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) ) ) - ( DS / RMSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7618339326922269}, {"determining": "( Max( PN,PN ) - ( ARS + ( Const - ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) - ( DS / RMSe ) ) + ( MUM / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "Min( ( FirstVNF_RAM / DDR ) ,( FirstVNF_CPU_Server * MRS ) )", "choosing": "Min( ( DS * DS ) ,Min( MUM ,( RRSe - DS ) ) )", "obj1": 0.43700787401574803, "obj2": 0.46199878856288096}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( ACS + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / RMSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7418871293789597}], "9": [{"determining": "( Min( DDR ,DDR ) - ( DDR / RRS ) )", "choosing": "( Max( MUM,RMSe ) - Max( MLU,( MUM / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,DDR ) - ( DDR / RRS ) )", "choosing": "( ( RMSe / MUR ) + ( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.7283464566929134, "obj2": 0.17132755079431722}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( ACS + RRS ) - AMS )", "choosing": "( RCSe - MUC )", "obj1": 0.7696850393700787, "obj2": 0.1501274644002571}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ARS - Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe * DS ) ,Min( MUR ,RRSe ) )", "obj1": 0.812992125984252, "obj2": 0.12489625119025387}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( ( CRS - CRS ) - ( DDR + ( DDR - ( FirstVNF_CPU_Server + RRS ) ) ) )", "choosing": "( ( MUM + ( ( MUM / MLU ) + RCSe ) ) + MUM )", "obj1": 0.4507874015748031, "obj2": 0.46022186098916673}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( MUM + ( ( MUM + MLU ) + RCSe ) ) + MUC )", "obj1": 0.7992125984251969, "obj2": 0.14825925183617103}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( RMSe ,( RMSe - Min( RMSe ,MLU ) ) ),Max( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),RRSe ) * ( MLU - Min( MUM ,RMSe ) ) ),Min( ( Max( CS,( DS - RMSe ) ) / RCSe ) ,MUC ) ) )", "obj1": 0.952755905511811, "obj2": 0.037117121971955595}, {"determining": "( ( MDR - BR ) + ( FirstVNF_RAM / DDR ) )", "choosing": "Min( ( RRSe * DS ) ,( MUR * RMSe ) )", "obj1": 0.37401574803149606, "obj2": 0.523961739215679}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( Max( PN,PN ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + Max( CS,RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.025667307596041803}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),DDR )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Max( MUM,RMSe ) - ( MUC / CS ) ) )", "obj1": 0.20866141732283464, "obj2": 0.668293632026559}, {"determining": "( ( ACS + RRS ) - ( ACS + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49964159650399637}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( ACS + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / RMSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7418871293789597}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( ( ACS + RRS ) - ACS )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.0984251968503937, "obj2": 0.8350820559228547}, {"determining": "( ( ACS + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.3346456692913386, "obj2": 0.5655837690465504}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ARS / FirstVNF_RAM ) ) - Min( Max( MRS,FirstVNF_CPU ) ,( Const + Const ) ) )", "choosing": "( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR / RMSe ) ) - ( Min( MLU ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6496748622876096}, {"determining": "( ( FirstVNF_CPU * ( BR / FirstVNF_Mem_Server ) ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC - Min( RMSe ,DS ) ) ) + ( RMSe / RMSe ) )", "obj1": 0.3425196850393701, "obj2": 0.5509348205978742}, {"determining": "( ( ACS + RRS ) - ( ( ACS + RRS ) - ACS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5389211849907691}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( ( Max( MUM,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7563482106010063}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( MUM + ( ( MUM + MLU ) + RCSe ) ) + MUC )", "obj1": 0.8031496062992126, "obj2": 0.1264220553285479}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ACS )", "choosing": "( Max( MUM,Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) ) ) - ( DS / RMSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7618339326922269}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ARS )", "choosing": "( Max( ( Max( Min( Max( ( MUC - Min( RMSe ,DS ) ),CS ) ,RCSe ),MUM ) * ( MLU - Min( MUM ,RMSe ) ) ),( ( Max( CS,( DS - RMSe ) ) / RCSe ) - MUC ) ) * ( MUR / RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6811791252246282}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( Const ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) / ( MUM + MUM ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6295352456639699}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7078914339978022}], "10": [{"determining": "( ( ACS - FirstVNF_Mem_Server ) - ( DDR + MRS ) )", "choosing": "( Max( CS,MLU ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( Min( DDR ,DDR ) - ( DDR / RRS ) )", "choosing": "( Max( MUM,RMSe ) - Max( MLU,( MUM / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.7283464566929134, "obj2": 0.17132755079431722}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( ACS + RRS ) - AMS )", "choosing": "( RCSe - MUC )", "obj1": 0.7696850393700787, "obj2": 0.1501274644002571}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ( CRS - CRS ) - ( DDR + ( DDR - ( FirstVNF_CPU_Server + RRS ) ) ) )", "choosing": "( ( MUM + ( ( MUM / MLU ) + RCSe ) ) + MUM )", "obj1": 0.4507874015748031, "obj2": 0.46022186098916673}, {"determining": "( ARS - Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe * DS ) ,Min( MUR ,RRSe ) )", "obj1": 0.812992125984252, "obj2": 0.12489625119025387}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ARS / FirstVNF_RAM ) ) - Min( Max( MRS,FirstVNF_CPU ) ,( Const + Const ) ) )", "choosing": "( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR / RMSe ) ) - ( Min( MLU ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6496748622876096}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( MUM + ( ( MUM + MLU ) + RCSe ) ) + MUC )", "obj1": 0.7992125984251969, "obj2": 0.14825925183617103}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( RMSe ,( RMSe - Min( RMSe ,MLU ) ) ),Max( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),RRSe ) * ( MLU - Min( MUM ,RMSe ) ) ),Min( ( Max( CS,( DS - RMSe ) ) / RCSe ) ,MUC ) ) )", "obj1": 0.952755905511811, "obj2": 0.037117121971955595}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( Const ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) / ( MUM + MUM ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6295352456639699}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( Max( PN,PN ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + Max( CS,RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.025667307596041803}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),DDR )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Max( MUM,RMSe ) - ( MUC / CS ) ) )", "obj1": 0.20866141732283464, "obj2": 0.668293632026559}, {"determining": "( ( ACS + RRS ) - ( ACS + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49964159650399637}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( ( ACS + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.3346456692913386, "obj2": 0.5655837690465504}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( FirstVNF_CPU * ( BR / FirstVNF_Mem_Server ) ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC - Min( RMSe ,DS ) ) ) + ( RMSe / RMSe ) )", "obj1": 0.3425196850393701, "obj2": 0.5509348205978742}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ARS )", "choosing": "( Max( ( Max( Min( Max( ( MUC - Min( RMSe ,DS ) ),CS ) ,RCSe ),MUM ) * ( MLU - Min( MUM ,RMSe ) ) ),( ( Max( CS,( DS - RMSe ) ) / RCSe ) - MUC ) ) * ( MUR / RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.6811791252246282}, {"determining": "( ( AMS + FirstVNF_CPU ) - FirstVNF_RAM )", "choosing": "( ( MUC * DS ) - ( DS / CS ) )", "obj1": 0.13976377952755906, "obj2": 0.7657925666823426}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7078914339978022}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( MUM + ( ( MUM + MLU ) + RCSe ) ) + MUC )", "obj1": 0.8031496062992126, "obj2": 0.1264220553285479}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( ( Max( MUM,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7563482106010063}, {"determining": "( ( MDR - BR ) + ( FirstVNF_RAM / DDR ) )", "choosing": "Min( ( RRSe * DS ) ,( MUR * RMSe ) )", "obj1": 0.37401574803149606, "obj2": 0.523961739215679}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "( ( ACS + RRS ) - ( ( ACS + RRS ) - ACS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5389211849907691}], "11": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR * PN ) - ( BR + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RMSe + RRSe ),( MLU - MUR ) ) + ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) - ( DDR + MRS ) )", "choosing": "( Max( CS,MLU ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.7283464566929134, "obj2": 0.17132755079431722}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( ACS + RRS ) - AMS )", "choosing": "( RCSe - MUC )", "obj1": 0.7696850393700787, "obj2": 0.1501274644002571}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( ( CRS - CRS ) - ( DDR + ( DDR - ( FirstVNF_CPU_Server + RRS ) ) ) )", "choosing": "( ( MUM + ( ( MUM / MLU ) + RCSe ) ) + MUM )", "obj1": 0.4507874015748031, "obj2": 0.46022186098916673}, {"determining": "( ARS - Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe * DS ) ,Min( MUR ,RRSe ) )", "obj1": 0.812992125984252, "obj2": 0.12489625119025387}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( MUM + ( ( MUM + MLU ) + RCSe ) ) + MUC )", "obj1": 0.7992125984251969, "obj2": 0.14825925183617103}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( RMSe ,( RMSe - Min( RMSe ,MLU ) ) ),Max( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),RRSe ) * ( MLU - Min( MUM ,RMSe ) ) ),Min( ( Max( CS,( DS - RMSe ) ) / RCSe ) ,MUC ) ) )", "obj1": 0.952755905511811, "obj2": 0.037117121971955595}, {"determining": "( ( MDR - BR ) + ( FirstVNF_RAM / DDR ) )", "choosing": "Min( ( RRSe * DS ) ,( MUR * RMSe ) )", "obj1": 0.37401574803149606, "obj2": 0.523961739215679}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( Const ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) / ( MUM + MUM ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6295352456639699}, {"determining": "( Max( PN,PN ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + Max( CS,RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.025667307596041803}, {"determining": "( ( ACS + RRS ) - ( ACS + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49964159650399637}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( ( ACS + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.3346456692913386, "obj2": 0.5655837690465504}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),DDR )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Max( MUM,RMSe ) - ( MUC / CS ) ) )", "obj1": 0.20866141732283464, "obj2": 0.668293632026559}, {"determining": "( ( FirstVNF_CPU * ( BR / FirstVNF_Mem_Server ) ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC - Min( RMSe ,DS ) ) ) + ( RMSe / RMSe ) )", "obj1": 0.3425196850393701, "obj2": 0.5509348205978742}, {"determining": "( Min( DDR ,DDR ) - Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6798764130838921}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ARS / FirstVNF_RAM ) ) - Min( Max( MRS,FirstVNF_CPU ) ,( Const + Const ) ) )", "choosing": "( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR / RMSe ) ) - ( Min( MLU ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6496748622876096}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ACS + RRS ) - ( ( ACS + RRS ) - ACS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5389211849907691}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( MUM + ( ( MUM + MLU ) + RCSe ) ) + MUC )", "obj1": 0.8031496062992126, "obj2": 0.1264220553285479}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "Min( ( Max( ( Min( ( ( ( MDR - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( ( AMS - FirstVNF_RAM ) / Min( Const ,ACS ) ) ) ,Min( ( Max( ARS,ARS ) + ( RRS - BR ) ) ,( Max( FirstVNF_Mem,MDR ) + ( Const / ACS ) ) ) ) + ( Max( ( ( CRS / FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,CRS ) ),Min( ( FirstVNF_RAM - BR ) ,( Const * FirstVNF_Mem_Server ) ) ) - ( ( ( RRS + FirstVNF_RAM ) - ( ACS / ARS ) ) + Min( ( FirstVNF_RAM_Server * ACS ) ,Max( FirstVNF_RAM_Server,DDR ) ) ) ) ),Max( ( Max( Min( ( RRS + FirstVNF_Mem_Server ) ,( AMS - FirstVNF_Mem_Server ) ),Max( Max( CRS,PN ),( RRS + FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / FirstVNF_Mem_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( ARS ,RRS ) ) ) ),( ( ( ( ARS * FirstVNF_RAM_Server ) + ( AMS + PN ) ) * ( ( ACS - AMS ) - ( AMS - PN ) ) ) / ( Max( ( MDR - FirstVNF_CPU ),( FirstVNF_CPU_Server + MRS ) ) / ( Min( FirstVNF_Mem ,RRS ) - ( FirstVNF_Mem * AMS ) ) ) ) ) ) * Max( Min( Max( ( Min( Min( MRS ,ARS ) ,( PN + FirstVNF_Mem ) ) / ( ( FirstVNF_Mem / AMS ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ),Max( ( ( MDR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / RRS ) ),Max( ( ACS * FirstVNF_CPU_Server ),Max( Const,PN ) ) ) ) ,Min( ( ( Min( CRS ,Const ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( MDR + RRS ) ) ) ,( ( ( MRS + RRS ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + Min( ( DDR * FirstVNF_Mem ) ,( RRS + MRS ) ) ) ) ),( Max( Min( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ,Max( RRS,BR ) ) ,( ( BR - MDR ) - ( PN * Const ) ) ),Min( ( Min( PN ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - PN ) ) ,( Min( FirstVNF_Mem ,MDR ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( PN * BR ) / Min( AMS ,FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),Max( CRS,MDR ) ) ) - ( ( ( FirstVNF_CPU_Server - AMS ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( ARS + ACS ) ) ) ) ) ) ) ,Min( Min( ( Max( ( Min( ( DDR - FirstVNF_RAM ) ,Max( ACS,FirstVNF_CPU ) ) / Min( ( ACS + CRS ) ,( ARS + RRS ) ) ),( Max( ( ACS * ARS ),Max( AMS,MRS ) ) * Max( Max( FirstVNF_Mem,MDR ),( ARS * Const ) ) ) ) - ( ( Min( ( ACS - FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,AMS ) ) - ( ( FirstVNF_Mem_Server + MDR ) / Max( Const,FirstVNF_Mem ) ) ) - Min( ( ( ACS / FirstVNF_CPU ) / Min( RRS ,FirstVNF_CPU ) ) ,( ( ARS / DDR ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( MDR + FirstVNF_CPU ) ) + ( ( DDR / BR ) - ( FirstVNF_Mem * CRS ) ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + CRS ) ) + ( Min( FirstVNF_Mem_Server ,PN ) + ( CRS + FirstVNF_Mem ) ) ) ) - ( ( Max( ( ARS / ACS ),Min( RRS ,MDR ) ) / ( ( ACS + ACS ) / ( FirstVNF_Mem * PN ) ) ) / Min( Min( ( BR + ACS ) ,( PN - MRS ) ) ,( ( FirstVNF_RAM + RRS ) + ( PN - AMS ) ) ) ) ) ) ,Max( ( ( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,Min( BR ,RRS ) ) + ( ( CRS - CRS ) * Min( AMS ,MRS ) ) ) + ( ( ( MDR - FirstVNF_CPU ) * ( CRS - ARS ) ) / ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - DDR ) ) ) ) + ( Min( Max( ( Const / RRS ),( FirstVNF_RAM_Server - CRS ) ) ,Min( Min( BR ,PN ) ,( Const * MRS ) ) ) - Max( Min( Max( AMS,AMS ) ,Max( ARS,MDR ) ),( Min( FirstVNF_RAM ,Const ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) ),( ( ( ( ( ACS / ARS ) * ( MDR / MRS ) ) - ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( Max( BR,Const ) + Max( FirstVNF_RAM,MRS ) ) / Min( ( MDR + CRS ) ,( MDR / FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * ( DDR + Const ) ) / ( ( DDR + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ),( ( Max( BR,ARS ) * Min( MRS ,FirstVNF_Mem_Server ) ) / ( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( Max( ( RMSe / RMSe ),Max( DS,MLU ) ) / Min( ( MUR * RRSe ) ,( RCSe * DS ) ) ) / Min( ( Max( MUM,MUM ) + ( MUC - MUC ) ) ,Min( Min( MUM ,RCSe ) ,Min( MUC ,MUR ) ) ) ) / ( ( ( ( MLU + RMSe ) - ( MLU / MUC ) ) - ( ( MLU + MLU ) - ( MLU * MUR ) ) ) + ( ( ( MUC / RCSe ) / Min( RRSe ,MUR ) ) * ( ( MUR - RMSe ) - ( MLU - RRSe ) ) ) ) ) ,( ( ( ( Min( MUC ,CS ) + Max( MLU,MUC ) ) * Min( Min( RRSe ,RMSe ) ,( DS * RRSe ) ) ) - ( ( ( MUM / MLU ) / ( MUR - MUM ) ) * Min( ( RCSe / MLU ) ,( RCSe + RCSe ) ) ) ) * Max( Min( ( ( MLU - MLU ) * ( RCSe * MUM ) ) ,Max( Min( RCSe ,MLU ),Max( RRSe,RCSe ) ) ),( Min( ( CS / MUC ) ,( MUR - MUC ) ) / Min( ( MLU * RMSe ) ,( MUR - MUC ) ) ) ) ) ) * ( ( Max( ( ( ( RMSe - MUR ) + ( MUC + MUM ) ) - ( ( DS * MUR ) - ( MUR * MUR ) ) ),( ( ( MLU / DS ) + ( CS - MUC ) ) / ( Max( RCSe,MUM ) * Min( MUC ,DS ) ) ) ) + ( Min( ( ( RCSe / CS ) + Max( MUR,MUM ) ) ,( Max( MUC,MUC ) * ( MUC / CS ) ) ) * ( ( Max( CS,DS ) - ( RRSe + RRSe ) ) / ( ( DS * MUC ) + Max( MUR,MUR ) ) ) ) ) + Max( ( ( Min( ( RCSe * CS ) ,( MUM - CS ) ) / ( Min( MUM ,CS ) + ( MUR - MLU ) ) ) + Max( ( Min( MUR ,MUR ) / ( MUC / MLU ) ),( ( DS - RMSe ) / ( CS / MLU ) ) ) ),( ( Max( ( RRSe / MLU ),Min( CS ,RRSe ) ) / ( ( CS * MUR ) / ( RMSe / MUM ) ) ) / ( Min( ( DS - RMSe ) ,Max( RRSe,DS ) ) - ( ( MUM - DS ) * ( CS - MUM ) ) ) ) ) ) ) + ( Max( ( Min( Max( ( ( MUC * DS ) * Max( MLU,RCSe ) ),( ( MLU / RCSe ) + ( DS - RRSe ) ) ) ,Max( ( Min( CS ,MUR ) - ( DS + MUC ) ),( ( CS * MLU ) / ( MUC - DS ) ) ) ) + ( ( ( ( CS * RRSe ) - ( MLU / RRSe ) ) - Max( ( RMSe * MUC ),( RCSe - RCSe ) ) ) + ( Min( ( MUC - CS ) ,( MUC / MLU ) ) - ( ( CS + MUR ) - Min( MUC ,MUR ) ) ) ) ),Min( Min( ( ( ( MUC + RMSe ) - ( MUM * RMSe ) ) * ( ( MLU - MUM ) / ( MUC + MUM ) ) ) ,( ( Min( MUM ,RRSe ) - Min( RRSe ,DS ) ) * ( ( MUC * MUM ) / ( RRSe + MLU ) ) ) ) ,( ( ( Min( MUR ,MLU ) - Min( RCSe ,RMSe ) ) / ( Min( RMSe ,DS ) * ( MLU - MUR ) ) ) + ( Min( ( RCSe - MUM ) ,( CS + RCSe ) ) - ( ( MUM / DS ) / ( RCSe * RMSe ) ) ) ) ) ) - ( ( ( ( Min( ( RRSe + MLU ) ,( MUR / CS ) ) + Min( ( CS - CS ) ,( MLU / CS ) ) ) * ( ( ( RRSe - MUC ) + ( CS * CS ) ) / Min( Max( RRSe,MUC ) ,( RMSe - MUM ) ) ) ) - ( Min( ( ( MUR + MUM ) + Max( MLU,MUM ) ) ,( ( MUC / RMSe ) - Min( DS ,MLU ) ) ) / ( ( Max( MUR,MUM ) * ( MLU + CS ) ) / Min( Max( RMSe,RCSe ) ,( RMSe / MUM ) ) ) ) ) + Max( ( ( Min( Min( RMSe ,DS ) ,Min( DS ,DS ) ) - ( Max( RCSe,DS ) / ( MUC + MLU ) ) ) - ( ( ( MUC + MUM ) - ( RCSe / RCSe ) ) / ( Max( DS,CS ) / ( DS + MUM ) ) ) ),Max( Max( Min( ( RMSe + MLU ) ,( RMSe + RMSe ) ),Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) ),Max( ( ( RMSe + MUM ) * Max( RCSe,CS ) ),Max( ( CS + MUC ),Max( MUC,RMSe ) ) ) ) ) ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6571240746294039}, {"determining": "( ( DDR / PN ) - ( BR * ACS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( Max( CS,MLU ) / RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7560408027796683}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( ( ACS - ( ( ACS - RRS ) - ACS ) ) - ACS )", "choosing": "( ( Max( MUC,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7758527575850774}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}], "12": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR * AMS ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( MLU - MUR ) ) + ( MLU / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * PN ) - ( BR + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RMSe + RRSe ),( MLU - MUR ) ) + ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.7283464566929134, "obj2": 0.17132755079431722}, {"determining": "( ( ( ( Const / AMS ) + ( FirstVNF_Mem * PN ) ) + ( ( ARS - Const ) / ( MRS / Const ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,Const ) / Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / MUM ) * ( DS + CS ) ) * ( ( MLU / RRSe ) - Max( RMSe,RCSe ) ) ) / ( ( ( MUC + MUC ) / Max( MUC,RMSe ) ) + ( Max( MUC,RMSe ) - ( CS - CS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2943226984173793}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( ( CRS - CRS ) - ( DDR + ( DDR - ( FirstVNF_CPU_Server + RRS ) ) ) )", "choosing": "( ( MUM + ( ( MUM / MLU ) + RCSe ) ) + MUM )", "obj1": 0.4507874015748031, "obj2": 0.46022186098916673}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( RMSe ,( RMSe - Min( RMSe ,MLU ) ) ),Max( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),RRSe ) * ( MLU - Min( MUM ,RMSe ) ) ),Min( ( Max( CS,( DS - RMSe ) ) / RCSe ) ,MUC ) ) )", "obj1": 0.952755905511811, "obj2": 0.037117121971955595}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( Const ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) / ( MUM + MUM ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6295352456639699}, {"determining": "( Max( PN,PN ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + Max( CS,RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.025667307596041803}, {"determining": "( ( ACS + RRS ) - ( ACS + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49964159650399637}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( ACS + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.3346456692913386, "obj2": 0.5655837690465504}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),DDR )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Max( MUM,RMSe ) - ( MUC / CS ) ) )", "obj1": 0.20866141732283464, "obj2": 0.668293632026559}, {"determining": "( ( DDR / PN ) - ( BR * ACS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( Max( CS,MLU ) / RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7560408027796683}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( ( FirstVNF_CPU * ( BR / FirstVNF_Mem_Server ) ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC - Min( RMSe ,DS ) ) ) + ( RMSe / RMSe ) )", "obj1": 0.3425196850393701, "obj2": 0.5509348205978742}, {"determining": "( Min( DDR ,DDR ) - Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6798764130838921}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ARS / FirstVNF_RAM ) ) - Min( Max( MRS,FirstVNF_CPU ) ,( Const + Const ) ) )", "choosing": "( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR / RMSe ) ) - ( Min( MLU ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6496748622876096}, {"determining": "( ( ACS + RRS ) - ( ( ACS + RRS ) - ACS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5389211849907691}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ( ACS + AMS ) - ( DDR * MRS ) ) - ACS )", "choosing": "( Max( MUC,MLU ) - ( DS / RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.788798519649872}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "Min( ( Max( ( Min( ( ( ( MDR - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( ( AMS - FirstVNF_RAM ) / Min( Const ,ACS ) ) ) ,Min( ( Max( ARS,ARS ) + ( RRS - BR ) ) ,( Max( FirstVNF_Mem,MDR ) + ( Const / ACS ) ) ) ) + ( Max( ( ( CRS / FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,CRS ) ),Min( ( FirstVNF_RAM - BR ) ,( Const * FirstVNF_Mem_Server ) ) ) - ( ( ( RRS + FirstVNF_RAM ) - ( ACS / ARS ) ) + Min( ( FirstVNF_RAM_Server * ACS ) ,Max( FirstVNF_RAM_Server,DDR ) ) ) ) ),Max( ( Max( Min( ( RRS + FirstVNF_Mem_Server ) ,( AMS - FirstVNF_Mem_Server ) ),Max( Max( CRS,PN ),( RRS + FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / FirstVNF_Mem_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( ARS ,RRS ) ) ) ),( ( ( ( ARS * FirstVNF_RAM_Server ) + ( AMS + PN ) ) * ( ( ACS - AMS ) - ( AMS - PN ) ) ) / ( Max( ( MDR - FirstVNF_CPU ),( FirstVNF_CPU_Server + MRS ) ) / ( Min( FirstVNF_Mem ,RRS ) - ( FirstVNF_Mem * AMS ) ) ) ) ) ) * Max( Min( Max( ( Min( Min( MRS ,ARS ) ,( PN + FirstVNF_Mem ) ) / ( ( FirstVNF_Mem / AMS ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ),Max( ( ( MDR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / RRS ) ),Max( ( ACS * FirstVNF_CPU_Server ),Max( Const,PN ) ) ) ) ,Min( ( ( Min( CRS ,Const ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( MDR + RRS ) ) ) ,( ( ( MRS + RRS ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + Min( ( DDR * FirstVNF_Mem ) ,( RRS + MRS ) ) ) ) ),( Max( Min( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ,Max( RRS,BR ) ) ,( ( BR - MDR ) - ( PN * Const ) ) ),Min( ( Min( PN ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - PN ) ) ,( Min( FirstVNF_Mem ,MDR ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( PN * BR ) / Min( AMS ,FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),Max( CRS,MDR ) ) ) - ( ( ( FirstVNF_CPU_Server - AMS ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( ARS + ACS ) ) ) ) ) ) ) ,Min( Min( ( Max( ( Min( ( DDR - FirstVNF_RAM ) ,Max( ACS,FirstVNF_CPU ) ) / Min( ( ACS + CRS ) ,( ARS + RRS ) ) ),( Max( ( ACS * ARS ),Max( AMS,MRS ) ) * Max( Max( FirstVNF_Mem,MDR ),( ARS * Const ) ) ) ) - ( ( Min( ( ACS - FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,AMS ) ) - ( ( FirstVNF_Mem_Server + MDR ) / Max( Const,FirstVNF_Mem ) ) ) - Min( ( ( ACS / FirstVNF_CPU ) / Min( RRS ,FirstVNF_CPU ) ) ,( ( ARS / DDR ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( MDR + FirstVNF_CPU ) ) + ( ( DDR / BR ) - ( FirstVNF_Mem * CRS ) ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + CRS ) ) + ( Min( FirstVNF_Mem_Server ,PN ) + ( CRS + FirstVNF_Mem ) ) ) ) - ( ( Max( ( ARS / ACS ),Min( RRS ,MDR ) ) / ( ( ACS + ACS ) / ( FirstVNF_Mem * PN ) ) ) / Min( Min( ( BR + ACS ) ,( PN - MRS ) ) ,( ( FirstVNF_RAM + RRS ) + ( PN - AMS ) ) ) ) ) ) ,Max( ( ( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,Min( BR ,RRS ) ) + ( ( CRS - CRS ) * Min( AMS ,MRS ) ) ) + ( ( ( MDR - FirstVNF_CPU ) * ( CRS - ARS ) ) / ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - DDR ) ) ) ) + ( Min( Max( ( Const / RRS ),( FirstVNF_RAM_Server - CRS ) ) ,Min( Min( BR ,PN ) ,( Const * MRS ) ) ) - Max( Min( Max( AMS,AMS ) ,Max( ARS,MDR ) ),( Min( FirstVNF_RAM ,Const ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) ),( ( ( ( ( ACS / ARS ) * ( MDR / MRS ) ) - ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( Max( BR,Const ) + Max( FirstVNF_RAM,MRS ) ) / Min( ( MDR + CRS ) ,( MDR / FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * ( DDR + Const ) ) / ( ( DDR + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ),( ( Max( BR,ARS ) * Min( MRS ,FirstVNF_Mem_Server ) ) / ( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( Max( ( RMSe / RMSe ),Max( DS,MLU ) ) / Min( ( MUR * RRSe ) ,( RCSe * DS ) ) ) / Min( ( Max( MUM,MUM ) + ( MUC - MUC ) ) ,Min( Min( MUM ,RCSe ) ,Min( MUC ,MUR ) ) ) ) / ( ( ( ( MLU + RMSe ) - ( MLU / MUC ) ) - ( ( MLU + MLU ) - ( MLU * MUR ) ) ) + ( ( ( MUC / RCSe ) / Min( RRSe ,MUR ) ) * ( ( MUR - RMSe ) - ( MLU - RRSe ) ) ) ) ) ,( ( ( ( Min( MUC ,CS ) + Max( MLU,MUC ) ) * Min( Min( RRSe ,RMSe ) ,( DS * RRSe ) ) ) - ( ( ( MUM / MLU ) / ( MUR - MUM ) ) * Min( ( RCSe / MLU ) ,( RCSe + RCSe ) ) ) ) * Max( Min( ( ( MLU - MLU ) * ( RCSe * MUM ) ) ,Max( Min( RCSe ,MLU ),Max( RRSe,RCSe ) ) ),( Min( ( CS / MUC ) ,( MUR - MUC ) ) / Min( ( MLU * RMSe ) ,( MUR - MUC ) ) ) ) ) ) * ( ( Max( ( ( ( RMSe - MUR ) + ( MUC + MUM ) ) - ( ( DS * MUR ) - ( MUR * MUR ) ) ),( ( ( MLU / DS ) + ( CS - MUC ) ) / ( Max( RCSe,MUM ) * Min( MUC ,DS ) ) ) ) + ( Min( ( ( RCSe / CS ) + Max( MUR,MUM ) ) ,( Max( MUC,MUC ) * ( MUC / CS ) ) ) * ( ( Max( CS,DS ) - ( RRSe + RRSe ) ) / ( ( DS * MUC ) + Max( MUR,MUR ) ) ) ) ) + Max( ( ( Min( ( RCSe * CS ) ,( MUM - CS ) ) / ( Min( MUM ,CS ) + ( MUR - MLU ) ) ) + Max( ( Min( MUR ,MUR ) / ( MUC / MLU ) ),( ( DS - RMSe ) / ( CS / MLU ) ) ) ),( ( Max( ( RRSe / MLU ),Min( CS ,RRSe ) ) / ( ( CS * MUR ) / ( RMSe / MUM ) ) ) / ( Min( ( DS - RMSe ) ,Max( RRSe,DS ) ) - ( ( MUM - DS ) * ( CS - MUM ) ) ) ) ) ) ) + ( Max( ( Min( Max( ( ( MUC * DS ) * Max( MLU,RCSe ) ),( ( MLU / RCSe ) + ( DS - RRSe ) ) ) ,Max( ( Min( CS ,MUR ) - ( DS + MUC ) ),( ( CS * MLU ) / ( MUC - DS ) ) ) ) + ( ( ( ( CS * RRSe ) - ( MLU / RRSe ) ) - Max( ( RMSe * MUC ),( RCSe - RCSe ) ) ) + ( Min( ( MUC - CS ) ,( MUC / MLU ) ) - ( ( CS + MUR ) - Min( MUC ,MUR ) ) ) ) ),Min( Min( ( ( ( MUC + RMSe ) - ( MUM * RMSe ) ) * ( ( MLU - MUM ) / ( MUC + MUM ) ) ) ,( ( Min( MUM ,RRSe ) - Min( RRSe ,DS ) ) * ( ( MUC * MUM ) / ( RRSe + MLU ) ) ) ) ,( ( ( Min( MUR ,MLU ) - Min( RCSe ,RMSe ) ) / ( Min( RMSe ,DS ) * ( MLU - MUR ) ) ) + ( Min( ( RCSe - MUM ) ,( CS + RCSe ) ) - ( ( MUM / DS ) / ( RCSe * RMSe ) ) ) ) ) ) - ( ( ( ( Min( ( RRSe + MLU ) ,( MUR / CS ) ) + Min( ( CS - CS ) ,( MLU / CS ) ) ) * ( ( ( RRSe - MUC ) + ( CS * CS ) ) / Min( Max( RRSe,MUC ) ,( RMSe - MUM ) ) ) ) - ( Min( ( ( MUR + MUM ) + Max( MLU,MUM ) ) ,( ( MUC / RMSe ) - Min( DS ,MLU ) ) ) / ( ( Max( MUR,MUM ) * ( MLU + CS ) ) / Min( Max( RMSe,RCSe ) ,( RMSe / MUM ) ) ) ) ) + Max( ( ( Min( Min( RMSe ,DS ) ,Min( DS ,DS ) ) - ( Max( RCSe,DS ) / ( MUC + MLU ) ) ) - ( ( ( MUC + MUM ) - ( RCSe / RCSe ) ) / ( Max( DS,CS ) / ( DS + MUM ) ) ) ),Max( Max( Min( ( RMSe + MLU ) ,( RMSe + RMSe ) ),Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) ),Max( ( ( RMSe + MUM ) * Max( RCSe,CS ) ),Max( ( CS + MUC ),Max( MUC,RMSe ) ) ) ) ) ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6571240746294039}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( ( ACS - ( ( ACS - RRS ) - ACS ) ) - ACS )", "choosing": "( ( Max( MUC,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7758527575850774}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( MUR * RRSe ) ) ) + MUC )", "obj1": 0.16535433070866143, "obj2": 0.7079734707239848}], "13": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR * AMS ) - ( BR + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RMSe + RRSe ),( MLU - MUR ) ) + ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * AMS ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( MLU - MUR ) ) + ( MLU / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.7283464566929134, "obj2": 0.17132755079431722}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( ( CRS - CRS ) - ( DDR + ( DDR - ( FirstVNF_CPU_Server + RRS ) ) ) )", "choosing": "( ( MUM + ( ( MUM / MLU ) + RCSe ) ) + MUM )", "obj1": 0.4507874015748031, "obj2": 0.46022186098916673}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( ( FirstVNF_RAM + RRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( RMSe ,( RMSe - Min( RMSe ,MLU ) ) ),Max( ( Max( ( Max( ( MUC - Min( RMSe ,DS ) ),CS ) - RCSe ),RRSe ) * ( MLU - Min( MUM ,RMSe ) ) ),Min( ( Max( CS,( DS - RMSe ) ) / RCSe ) ,MUC ) ) )", "obj1": 0.952755905511811, "obj2": 0.037117121971955595}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( Const ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) / ( MUM + MUM ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6295352456639699}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( Max( PN,PN ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + Max( CS,RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.025667307596041803}, {"determining": "( ( ACS + RRS ) - ( ACS + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49964159650399637}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( ACS + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.3346456692913386, "obj2": 0.5655837690465504}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),DDR )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Max( MUM,RMSe ) - ( MUC / CS ) ) )", "obj1": 0.20866141732283464, "obj2": 0.668293632026559}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( ( FirstVNF_CPU * ( BR / FirstVNF_Mem_Server ) ) + ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC - Min( RMSe ,DS ) ) ) + ( RMSe / RMSe ) )", "obj1": 0.3425196850393701, "obj2": 0.5509348205978742}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ARS / FirstVNF_RAM ) ) - Min( Max( MRS,FirstVNF_CPU ) ,( Const + Const ) ) )", "choosing": "( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR / RMSe ) ) - ( Min( MLU ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6496748622876096}, {"determining": "( ( ACS + RRS ) - ( ( ACS + RRS ) - ACS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5389211849907691}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( ( ACS + AMS ) - ( DDR * MRS ) ) - ACS )", "choosing": "( Max( MUC,MLU ) - ( DS / RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.788798519649872}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "Min( ( Max( ( Min( ( ( ( MDR - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( ( AMS - FirstVNF_RAM ) / Min( Const ,ACS ) ) ) ,Min( ( Max( ARS,ARS ) + ( RRS - BR ) ) ,( Max( FirstVNF_Mem,MDR ) + ( Const / ACS ) ) ) ) + ( Max( ( ( CRS / FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,CRS ) ),Min( ( FirstVNF_RAM - BR ) ,( Const * FirstVNF_Mem_Server ) ) ) - ( ( ( RRS + FirstVNF_RAM ) - ( ACS / ARS ) ) + Min( ( FirstVNF_RAM_Server * ACS ) ,Max( FirstVNF_RAM_Server,DDR ) ) ) ) ),Max( ( Max( Min( ( RRS + FirstVNF_Mem_Server ) ,( AMS - FirstVNF_Mem_Server ) ),Max( Max( CRS,PN ),( RRS + FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / FirstVNF_Mem_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( ARS ,RRS ) ) ) ),( ( ( ( ARS * FirstVNF_RAM_Server ) + ( AMS + PN ) ) * ( ( ACS - AMS ) - ( AMS - PN ) ) ) / ( Max( ( MDR - FirstVNF_CPU ),( FirstVNF_CPU_Server + MRS ) ) / ( Min( FirstVNF_Mem ,RRS ) - ( FirstVNF_Mem * AMS ) ) ) ) ) ) * Max( Min( Max( ( Min( Min( MRS ,ARS ) ,( PN + FirstVNF_Mem ) ) / ( ( FirstVNF_Mem / AMS ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ),Max( ( ( MDR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / RRS ) ),Max( ( ACS * FirstVNF_CPU_Server ),Max( Const,PN ) ) ) ) ,Min( ( ( Min( CRS ,Const ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( MDR + RRS ) ) ) ,( ( ( MRS + RRS ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + Min( ( DDR * FirstVNF_Mem ) ,( RRS + MRS ) ) ) ) ),( Max( Min( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ,Max( RRS,BR ) ) ,( ( BR - MDR ) - ( PN * Const ) ) ),Min( ( Min( PN ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - PN ) ) ,( Min( FirstVNF_Mem ,MDR ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( PN * BR ) / Min( AMS ,FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),Max( CRS,MDR ) ) ) - ( ( ( FirstVNF_CPU_Server - AMS ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( ARS + ACS ) ) ) ) ) ) ) ,Min( Min( ( Max( ( Min( ( DDR - FirstVNF_RAM ) ,Max( ACS,FirstVNF_CPU ) ) / Min( ( ACS + CRS ) ,( ARS + RRS ) ) ),( Max( ( ACS * ARS ),Max( AMS,MRS ) ) * Max( Max( FirstVNF_Mem,MDR ),( ARS * Const ) ) ) ) - ( ( Min( ( ACS - FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,AMS ) ) - ( ( FirstVNF_Mem_Server + MDR ) / Max( Const,FirstVNF_Mem ) ) ) - Min( ( ( ACS / FirstVNF_CPU ) / Min( RRS ,FirstVNF_CPU ) ) ,( ( ARS / DDR ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( MDR + FirstVNF_CPU ) ) + ( ( DDR / BR ) - ( FirstVNF_Mem * CRS ) ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + CRS ) ) + ( Min( FirstVNF_Mem_Server ,PN ) + ( CRS + FirstVNF_Mem ) ) ) ) - ( ( Max( ( ARS / ACS ),Min( RRS ,MDR ) ) / ( ( ACS + ACS ) / ( FirstVNF_Mem * PN ) ) ) / Min( Min( ( BR + ACS ) ,( PN - MRS ) ) ,( ( FirstVNF_RAM + RRS ) + ( PN - AMS ) ) ) ) ) ) ,Max( ( ( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,Min( BR ,RRS ) ) + ( ( CRS - CRS ) * Min( AMS ,MRS ) ) ) + ( ( ( MDR - FirstVNF_CPU ) * ( CRS - ARS ) ) / ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - DDR ) ) ) ) + ( Min( Max( ( Const / RRS ),( FirstVNF_RAM_Server - CRS ) ) ,Min( Min( BR ,PN ) ,( Const * MRS ) ) ) - Max( Min( Max( AMS,AMS ) ,Max( ARS,MDR ) ),( Min( FirstVNF_RAM ,Const ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) ),( ( ( ( ( ACS / ARS ) * ( MDR / MRS ) ) - ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( Max( BR,Const ) + Max( FirstVNF_RAM,MRS ) ) / Min( ( MDR + CRS ) ,( MDR / FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * ( DDR + Const ) ) / ( ( DDR + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ),( ( Max( BR,ARS ) * Min( MRS ,FirstVNF_Mem_Server ) ) / ( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( Max( ( RMSe / RMSe ),Max( DS,MLU ) ) / Min( ( MUR * RRSe ) ,( RCSe * DS ) ) ) / Min( ( Max( MUM,MUM ) + ( MUC - MUC ) ) ,Min( Min( MUM ,RCSe ) ,Min( MUC ,MUR ) ) ) ) / ( ( ( ( MLU + RMSe ) - ( MLU / MUC ) ) - ( ( MLU + MLU ) - ( MLU * MUR ) ) ) + ( ( ( MUC / RCSe ) / Min( RRSe ,MUR ) ) * ( ( MUR - RMSe ) - ( MLU - RRSe ) ) ) ) ) ,( ( ( ( Min( MUC ,CS ) + Max( MLU,MUC ) ) * Min( Min( RRSe ,RMSe ) ,( DS * RRSe ) ) ) - ( ( ( MUM / MLU ) / ( MUR - MUM ) ) * Min( ( RCSe / MLU ) ,( RCSe + RCSe ) ) ) ) * Max( Min( ( ( MLU - MLU ) * ( RCSe * MUM ) ) ,Max( Min( RCSe ,MLU ),Max( RRSe,RCSe ) ) ),( Min( ( CS / MUC ) ,( MUR - MUC ) ) / Min( ( MLU * RMSe ) ,( MUR - MUC ) ) ) ) ) ) * ( ( Max( ( ( ( RMSe - MUR ) + ( MUC + MUM ) ) - ( ( DS * MUR ) - ( MUR * MUR ) ) ),( ( ( MLU / DS ) + ( CS - MUC ) ) / ( Max( RCSe,MUM ) * Min( MUC ,DS ) ) ) ) + ( Min( ( ( RCSe / CS ) + Max( MUR,MUM ) ) ,( Max( MUC,MUC ) * ( MUC / CS ) ) ) * ( ( Max( CS,DS ) - ( RRSe + RRSe ) ) / ( ( DS * MUC ) + Max( MUR,MUR ) ) ) ) ) + Max( ( ( Min( ( RCSe * CS ) ,( MUM - CS ) ) / ( Min( MUM ,CS ) + ( MUR - MLU ) ) ) + Max( ( Min( MUR ,MUR ) / ( MUC / MLU ) ),( ( DS - RMSe ) / ( CS / MLU ) ) ) ),( ( Max( ( RRSe / MLU ),Min( CS ,RRSe ) ) / ( ( CS * MUR ) / ( RMSe / MUM ) ) ) / ( Min( ( DS - RMSe ) ,Max( RRSe,DS ) ) - ( ( MUM - DS ) * ( CS - MUM ) ) ) ) ) ) ) + ( Max( ( Min( Max( ( ( MUC * DS ) * Max( MLU,RCSe ) ),( ( MLU / RCSe ) + ( DS - RRSe ) ) ) ,Max( ( Min( CS ,MUR ) - ( DS + MUC ) ),( ( CS * MLU ) / ( MUC - DS ) ) ) ) + ( ( ( ( CS * RRSe ) - ( MLU / RRSe ) ) - Max( ( RMSe * MUC ),( RCSe - RCSe ) ) ) + ( Min( ( MUC - CS ) ,( MUC / MLU ) ) - ( ( CS + MUR ) - Min( MUC ,MUR ) ) ) ) ),Min( Min( ( ( ( MUC + RMSe ) - ( MUM * RMSe ) ) * ( ( MLU - MUM ) / ( MUC + MUM ) ) ) ,( ( Min( MUM ,RRSe ) - Min( RRSe ,DS ) ) * ( ( MUC * MUM ) / ( RRSe + MLU ) ) ) ) ,( ( ( Min( MUR ,MLU ) - Min( RCSe ,RMSe ) ) / ( Min( RMSe ,DS ) * ( MLU - MUR ) ) ) + ( Min( ( RCSe - MUM ) ,( CS + RCSe ) ) - ( ( MUM / DS ) / ( RCSe * RMSe ) ) ) ) ) ) - ( ( ( ( Min( ( RRSe + MLU ) ,( MUR / CS ) ) + Min( ( CS - CS ) ,( MLU / CS ) ) ) * ( ( ( RRSe - MUC ) + ( CS * CS ) ) / Min( Max( RRSe,MUC ) ,( RMSe - MUM ) ) ) ) - ( Min( ( ( MUR + MUM ) + Max( MLU,MUM ) ) ,( ( MUC / RMSe ) - Min( DS ,MLU ) ) ) / ( ( Max( MUR,MUM ) * ( MLU + CS ) ) / Min( Max( RMSe,RCSe ) ,( RMSe / MUM ) ) ) ) ) + Max( ( ( Min( Min( RMSe ,DS ) ,Min( DS ,DS ) ) - ( Max( RCSe,DS ) / ( MUC + MLU ) ) ) - ( ( ( MUC + MUM ) - ( RCSe / RCSe ) ) / ( Max( DS,CS ) / ( DS + MUM ) ) ) ),Max( Max( Min( ( RMSe + MLU ) ,( RMSe + RMSe ) ),Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) ),Max( ( ( RMSe + MUM ) * Max( RCSe,CS ) ),Max( ( CS + MUC ),Max( MUC,RMSe ) ) ) ) ) ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6571240746294039}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( ( ACS - ( ( ACS - RRS ) - ACS ) ) - ACS )", "choosing": "( ( Max( MUC,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7758527575850774}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( ( DDR / PN ) - ( BR * ACS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( Max( CS,MLU ) / RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7560408027796683}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( MUR * RRSe ) ) ) + MUC )", "obj1": 0.16535433070866143, "obj2": 0.7079734707239848}], "14": [{"determining": "( ( DDR * AMS ) - ( BR + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RMSe + RRSe ),( MLU - MUR ) ) + ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR * AMS ) - ( BR + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RMSe + RRSe ),( MLU - MUR ) ) + ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.7283464566929134, "obj2": 0.17132755079431722}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),( AMS * Const ) ) - MRS ) )", "choosing": "( ( RRSe * ( CS + DS ) ) + MUM )", "obj1": 0.952755905511811, "obj2": 0.02065773240208684}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( ( CRS - CRS ) - ( DDR + ( DDR - ( FirstVNF_CPU_Server + RRS ) ) ) )", "choosing": "( ( MUM + ( ( MUM / MLU ) + RCSe ) ) + MUM )", "obj1": 0.4507874015748031, "obj2": 0.46022186098916673}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( Const ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) / ( MUM + MUM ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6295352456639699}, {"determining": "( ( ACS + RRS ) - ( ACS + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49964159650399637}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * CRS ) ),DDR )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MLU ) ),( Max( MUM,RMSe ) - ( MUC / CS ) ) )", "obj1": 0.20866141732283464, "obj2": 0.668293632026559}, {"determining": "( Max( ( ARS - FirstVNF_CPU_Server ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( MLU - CS ),( RMSe - RRSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6026226862317217}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( ( ( ACS / FirstVNF_Mem_Server ) - ( DDR + Const ) ) - ( Max( MRS,CRS ) - MRS ) )", "choosing": "( Min( ( ( Max( CS,DS ) + MUC ) / RMSe ) ,MLU ) + DS )", "obj1": 0.3425196850393701, "obj2": 0.5492487655349152}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( MUR * RRSe ) ) ) + MUC )", "obj1": 0.20275590551181102, "obj2": 0.6838325262678153}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ARS / FirstVNF_RAM ) ) - Min( Max( MRS,FirstVNF_CPU ) ,( Const + Const ) ) )", "choosing": "( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR / RMSe ) ) - ( Min( MLU ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6496748622876096}, {"determining": "( ( ACS + RRS ) - ( ( ACS + RRS ) - ACS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5389211849907691}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( ( ( ACS + AMS ) - ( DDR * MRS ) ) - ACS )", "choosing": "( Max( MUC,MLU ) - ( DS / RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.788798519649872}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( ( ACS + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.3346456692913386, "obj2": 0.5655837690465504}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "Min( ( Max( ( Min( ( ( ( MDR - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( ( AMS - FirstVNF_RAM ) / Min( Const ,ACS ) ) ) ,Min( ( Max( ARS,ARS ) + ( RRS - BR ) ) ,( Max( FirstVNF_Mem,MDR ) + ( Const / ACS ) ) ) ) + ( Max( ( ( CRS / FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,CRS ) ),Min( ( FirstVNF_RAM - BR ) ,( Const * FirstVNF_Mem_Server ) ) ) - ( ( ( RRS + FirstVNF_RAM ) - ( ACS / ARS ) ) + Min( ( FirstVNF_RAM_Server * ACS ) ,Max( FirstVNF_RAM_Server,DDR ) ) ) ) ),Max( ( Max( Min( ( RRS + FirstVNF_Mem_Server ) ,( AMS - FirstVNF_Mem_Server ) ),Max( Max( CRS,PN ),( RRS + FirstVNF_Mem_Server ) ) ) * ( Min( ( RRS / FirstVNF_Mem_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( ARS ,RRS ) ) ) ),( ( ( ( ARS * FirstVNF_RAM_Server ) + ( AMS + PN ) ) * ( ( ACS - AMS ) - ( AMS - PN ) ) ) / ( Max( ( MDR - FirstVNF_CPU ),( FirstVNF_CPU_Server + MRS ) ) / ( Min( FirstVNF_Mem ,RRS ) - ( FirstVNF_Mem * AMS ) ) ) ) ) ) * Max( Min( Max( ( Min( Min( MRS ,ARS ) ,( PN + FirstVNF_Mem ) ) / ( ( FirstVNF_Mem / AMS ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ),Max( ( ( MDR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / RRS ) ),Max( ( ACS * FirstVNF_CPU_Server ),Max( Const,PN ) ) ) ) ,Min( ( ( Min( CRS ,Const ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU ) - ( MDR + RRS ) ) ) ,( ( ( MRS + RRS ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + Min( ( DDR * FirstVNF_Mem ) ,( RRS + MRS ) ) ) ) ),( Max( Min( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ,Max( RRS,BR ) ) ,( ( BR - MDR ) - ( PN * Const ) ) ),Min( ( Min( PN ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - PN ) ) ,( Min( FirstVNF_Mem ,MDR ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( PN * BR ) / Min( AMS ,FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),Max( CRS,MDR ) ) ) - ( ( ( FirstVNF_CPU_Server - AMS ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( ARS + ACS ) ) ) ) ) ) ) ,Min( Min( ( Max( ( Min( ( DDR - FirstVNF_RAM ) ,Max( ACS,FirstVNF_CPU ) ) / Min( ( ACS + CRS ) ,( ARS + RRS ) ) ),( Max( ( ACS * ARS ),Max( AMS,MRS ) ) * Max( Max( FirstVNF_Mem,MDR ),( ARS * Const ) ) ) ) - ( ( Min( ( ACS - FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,AMS ) ) - ( ( FirstVNF_Mem_Server + MDR ) / Max( Const,FirstVNF_Mem ) ) ) - Min( ( ( ACS / FirstVNF_CPU ) / Min( RRS ,FirstVNF_CPU ) ) ,( ( ARS / DDR ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( MDR + FirstVNF_CPU ) ) + ( ( DDR / BR ) - ( FirstVNF_Mem * CRS ) ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + CRS ) ) + ( Min( FirstVNF_Mem_Server ,PN ) + ( CRS + FirstVNF_Mem ) ) ) ) - ( ( Max( ( ARS / ACS ),Min( RRS ,MDR ) ) / ( ( ACS + ACS ) / ( FirstVNF_Mem * PN ) ) ) / Min( Min( ( BR + ACS ) ,( PN - MRS ) ) ,( ( FirstVNF_RAM + RRS ) + ( PN - AMS ) ) ) ) ) ) ,Max( ( ( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,Min( BR ,RRS ) ) + ( ( CRS - CRS ) * Min( AMS ,MRS ) ) ) + ( ( ( MDR - FirstVNF_CPU ) * ( CRS - ARS ) ) / ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - DDR ) ) ) ) + ( Min( Max( ( Const / RRS ),( FirstVNF_RAM_Server - CRS ) ) ,Min( Min( BR ,PN ) ,( Const * MRS ) ) ) - Max( Min( Max( AMS,AMS ) ,Max( ARS,MDR ) ),( Min( FirstVNF_RAM ,Const ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) ),( ( ( ( ( ACS / ARS ) * ( MDR / MRS ) ) - ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( Max( BR,Const ) + Max( FirstVNF_RAM,MRS ) ) / Min( ( MDR + CRS ) ,( MDR / FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * ( DDR + Const ) ) / ( ( DDR + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ),( ( Max( BR,ARS ) * Min( MRS ,FirstVNF_Mem_Server ) ) / ( ( ACS - FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( Max( ( RMSe / RMSe ),Max( DS,MLU ) ) / Min( ( MUR * RRSe ) ,( RCSe * DS ) ) ) / Min( ( Max( MUM,MUM ) + ( MUC - MUC ) ) ,Min( Min( MUM ,RCSe ) ,Min( MUC ,MUR ) ) ) ) / ( ( ( ( MLU + RMSe ) - ( MLU / MUC ) ) - ( ( MLU + MLU ) - ( MLU * MUR ) ) ) + ( ( ( MUC / RCSe ) / Min( RRSe ,MUR ) ) * ( ( MUR - RMSe ) - ( MLU - RRSe ) ) ) ) ) ,( ( ( ( Min( MUC ,CS ) + Max( MLU,MUC ) ) * Min( Min( RRSe ,RMSe ) ,( DS * RRSe ) ) ) - ( ( ( MUM / MLU ) / ( MUR - MUM ) ) * Min( ( RCSe / MLU ) ,( RCSe + RCSe ) ) ) ) * Max( Min( ( ( MLU - MLU ) * ( RCSe * MUM ) ) ,Max( Min( RCSe ,MLU ),Max( RRSe,RCSe ) ) ),( Min( ( CS / MUC ) ,( MUR - MUC ) ) / Min( ( MLU * RMSe ) ,( MUR - MUC ) ) ) ) ) ) * ( ( Max( ( ( ( RMSe - MUR ) + ( MUC + MUM ) ) - ( ( DS * MUR ) - ( MUR * MUR ) ) ),( ( ( MLU / DS ) + ( CS - MUC ) ) / ( Max( RCSe,MUM ) * Min( MUC ,DS ) ) ) ) + ( Min( ( ( RCSe / CS ) + Max( MUR,MUM ) ) ,( Max( MUC,MUC ) * ( MUC / CS ) ) ) * ( ( Max( CS,DS ) - ( RRSe + RRSe ) ) / ( ( DS * MUC ) + Max( MUR,MUR ) ) ) ) ) + Max( ( ( Min( ( RCSe * CS ) ,( MUM - CS ) ) / ( Min( MUM ,CS ) + ( MUR - MLU ) ) ) + Max( ( Min( MUR ,MUR ) / ( MUC / MLU ) ),( ( DS - RMSe ) / ( CS / MLU ) ) ) ),( ( Max( ( RRSe / MLU ),Min( CS ,RRSe ) ) / ( ( CS * MUR ) / ( RMSe / MUM ) ) ) / ( Min( ( DS - RMSe ) ,Max( RRSe,DS ) ) - ( ( MUM - DS ) * ( CS - MUM ) ) ) ) ) ) ) + ( Max( ( Min( Max( ( ( MUC * DS ) * Max( MLU,RCSe ) ),( ( MLU / RCSe ) + ( DS - RRSe ) ) ) ,Max( ( Min( CS ,MUR ) - ( DS + MUC ) ),( ( CS * MLU ) / ( MUC - DS ) ) ) ) + ( ( ( ( CS * RRSe ) - ( MLU / RRSe ) ) - Max( ( RMSe * MUC ),( RCSe - RCSe ) ) ) + ( Min( ( MUC - CS ) ,( MUC / MLU ) ) - ( ( CS + MUR ) - Min( MUC ,MUR ) ) ) ) ),Min( Min( ( ( ( MUC + RMSe ) - ( MUM * RMSe ) ) * ( ( MLU - MUM ) / ( MUC + MUM ) ) ) ,( ( Min( MUM ,RRSe ) - Min( RRSe ,DS ) ) * ( ( MUC * MUM ) / ( RRSe + MLU ) ) ) ) ,( ( ( Min( MUR ,MLU ) - Min( RCSe ,RMSe ) ) / ( Min( RMSe ,DS ) * ( MLU - MUR ) ) ) + ( Min( ( RCSe - MUM ) ,( CS + RCSe ) ) - ( ( MUM / DS ) / ( RCSe * RMSe ) ) ) ) ) ) - ( ( ( ( Min( ( RRSe + MLU ) ,( MUR / CS ) ) + Min( ( CS - CS ) ,( MLU / CS ) ) ) * ( ( ( RRSe - MUC ) + ( CS * CS ) ) / Min( Max( RRSe,MUC ) ,( RMSe - MUM ) ) ) ) - ( Min( ( ( MUR + MUM ) + Max( MLU,MUM ) ) ,( ( MUC / RMSe ) - Min( DS ,MLU ) ) ) / ( ( Max( MUR,MUM ) * ( MLU + CS ) ) / Min( Max( RMSe,RCSe ) ,( RMSe / MUM ) ) ) ) ) + Max( ( ( Min( Min( RMSe ,DS ) ,Min( DS ,DS ) ) - ( Max( RCSe,DS ) / ( MUC + MLU ) ) ) - ( ( ( MUC + MUM ) - ( RCSe / RCSe ) ) / ( Max( DS,CS ) / ( DS + MUM ) ) ) ),Max( Max( Min( ( RMSe + MLU ) ,( RMSe + RMSe ) ),Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) ),Max( ( ( RMSe + MUM ) * Max( RCSe,CS ) ),Max( ( CS + MUC ),Max( MUC,RMSe ) ) ) ) ) ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6571240746294039}, {"determining": "( ( DDR / PN ) - ( BR * ACS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( Max( CS,MLU ) / RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7560408027796683}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( ( ACS - ( ( ACS - RRS ) - ACS ) ) - ACS )", "choosing": "( ( Max( MUC,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7758527575850774}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( MUR * RRSe ) ) ) + MUC )", "obj1": 0.16535433070866143, "obj2": 0.7079734707239848}], "15": [{"determining": "( ( DDR * AMS ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( MLU - MUR ) ) + ( MLU / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR * AMS ) - ( BR + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RMSe + RRSe ),( MLU - MUR ) ) + ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.7283464566929134, "obj2": 0.17132755079431722}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.19881889763779528, "obj2": 0.6461604016758193}, {"determining": "( ( CRS - CRS ) - ( DDR + ( DDR - ( FirstVNF_CPU_Server + RRS ) ) ) )", "choosing": "( ( MUM + ( ( MUM / MLU ) + RCSe ) ) + MUM )", "obj1": 0.4507874015748031, "obj2": 0.46022186098916673}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( Const ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) / ( MUM + MUM ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6295352456639699}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( ACS + RRS ) - ( ACS + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49964159650399637}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( Max( Max( ( ( ( ( Min( DDR ,FirstVNF_CPU ) - Max( RRS,CRS ) ) * ( ( MDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( RRS + AMS ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) / ( Const / RRS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),Min( ( MDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,AMS ) ) ) - Max( Max( ( CRS + ARS ),Max( FirstVNF_Mem,PN ) ),Max( ( MRS * FirstVNF_CPU ),Max( RRS,PN ) ) ) ) ),( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,RRS ) ) ,Min( Min( MRS ,CRS ) ,( BR - FirstVNF_RAM ) ) ) + ( Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( ( ACS / FirstVNF_CPU_Server ) - ( DDR + ARS ) ) ) ) + ( ( ( ( RRS + ARS ) * Min( MRS ,MRS ) ) - ( ( MDR + AMS ) + ( Const + PN ) ) ) - ( Min( ( MDR * AMS ) ,( FirstVNF_RAM_Server + BR ) ) / ( ( DDR / FirstVNF_RAM ) * Min( Const ,BR ) ) ) ) ) ),Max( ( Min( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( DDR ,FirstVNF_Mem_Server ) ) ,( Min( ARS ,MDR ) + Max( DDR,CRS ) ) ) ,( ( ( ARS + ACS ) * ( PN - ACS ) ) + Max( ( DDR + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) ) ) + Min( Max( ( ( MDR * RRS ) * ( AMS / FirstVNF_Mem_Server ) ),Min( ( RRS - PN ) ,( ACS + MDR ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ),( ( PN * Const ) / Max( FirstVNF_Mem_Server,CRS ) ) ) ) ),( ( ( ( ( DDR - ARS ) / Min( FirstVNF_Mem ,Const ) ) + ( ( PN - Const ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) / Max( ( Min( FirstVNF_CPU_Server ,MDR ) / Min( MRS ,CRS ) ),( ( RRS - PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( ( Max( Min( MDR ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) + Min( ( ( RRS - MRS ) + Min( FirstVNF_RAM_Server ,ACS ) ) ,( ( RRS / AMS ) + Max( RRS,MDR ) ) ) ) ) ) ) * Max( ( ( Min( ( ( ( RRS / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( MDR + DDR ) + ( FirstVNF_Mem + ARS ) ) ) ,( Max( Max( PN,DDR ),( PN * RRS ) ) + Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_CPU_Server / MDR ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * ARS ) + Max( RRS,RRS ) ) + Min( Min( PN ,ACS ) ,Min( ARS ,ARS ) ) ) / ( Min( ( RRS / CRS ) ,Max( CRS,BR ) ) - ( Max( MRS,FirstVNF_RAM ) / ( FirstVNF_CPU_Server * Const ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + ( ARS + BR ) ) * Min( Max( PN,PN ) ,Min( BR ,DDR ) ) ) - Max( ( ( ARS / DDR ) * Min( BR ,AMS ) ),Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + Max( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM_Server ) ),Min( ( ACS - RRS ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU / ARS ) ),Max( ( AMS - RRS ),( DDR * MDR ) ) ) ) ) ),( ( Min( ( ( ( FirstVNF_RAM_Server * Const ) - ( Const / PN ) ) / ( Min( PN ,AMS ) / ( FirstVNF_Mem - Const ) ) ) ,( ( ( ACS * MDR ) + ( FirstVNF_CPU_Server * ARS ) ) + Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ( FirstVNF_CPU / PN ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Max( ( AMS + DDR ),( FirstVNF_Mem - MRS ) ) ) * ( Min( ( MDR / DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ( Max( ( PN / ARS ),( DDR - MRS ) ) - ( ( FirstVNF_CPU_Server * RRS ) + ( BR / MDR ) ) ),( Min( ( AMS - MRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,RRS ) ) ) ) / ( Max( ( Max( FirstVNF_Mem,MDR ) + ( ARS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_RAM - AMS ) ) ) - ( ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) + ( ( Const / ACS ) / ( FirstVNF_RAM * PN ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( ( Min( ( ( Max( RMSe,CS ) / ( RRSe * MUC ) ) - ( ( MUR * RCSe ) / Min( CS ,RRSe ) ) ) ,Min( ( ( MUM / MUR ) - ( MUC * MLU ) ) ,Max( ( DS * MLU ),Min( RRSe ,RMSe ) ) ) ) + ( ( ( ( MUR - MUM ) + ( MLU + MUC ) ) / Min( Min( MUM ,RMSe ) ,Max( RMSe,MUC ) ) ) + ( ( ( MUM / RCSe ) * ( MUR * MUC ) ) * ( ( RRSe - MUM ) * Max( MUC,RRSe ) ) ) ) ) ,( ( Max( ( ( CS * CS ) + ( MUM * CS ) ),Min( ( CS - CS ) ,Max( CS,MLU ) ) ) + Max( ( ( CS - DS ) + ( RCSe * MUM ) ),( Min( RCSe ,RMSe ) + ( RMSe + MUR ) ) ) ) / Max( ( ( ( RMSe - CS ) * ( RCSe / RRSe ) ) * ( Max( MUM,RRSe ) + ( RCSe / MUR ) ) ),( ( Max( RMSe,RRSe ) + ( DS * MUR ) ) * ( ( MUC / MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( ( ( ( Max( ( MUM - CS ),Max( MUM,MUC ) ) / ( Min( MUM ,RRSe ) / ( MLU / RRSe ) ) ) / ( ( Max( MUR,DS ) * ( DS * CS ) ) / ( Max( MUR,RCSe ) + ( CS - CS ) ) ) ) * ( ( Min( Max( MLU,MLU ) ,( RMSe - RMSe ) ) / ( ( MUC + MLU ) + ( RCSe - MLU ) ) ) / Min( ( ( MLU + RCSe ) * ( MUC + MUR ) ) ,Max( ( RMSe * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( ( Min( DS ,RMSe ) * ( DS * RMSe ) ) + Max( Min( DS ,MUM ),( RCSe / CS ) ) ) / ( ( ( RMSe + MUC ) * Max( RMSe,RRSe ) ) * ( Max( MUC,RRSe ) / ( MUC + RMSe ) ) ) ) / ( Min( ( ( RMSe * RCSe ) / ( MUM - RRSe ) ) ,Min( ( RCSe + MUC ) ,Min( RRSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),( CS * RMSe ) ) - ( ( RRSe / RRSe ) - ( MUC + MUM ) ) ) ) ) ) ),( Max( Max( Max( Max( ( Max( MLU,MUC ) / ( MUR / MUR ) ),( Max( MUM,MUR ) - ( MLU / RMSe ) ) ),( Max( ( DS - RRSe ),Min( DS ,RCSe ) ) * ( Min( RCSe ,DS ) + Min( RRSe ,MUR ) ) ) ),( ( Min( ( MLU + CS ) ,Min( RRSe ,MUC ) ) * ( Min( DS ,MUC ) / ( MUC * DS ) ) ) + Max( Min( Max( RRSe,RCSe ) ,( MUM - RRSe ) ),( ( MUR * MUM ) - Max( RMSe,MUC ) ) ) ) ),( ( Max( ( Min( DS ,MLU ) * ( MUR * DS ) ),Max( ( MLU * RCSe ),( RCSe + MUC ) ) ) * ( ( ( RRSe + MUM ) / ( RMSe / RCSe ) ) + ( ( CS / MLU ) - ( MUC - RMSe ) ) ) ) * ( ( ( Max( MUM,MUR ) * ( MUR + MUR ) ) - ( ( DS + DS ) / ( MUR / RMSe ) ) ) * ( ( Max( MUC,RCSe ) + Min( MUC ,DS ) ) - Min( ( CS / CS ) ,( CS * MUM ) ) ) ) ) ) * ( ( ( ( ( ( MUC * MUM ) - ( MUC * RCSe ) ) - ( ( RCSe * MUR ) - Max( RMSe,MUR ) ) ) / Min( ( ( MLU * MLU ) / ( DS * MUR ) ) ,Max( ( DS / CS ),( RRSe / DS ) ) ) ) + Max( ( ( ( CS + CS ) + Min( CS ,RCSe ) ) - ( ( RRSe / RCSe ) - ( RCSe + MUC ) ) ),Min( Min( ( RCSe + DS ) ,( RMSe / DS ) ) ,Min( ( RMSe / RMSe ) ,( DS - RRSe ) ) ) ) ) - ( ( Min( Min( ( MUC / MUC ) ,Max( MUM,MUC ) ) ,( Min( RMSe ,RMSe ) + ( RRSe - MUC ) ) ) * ( Min( ( RCSe / MLU ) ,( MUR / MUC ) ) / ( ( MUC / RMSe ) * ( DS / RRSe ) ) ) ) + ( ( Max( ( MUC * CS ),Max( MUM,RMSe ) ) - ( ( RMSe * MLU ) + ( RMSe - MUM ) ) ) - ( ( ( RCSe - RMSe ) - ( CS * MUC ) ) - ( ( MUR * RRSe ) / ( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.6018692689399062}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( ( ( ACS / FirstVNF_Mem_Server ) - ( DDR + Const ) ) - ( Max( MRS,CRS ) - MRS ) )", "choosing": "( Min( ( ( Max( CS,DS ) + MUC ) / RMSe ) ,MLU ) + DS )", "obj1": 0.3425196850393701, "obj2": 0.5492487655349152}, {"determining": "( ( ACS + RRS ) - ( ( ACS + RRS ) - ACS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5389211849907691}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( ( ACS - ( ( ACS - RRS ) - ACS ) ) - ACS )", "choosing": "( ( Max( MUC,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7758527575850774}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ( ( ACS + AMS ) - ( DDR * MRS ) ) - ACS )", "choosing": "( Max( MUC,MLU ) - ( DS / RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.788798519649872}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( ( DDR + RRS ) - ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.018046885184779277}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),( AMS * Const ) ) - MRS ) )", "choosing": "( ( RRSe * ( CS + DS ) ) + MUM )", "obj1": 0.952755905511811, "obj2": 0.02065773240208684}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( ACS + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.3346456692913386, "obj2": 0.5655837690465504}, {"determining": "Max( ( DDR + RRS ),( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS - RRSe ) ) ) + MUC )", "obj1": 0.19881889763779528, "obj2": 0.6461604016758193}, {"determining": "( Const * ( FirstVNF_Mem_Server - ( FirstVNF_CPU + Const ) ) )", "choosing": "Max( ( MUM - ( ( MUC + ( RMSe - RCSe ) ) * ( RMSe / DS ) ) ),( DS - RRSe ) )", "obj1": 0.3543307086614173, "obj2": 0.542918399836111}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( ( DDR + RRS ) - ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Min( RRSe ,RRSe ) ) + RCSe )", "obj1": 0.952755905511811, "obj2": 0.02065773240208684}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( MUR * RRSe ) ) ) + MUC )", "obj1": 0.16535433070866143, "obj2": 0.7079734707239848}], "16": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR * AMS ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( MLU - MUR ) ) + ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * AMS ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( MLU - MUR ) ) + ( MLU / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.7283464566929134, "obj2": 0.17132755079431722}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) + ( MLU / RMSe ) )", "obj1": 0.9153543307086615, "obj2": 0.07468418021219564}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / Max( ( MUR - MLU ),( MLU * MLU ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.4315213036601922}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( ACS + RRS ) - ( ACS + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49964159650399637}, {"determining": "( ( DDR + ( DDR + RRS ) ) - ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( ( Max( CS,Min( RRSe ,RRSe ) ) + RCSe ) + RCSe )", "obj1": 0.9448818897637795, "obj2": 0.026933014314900028}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( Max( Max( ( ( ( ( Min( DDR ,FirstVNF_CPU ) - Max( RRS,CRS ) ) * ( ( MDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( RRS + AMS ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) / ( Const / RRS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),Min( ( MDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,AMS ) ) ) - Max( Max( ( CRS + ARS ),Max( FirstVNF_Mem,PN ) ),Max( ( MRS * FirstVNF_CPU ),Max( RRS,PN ) ) ) ) ),( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,RRS ) ) ,Min( Min( MRS ,CRS ) ,( BR - FirstVNF_RAM ) ) ) + ( Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( ( ACS / FirstVNF_CPU_Server ) - ( DDR + ARS ) ) ) ) + ( ( ( ( RRS + ARS ) * Min( MRS ,MRS ) ) - ( ( MDR + AMS ) + ( Const + PN ) ) ) - ( Min( ( MDR * AMS ) ,( FirstVNF_RAM_Server + BR ) ) / ( ( DDR / FirstVNF_RAM ) * Min( Const ,BR ) ) ) ) ) ),Max( ( Min( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( DDR ,FirstVNF_Mem_Server ) ) ,( Min( ARS ,MDR ) + Max( DDR,CRS ) ) ) ,( ( ( ARS + ACS ) * ( PN - ACS ) ) + Max( ( DDR + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) ) ) + Min( Max( ( ( MDR * RRS ) * ( AMS / FirstVNF_Mem_Server ) ),Min( ( RRS - PN ) ,( ACS + MDR ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ),( ( PN * Const ) / Max( FirstVNF_Mem_Server,CRS ) ) ) ) ),( ( ( ( ( DDR - ARS ) / Min( FirstVNF_Mem ,Const ) ) + ( ( PN - Const ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) / Max( ( Min( FirstVNF_CPU_Server ,MDR ) / Min( MRS ,CRS ) ),( ( RRS - PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( ( Max( Min( MDR ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) + Min( ( ( RRS - MRS ) + Min( FirstVNF_RAM_Server ,ACS ) ) ,( ( RRS / AMS ) + Max( RRS,MDR ) ) ) ) ) ) ) * Max( ( ( Min( ( ( ( RRS / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( MDR + DDR ) + ( FirstVNF_Mem + ARS ) ) ) ,( Max( Max( PN,DDR ),( PN * RRS ) ) + Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_CPU_Server / MDR ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * ARS ) + Max( RRS,RRS ) ) + Min( Min( PN ,ACS ) ,Min( ARS ,ARS ) ) ) / ( Min( ( RRS / CRS ) ,Max( CRS,BR ) ) - ( Max( MRS,FirstVNF_RAM ) / ( FirstVNF_CPU_Server * Const ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + ( ARS + BR ) ) * Min( Max( PN,PN ) ,Min( BR ,DDR ) ) ) - Max( ( ( ARS / DDR ) * Min( BR ,AMS ) ),Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + Max( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM_Server ) ),Min( ( ACS - RRS ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU / ARS ) ),Max( ( AMS - RRS ),( DDR * MDR ) ) ) ) ) ),( ( Min( ( ( ( FirstVNF_RAM_Server * Const ) - ( Const / PN ) ) / ( Min( PN ,AMS ) / ( FirstVNF_Mem - Const ) ) ) ,( ( ( ACS * MDR ) + ( FirstVNF_CPU_Server * ARS ) ) + Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ( FirstVNF_CPU / PN ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Max( ( AMS + DDR ),( FirstVNF_Mem - MRS ) ) ) * ( Min( ( MDR / DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ( Max( ( PN / ARS ),( DDR - MRS ) ) - ( ( FirstVNF_CPU_Server * RRS ) + ( BR / MDR ) ) ),( Min( ( AMS - MRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,RRS ) ) ) ) / ( Max( ( Max( FirstVNF_Mem,MDR ) + ( ARS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_RAM - AMS ) ) ) - ( ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) + ( ( Const / ACS ) / ( FirstVNF_RAM * PN ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( ( Min( ( ( Max( RMSe,CS ) / ( RRSe * MUC ) ) - ( ( MUR * RCSe ) / Min( CS ,RRSe ) ) ) ,Min( ( ( MUM / MUR ) - ( MUC * MLU ) ) ,Max( ( DS * MLU ),Min( RRSe ,RMSe ) ) ) ) + ( ( ( ( MUR - MUM ) + ( MLU + MUC ) ) / Min( Min( MUM ,RMSe ) ,Max( RMSe,MUC ) ) ) + ( ( ( MUM / RCSe ) * ( MUR * MUC ) ) * ( ( RRSe - MUM ) * Max( MUC,RRSe ) ) ) ) ) ,( ( Max( ( ( CS * CS ) + ( MUM * CS ) ),Min( ( CS - CS ) ,Max( CS,MLU ) ) ) + Max( ( ( CS - DS ) + ( RCSe * MUM ) ),( Min( RCSe ,RMSe ) + ( RMSe + MUR ) ) ) ) / Max( ( ( ( RMSe - CS ) * ( RCSe / RRSe ) ) * ( Max( MUM,RRSe ) + ( RCSe / MUR ) ) ),( ( Max( RMSe,RRSe ) + ( DS * MUR ) ) * ( ( MUC / MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( ( ( ( Max( ( MUM - CS ),Max( MUM,MUC ) ) / ( Min( MUM ,RRSe ) / ( MLU / RRSe ) ) ) / ( ( Max( MUR,DS ) * ( DS * CS ) ) / ( Max( MUR,RCSe ) + ( CS - CS ) ) ) ) * ( ( Min( Max( MLU,MLU ) ,( RMSe - RMSe ) ) / ( ( MUC + MLU ) + ( RCSe - MLU ) ) ) / Min( ( ( MLU + RCSe ) * ( MUC + MUR ) ) ,Max( ( RMSe * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( ( Min( DS ,RMSe ) * ( DS * RMSe ) ) + Max( Min( DS ,MUM ),( RCSe / CS ) ) ) / ( ( ( RMSe + MUC ) * Max( RMSe,RRSe ) ) * ( Max( MUC,RRSe ) / ( MUC + RMSe ) ) ) ) / ( Min( ( ( RMSe * RCSe ) / ( MUM - RRSe ) ) ,Min( ( RCSe + MUC ) ,Min( RRSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),( CS * RMSe ) ) - ( ( RRSe / RRSe ) - ( MUC + MUM ) ) ) ) ) ) ),( Max( Max( Max( Max( ( Max( MLU,MUC ) / ( MUR / MUR ) ),( Max( MUM,MUR ) - ( MLU / RMSe ) ) ),( Max( ( DS - RRSe ),Min( DS ,RCSe ) ) * ( Min( RCSe ,DS ) + Min( RRSe ,MUR ) ) ) ),( ( Min( ( MLU + CS ) ,Min( RRSe ,MUC ) ) * ( Min( DS ,MUC ) / ( MUC * DS ) ) ) + Max( Min( Max( RRSe,RCSe ) ,( MUM - RRSe ) ),( ( MUR * MUM ) - Max( RMSe,MUC ) ) ) ) ),( ( Max( ( Min( DS ,MLU ) * ( MUR * DS ) ),Max( ( MLU * RCSe ),( RCSe + MUC ) ) ) * ( ( ( RRSe + MUM ) / ( RMSe / RCSe ) ) + ( ( CS / MLU ) - ( MUC - RMSe ) ) ) ) * ( ( ( Max( MUM,MUR ) * ( MUR + MUR ) ) - ( ( DS + DS ) / ( MUR / RMSe ) ) ) * ( ( Max( MUC,RCSe ) + Min( MUC ,DS ) ) - Min( ( CS / CS ) ,( CS * MUM ) ) ) ) ) ) * ( ( ( ( ( ( MUC * MUM ) - ( MUC * RCSe ) ) - ( ( RCSe * MUR ) - Max( RMSe,MUR ) ) ) / Min( ( ( MLU * MLU ) / ( DS * MUR ) ) ,Max( ( DS / CS ),( RRSe / DS ) ) ) ) + Max( ( ( ( CS + CS ) + Min( CS ,RCSe ) ) - ( ( RRSe / RCSe ) - ( RCSe + MUC ) ) ),Min( Min( ( RCSe + DS ) ,( RMSe / DS ) ) ,Min( ( RMSe / RMSe ) ,( DS - RRSe ) ) ) ) ) - ( ( Min( Min( ( MUC / MUC ) ,Max( MUM,MUC ) ) ,( Min( RMSe ,RMSe ) + ( RRSe - MUC ) ) ) * ( Min( ( RCSe / MLU ) ,( MUR / MUC ) ) / ( ( MUC / RMSe ) * ( DS / RRSe ) ) ) ) + ( ( Max( ( MUC * CS ),Max( MUM,RMSe ) ) - ( ( RMSe * MLU ) + ( RMSe - MUM ) ) ) - ( ( ( RCSe - RMSe ) - ( CS * MUC ) ) - ( ( MUR * RRSe ) / ( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.6018692689399062}, {"determining": "Max( ( DDR + RRS ),( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS - RRSe ) ) ) + MUC )", "obj1": 0.19881889763779528, "obj2": 0.6461604016758193}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( Const ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) / ( MUM + MUM ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6295352456639699}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( MUR * RRSe ) ) ) + MUC )", "obj1": 0.16535433070866143, "obj2": 0.7079734707239848}, {"determining": "( ( DDR + RRS ) - ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.018046885184779277}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ACS )", "choosing": "( Max( MUC,DS ) - ( DS / RMSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7576041348044605}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( MDR / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( RRSe / MLU ) + CS )", "obj1": 0.9960629921259843, "obj2": 0.004202512538354713}, {"determining": "( ( ACS - ( ( ACS - RRS ) - ACS ) ) - ACS )", "choosing": "( ( Max( MUC,RMSe ) - ( DS / RMSe ) ) - ( DS / RMSe ) )", "obj1": 0.13582677165354332, "obj2": 0.7758527575850774}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( ( ( ACS + AMS ) - ( DDR * MRS ) ) - ACS )", "choosing": "( Max( MUC,MLU ) - ( DS / RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.788798519649872}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( ( Const + ARS ) * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * MUM ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6142410912441993}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.23818897637795275, "obj2": 0.6219382104681346}], "17": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR * AMS ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * AMS ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( MLU - MUR ) ) + ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS * AMS ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( Min( MUM ,DS ) - MUC )", "obj1": 0.7283464566929134, "obj2": 0.17132755079431722}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / Max( ( MUR - MLU ),( MLU * MLU ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.4315213036601922}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.19881889763779528, "obj2": 0.6461604016758193}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( ACS + RRS ) - ( ACS + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49964159650399637}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.9133858267716536, "obj2": 0.07443234591562381}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( Max( Max( ( ( ( ( Min( DDR ,FirstVNF_CPU ) - Max( RRS,CRS ) ) * ( ( MDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( RRS + AMS ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) / ( Const / RRS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),Min( ( MDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,AMS ) ) ) - Max( Max( ( CRS + ARS ),Max( FirstVNF_Mem,PN ) ),Max( ( MRS * FirstVNF_CPU ),Max( RRS,PN ) ) ) ) ),( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,RRS ) ) ,Min( Min( MRS ,CRS ) ,( BR - FirstVNF_RAM ) ) ) + ( Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( ( ACS / FirstVNF_CPU_Server ) - ( DDR + ARS ) ) ) ) + ( ( ( ( RRS + ARS ) * Min( MRS ,MRS ) ) - ( ( MDR + AMS ) + ( Const + PN ) ) ) - ( Min( ( MDR * AMS ) ,( FirstVNF_RAM_Server + BR ) ) / ( ( DDR / FirstVNF_RAM ) * Min( Const ,BR ) ) ) ) ) ),Max( ( Min( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( DDR ,FirstVNF_Mem_Server ) ) ,( Min( ARS ,MDR ) + Max( DDR,CRS ) ) ) ,( ( ( ARS + ACS ) * ( PN - ACS ) ) + Max( ( DDR + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) ) ) + Min( Max( ( ( MDR * RRS ) * ( AMS / FirstVNF_Mem_Server ) ),Min( ( RRS - PN ) ,( ACS + MDR ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ),( ( PN * Const ) / Max( FirstVNF_Mem_Server,CRS ) ) ) ) ),( ( ( ( ( DDR - ARS ) / Min( FirstVNF_Mem ,Const ) ) + ( ( PN - Const ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) / Max( ( Min( FirstVNF_CPU_Server ,MDR ) / Min( MRS ,CRS ) ),( ( RRS - PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( ( Max( Min( MDR ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) + Min( ( ( RRS - MRS ) + Min( FirstVNF_RAM_Server ,ACS ) ) ,( ( RRS / AMS ) + Max( RRS,MDR ) ) ) ) ) ) ) * Max( ( ( Min( ( ( ( RRS / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( MDR + DDR ) + ( FirstVNF_Mem + ARS ) ) ) ,( Max( Max( PN,DDR ),( PN * RRS ) ) + Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_CPU_Server / MDR ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * ARS ) + Max( RRS,RRS ) ) + Min( Min( PN ,ACS ) ,Min( ARS ,ARS ) ) ) / ( Min( ( RRS / CRS ) ,Max( CRS,BR ) ) - ( Max( MRS,FirstVNF_RAM ) / ( FirstVNF_CPU_Server * Const ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + ( ARS + BR ) ) * Min( Max( PN,PN ) ,Min( BR ,DDR ) ) ) - Max( ( ( ARS / DDR ) * Min( BR ,AMS ) ),Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + Max( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM_Server ) ),Min( ( ACS - RRS ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU / ARS ) ),Max( ( AMS - RRS ),( DDR * MDR ) ) ) ) ) ),( ( Min( ( ( ( FirstVNF_RAM_Server * Const ) - ( Const / PN ) ) / ( Min( PN ,AMS ) / ( FirstVNF_Mem - Const ) ) ) ,( ( ( ACS * MDR ) + ( FirstVNF_CPU_Server * ARS ) ) + Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ( FirstVNF_CPU / PN ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Max( ( AMS + DDR ),( FirstVNF_Mem - MRS ) ) ) * ( Min( ( MDR / DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ( Max( ( PN / ARS ),( DDR - MRS ) ) - ( ( FirstVNF_CPU_Server * RRS ) + ( BR / MDR ) ) ),( Min( ( AMS - MRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,RRS ) ) ) ) / ( Max( ( Max( FirstVNF_Mem,MDR ) + ( ARS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_RAM - AMS ) ) ) - ( ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) + ( ( Const / ACS ) / ( FirstVNF_RAM * PN ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( ( Min( ( ( Max( RMSe,CS ) / ( RRSe * MUC ) ) - ( ( MUR * RCSe ) / Min( CS ,RRSe ) ) ) ,Min( ( ( MUM / MUR ) - ( MUC * MLU ) ) ,Max( ( DS * MLU ),Min( RRSe ,RMSe ) ) ) ) + ( ( ( ( MUR - MUM ) + ( MLU + MUC ) ) / Min( Min( MUM ,RMSe ) ,Max( RMSe,MUC ) ) ) + ( ( ( MUM / RCSe ) * ( MUR * MUC ) ) * ( ( RRSe - MUM ) * Max( MUC,RRSe ) ) ) ) ) ,( ( Max( ( ( CS * CS ) + ( MUM * CS ) ),Min( ( CS - CS ) ,Max( CS,MLU ) ) ) + Max( ( ( CS - DS ) + ( RCSe * MUM ) ),( Min( RCSe ,RMSe ) + ( RMSe + MUR ) ) ) ) / Max( ( ( ( RMSe - CS ) * ( RCSe / RRSe ) ) * ( Max( MUM,RRSe ) + ( RCSe / MUR ) ) ),( ( Max( RMSe,RRSe ) + ( DS * MUR ) ) * ( ( MUC / MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( ( ( ( Max( ( MUM - CS ),Max( MUM,MUC ) ) / ( Min( MUM ,RRSe ) / ( MLU / RRSe ) ) ) / ( ( Max( MUR,DS ) * ( DS * CS ) ) / ( Max( MUR,RCSe ) + ( CS - CS ) ) ) ) * ( ( Min( Max( MLU,MLU ) ,( RMSe - RMSe ) ) / ( ( MUC + MLU ) + ( RCSe - MLU ) ) ) / Min( ( ( MLU + RCSe ) * ( MUC + MUR ) ) ,Max( ( RMSe * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( ( Min( DS ,RMSe ) * ( DS * RMSe ) ) + Max( Min( DS ,MUM ),( RCSe / CS ) ) ) / ( ( ( RMSe + MUC ) * Max( RMSe,RRSe ) ) * ( Max( MUC,RRSe ) / ( MUC + RMSe ) ) ) ) / ( Min( ( ( RMSe * RCSe ) / ( MUM - RRSe ) ) ,Min( ( RCSe + MUC ) ,Min( RRSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),( CS * RMSe ) ) - ( ( RRSe / RRSe ) - ( MUC + MUM ) ) ) ) ) ) ),( Max( Max( Max( Max( ( Max( MLU,MUC ) / ( MUR / MUR ) ),( Max( MUM,MUR ) - ( MLU / RMSe ) ) ),( Max( ( DS - RRSe ),Min( DS ,RCSe ) ) * ( Min( RCSe ,DS ) + Min( RRSe ,MUR ) ) ) ),( ( Min( ( MLU + CS ) ,Min( RRSe ,MUC ) ) * ( Min( DS ,MUC ) / ( MUC * DS ) ) ) + Max( Min( Max( RRSe,RCSe ) ,( MUM - RRSe ) ),( ( MUR * MUM ) - Max( RMSe,MUC ) ) ) ) ),( ( Max( ( Min( DS ,MLU ) * ( MUR * DS ) ),Max( ( MLU * RCSe ),( RCSe + MUC ) ) ) * ( ( ( RRSe + MUM ) / ( RMSe / RCSe ) ) + ( ( CS / MLU ) - ( MUC - RMSe ) ) ) ) * ( ( ( Max( MUM,MUR ) * ( MUR + MUR ) ) - ( ( DS + DS ) / ( MUR / RMSe ) ) ) * ( ( Max( MUC,RCSe ) + Min( MUC ,DS ) ) - Min( ( CS / CS ) ,( CS * MUM ) ) ) ) ) ) * ( ( ( ( ( ( MUC * MUM ) - ( MUC * RCSe ) ) - ( ( RCSe * MUR ) - Max( RMSe,MUR ) ) ) / Min( ( ( MLU * MLU ) / ( DS * MUR ) ) ,Max( ( DS / CS ),( RRSe / DS ) ) ) ) + Max( ( ( ( CS + CS ) + Min( CS ,RCSe ) ) - ( ( RRSe / RCSe ) - ( RCSe + MUC ) ) ),Min( Min( ( RCSe + DS ) ,( RMSe / DS ) ) ,Min( ( RMSe / RMSe ) ,( DS - RRSe ) ) ) ) ) - ( ( Min( Min( ( MUC / MUC ) ,Max( MUM,MUC ) ) ,( Min( RMSe ,RMSe ) + ( RRSe - MUC ) ) ) * ( Min( ( RCSe / MLU ) ,( MUR / MUC ) ) / ( ( MUC / RMSe ) * ( DS / RRSe ) ) ) ) + ( ( Max( ( MUC * CS ),Max( MUM,RMSe ) ) - ( ( RMSe * MLU ) + ( RMSe - MUM ) ) ) - ( ( ( RCSe - RMSe ) - ( CS * MUC ) ) - ( ( MUR * RRSe ) / ( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.6018692689399062}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.9153543307086615, "obj2": 0.07197088249399104}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( MUR * RRSe ) ) ) + MUC )", "obj1": 0.16535433070866143, "obj2": 0.7079734707239848}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - Min( ( ACS + AMS ) ,RRS ) )", "choosing": "( Max( MUC,DS ) - ( DS / Max( MUM,RMSe ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7569401464337162}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - PN ) + MRS ) )", "choosing": "( Max( Max( RRSe,RRSe ),Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}, {"determining": "( ( DDR + RRS ) - ( BR / ( DDR + RRS ) ) )", "choosing": "( ( ( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC ) / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.22440944881889763, "obj2": 0.6356924196792304}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,( Const + MDR ) )", "choosing": "( ( MUC + RMSe ) * ( RMSe / DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7875884710827613}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( ( ( BR + BR ) / MDR ) + ( BR + Max( MDR,AMS ) ) )", "choosing": "( ( MUM / CS ) - ( RCSe + MLU ) )", "obj1": 0.2874015748031496, "obj2": 0.5833677560520576}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( Const ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) / ( MUM + MUM ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6295352456639699}, {"determining": "( ( ( ACS + AMS ) - ( DDR * MRS ) ) - ACS )", "choosing": "( Max( MUC,MLU ) - ( DS / RMSe ) )", "obj1": 0.12007874015748031, "obj2": 0.788798519649872}, {"determining": "( ( DDR + ( DDR + RRS ) ) - ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( ( Max( CS,Min( RRSe ,RRSe ) ) + RCSe ) + RCSe )", "obj1": 0.9448818897637795, "obj2": 0.026933014314900028}], "18": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR * AMS ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS - RRSe ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * AMS ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.19881889763779528, "obj2": 0.6461604016758193}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / Max( ( MUR - MLU ),( MLU * MLU ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.4315213036601922}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ),( Const + ( FirstVNF_CPU_Server * BR ) ) ) * Max( Max( ACS,Max( DDR,CRS ) ),CRS ) )", "choosing": "( ( Min( ( MUM + RCSe ) ,( DS * MUM ) ) - Max( ( DS - DS ),Min( MLU ,MUC ) ) ) / ( ( Min( RMSe ,DS ) * Max( MUR,RCSe ) ) + Max( ( Max( ( MUR / MUC ),( RMSe + MUM ) ) + Min( ( MUM / MUR ) ,( DS / CS ) ) ),Min( Min( Max( MLU,RRSe ) ,( MUC - RCSe ) ) ,Max( ( RCSe - MLU ),( RMSe * RMSe ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5711875704805935}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( DDR + ( DDR + RRS ) ) - ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( ( Max( CS,Min( RRSe ,RRSe ) ) + RCSe ) + RCSe )", "obj1": 0.9448818897637795, "obj2": 0.026933014314900028}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( ACS + RRS ) - ( ACS + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( Max( MUM,RMSe ) - ( DS / RMSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.49964159650399637}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( Max( Max( ( ( ( ( Min( DDR ,FirstVNF_CPU ) - Max( RRS,CRS ) ) * ( ( MDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( RRS + AMS ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) / ( Const / RRS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),Min( ( MDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,AMS ) ) ) - Max( Max( ( CRS + ARS ),Max( FirstVNF_Mem,PN ) ),Max( ( MRS * FirstVNF_CPU ),Max( RRS,PN ) ) ) ) ),( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,RRS ) ) ,Min( Min( MRS ,CRS ) ,( BR - FirstVNF_RAM ) ) ) + ( Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( ( ACS / FirstVNF_CPU_Server ) - ( DDR + ARS ) ) ) ) + ( ( ( ( RRS + ARS ) * Min( MRS ,MRS ) ) - ( ( MDR + AMS ) + ( Const + PN ) ) ) - ( Min( ( MDR * AMS ) ,( FirstVNF_RAM_Server + BR ) ) / ( ( DDR / FirstVNF_RAM ) * Min( Const ,BR ) ) ) ) ) ),Max( ( Min( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( DDR ,FirstVNF_Mem_Server ) ) ,( Min( ARS ,MDR ) + Max( DDR,CRS ) ) ) ,( ( ( ARS + ACS ) * ( PN - ACS ) ) + Max( ( DDR + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) ) ) + Min( Max( ( ( MDR * RRS ) * ( AMS / FirstVNF_Mem_Server ) ),Min( ( RRS - PN ) ,( ACS + MDR ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ),( ( PN * Const ) / Max( FirstVNF_Mem_Server,CRS ) ) ) ) ),( ( ( ( ( DDR - ARS ) / Min( FirstVNF_Mem ,Const ) ) + ( ( PN - Const ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) / Max( ( Min( FirstVNF_CPU_Server ,MDR ) / Min( MRS ,CRS ) ),( ( RRS - PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( ( Max( Min( MDR ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) + Min( ( ( RRS - MRS ) + Min( FirstVNF_RAM_Server ,ACS ) ) ,( ( RRS / AMS ) + Max( RRS,MDR ) ) ) ) ) ) ) * Max( ( ( Min( ( ( ( RRS / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( MDR + DDR ) + ( FirstVNF_Mem + ARS ) ) ) ,( Max( Max( PN,DDR ),( PN * RRS ) ) + Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_CPU_Server / MDR ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * ARS ) + Max( RRS,RRS ) ) + Min( Min( PN ,ACS ) ,Min( ARS ,ARS ) ) ) / ( Min( ( RRS / CRS ) ,Max( CRS,BR ) ) - ( Max( MRS,FirstVNF_RAM ) / ( FirstVNF_CPU_Server * Const ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + ( ARS + BR ) ) * Min( Max( PN,PN ) ,Min( BR ,DDR ) ) ) - Max( ( ( ARS / DDR ) * Min( BR ,AMS ) ),Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + Max( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM_Server ) ),Min( ( ACS - RRS ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU / ARS ) ),Max( ( AMS - RRS ),( DDR * MDR ) ) ) ) ) ),( ( Min( ( ( ( FirstVNF_RAM_Server * Const ) - ( Const / PN ) ) / ( Min( PN ,AMS ) / ( FirstVNF_Mem - Const ) ) ) ,( ( ( ACS * MDR ) + ( FirstVNF_CPU_Server * ARS ) ) + Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ( FirstVNF_CPU / PN ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Max( ( AMS + DDR ),( FirstVNF_Mem - MRS ) ) ) * ( Min( ( MDR / DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ( Max( ( PN / ARS ),( DDR - MRS ) ) - ( ( FirstVNF_CPU_Server * RRS ) + ( BR / MDR ) ) ),( Min( ( AMS - MRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,RRS ) ) ) ) / ( Max( ( Max( FirstVNF_Mem,MDR ) + ( ARS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_RAM - AMS ) ) ) - ( ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) + ( ( Const / ACS ) / ( FirstVNF_RAM * PN ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( ( Min( ( ( Max( RMSe,CS ) / ( RRSe * MUC ) ) - ( ( MUR * RCSe ) / Min( CS ,RRSe ) ) ) ,Min( ( ( MUM / MUR ) - ( MUC * MLU ) ) ,Max( ( DS * MLU ),Min( RRSe ,RMSe ) ) ) ) + ( ( ( ( MUR - MUM ) + ( MLU + MUC ) ) / Min( Min( MUM ,RMSe ) ,Max( RMSe,MUC ) ) ) + ( ( ( MUM / RCSe ) * ( MUR * MUC ) ) * ( ( RRSe - MUM ) * Max( MUC,RRSe ) ) ) ) ) ,( ( Max( ( ( CS * CS ) + ( MUM * CS ) ),Min( ( CS - CS ) ,Max( CS,MLU ) ) ) + Max( ( ( CS - DS ) + ( RCSe * MUM ) ),( Min( RCSe ,RMSe ) + ( RMSe + MUR ) ) ) ) / Max( ( ( ( RMSe - CS ) * ( RCSe / RRSe ) ) * ( Max( MUM,RRSe ) + ( RCSe / MUR ) ) ),( ( Max( RMSe,RRSe ) + ( DS * MUR ) ) * ( ( MUC / MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( ( ( ( Max( ( MUM - CS ),Max( MUM,MUC ) ) / ( Min( MUM ,RRSe ) / ( MLU / RRSe ) ) ) / ( ( Max( MUR,DS ) * ( DS * CS ) ) / ( Max( MUR,RCSe ) + ( CS - CS ) ) ) ) * ( ( Min( Max( MLU,MLU ) ,( RMSe - RMSe ) ) / ( ( MUC + MLU ) + ( RCSe - MLU ) ) ) / Min( ( ( MLU + RCSe ) * ( MUC + MUR ) ) ,Max( ( RMSe * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( ( Min( DS ,RMSe ) * ( DS * RMSe ) ) + Max( Min( DS ,MUM ),( RCSe / CS ) ) ) / ( ( ( RMSe + MUC ) * Max( RMSe,RRSe ) ) * ( Max( MUC,RRSe ) / ( MUC + RMSe ) ) ) ) / ( Min( ( ( RMSe * RCSe ) / ( MUM - RRSe ) ) ,Min( ( RCSe + MUC ) ,Min( RRSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),( CS * RMSe ) ) - ( ( RRSe / RRSe ) - ( MUC + MUM ) ) ) ) ) ) ),( Max( Max( Max( Max( ( Max( MLU,MUC ) / ( MUR / MUR ) ),( Max( MUM,MUR ) - ( MLU / RMSe ) ) ),( Max( ( DS - RRSe ),Min( DS ,RCSe ) ) * ( Min( RCSe ,DS ) + Min( RRSe ,MUR ) ) ) ),( ( Min( ( MLU + CS ) ,Min( RRSe ,MUC ) ) * ( Min( DS ,MUC ) / ( MUC * DS ) ) ) + Max( Min( Max( RRSe,RCSe ) ,( MUM - RRSe ) ),( ( MUR * MUM ) - Max( RMSe,MUC ) ) ) ) ),( ( Max( ( Min( DS ,MLU ) * ( MUR * DS ) ),Max( ( MLU * RCSe ),( RCSe + MUC ) ) ) * ( ( ( RRSe + MUM ) / ( RMSe / RCSe ) ) + ( ( CS / MLU ) - ( MUC - RMSe ) ) ) ) * ( ( ( Max( MUM,MUR ) * ( MUR + MUR ) ) - ( ( DS + DS ) / ( MUR / RMSe ) ) ) * ( ( Max( MUC,RCSe ) + Min( MUC ,DS ) ) - Min( ( CS / CS ) ,( CS * MUM ) ) ) ) ) ) * ( ( ( ( ( ( MUC * MUM ) - ( MUC * RCSe ) ) - ( ( RCSe * MUR ) - Max( RMSe,MUR ) ) ) / Min( ( ( MLU * MLU ) / ( DS * MUR ) ) ,Max( ( DS / CS ),( RRSe / DS ) ) ) ) + Max( ( ( ( CS + CS ) + Min( CS ,RCSe ) ) - ( ( RRSe / RCSe ) - ( RCSe + MUC ) ) ),Min( Min( ( RCSe + DS ) ,( RMSe / DS ) ) ,Min( ( RMSe / RMSe ) ,( DS - RRSe ) ) ) ) ) - ( ( Min( Min( ( MUC / MUC ) ,Max( MUM,MUC ) ) ,( Min( RMSe ,RMSe ) + ( RRSe - MUC ) ) ) * ( Min( ( RCSe / MLU ) ,( MUR / MUC ) ) / ( ( MUC / RMSe ) * ( DS / RRSe ) ) ) ) + ( ( Max( ( MUC * CS ),Max( MUM,RMSe ) ) - ( ( RMSe * MLU ) + ( RMSe - MUM ) ) ) - ( ( ( RCSe - RMSe ) - ( CS * MUC ) ) - ( ( MUR * RRSe ) / ( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.6018692689399062}, {"determining": "( Max( MRS,FirstVNF_Mem ) - Min( ( FirstVNF_RAM + AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / CS ) - ( RCSe + MLU ) )", "obj1": 0.9133858267716536, "obj2": 0.07350729227443337}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.9153543307086615, "obj2": 0.07197088249399104}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "Max( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ),Max( ( Min( ARS ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( Max( ( CS - MUC ),Min( CS ,DS ) ) * ( ( RCSe - MUR ) / Min( RRSe ,RRSe ) ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( ( CS / DS ) + ( ( RRSe - RMSe ) - RMSe ) ) - ( MUM - MUM ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48148673361068434}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( MUR * RRSe ) ) ) + MUC )", "obj1": 0.16535433070866143, "obj2": 0.7079734707239848}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - Min( ( ACS + AMS ) ,RRS ) )", "choosing": "( Max( MUC,DS ) - ( DS / Max( MUM,RMSe ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7569401464337162}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "Max( ( Min( Max( BR,BR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) - Max( Min( DDR ,RRS ),( FirstVNF_CPU_Server - AMS ) ) ),Max( ( Min( Const ,AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) / ( MUM + MUM ) ) ,( Max( Max( MLU,MUR ),( MLU + MUC ) ) - ( ( RRSe + DS ) - ( MUM - MUM ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6295352456639699}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - PN ) + MRS ) )", "choosing": "( Max( Max( RRSe,RRSe ),Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}, {"determining": "( FirstVNF_CPU_Server - Min( MRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( MUR,MLU ) - ( RMSe + MUC ) ),MLU ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7824154290957033}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}], "19": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( BR / ACS ) - ( ARS + FirstVNF_CPU ) )", "choosing": "( MUM + CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * AMS ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS - RRSe ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.19881889763779528, "obj2": 0.6461604016758193}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / Max( ( MUR - MLU ),( MLU * MLU ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.4315213036601922}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Max( MRS,FirstVNF_Mem ) - Min( ( FirstVNF_RAM + ( Max( MRS,FirstVNF_Mem ) - Min( ( FirstVNF_RAM + AMS ) ,FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUM / CS ) - ( RCSe + MLU ) ) / CS ) - ( RCSe + MLU ) )", "obj1": 0.3090551181102362, "obj2": 0.5673412819783757}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( FirstVNF_CPU_Server - Min( MRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( MUR,MLU ) - ( RMSe + MUC ) ),MLU ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7824154290957033}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( FirstVNF_RAM + AMS ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( MUR - MLU ) - ( ( MUM / CS ) - ( RCSe + MLU ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6270958629581601}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,RRS ),PN ) * ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),MRS ) ) ) + FirstVNF_CPU_Server ) - ACS )", "choosing": "( Max( MUC,DS ) - ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) )", "obj1": 0.3956692913385827, "obj2": 0.48827497928620883}, {"determining": "( Max( MRS,FirstVNF_Mem ) - Min( ( FirstVNF_RAM + Max( MRS,FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM / CS ) - ( RCSe + MLU ) ) - ( RCSe + MLU ) )", "obj1": 0.9133858267716536, "obj2": 0.07307613947108955}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,RRS ),PN ) * ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),MRS ) ) )", "choosing": "( Max( ( RMSe + MUC ),MLU ) - ( RMSe + MUC ) )", "obj1": 0.16535433070866143, "obj2": 0.7052968597875047}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.9153543307086615, "obj2": 0.07197088249399104}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( DDR - ( DDR - Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( RMSe + MUC ) + MUC ) )", "obj1": 0.14763779527559054, "obj2": 0.7796570568606311}, {"determining": "( ( DDR + ( DDR + RRS ) ) - ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( ( Max( CS,Min( RRSe ,RRSe ) ) + RCSe ) + RCSe )", "obj1": 0.9448818897637795, "obj2": 0.026933014314900028}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( Max( Max( ( ( ( ( Min( DDR ,FirstVNF_CPU ) - Max( RRS,CRS ) ) * ( ( MDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( RRS + AMS ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) / ( Const / RRS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),Min( ( MDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,AMS ) ) ) - Max( Max( ( CRS + ARS ),Max( FirstVNF_Mem,PN ) ),Max( ( MRS * FirstVNF_CPU ),Max( RRS,PN ) ) ) ) ),( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,RRS ) ) ,Min( Min( MRS ,CRS ) ,( BR - FirstVNF_RAM ) ) ) + ( Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( ( ACS / FirstVNF_CPU_Server ) - ( DDR + ARS ) ) ) ) + ( ( ( ( RRS + ARS ) * Min( MRS ,MRS ) ) - ( ( MDR + AMS ) + ( Const + PN ) ) ) - ( Min( ( MDR * AMS ) ,( FirstVNF_RAM_Server + BR ) ) / ( ( DDR / FirstVNF_RAM ) * Min( Const ,BR ) ) ) ) ) ),Max( ( Min( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( DDR ,FirstVNF_Mem_Server ) ) ,( Min( ARS ,MDR ) + Max( DDR,CRS ) ) ) ,( ( ( ARS + ACS ) * ( PN - ACS ) ) + Max( ( DDR + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) ) ) + Min( Max( ( ( MDR * RRS ) * ( AMS / FirstVNF_Mem_Server ) ),Min( ( RRS - PN ) ,( ACS + MDR ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ),( ( PN * Const ) / Max( FirstVNF_Mem_Server,CRS ) ) ) ) ),( ( ( ( ( DDR - ARS ) / Min( FirstVNF_Mem ,Const ) ) + ( ( PN - Const ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) / Max( ( Min( FirstVNF_CPU_Server ,MDR ) / Min( MRS ,CRS ) ),( ( RRS - PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( ( Max( Min( MDR ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) + Min( ( ( RRS - MRS ) + Min( FirstVNF_RAM_Server ,ACS ) ) ,( ( RRS / AMS ) + Max( RRS,MDR ) ) ) ) ) ) ) * Max( ( ( Min( ( ( ( RRS / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( MDR + DDR ) + ( FirstVNF_Mem + ARS ) ) ) ,( Max( Max( PN,DDR ),( PN * RRS ) ) + Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_CPU_Server / MDR ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * ARS ) + Max( RRS,RRS ) ) + Min( Min( PN ,ACS ) ,Min( ARS ,ARS ) ) ) / ( Min( ( RRS / CRS ) ,Max( CRS,BR ) ) - ( Max( MRS,FirstVNF_RAM ) / ( FirstVNF_CPU_Server * Const ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + ( ARS + BR ) ) * Min( Max( PN,PN ) ,Min( BR ,DDR ) ) ) - Max( ( ( ARS / DDR ) * Min( BR ,AMS ) ),Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + Max( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM_Server ) ),Min( ( ACS - RRS ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU / ARS ) ),Max( ( AMS - RRS ),( DDR * MDR ) ) ) ) ) ),( ( Min( ( ( ( FirstVNF_RAM_Server * Const ) - ( Const / PN ) ) / ( Min( PN ,AMS ) / ( FirstVNF_Mem - Const ) ) ) ,( ( ( ACS * MDR ) + ( FirstVNF_CPU_Server * ARS ) ) + Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ( FirstVNF_CPU / PN ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Max( ( AMS + DDR ),( FirstVNF_Mem - MRS ) ) ) * ( Min( ( MDR / DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ( Max( ( PN / ARS ),( DDR - MRS ) ) - ( ( FirstVNF_CPU_Server * RRS ) + ( BR / MDR ) ) ),( Min( ( AMS - MRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,RRS ) ) ) ) / ( Max( ( Max( FirstVNF_Mem,MDR ) + ( ARS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_RAM - AMS ) ) ) - ( ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) + ( ( Const / ACS ) / ( FirstVNF_RAM * PN ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( ( Min( ( ( Max( RMSe,CS ) / ( RRSe * MUC ) ) - ( ( MUR * RCSe ) / Min( CS ,RRSe ) ) ) ,Min( ( ( MUM / MUR ) - ( MUC * MLU ) ) ,Max( ( DS * MLU ),Min( RRSe ,RMSe ) ) ) ) + ( ( ( ( MUR - MUM ) + ( MLU + MUC ) ) / Min( Min( MUM ,RMSe ) ,Max( RMSe,MUC ) ) ) + ( ( ( MUM / RCSe ) * ( MUR * MUC ) ) * ( ( RRSe - MUM ) * Max( MUC,RRSe ) ) ) ) ) ,( ( Max( ( ( CS * CS ) + ( MUM * CS ) ),Min( ( CS - CS ) ,Max( CS,MLU ) ) ) + Max( ( ( CS - DS ) + ( RCSe * MUM ) ),( Min( RCSe ,RMSe ) + ( RMSe + MUR ) ) ) ) / Max( ( ( ( RMSe - CS ) * ( RCSe / RRSe ) ) * ( Max( MUM,RRSe ) + ( RCSe / MUR ) ) ),( ( Max( RMSe,RRSe ) + ( DS * MUR ) ) * ( ( MUC / MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( ( ( ( Max( ( MUM - CS ),Max( MUM,MUC ) ) / ( Min( MUM ,RRSe ) / ( MLU / RRSe ) ) ) / ( ( Max( MUR,DS ) * ( DS * CS ) ) / ( Max( MUR,RCSe ) + ( CS - CS ) ) ) ) * ( ( Min( Max( MLU,MLU ) ,( RMSe - RMSe ) ) / ( ( MUC + MLU ) + ( RCSe - MLU ) ) ) / Min( ( ( MLU + RCSe ) * ( MUC + MUR ) ) ,Max( ( RMSe * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( ( Min( DS ,RMSe ) * ( DS * RMSe ) ) + Max( Min( DS ,MUM ),( RCSe / CS ) ) ) / ( ( ( RMSe + MUC ) * Max( RMSe,RRSe ) ) * ( Max( MUC,RRSe ) / ( MUC + RMSe ) ) ) ) / ( Min( ( ( RMSe * RCSe ) / ( MUM - RRSe ) ) ,Min( ( RCSe + MUC ) ,Min( RRSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),( CS * RMSe ) ) - ( ( RRSe / RRSe ) - ( MUC + MUM ) ) ) ) ) ) ),( Max( Max( Max( Max( ( Max( MLU,MUC ) / ( MUR / MUR ) ),( Max( MUM,MUR ) - ( MLU / RMSe ) ) ),( Max( ( DS - RRSe ),Min( DS ,RCSe ) ) * ( Min( RCSe ,DS ) + Min( RRSe ,MUR ) ) ) ),( ( Min( ( MLU + CS ) ,Min( RRSe ,MUC ) ) * ( Min( DS ,MUC ) / ( MUC * DS ) ) ) + Max( Min( Max( RRSe,RCSe ) ,( MUM - RRSe ) ),( ( MUR * MUM ) - Max( RMSe,MUC ) ) ) ) ),( ( Max( ( Min( DS ,MLU ) * ( MUR * DS ) ),Max( ( MLU * RCSe ),( RCSe + MUC ) ) ) * ( ( ( RRSe + MUM ) / ( RMSe / RCSe ) ) + ( ( CS / MLU ) - ( MUC - RMSe ) ) ) ) * ( ( ( Max( MUM,MUR ) * ( MUR + MUR ) ) - ( ( DS + DS ) / ( MUR / RMSe ) ) ) * ( ( Max( MUC,RCSe ) + Min( MUC ,DS ) ) - Min( ( CS / CS ) ,( CS * MUM ) ) ) ) ) ) * ( ( ( ( ( ( MUC * MUM ) - ( MUC * RCSe ) ) - ( ( RCSe * MUR ) - Max( RMSe,MUR ) ) ) / Min( ( ( MLU * MLU ) / ( DS * MUR ) ) ,Max( ( DS / CS ),( RRSe / DS ) ) ) ) + Max( ( ( ( CS + CS ) + Min( CS ,RCSe ) ) - ( ( RRSe / RCSe ) - ( RCSe + MUC ) ) ),Min( Min( ( RCSe + DS ) ,( RMSe / DS ) ) ,Min( ( RMSe / RMSe ) ,( DS - RRSe ) ) ) ) ) - ( ( Min( Min( ( MUC / MUC ) ,Max( MUM,MUC ) ) ,( Min( RMSe ,RMSe ) + ( RRSe - MUC ) ) ) * ( Min( ( RCSe / MLU ) ,( MUR / MUC ) ) / ( ( MUC / RMSe ) * ( DS / RRSe ) ) ) ) + ( ( Max( ( MUC * CS ),Max( MUM,RMSe ) ) - ( ( RMSe * MLU ) + ( RMSe - MUM ) ) ) - ( ( ( RCSe - RMSe ) - ( CS * MUC ) ) - ( ( MUR * RRSe ) / ( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.6018692689399062}], "20": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( DDR - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( Max( ( MUM / MLU ),MLU ) - ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ACS ) - ( ARS + FirstVNF_CPU ) )", "choosing": "( MUM + CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( PN + MRS ) - Min( DDR ,Const ) )", "choosing": "( RCSe + MUC )", "obj1": 0.9094488188976378, "obj2": 0.05955536586688306}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( ( BR / FirstVNF_Mem_Server ) + ( ( DDR + RRS ) - ( DDR + MRS ) ) )", "choosing": "( Max( MUC,DS ) * ( MUR / MLU ) )", "obj1": 0.531496062992126, "obj2": 0.3955106986556198}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.19881889763779528, "obj2": 0.6461604016758193}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / Max( ( MUR - MLU ),( MLU * MLU ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.4315213036601922}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( FirstVNF_CPU_Server - Min( MRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Max( MUR,MLU ) - ( RMSe + MUC ) ),MLU ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7824154290957033}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,RRS ),PN ) * ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),MRS ) ) ) + FirstVNF_CPU_Server ) - ACS )", "choosing": "( Max( MUC,DS ) - ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) )", "obj1": 0.3956692913385827, "obj2": 0.48827497928620883}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( RMSe + RMSe ) - Max( DS,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5154794651155598}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( FirstVNF_RAM + AMS ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( MUR - MLU ) - ( ( MUM / CS ) - ( RCSe + MLU ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6270958629581601}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( Max( Max( ( ( ( ( Min( DDR ,FirstVNF_CPU ) - Max( RRS,CRS ) ) * ( ( MDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( RRS + AMS ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) / ( Const / RRS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),Min( ( MDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,AMS ) ) ) - Max( Max( ( CRS + ARS ),Max( FirstVNF_Mem,PN ) ),Max( ( MRS * FirstVNF_CPU ),Max( RRS,PN ) ) ) ) ),( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,RRS ) ) ,Min( Min( MRS ,CRS ) ,( BR - FirstVNF_RAM ) ) ) + ( Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( ( ACS / FirstVNF_CPU_Server ) - ( DDR + ARS ) ) ) ) + ( ( ( ( RRS + ARS ) * Min( MRS ,MRS ) ) - ( ( MDR + AMS ) + ( Const + PN ) ) ) - ( Min( ( MDR * AMS ) ,( FirstVNF_RAM_Server + BR ) ) / ( ( DDR / FirstVNF_RAM ) * Min( Const ,BR ) ) ) ) ) ),Max( ( Min( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( DDR ,FirstVNF_Mem_Server ) ) ,( Min( ARS ,MDR ) + Max( DDR,CRS ) ) ) ,( ( ( ARS + ACS ) * ( PN - ACS ) ) + Max( ( DDR + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) ) ) + Min( Max( ( ( MDR * RRS ) * ( AMS / FirstVNF_Mem_Server ) ),Min( ( RRS - PN ) ,( ACS + MDR ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ),( ( PN * Const ) / Max( FirstVNF_Mem_Server,CRS ) ) ) ) ),( ( ( ( ( DDR - ARS ) / Min( FirstVNF_Mem ,Const ) ) + ( ( PN - Const ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) / Max( ( Min( FirstVNF_CPU_Server ,MDR ) / Min( MRS ,CRS ) ),( ( RRS - PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( ( Max( Min( MDR ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) + Min( ( ( RRS - MRS ) + Min( FirstVNF_RAM_Server ,ACS ) ) ,( ( RRS / AMS ) + Max( RRS,MDR ) ) ) ) ) ) ) * Max( ( ( Min( ( ( ( RRS / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( MDR + DDR ) + ( FirstVNF_Mem + ARS ) ) ) ,( Max( Max( PN,DDR ),( PN * RRS ) ) + Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_CPU_Server / MDR ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * ARS ) + Max( RRS,RRS ) ) + Min( Min( PN ,ACS ) ,Min( ARS ,ARS ) ) ) / ( Min( ( RRS / CRS ) ,Max( CRS,BR ) ) - ( Max( MRS,FirstVNF_RAM ) / ( FirstVNF_CPU_Server * Const ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + ( ARS + BR ) ) * Min( Max( PN,PN ) ,Min( BR ,DDR ) ) ) - Max( ( ( ARS / DDR ) * Min( BR ,AMS ) ),Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + Max( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM_Server ) ),Min( ( ACS - RRS ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU / ARS ) ),Max( ( AMS - RRS ),( DDR * MDR ) ) ) ) ) ),( ( Min( ( ( ( FirstVNF_RAM_Server * Const ) - ( Const / PN ) ) / ( Min( PN ,AMS ) / ( FirstVNF_Mem - Const ) ) ) ,( ( ( ACS * MDR ) + ( FirstVNF_CPU_Server * ARS ) ) + Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ( FirstVNF_CPU / PN ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Max( ( AMS + DDR ),( FirstVNF_Mem - MRS ) ) ) * ( Min( ( MDR / DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ( Max( ( PN / ARS ),( DDR - MRS ) ) - ( ( FirstVNF_CPU_Server * RRS ) + ( BR / MDR ) ) ),( Min( ( AMS - MRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,RRS ) ) ) ) / ( Max( ( Max( FirstVNF_Mem,MDR ) + ( ARS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_RAM - AMS ) ) ) - ( ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) + ( ( Const / ACS ) / ( FirstVNF_RAM * PN ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( ( Min( ( ( Max( RMSe,CS ) / ( RRSe * MUC ) ) - ( ( MUR * RCSe ) / Min( CS ,RRSe ) ) ) ,Min( ( ( MUM / MUR ) - ( MUC * MLU ) ) ,Max( ( DS * MLU ),Min( RRSe ,RMSe ) ) ) ) + ( ( ( ( MUR - MUM ) + ( MLU + MUC ) ) / Min( Min( MUM ,RMSe ) ,Max( RMSe,MUC ) ) ) + ( ( ( MUM / RCSe ) * ( MUR * MUC ) ) * ( ( RRSe - MUM ) * Max( MUC,RRSe ) ) ) ) ) ,( ( Max( ( ( CS * CS ) + ( MUM * CS ) ),Min( ( CS - CS ) ,Max( CS,MLU ) ) ) + Max( ( ( CS - DS ) + ( RCSe * MUM ) ),( Min( RCSe ,RMSe ) + ( RMSe + MUR ) ) ) ) / Max( ( ( ( RMSe - CS ) * ( RCSe / RRSe ) ) * ( Max( MUM,RRSe ) + ( RCSe / MUR ) ) ),( ( Max( RMSe,RRSe ) + ( DS * MUR ) ) * ( ( MUC / MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( ( ( ( Max( ( MUM - CS ),Max( MUM,MUC ) ) / ( Min( MUM ,RRSe ) / ( MLU / RRSe ) ) ) / ( ( Max( MUR,DS ) * ( DS * CS ) ) / ( Max( MUR,RCSe ) + ( CS - CS ) ) ) ) * ( ( Min( Max( MLU,MLU ) ,( RMSe - RMSe ) ) / ( ( MUC + MLU ) + ( RCSe - MLU ) ) ) / Min( ( ( MLU + RCSe ) * ( MUC + MUR ) ) ,Max( ( RMSe * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( ( Min( DS ,RMSe ) * ( DS * RMSe ) ) + Max( Min( DS ,MUM ),( RCSe / CS ) ) ) / ( ( ( RMSe + MUC ) * Max( RMSe,RRSe ) ) * ( Max( MUC,RRSe ) / ( MUC + RMSe ) ) ) ) / ( Min( ( ( RMSe * RCSe ) / ( MUM - RRSe ) ) ,Min( ( RCSe + MUC ) ,Min( RRSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),( CS * RMSe ) ) - ( ( RRSe / RRSe ) - ( MUC + MUM ) ) ) ) ) ) ),( Max( Max( Max( Max( ( Max( MLU,MUC ) / ( MUR / MUR ) ),( Max( MUM,MUR ) - ( MLU / RMSe ) ) ),( Max( ( DS - RRSe ),Min( DS ,RCSe ) ) * ( Min( RCSe ,DS ) + Min( RRSe ,MUR ) ) ) ),( ( Min( ( MLU + CS ) ,Min( RRSe ,MUC ) ) * ( Min( DS ,MUC ) / ( MUC * DS ) ) ) + Max( Min( Max( RRSe,RCSe ) ,( MUM - RRSe ) ),( ( MUR * MUM ) - Max( RMSe,MUC ) ) ) ) ),( ( Max( ( Min( DS ,MLU ) * ( MUR * DS ) ),Max( ( MLU * RCSe ),( RCSe + MUC ) ) ) * ( ( ( RRSe + MUM ) / ( RMSe / RCSe ) ) + ( ( CS / MLU ) - ( MUC - RMSe ) ) ) ) * ( ( ( Max( MUM,MUR ) * ( MUR + MUR ) ) - ( ( DS + DS ) / ( MUR / RMSe ) ) ) * ( ( Max( MUC,RCSe ) + Min( MUC ,DS ) ) - Min( ( CS / CS ) ,( CS * MUM ) ) ) ) ) ) * ( ( ( ( ( ( MUC * MUM ) - ( MUC * RCSe ) ) - ( ( RCSe * MUR ) - Max( RMSe,MUR ) ) ) / Min( ( ( MLU * MLU ) / ( DS * MUR ) ) ,Max( ( DS / CS ),( RRSe / DS ) ) ) ) + Max( ( ( ( CS + CS ) + Min( CS ,RCSe ) ) - ( ( RRSe / RCSe ) - ( RCSe + MUC ) ) ),Min( Min( ( RCSe + DS ) ,( RMSe / DS ) ) ,Min( ( RMSe / RMSe ) ,( DS - RRSe ) ) ) ) ) - ( ( Min( Min( ( MUC / MUC ) ,Max( MUM,MUC ) ) ,( Min( RMSe ,RMSe ) + ( RRSe - MUC ) ) ) * ( Min( ( RCSe / MLU ) ,( MUR / MUC ) ) / ( ( MUC / RMSe ) * ( DS / RRSe ) ) ) ) + ( ( Max( ( MUC * CS ),Max( MUM,RMSe ) ) - ( ( RMSe * MLU ) + ( RMSe - MUM ) ) ) - ( ( ( RCSe - RMSe ) - ( CS * MUC ) ) - ( ( MUR * RRSe ) / ( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.6018692689399062}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( Min( ( ( MDR / FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM ) ) ,Max( ( FirstVNF_CPU - PN ),( ACS / MDR ) ) ) / ( ( ( MRS + ARS ) / ( FirstVNF_RAM * ACS ) ) + ( ( PN * CRS ) / ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( DS - MUM ) ) * ( ( RCSe + MUR ) + ( MLU - RCSe ) ) ) / ( ( ( CS * MLU ) - ( RCSe + RCSe ) ) * Max( ( MUM / RCSe ),( RRSe / MUR ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5887997156434556}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "Max( ( ( ACS + FirstVNF_CPU_Server ) - ACS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( MUC,DS ) - ( DS / RMSe ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7610300196934641}, {"determining": "( ( DDR + ( DDR + RRS ) ) - ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( ( Max( CS,Min( RRSe ,RRSe ) ) + RCSe ) + RCSe )", "obj1": 0.9448818897637795, "obj2": 0.026933014314900028}], "21": [{"determining": "( DDR - Min( FirstVNF_CPU_Server ,( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( DS / RMSe ) - ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( DDR - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( Max( ( MUM / MLU ),MLU ) - ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( ( PN + MRS ) - Min( DDR ,Const ) )", "choosing": "( RCSe + MUC )", "obj1": 0.9094488188976378, "obj2": 0.05955536586688306}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.19881889763779528, "obj2": 0.6461604016758193}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / Max( ( MUR - MLU ),( MLU * MLU ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.4315213036601922}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( BR / ACS ) + ( ( ACS / FirstVNF_Mem_Server ) - Min( DDR ,Const ) ) )", "choosing": "( Max( MUC,DS ) * DS )", "obj1": 0.3937007874015748, "obj2": 0.5074273165590099}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( FirstVNF_RAM + AMS ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( MUR - MLU ) - ( ( MUM / CS ) - ( RCSe + MLU ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6270958629581601}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,RRS ),PN ) * ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),MRS ) ) ) + FirstVNF_CPU_Server ) - ACS )", "choosing": "( Max( MUC,DS ) - ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) )", "obj1": 0.3956692913385827, "obj2": 0.48827497928620883}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,( Min( FirstVNF_CPU_Server ,RRS ) * PN ) ) )", "choosing": "( Max( ( RMSe + MUC ),( MUC - RMSe ) ) - ( RMSe + MUC ) )", "obj1": 0.16535433070866143, "obj2": 0.7049110446913712}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Max( Max( ( ( ( ( Min( DDR ,FirstVNF_CPU ) - Max( RRS,CRS ) ) * ( ( MDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( RRS + AMS ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) / ( Const / RRS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),Min( ( MDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,AMS ) ) ) - Max( Max( ( CRS + ARS ),Max( FirstVNF_Mem,PN ) ),Max( ( MRS * FirstVNF_CPU ),Max( RRS,PN ) ) ) ) ),( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,RRS ) ) ,Min( Min( MRS ,CRS ) ,( BR - FirstVNF_RAM ) ) ) + ( Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( ( ACS / FirstVNF_CPU_Server ) - ( DDR + ARS ) ) ) ) + ( ( ( ( RRS + ARS ) * Min( MRS ,MRS ) ) - ( ( MDR + AMS ) + ( Const + PN ) ) ) - ( Min( ( MDR * AMS ) ,( FirstVNF_RAM_Server + BR ) ) / ( ( DDR / FirstVNF_RAM ) * Min( Const ,BR ) ) ) ) ) ),Max( ( Min( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( DDR ,FirstVNF_Mem_Server ) ) ,( Min( ARS ,MDR ) + Max( DDR,CRS ) ) ) ,( ( ( ARS + ACS ) * ( PN - ACS ) ) + Max( ( DDR + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) ) ) + Min( Max( ( ( MDR * RRS ) * ( AMS / FirstVNF_Mem_Server ) ),Min( ( RRS - PN ) ,( ACS + MDR ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ),( ( PN * Const ) / Max( FirstVNF_Mem_Server,CRS ) ) ) ) ),( ( ( ( ( DDR - ARS ) / Min( FirstVNF_Mem ,Const ) ) + ( ( PN - Const ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) / Max( ( Min( FirstVNF_CPU_Server ,MDR ) / Min( MRS ,CRS ) ),( ( RRS - PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( ( Max( Min( MDR ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) + Min( ( ( RRS - MRS ) + Min( FirstVNF_RAM_Server ,ACS ) ) ,( ( RRS / AMS ) + Max( RRS,MDR ) ) ) ) ) ) ) * Max( ( ( Min( ( ( ( RRS / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( MDR + DDR ) + ( FirstVNF_Mem + ARS ) ) ) ,( Max( Max( PN,DDR ),( PN * RRS ) ) + Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_CPU_Server / MDR ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * ARS ) + Max( RRS,RRS ) ) + Min( Min( PN ,ACS ) ,Min( ARS ,ARS ) ) ) / ( Min( ( RRS / CRS ) ,Max( CRS,BR ) ) - ( Max( MRS,FirstVNF_RAM ) / ( FirstVNF_CPU_Server * Const ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + ( ARS + BR ) ) * Min( Max( PN,PN ) ,Min( BR ,DDR ) ) ) - Max( ( ( ARS / DDR ) * Min( BR ,AMS ) ),Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + Max( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM_Server ) ),Min( ( ACS - RRS ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU / ARS ) ),Max( ( AMS - RRS ),( DDR * MDR ) ) ) ) ) ),( ( Min( ( ( ( FirstVNF_RAM_Server * Const ) - ( Const / PN ) ) / ( Min( PN ,AMS ) / ( FirstVNF_Mem - Const ) ) ) ,( ( ( ACS * MDR ) + ( FirstVNF_CPU_Server * ARS ) ) + Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ( FirstVNF_CPU / PN ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Max( ( AMS + DDR ),( FirstVNF_Mem - MRS ) ) ) * ( Min( ( MDR / DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ( Max( ( PN / ARS ),( DDR - MRS ) ) - ( ( FirstVNF_CPU_Server * RRS ) + ( BR / MDR ) ) ),( Min( ( AMS - MRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,RRS ) ) ) ) / ( Max( ( Max( FirstVNF_Mem,MDR ) + ( ARS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_RAM - AMS ) ) ) - ( ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) + ( ( Const / ACS ) / ( FirstVNF_RAM * PN ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( ( Min( ( ( Max( RMSe,CS ) / ( RRSe * MUC ) ) - ( ( MUR * RCSe ) / Min( CS ,RRSe ) ) ) ,Min( ( ( MUM / MUR ) - ( MUC * MLU ) ) ,Max( ( DS * MLU ),Min( RRSe ,RMSe ) ) ) ) + ( ( ( ( MUR - MUM ) + ( MLU + MUC ) ) / Min( Min( MUM ,RMSe ) ,Max( RMSe,MUC ) ) ) + ( ( ( MUM / RCSe ) * ( MUR * MUC ) ) * ( ( RRSe - MUM ) * Max( MUC,RRSe ) ) ) ) ) ,( ( Max( ( ( CS * CS ) + ( MUM * CS ) ),Min( ( CS - CS ) ,Max( CS,MLU ) ) ) + Max( ( ( CS - DS ) + ( RCSe * MUM ) ),( Min( RCSe ,RMSe ) + ( RMSe + MUR ) ) ) ) / Max( ( ( ( RMSe - CS ) * ( RCSe / RRSe ) ) * ( Max( MUM,RRSe ) + ( RCSe / MUR ) ) ),( ( Max( RMSe,RRSe ) + ( DS * MUR ) ) * ( ( MUC / MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( ( ( ( Max( ( MUM - CS ),Max( MUM,MUC ) ) / ( Min( MUM ,RRSe ) / ( MLU / RRSe ) ) ) / ( ( Max( MUR,DS ) * ( DS * CS ) ) / ( Max( MUR,RCSe ) + ( CS - CS ) ) ) ) * ( ( Min( Max( MLU,MLU ) ,( RMSe - RMSe ) ) / ( ( MUC + MLU ) + ( RCSe - MLU ) ) ) / Min( ( ( MLU + RCSe ) * ( MUC + MUR ) ) ,Max( ( RMSe * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( ( Min( DS ,RMSe ) * ( DS * RMSe ) ) + Max( Min( DS ,MUM ),( RCSe / CS ) ) ) / ( ( ( RMSe + MUC ) * Max( RMSe,RRSe ) ) * ( Max( MUC,RRSe ) / ( MUC + RMSe ) ) ) ) / ( Min( ( ( RMSe * RCSe ) / ( MUM - RRSe ) ) ,Min( ( RCSe + MUC ) ,Min( RRSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),( CS * RMSe ) ) - ( ( RRSe / RRSe ) - ( MUC + MUM ) ) ) ) ) ) ),( Max( Max( Max( Max( ( Max( MLU,MUC ) / ( MUR / MUR ) ),( Max( MUM,MUR ) - ( MLU / RMSe ) ) ),( Max( ( DS - RRSe ),Min( DS ,RCSe ) ) * ( Min( RCSe ,DS ) + Min( RRSe ,MUR ) ) ) ),( ( Min( ( MLU + CS ) ,Min( RRSe ,MUC ) ) * ( Min( DS ,MUC ) / ( MUC * DS ) ) ) + Max( Min( Max( RRSe,RCSe ) ,( MUM - RRSe ) ),( ( MUR * MUM ) - Max( RMSe,MUC ) ) ) ) ),( ( Max( ( Min( DS ,MLU ) * ( MUR * DS ) ),Max( ( MLU * RCSe ),( RCSe + MUC ) ) ) * ( ( ( RRSe + MUM ) / ( RMSe / RCSe ) ) + ( ( CS / MLU ) - ( MUC - RMSe ) ) ) ) * ( ( ( Max( MUM,MUR ) * ( MUR + MUR ) ) - ( ( DS + DS ) / ( MUR / RMSe ) ) ) * ( ( Max( MUC,RCSe ) + Min( MUC ,DS ) ) - Min( ( CS / CS ) ,( CS * MUM ) ) ) ) ) ) * ( ( ( ( ( ( MUC * MUM ) - ( MUC * RCSe ) ) - ( ( RCSe * MUR ) - Max( RMSe,MUR ) ) ) / Min( ( ( MLU * MLU ) / ( DS * MUR ) ) ,Max( ( DS / CS ),( RRSe / DS ) ) ) ) + Max( ( ( ( CS + CS ) + Min( CS ,RCSe ) ) - ( ( RRSe / RCSe ) - ( RCSe + MUC ) ) ),Min( Min( ( RCSe + DS ) ,( RMSe / DS ) ) ,Min( ( RMSe / RMSe ) ,( DS - RRSe ) ) ) ) ) - ( ( Min( Min( ( MUC / MUC ) ,Max( MUM,MUC ) ) ,( Min( RMSe ,RMSe ) + ( RRSe - MUC ) ) ) * ( Min( ( RCSe / MLU ) ,( MUR / MUC ) ) / ( ( MUC / RMSe ) * ( DS / RRSe ) ) ) ) + ( ( Max( ( MUC * CS ),Max( MUM,RMSe ) ) - ( ( RMSe * MLU ) + ( RMSe - MUM ) ) ) - ( ( ( RCSe - RMSe ) - ( CS * MUC ) ) - ( ( MUR * RRSe ) / ( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.6018692689399062}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ( DDR + ( DDR + RRS ) ) - ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( ( Max( CS,Min( RRSe ,RRSe ) ) + RCSe ) + RCSe )", "obj1": 0.9448818897637795, "obj2": 0.026933014314900028}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( DDR - Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( DS / RMSe ) )", "obj1": 0.15551181102362205, "obj2": 0.7584999135105943}], "22": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( BR - ( ARS + FirstVNF_CPU ) )", "choosing": "( ( RMSe / RMSe ) + CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - Min( FirstVNF_CPU_Server ,( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "( ( DS / RMSe ) - ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( PN + MRS ) - Min( DDR ,Const ) )", "choosing": "( RCSe + MUC )", "obj1": 0.9094488188976378, "obj2": 0.05955536586688306}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.19881889763779528, "obj2": 0.6461604016758193}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / Max( ( MUR - MLU ),( MLU * MLU ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.4315213036601922}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( Max( Max( ( ( ( ( Min( DDR ,FirstVNF_CPU ) - Max( RRS,CRS ) ) * ( ( MDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( RRS + AMS ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) / ( Const / RRS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),Min( ( MDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,AMS ) ) ) - Max( Max( ( CRS + ARS ),Max( FirstVNF_Mem,PN ) ),Max( ( MRS * FirstVNF_CPU ),Max( RRS,PN ) ) ) ) ),( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,RRS ) ) ,Min( Min( MRS ,CRS ) ,( BR - FirstVNF_RAM ) ) ) + ( Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( ( ACS / FirstVNF_CPU_Server ) - ( DDR + ARS ) ) ) ) + ( ( ( ( RRS + ARS ) * Min( MRS ,MRS ) ) - ( ( MDR + AMS ) + ( Const + PN ) ) ) - ( Min( ( MDR * AMS ) ,( FirstVNF_RAM_Server + BR ) ) / ( ( DDR / FirstVNF_RAM ) * Min( Const ,BR ) ) ) ) ) ),Max( ( Min( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( DDR ,FirstVNF_Mem_Server ) ) ,( Min( ARS ,MDR ) + Max( DDR,CRS ) ) ) ,( ( ( ARS + ACS ) * ( PN - ACS ) ) + Max( ( DDR + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) ) ) + Min( Max( ( ( MDR * RRS ) * ( AMS / FirstVNF_Mem_Server ) ),Min( ( RRS - PN ) ,( ACS + MDR ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ),( ( PN * Const ) / Max( FirstVNF_Mem_Server,CRS ) ) ) ) ),( ( ( ( ( DDR - ARS ) / Min( FirstVNF_Mem ,Const ) ) + ( ( PN - Const ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) / Max( ( Min( FirstVNF_CPU_Server ,MDR ) / Min( MRS ,CRS ) ),( ( RRS - PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( ( Max( Min( MDR ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) + Min( ( ( RRS - MRS ) + Min( FirstVNF_RAM_Server ,ACS ) ) ,( ( RRS / AMS ) + Max( RRS,MDR ) ) ) ) ) ) ) * Max( ( ( Min( ( ( ( RRS / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( MDR + DDR ) + ( FirstVNF_Mem + ARS ) ) ) ,( Max( Max( PN,DDR ),( PN * RRS ) ) + Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_CPU_Server / MDR ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * ARS ) + Max( RRS,RRS ) ) + Min( Min( PN ,ACS ) ,Min( ARS ,ARS ) ) ) / ( Min( ( RRS / CRS ) ,Max( CRS,BR ) ) - ( Max( MRS,FirstVNF_RAM ) / ( FirstVNF_CPU_Server * Const ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + ( ARS + BR ) ) * Min( Max( PN,PN ) ,Min( BR ,DDR ) ) ) - Max( ( ( ARS / DDR ) * Min( BR ,AMS ) ),Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + Max( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM_Server ) ),Min( ( ACS - RRS ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU / ARS ) ),Max( ( AMS - RRS ),( DDR * MDR ) ) ) ) ) ),( ( Min( ( ( ( FirstVNF_RAM_Server * Const ) - ( Const / PN ) ) / ( Min( PN ,AMS ) / ( FirstVNF_Mem - Const ) ) ) ,( ( ( ACS * MDR ) + ( FirstVNF_CPU_Server * ARS ) ) + Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ( FirstVNF_CPU / PN ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Max( ( AMS + DDR ),( FirstVNF_Mem - MRS ) ) ) * ( Min( ( MDR / DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ( Max( ( PN / ARS ),( DDR - MRS ) ) - ( ( FirstVNF_CPU_Server * RRS ) + ( BR / MDR ) ) ),( Min( ( AMS - MRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,RRS ) ) ) ) / ( Max( ( Max( FirstVNF_Mem,MDR ) + ( ARS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_RAM - AMS ) ) ) - ( ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) + ( ( Const / ACS ) / ( FirstVNF_RAM * PN ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( ( Min( ( ( Max( RMSe,CS ) / ( RRSe * MUC ) ) - ( ( MUR * RCSe ) / Min( CS ,RRSe ) ) ) ,Min( ( ( MUM / MUR ) - ( MUC * MLU ) ) ,Max( ( DS * MLU ),Min( RRSe ,RMSe ) ) ) ) + ( ( ( ( MUR - MUM ) + ( MLU + MUC ) ) / Min( Min( MUM ,RMSe ) ,Max( RMSe,MUC ) ) ) + ( ( ( MUM / RCSe ) * ( MUR * MUC ) ) * ( ( RRSe - MUM ) * Max( MUC,RRSe ) ) ) ) ) ,( ( Max( ( ( CS * CS ) + ( MUM * CS ) ),Min( ( CS - CS ) ,Max( CS,MLU ) ) ) + Max( ( ( CS - DS ) + ( RCSe * MUM ) ),( Min( RCSe ,RMSe ) + ( RMSe + MUR ) ) ) ) / Max( ( ( ( RMSe - CS ) * ( RCSe / RRSe ) ) * ( Max( MUM,RRSe ) + ( RCSe / MUR ) ) ),( ( Max( RMSe,RRSe ) + ( DS * MUR ) ) * ( ( MUC / MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( ( ( ( Max( ( MUM - CS ),Max( MUM,MUC ) ) / ( Min( MUM ,RRSe ) / ( MLU / RRSe ) ) ) / ( ( Max( MUR,DS ) * ( DS * CS ) ) / ( Max( MUR,RCSe ) + ( CS - CS ) ) ) ) * ( ( Min( Max( MLU,MLU ) ,( RMSe - RMSe ) ) / ( ( MUC + MLU ) + ( RCSe - MLU ) ) ) / Min( ( ( MLU + RCSe ) * ( MUC + MUR ) ) ,Max( ( RMSe * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( ( Min( DS ,RMSe ) * ( DS * RMSe ) ) + Max( Min( DS ,MUM ),( RCSe / CS ) ) ) / ( ( ( RMSe + MUC ) * Max( RMSe,RRSe ) ) * ( Max( MUC,RRSe ) / ( MUC + RMSe ) ) ) ) / ( Min( ( ( RMSe * RCSe ) / ( MUM - RRSe ) ) ,Min( ( RCSe + MUC ) ,Min( RRSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),( CS * RMSe ) ) - ( ( RRSe / RRSe ) - ( MUC + MUM ) ) ) ) ) ) ),( Max( Max( Max( Max( ( Max( MLU,MUC ) / ( MUR / MUR ) ),( Max( MUM,MUR ) - ( MLU / RMSe ) ) ),( Max( ( DS - RRSe ),Min( DS ,RCSe ) ) * ( Min( RCSe ,DS ) + Min( RRSe ,MUR ) ) ) ),( ( Min( ( MLU + CS ) ,Min( RRSe ,MUC ) ) * ( Min( DS ,MUC ) / ( MUC * DS ) ) ) + Max( Min( Max( RRSe,RCSe ) ,( MUM - RRSe ) ),( ( MUR * MUM ) - Max( RMSe,MUC ) ) ) ) ),( ( Max( ( Min( DS ,MLU ) * ( MUR * DS ) ),Max( ( MLU * RCSe ),( RCSe + MUC ) ) ) * ( ( ( RRSe + MUM ) / ( RMSe / RCSe ) ) + ( ( CS / MLU ) - ( MUC - RMSe ) ) ) ) * ( ( ( Max( MUM,MUR ) * ( MUR + MUR ) ) - ( ( DS + DS ) / ( MUR / RMSe ) ) ) * ( ( Max( MUC,RCSe ) + Min( MUC ,DS ) ) - Min( ( CS / CS ) ,( CS * MUM ) ) ) ) ) ) * ( ( ( ( ( ( MUC * MUM ) - ( MUC * RCSe ) ) - ( ( RCSe * MUR ) - Max( RMSe,MUR ) ) ) / Min( ( ( MLU * MLU ) / ( DS * MUR ) ) ,Max( ( DS / CS ),( RRSe / DS ) ) ) ) + Max( ( ( ( CS + CS ) + Min( CS ,RCSe ) ) - ( ( RRSe / RCSe ) - ( RCSe + MUC ) ) ),Min( Min( ( RCSe + DS ) ,( RMSe / DS ) ) ,Min( ( RMSe / RMSe ) ,( DS - RRSe ) ) ) ) ) - ( ( Min( Min( ( MUC / MUC ) ,Max( MUM,MUC ) ) ,( Min( RMSe ,RMSe ) + ( RRSe - MUC ) ) ) * ( Min( ( RCSe / MLU ) ,( MUR / MUC ) ) / ( ( MUC / RMSe ) * ( DS / RRSe ) ) ) ) + ( ( Max( ( MUC * CS ),Max( MUM,RMSe ) ) - ( ( RMSe * MLU ) + ( RMSe - MUM ) ) ) - ( ( ( RCSe - RMSe ) - ( CS * MUC ) ) - ( ( MUR * RRSe ) / ( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.6018692689399062}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,( Min( FirstVNF_CPU_Server ,RRS ) * PN ) ) )", "choosing": "( Max( ( RMSe + MUC ),( MUC - RMSe ) ) - ( RMSe + MUC ) )", "obj1": 0.16535433070866143, "obj2": 0.7049110446913712}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( FirstVNF_RAM + AMS ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( MUR - MLU ) - ( ( MUM / CS ) - ( RCSe + MLU ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6270958629581601}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( DDR - Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( DS / RMSe ) )", "obj1": 0.15551181102362205, "obj2": 0.7584999135105943}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( Max( CRS,FirstVNF_Mem ) - Min( ( FirstVNF_CPU * AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM * MLU ) - ( MLU + MUC ) )", "obj1": 0.2874015748031496, "obj2": 0.5872841435505901}, {"determining": "( ( DDR + ( DDR + RRS ) ) - ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( ( Max( CS,Min( RRSe ,RRSe ) ) + RCSe ) + RCSe )", "obj1": 0.9448818897637795, "obj2": 0.026933014314900028}], "23": [{"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( ARS + MRS ) )", "choosing": "( ( MLU / MUM ) + ( Max( CS,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( BR - ( ARS + FirstVNF_CPU ) )", "choosing": "( ( RMSe / RMSe ) + CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( PN + MRS ) - Min( DDR ,Const ) )", "choosing": "( RCSe + MUC )", "obj1": 0.9094488188976378, "obj2": 0.05955536586688306}, {"determining": "( ( ( DDR + RRS ) - ( DDR + MRS ) ) + ( BR / FirstVNF_CPU ) )", "choosing": "( ( MUM / MLU ) * ( MUR / RRSe ) )", "obj1": 0.5078740157480315, "obj2": 0.414757804118196}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.19881889763779528, "obj2": 0.6461604016758193}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / Max( ( MUR - MLU ),( MLU * MLU ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.4315213036601922}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Max( Max( ( ( ( ( Min( DDR ,FirstVNF_CPU ) - Max( RRS,CRS ) ) * ( ( MDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) / Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) / ( RRS + AMS ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) / ( Const / RRS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),Min( ( MDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,AMS ) ) ) - Max( Max( ( CRS + ARS ),Max( FirstVNF_Mem,PN ) ),Max( ( MRS * FirstVNF_CPU ),Max( RRS,PN ) ) ) ) ),( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,RRS ) ) ,Min( Min( MRS ,CRS ) ,( BR - FirstVNF_RAM ) ) ) + ( Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( ( ACS / FirstVNF_CPU_Server ) - ( DDR + ARS ) ) ) ) + ( ( ( ( RRS + ARS ) * Min( MRS ,MRS ) ) - ( ( MDR + AMS ) + ( Const + PN ) ) ) - ( Min( ( MDR * AMS ) ,( FirstVNF_RAM_Server + BR ) ) / ( ( DDR / FirstVNF_RAM ) * Min( Const ,BR ) ) ) ) ) ),Max( ( Min( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( DDR ,FirstVNF_Mem_Server ) ) ,( Min( ARS ,MDR ) + Max( DDR,CRS ) ) ) ,( ( ( ARS + ACS ) * ( PN - ACS ) ) + Max( ( DDR + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) ) ) + Min( Max( ( ( MDR * RRS ) * ( AMS / FirstVNF_Mem_Server ) ),Min( ( RRS - PN ) ,( ACS + MDR ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ),( ( PN * Const ) / Max( FirstVNF_Mem_Server,CRS ) ) ) ) ),( ( ( ( ( DDR - ARS ) / Min( FirstVNF_Mem ,Const ) ) + ( ( PN - Const ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) / Max( ( Min( FirstVNF_CPU_Server ,MDR ) / Min( MRS ,CRS ) ),( ( RRS - PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( ( Max( Min( MDR ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) + Min( ( ( RRS - MRS ) + Min( FirstVNF_RAM_Server ,ACS ) ) ,( ( RRS / AMS ) + Max( RRS,MDR ) ) ) ) ) ) ) * Max( ( ( Min( ( ( ( RRS / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( MDR + DDR ) + ( FirstVNF_Mem + ARS ) ) ) ,( Max( Max( PN,DDR ),( PN * RRS ) ) + Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( FirstVNF_CPU_Server / MDR ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * ARS ) + Max( RRS,RRS ) ) + Min( Min( PN ,ACS ) ,Min( ARS ,ARS ) ) ) / ( Min( ( RRS / CRS ) ,Max( CRS,BR ) ) - ( Max( MRS,FirstVNF_RAM ) / ( FirstVNF_CPU_Server * Const ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + ( ARS + BR ) ) * Min( Max( PN,PN ) ,Min( BR ,DDR ) ) ) - Max( ( ( ARS / DDR ) * Min( BR ,AMS ) ),Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + Max( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM_Server ) ),Min( ( ACS - RRS ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_CPU / ARS ) ),Max( ( AMS - RRS ),( DDR * MDR ) ) ) ) ) ),( ( Min( ( ( ( FirstVNF_RAM_Server * Const ) - ( Const / PN ) ) / ( Min( PN ,AMS ) / ( FirstVNF_Mem - Const ) ) ) ,( ( ( ACS * MDR ) + ( FirstVNF_CPU_Server * ARS ) ) + Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ( FirstVNF_CPU / PN ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Max( ( AMS + DDR ),( FirstVNF_Mem - MRS ) ) ) * ( Min( ( MDR / DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ( Max( ( PN / ARS ),( DDR - MRS ) ) - ( ( FirstVNF_CPU_Server * RRS ) + ( BR / MDR ) ) ),( Min( ( AMS - MRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,RRS ) ) ) ) / ( Max( ( Max( FirstVNF_Mem,MDR ) + ( ARS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_RAM - AMS ) ) ) - ( ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) + ( ( Const / ACS ) / ( FirstVNF_RAM * PN ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( ( Min( ( ( Max( RMSe,CS ) / ( RRSe * MUC ) ) - ( ( MUR * RCSe ) / Min( CS ,RRSe ) ) ) ,Min( ( ( MUM / MUR ) - ( MUC * MLU ) ) ,Max( ( DS * MLU ),Min( RRSe ,RMSe ) ) ) ) + ( ( ( ( MUR - MUM ) + ( MLU + MUC ) ) / Min( Min( MUM ,RMSe ) ,Max( RMSe,MUC ) ) ) + ( ( ( MUM / RCSe ) * ( MUR * MUC ) ) * ( ( RRSe - MUM ) * Max( MUC,RRSe ) ) ) ) ) ,( ( Max( ( ( CS * CS ) + ( MUM * CS ) ),Min( ( CS - CS ) ,Max( CS,MLU ) ) ) + Max( ( ( CS - DS ) + ( RCSe * MUM ) ),( Min( RCSe ,RMSe ) + ( RMSe + MUR ) ) ) ) / Max( ( ( ( RMSe - CS ) * ( RCSe / RRSe ) ) * ( Max( MUM,RRSe ) + ( RCSe / MUR ) ) ),( ( Max( RMSe,RRSe ) + ( DS * MUR ) ) * ( ( MUC / MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( ( ( ( Max( ( MUM - CS ),Max( MUM,MUC ) ) / ( Min( MUM ,RRSe ) / ( MLU / RRSe ) ) ) / ( ( Max( MUR,DS ) * ( DS * CS ) ) / ( Max( MUR,RCSe ) + ( CS - CS ) ) ) ) * ( ( Min( Max( MLU,MLU ) ,( RMSe - RMSe ) ) / ( ( MUC + MLU ) + ( RCSe - MLU ) ) ) / Min( ( ( MLU + RCSe ) * ( MUC + MUR ) ) ,Max( ( RMSe * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( ( Min( DS ,RMSe ) * ( DS * RMSe ) ) + Max( Min( DS ,MUM ),( RCSe / CS ) ) ) / ( ( ( RMSe + MUC ) * Max( RMSe,RRSe ) ) * ( Max( MUC,RRSe ) / ( MUC + RMSe ) ) ) ) / ( Min( ( ( RMSe * RCSe ) / ( MUM - RRSe ) ) ,Min( ( RCSe + MUC ) ,Min( RRSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),( CS * RMSe ) ) - ( ( RRSe / RRSe ) - ( MUC + MUM ) ) ) ) ) ) ),( Max( Max( Max( Max( ( Max( MLU,MUC ) / ( MUR / MUR ) ),( Max( MUM,MUR ) - ( MLU / RMSe ) ) ),( Max( ( DS - RRSe ),Min( DS ,RCSe ) ) * ( Min( RCSe ,DS ) + Min( RRSe ,MUR ) ) ) ),( ( Min( ( MLU + CS ) ,Min( RRSe ,MUC ) ) * ( Min( DS ,MUC ) / ( MUC * DS ) ) ) + Max( Min( Max( RRSe,RCSe ) ,( MUM - RRSe ) ),( ( MUR * MUM ) - Max( RMSe,MUC ) ) ) ) ),( ( Max( ( Min( DS ,MLU ) * ( MUR * DS ) ),Max( ( MLU * RCSe ),( RCSe + MUC ) ) ) * ( ( ( RRSe + MUM ) / ( RMSe / RCSe ) ) + ( ( CS / MLU ) - ( MUC - RMSe ) ) ) ) * ( ( ( Max( MUM,MUR ) * ( MUR + MUR ) ) - ( ( DS + DS ) / ( MUR / RMSe ) ) ) * ( ( Max( MUC,RCSe ) + Min( MUC ,DS ) ) - Min( ( CS / CS ) ,( CS * MUM ) ) ) ) ) ) * ( ( ( ( ( ( MUC * MUM ) - ( MUC * RCSe ) ) - ( ( RCSe * MUR ) - Max( RMSe,MUR ) ) ) / Min( ( ( MLU * MLU ) / ( DS * MUR ) ) ,Max( ( DS / CS ),( RRSe / DS ) ) ) ) + Max( ( ( ( CS + CS ) + Min( CS ,RCSe ) ) - ( ( RRSe / RCSe ) - ( RCSe + MUC ) ) ),Min( Min( ( RCSe + DS ) ,( RMSe / DS ) ) ,Min( ( RMSe / RMSe ) ,( DS - RRSe ) ) ) ) ) - ( ( Min( Min( ( MUC / MUC ) ,Max( MUM,MUC ) ) ,( Min( RMSe ,RMSe ) + ( RRSe - MUC ) ) ) * ( Min( ( RCSe / MLU ) ,( MUR / MUC ) ) / ( ( MUC / RMSe ) * ( DS / RRSe ) ) ) ) + ( ( Max( ( MUC * CS ),Max( MUM,RMSe ) ) - ( ( RMSe * MLU ) + ( RMSe - MUM ) ) ) - ( ( ( RCSe - RMSe ) - ( CS * MUC ) ) - ( ( MUR * RRSe ) / ( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.6018692689399062}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,( Min( FirstVNF_CPU_Server ,RRS ) * PN ) ) )", "choosing": "( Max( ( RMSe + MUC ),( MUC - RMSe ) ) - ( RMSe + MUC ) )", "obj1": 0.16535433070866143, "obj2": 0.7049110446913712}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( ( BR * BR ) / MDR ) + ( BR + Min( MDR ,AMS ) ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( RMSe - MLU ) - ( MLU * ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5933006491623956}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "Max( ( Const + ( ( PN / FirstVNF_RAM_Server ) + Min( DDR ,FirstVNF_Mem_Server ) ) ),Max( Const,Max( PN,DDR ) ) )", "choosing": "( ( DS + MUC ) - ( Min( CS ,MUR ) * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6052577308480178}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( FirstVNF_RAM + AMS ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( MUR - MLU ) - ( ( MUM / CS ) - ( RCSe + MLU ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6270958629581601}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( DDR - Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( DS / RMSe ) )", "obj1": 0.15551181102362205, "obj2": 0.7584999135105943}, {"determining": "( ( DDR + ( DDR + RRS ) ) - ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( ( Max( CS,Min( RRSe ,RRSe ) ) + RCSe ) + RCSe )", "obj1": 0.9448818897637795, "obj2": 0.026933014314900028}], "24": [{"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( ARS + MRS ) )", "choosing": "( ( MLU / MLU ) + ( Max( CS,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( ARS + MRS ) )", "choosing": "( ( MLU / MUM ) + ( Max( CS,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( ( PN + MRS ) - Min( DDR ,Const ) )", "choosing": "( RCSe + MUC )", "obj1": 0.9094488188976378, "obj2": 0.05955536586688306}, {"determining": "( Max( AMS,FirstVNF_Mem ) - FirstVNF_RAM )", "choosing": "( Min( DS ,MLU ) - ( MLU - ( RRSe / RCSe ) ) )", "obj1": 0.49015748031496065, "obj2": 0.41166520681349095}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( ( BR * BR ) / MDR ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) ) + ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) )", "obj1": 0.4409448818897638, "obj2": 0.4635933247514215}, {"determining": "( ( FirstVNF_RAM + ( ( Max( DDR,DDR ) - ( ( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Const / DDR ) ) - Const ) ) * ( FirstVNF_Mem_Server - ARS ) ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) + MLU )", "obj1": 0.9803149606299213, "obj2": 0.012109391699972452}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.500271471464864}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( FirstVNF_RAM + AMS ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( MUR - MLU ) - ( ( MUM / CS ) - ( RCSe + MLU ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6270958629581601}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( ( BR * BR ) / MDR ) + ( BR + Min( MDR ,AMS ) ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( RMSe - MLU ) - ( MLU * ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5933006491623956}, {"determining": "( ( ( ACS / FirstVNF_Mem_Server ) - ( PN + MRS ) ) + ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( RMSe - MLU ) - ( ( RCSe / MUM ) * MLU ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5999763642675968}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,( Min( FirstVNF_CPU_Server ,RRS ) * PN ) ) )", "choosing": "( Max( ( RMSe + MUC ),( MUC - RMSe ) ) - ( RMSe + MUC ) )", "obj1": 0.16535433070866143, "obj2": 0.7049110446913712}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( DDR - Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( DS / RMSe ) )", "obj1": 0.15551181102362205, "obj2": 0.7584999135105943}], "25": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( ARS + MRS ) )", "choosing": "( Max( CS,DS ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( ARS + MRS ) )", "choosing": "( ( MLU / MLU ) + ( Max( CS,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( ( PN + MRS ) - Min( DDR ,Const ) )", "choosing": "( RCSe + MUC )", "obj1": 0.9094488188976378, "obj2": 0.05955536586688306}, {"determining": "( Max( AMS,FirstVNF_Mem ) - FirstVNF_RAM )", "choosing": "( Min( DS ,MLU ) - ( MLU - ( RRSe / RCSe ) ) )", "obj1": 0.49015748031496065, "obj2": 0.41166520681349095}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ( ACS / FirstVNF_Mem_Server ) - ( PN + MRS ) ) + ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( RMSe - MLU ) - ( ( RCSe / MUM ) * MLU ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5999763642675968}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( ( BR * BR ) / MDR ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) ) + ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) )", "obj1": 0.4409448818897638, "obj2": 0.4635933247514215}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( ( DDR + RRS ) - ( ( MRS / CRS ) - BR ) ) - ( DDR - Const ) )", "choosing": "( Max( CS,( Min( ( DS + RMSe ) ,RRSe ) + DS ) ) + MUC )", "obj1": 0.9803149606299213, "obj2": 0.011028108445480914}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.500271471464864}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( FirstVNF_RAM + AMS ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( MUR - MLU ) - ( ( MUM / CS ) - ( RCSe + MLU ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6270958629581601}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( DDR - Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( DS / RMSe ) )", "obj1": 0.15551181102362205, "obj2": 0.7584999135105943}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "Max( ( Min( ( ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,( RRS - DDR ) ) - ( ( FirstVNF_Mem_Server + MRS ) + Min( FirstVNF_Mem ,BR ) ) ) * ( Min( Max( DDR,AMS ) ,Max( ACS,BR ) ) / ( ( FirstVNF_RAM + DDR ) + ( FirstVNF_CPU / BR ) ) ) ) * ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Min( PN ,AMS ) ) * ( Min( RRS ,AMS ) * ( ARS / CRS ) ) ) - Min( ( ( RRS / ARS ) * ( FirstVNF_RAM + CRS ) ) ,( ( FirstVNF_Mem / BR ) * Min( ARS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_Mem + MRS ) + ( BR * ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS + DDR ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( MDR,MRS ) ) / ( ( Const / ACS ) - ( FirstVNF_CPU + MDR ) ) ) ) + ( ( ( ( AMS / FirstVNF_RAM ) - Min( AMS ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,Max( ARS,FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_CPU_Server + Const ),Min( ARS ,FirstVNF_RAM ) ) - ( Max( CRS,RRS ) / ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) / ( ( ( Min( ( ( MDR / DDR ) * Min( BR ,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_Mem ,MDR ) ) ) * Max( Max( ( AMS - MRS ),( RRS * CRS ) ),Min( ( ACS + FirstVNF_RAM_Server ) ,Max( DDR,CRS ) ) ) ) * ( ( Max( Min( ACS ,BR ),( PN - AMS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( FirstVNF_CPU / ACS ) ) ) - ( ( ( MRS - PN ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( ( ACS - MRS ) - ( MDR * Const ) ) ) ) ) + ( ( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( MDR - RRS ) ) + Max( ( PN / ACS ),( MDR - MDR ) ) ) + ( ( ( RRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * BR ) + ( PN / MDR ) ) ) ) * ( ( ( ( CRS - CRS ) / ( DDR / MRS ) ) * Min( Max( AMS,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) ) - Min( ( ( FirstVNF_CPU + ACS ) * Min( MDR ,FirstVNF_Mem ) ) ,( ( Const - MRS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) ),Min( Min( ( ( ( ( ( DDR - ACS ) + ( ARS * FirstVNF_Mem_Server ) ) / ( ( DDR - FirstVNF_Mem ) - ( FirstVNF_RAM + BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem ) + ( ACS * MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_Mem - CRS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / DDR ) * ( PN + FirstVNF_CPU_Server ) ) ,( Min( MDR ,Const ) - ( DDR * AMS ) ) ) / Min( Min( ( MRS * FirstVNF_RAM ) ,( AMS - FirstVNF_CPU ) ) ,Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,Min( RRS ,ACS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU - RRS ) + ( MDR + ARS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) / ( DDR * FirstVNF_Mem ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( AMS + RRS ) ) ) ) - ( Max( Max( ( BR * RRS ),( MRS + CRS ) ),( ( AMS / DDR ) + Max( Const,FirstVNF_CPU ) ) ) * ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR / MRS ) ) / Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR * FirstVNF_RAM_Server ) ),( Max( ARS,FirstVNF_Mem_Server ) - ( PN - FirstVNF_CPU_Server ) ) ) / ( ( ( DDR - FirstVNF_CPU ) / Max( Const,RRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( ARS + FirstVNF_CPU ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server / PN ) + Min( AMS ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) + ( DDR * ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * BR ) ) ) ) ),( ( ( ( ( ARS + FirstVNF_RAM ) * Max( BR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem / Const ) - ( Const / AMS ) ) ) + ( ( ( MRS + MDR ) * ( FirstVNF_RAM + MRS ) ) + Max( ( PN + ARS ),Min( MDR ,DDR ) ) ) ) + ( ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( AMS + BR ) ) * ( ( ARS + FirstVNF_Mem_Server ) / Min( MDR ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ARS / MDR ) ) ,( Min( Const ,MDR ) + Min( PN ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( CS / RCSe ) + ( DS * MUC ) ) / Max( ( MUM / RMSe ),( CS * CS ) ) ) - ( Min( Min( MLU ,CS ) ,( MUC * RMSe ) ) / Min( ( MUC / DS ) ,( RRSe + MUR ) ) ) ) / Min( Max( ( ( RRSe - MUM ) / ( RRSe / MLU ) ),Min( Min( MUC ,RMSe ) ,( MUC - MUC ) ) ) ,Min( ( ( MLU * MUR ) + Max( RCSe,MUR ) ) ,( ( MUM + RCSe ) - ( CS + MUR ) ) ) ) ) + ( ( Max( ( ( RRSe + DS ) - ( CS * RRSe ) ),( Max( DS,RMSe ) + Max( RCSe,MLU ) ) ) - ( ( ( RCSe - MUC ) - Min( RCSe ,RMSe ) ) / Min( ( MUR / DS ) ,Max( RMSe,MUR ) ) ) ) / Max( Min( Min( Max( RMSe,MUM ) ,( MUR / CS ) ) ,( Min( DS ,DS ) / ( MUM * CS ) ) ),Max( ( ( RRSe / DS ) - ( MUM / MUR ) ),( ( DS / MUR ) - ( RRSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( Min( MUR ,CS ) / Min( MUC ,CS ) ) - Max( ( MLU + CS ),Min( MUR ,DS ) ) ) ,Max( ( Max( CS,MUM ) - Max( MUR,MUC ) ),( ( MLU - RRSe ) / Min( MUM ,DS ) ) ) ) / Max( ( ( Max( CS,MUR ) + ( MUR - CS ) ) - Max( ( CS + MUR ),Min( RRSe ,MUC ) ) ),( ( ( MUR + MUR ) / ( MUM + RMSe ) ) / ( ( DS - MUR ) / ( RRSe - DS ) ) ) ) ) * Min( Min( ( Max( Min( MUR ,MUM ),( RRSe - RMSe ) ) - Max( ( MUM - MLU ),( RCSe - RMSe ) ) ) ,( ( ( RMSe * MUC ) / Max( CS,MUC ) ) * ( ( MUR + MUR ) / ( DS * RCSe ) ) ) ) ,Max( ( ( ( MUR + MUC ) + ( MUR - RRSe ) ) + ( ( DS / MUC ) / ( RCSe + MUC ) ) ),( Min( ( RCSe * MUM ) ,Min( CS ,RMSe ) ) / ( ( MUR + DS ) * ( CS * RCSe ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RRSe - DS ) / ( RCSe + MLU ) ) + ( ( RMSe / MUR ) - ( RCSe / MUR ) ) ) / ( ( Min( MLU ,RCSe ) + ( RCSe + MUM ) ) - Max( Min( DS ,MUC ),Max( MLU,CS ) ) ) ) / ( ( ( ( CS / CS ) + Max( MUM,RRSe ) ) * ( ( MUC + MLU ) / ( MUR / RMSe ) ) ) - ( ( Max( DS,CS ) - Min( MUC ,RMSe ) ) / ( ( RRSe + CS ) - ( RCSe * RMSe ) ) ) ) ) + ( ( ( ( ( MUM / MLU ) - ( MUC - RRSe ) ) - ( Max( MUC,CS ) - ( DS - MUR ) ) ) * ( Min( ( DS * CS ) ,( MLU / RCSe ) ) + ( ( DS / MUR ) + ( MUC / RMSe ) ) ) ) * Min( ( ( Min( DS ,MUC ) * Max( MUM,MLU ) ) * ( Min( DS ,MLU ) * ( RCSe + MUR ) ) ) ,Max( ( Min( MUC ,MLU ) * ( MUC - MUR ) ),( Max( MUC,MUC ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( Min( Max( ( Min( MUR ,MUM ) - Max( DS,MUR ) ),( ( RRSe - MLU ) / ( MLU / CS ) ) ) ,( ( Min( MLU ,RRSe ) + ( DS / DS ) ) - Min( ( MUC + MUM ) ,( RMSe - MUC ) ) ) ) + ( Min( ( ( DS + DS ) - ( DS + MLU ) ) ,( ( MLU / MUM ) * Max( RMSe,RCSe ) ) ) - ( ( Max( MUC,MUR ) + ( MUM + MUR ) ) - Min( ( MUR / MUR ) ,Max( MUR,RMSe ) ) ) ) ) - ( ( Max( ( ( RMSe + RMSe ) + Min( RCSe ,RRSe ) ),( ( MUR / MUC ) * ( MUM / MLU ) ) ) + ( ( ( MUM / MUC ) / Min( MUM ,RRSe ) ) / ( ( MUM + MUR ) - ( MUC * DS ) ) ) ) / ( Max( ( Max( MLU,MLU ) / Min( RRSe ,MUM ) ),( Max( RMSe,MLU ) + ( DS / MUC ) ) ) - ( ( ( DS + MUC ) + ( RCSe / MUR ) ) / ( Max( DS,DS ) - ( DS - RMSe ) ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5781592917426811}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( ( BR * BR ) / MDR ) + ( BR + Min( MDR ,AMS ) ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( RMSe - MLU ) - ( MLU * ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5933006491623956}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / CS ) - ( RCSe + MUR ) ) - ( RCSe + MUR ) )", "obj1": 0.2047244094488189, "obj2": 0.6465093958334562}], "26": [{"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( ARS + MRS ) )", "choosing": "( ( MLU / MLU ) + ( Max( CS,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( ARS + MRS ) )", "choosing": "( Max( CS,DS ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( ( PN + MRS ) - Min( DDR ,Const ) )", "choosing": "( RCSe + MUC )", "obj1": 0.9094488188976378, "obj2": 0.05955536586688306}, {"determining": "( Max( AMS,FirstVNF_Mem ) - FirstVNF_RAM )", "choosing": "( Min( DS ,MLU ) - ( MLU - ( RRSe / RCSe ) ) )", "obj1": 0.49015748031496065, "obj2": 0.41166520681349095}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ( ACS / FirstVNF_Mem_Server ) - ( PN + MRS ) ) + ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( RMSe - MLU ) - ( ( RCSe / MUM ) * MLU ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5999763642675968}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( ( BR * BR ) / MDR ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) ) + ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) )", "obj1": 0.4409448818897638, "obj2": 0.4635933247514215}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( ( DDR + RRS ) - ( ( MRS / CRS ) - BR ) ) - ( DDR - Const ) )", "choosing": "( Max( CS,( Min( ( DS + RMSe ) ,RRSe ) + DS ) ) + MUC )", "obj1": 0.9803149606299213, "obj2": 0.011028108445480914}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.500271471464864}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( FirstVNF_RAM + AMS ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( MUR - MLU ) - ( ( MUM / CS ) - ( RCSe + MLU ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6270958629581601}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - MUR )", "obj1": 0.2874015748031496, "obj2": 0.5741205641430709}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( ( BR * BR ) / MDR ) + ( BR + Min( MDR ,AMS ) ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( RMSe - MLU ) - ( MLU * ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5933006491623956}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe + MUC ),MLU ) - ( RMSe + MUC ) )", "obj1": 0.16535433070866143, "obj2": 0.7052968597875047}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( DDR - Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( DS / RMSe ) )", "obj1": 0.15551181102362205, "obj2": 0.7584999135105943}], "27": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( PN / MRS ) )", "choosing": "( ( CS + DS ) + ( MUM + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( ARS + MRS ) )", "choosing": "( ( MLU / MLU ) + ( Max( CS,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( Max( AMS,FirstVNF_Mem ) - FirstVNF_RAM )", "choosing": "( Min( DS ,MLU ) - ( MLU - ( RRSe / RCSe ) ) )", "obj1": 0.49015748031496065, "obj2": 0.41166520681349095}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Max( BR,FirstVNF_Mem ) - Min( ( Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / CS ) - ( ( RCSe + MUR ) + MUR ) )", "obj1": 0.26968503937007876, "obj2": 0.598304913717918}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( ( BR * BR ) / MDR ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) ) + ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) )", "obj1": 0.4409448818897638, "obj2": 0.4635933247514215}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( ( ( DDR + RRS ) - ( ( MRS / CRS ) - BR ) ) - ( DDR - Const ) )", "choosing": "( Max( CS,( Min( ( DS + RMSe ) ,RRSe ) + DS ) ) + MUC )", "obj1": 0.9803149606299213, "obj2": 0.011028108445480914}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) ) ) )", "choosing": "( ( ( MUM / MLU ) - ( RMSe * MUC ) ) - ( RMSe * MUC ) )", "obj1": 0.3484251968503937, "obj2": 0.5265645609020407}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.500271471464864}, {"determining": "( ( DDR + ( ARS / ( DDR + Const ) ) ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6405531670124653}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - MUR )", "obj1": 0.2874015748031496, "obj2": 0.5741205641430709}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( ( BR * BR ) / MDR ) + ( BR + Min( MDR ,AMS ) ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( RMSe - MLU ) - ( MLU * ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5933006491623956}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe + MUC ),MLU ) - ( RMSe + MUC ) )", "obj1": 0.16535433070866143, "obj2": 0.7052968597875047}, {"determining": "( Max( Min( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) ) ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( ( DS / RMSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8105514886050237}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( FirstVNF_RAM + AMS ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( MUR - MLU ) - ( ( MUM / CS ) - ( RCSe + MLU ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6270958629581601}], "28": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( PN / MRS ) )", "choosing": "( ( MLU / MLU ) + ( Max( RCSe,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( PN / MRS ) )", "choosing": "( ( CS + DS ) + ( MUM + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Max( AMS,FirstVNF_Mem ) - FirstVNF_RAM )", "choosing": "( Min( DS ,MLU ) - ( MLU - ( RRSe / RCSe ) ) )", "obj1": 0.49015748031496065, "obj2": 0.41166520681349095}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( ( BR * BR ) / MDR ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) ) + ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) )", "obj1": 0.4409448818897638, "obj2": 0.4635933247514215}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( ( DDR + RRS ) - ( ( MRS / CRS ) - BR ) ) - ( DDR - Const ) )", "choosing": "( Max( CS,( Min( ( DS + RMSe ) ,RRSe ) + DS ) ) + MUC )", "obj1": 0.9803149606299213, "obj2": 0.011028108445480914}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) ) ) )", "choosing": "( ( ( MUM / MLU ) - ( RMSe * MUC ) ) - ( RMSe * MUC ) )", "obj1": 0.3484251968503937, "obj2": 0.5265645609020407}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( ( RRS + Max( RRS,FirstVNF_Mem ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + RMSe ) - ( ( DS + ( Min( RCSe ,MUR ) * RCSe ) ) / MUC ) )", "obj1": 0.265748031496063, "obj2": 0.5962430718049808}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.500271471464864}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( FirstVNF_Mem - ( RRS / FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,MUC ) - DS )", "obj1": 0.14763779527559054, "obj2": 0.7610307437384068}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( FirstVNF_RAM + AMS ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - RMSe ) + ( RMSe / ( ( MUR - MLU ) - ( ( MUM / CS ) - ( RCSe + MLU ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6270958629581601}, {"determining": "( Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - MUR )", "obj1": 0.2874015748031496, "obj2": 0.5741205641430709}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe + MUC ),MLU ) - ( RMSe + MUC ) )", "obj1": 0.16535433070866143, "obj2": 0.7052968597875047}], "29": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) - ( PN / MRS ) )", "choosing": "( ( MLU / MLU ) + ( Max( RCSe,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( PN / MRS ) )", "choosing": "( ( MLU / MLU ) + ( Max( RCSe,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( Max( AMS,FirstVNF_Mem ) - FirstVNF_RAM )", "choosing": "( Min( DS ,MLU ) - ( MLU - ( RRSe / RCSe ) ) )", "obj1": 0.49015748031496065, "obj2": 0.41166520681349095}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - MUR )", "obj1": 0.2874015748031496, "obj2": 0.5741205641430709}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( ( ( BR * BR ) / MDR ) + ( ( ( BR * BR ) / MDR ) + Min( MDR ,AMS ) ) )", "choosing": "( ( DS - ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) ) + ( RMSe / ( ( RMSe - MLU ) - ( MLU * MLU ) ) ) )", "obj1": 0.4409448818897638, "obj2": 0.4635933247514215}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( ( DDR + RRS ) - ( ( MRS / CRS ) - BR ) ) - ( DDR - Const ) )", "choosing": "( Max( CS,( Min( ( DS + RMSe ) ,RRSe ) + DS ) ) + MUC )", "obj1": 0.9803149606299213, "obj2": 0.011028108445480914}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) ) ) )", "choosing": "( ( ( MUM / MLU ) - ( RMSe * MUC ) ) - ( RMSe * MUC ) )", "obj1": 0.3484251968503937, "obj2": 0.5265645609020407}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.500271471464864}, {"determining": "( ( RRS + Max( RRS,FirstVNF_Mem ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + RMSe ) - ( ( DS + ( Min( RCSe ,MUR ) * RCSe ) ) / MUC ) )", "obj1": 0.265748031496063, "obj2": 0.5962430718049808}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe + MUC ),MLU ) - ( RMSe + MUC ) )", "obj1": 0.16535433070866143, "obj2": 0.7052968597875047}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,( ( BR * BR ) / MDR ) ) )", "choosing": "( ( RMSe - MUR ) - ( CS + RCSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6224299769268187}, {"determining": "( ( ACS + AMS ) - ( DDR + MRS ) )", "choosing": "( Max( MUM,RMSe ) - ( ( DS + CS ) / DS ) )", "obj1": 0.42322834645669294, "obj2": 0.46381883516516004}, {"determining": "( ( DDR + RRS ) - ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( MUC - DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.2421259842519685, "obj2": 0.615458319816358}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Min( Min( Min( FirstVNF_CPU_Server ,DDR ) ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / ( ( DS / RCSe ) - ( RRSe + MUC ) ) ) - ( ( CS + ( ( RRSe - MUR ) / MUC ) ) + RRSe ) )", "obj1": 0.2559055118110236, "obj2": 0.602443111978543}], "30": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) - ( PN / MRS ) )", "choosing": "( ( CS + DS ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) - ( PN / MRS ) )", "choosing": "( ( MLU / MLU ) + ( Max( RCSe,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( Max( AMS,FirstVNF_Mem ) - FirstVNF_RAM )", "choosing": "( Min( DS ,MLU ) - ( MLU - ( RRSe / RCSe ) ) )", "obj1": 0.49015748031496065, "obj2": 0.41166520681349095}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - MUR )", "obj1": 0.2874015748031496, "obj2": 0.5741205641430709}, {"determining": "( Min( Min( PN ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) + ( RRS / FirstVNF_CPU ) )", "choosing": "( Max( MUC,DS ) * ( DS / RCSe ) )", "obj1": 0.4409448818897638, "obj2": 0.46255057353831086}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( Min( DDR ,DDR ) - ( Min( DDR ,DDR ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) )", "choosing": "( MLU - ( MLU * ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.5176775978249889}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( ( DDR + RRS ) - ( ( MRS / CRS ) - BR ) ) - ( DDR - Const ) )", "choosing": "( Max( CS,( Min( ( DS + RMSe ) ,RRSe ) + DS ) ) + MUC )", "obj1": 0.9803149606299213, "obj2": 0.011028108445480914}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) ) ) )", "choosing": "( ( ( MUM / MLU ) - ( RMSe * MUC ) ) - ( RMSe * MUC ) )", "obj1": 0.3484251968503937, "obj2": 0.5265645609020407}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.500271471464864}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU * AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe - MUR ) / MUC ) ) + CS ) )", "obj1": 0.2421259842519685, "obj2": 0.6097944754718012}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( RRS + Max( RRS,FirstVNF_Mem ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + RMSe ) - ( ( DS + ( Min( RCSe ,MUR ) * RCSe ) ) / MUC ) )", "obj1": 0.265748031496063, "obj2": 0.5962430718049808}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,( ( BR * BR ) / MDR ) ) )", "choosing": "( ( RMSe - MUR ) - ( CS + RCSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6224299769268187}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe + MUC ),MLU ) - ( RMSe + MUC ) )", "obj1": 0.16535433070866143, "obj2": 0.7052968597875047}], "31": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) - ( PN / MRS ) )", "choosing": "( ( RRSe / MUM ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) - ( PN / MRS ) )", "choosing": "( ( CS + DS ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( Max( AMS,FirstVNF_Mem ) - FirstVNF_RAM )", "choosing": "( Min( DS ,MLU ) - ( MLU - ( RRSe / RCSe ) ) )", "obj1": 0.49015748031496065, "obj2": 0.41166520681349095}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Min( Min( PN ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) + ( RRS / FirstVNF_CPU ) )", "choosing": "( Max( MUC,DS ) * ( DS / RCSe ) )", "obj1": 0.4409448818897638, "obj2": 0.46255057353831086}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) ) ) )", "choosing": "( ( ( MUM / MLU ) - ( RMSe * MUC ) ) - ( RMSe * MUC ) )", "obj1": 0.3484251968503937, "obj2": 0.5265645609020407}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,( ( BR * BR ) / MDR ) ) )", "choosing": "( ( RMSe - MUR ) - ( CS + RCSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6224299769268187}, {"determining": "( ( ( DDR + RRS ) - ( ( MRS / CRS ) - BR ) ) - ( DDR - Const ) )", "choosing": "( Max( CS,( Min( ( DS + RMSe ) ,RRSe ) + DS ) ) + MUC )", "obj1": 0.9803149606299213, "obj2": 0.011028108445480914}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.500271471464864}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - MUR )", "obj1": 0.2874015748031496, "obj2": 0.5741205641430709}, {"determining": "( ( ( ACS + RRS ) + RRS ) - ACS )", "choosing": "( Max( MUM,RMSe ) - ( DS / ( DS / RMSe ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7203985994822015}, {"determining": "( FirstVNF_CPU - Min( Min( PN ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS + ( ( RRSe - MUR ) / MUC ) ) + MUC ) )", "obj1": 0.2795275590551181, "obj2": 0.5857259486553208}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( ARS + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM / MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.36220472440944884, "obj2": 0.5086731078160067}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe + MUC ),MLU ) - ( RMSe + MUC ) )", "obj1": 0.16535433070866143, "obj2": 0.7052968597875047}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "Max( MRS,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - AMS ) )", "choosing": "( ( ( RRSe - Min( MLU ,MUR ) ) - RRSe ) * Min( ( RRSe + DS ) ,CS ) )", "obj1": 0.2440944881889764, "obj2": 0.6095862622071073}], "32": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) - ( PN / MRS ) )", "choosing": "( ( CS + DS ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) - ( PN / MRS ) )", "choosing": "( ( RRSe / MUM ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( Max( MRS,FirstVNF_Mem ) - ( BR + Min( MDR ,AMS ) ) )", "choosing": "( ( RMSe / CS ) - ( RCSe + MLU ) )", "obj1": 0.30118110236220474, "obj2": 0.5622053068948342}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( DDR + RRS ) - ( ( MRS / PN ) / BR ) )", "choosing": "( Min( ( DS + RMSe ) ,MUM ) + MUR )", "obj1": 0.9035433070866141, "obj2": 0.0707334662967307}, {"determining": "( Min( Min( PN ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) + ( RRS / FirstVNF_CPU ) )", "choosing": "( Max( MUC,DS ) * ( DS / RCSe ) )", "obj1": 0.4409448818897638, "obj2": 0.46255057353831086}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) ) ) )", "choosing": "( ( ( MUM / MLU ) - ( RMSe * MUC ) ) - ( RMSe * MUC ) )", "obj1": 0.3484251968503937, "obj2": 0.5265645609020407}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "Max( ( ACS - RRS ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( DS,( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.4153543307086614, "obj2": 0.48057099458625196}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.12401574803149606, "obj2": 0.8004931739927016}, {"determining": "( FirstVNF_CPU - Min( Min( PN ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS + ( ( RRSe - MUR ) / MUC ) ) + MUC ) )", "obj1": 0.2795275590551181, "obj2": 0.5857259486553208}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.500271471464864}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - MUR )", "obj1": 0.2874015748031496, "obj2": 0.5741205641430709}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( ( ( Min( DDR ,FirstVNF_Mem ) - ( ( ACS + AMS ) / ( DDR * FirstVNF_CPU_Server ) ) ) + AMS ) / ( DDR * MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Max( MUM,RMSe ) ) + CS ) )", "obj1": 0.2618110236220472, "obj2": 0.600156370033529}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,( ( BR * BR ) / MDR ) ) )", "choosing": "( ( RMSe - MUR ) - ( CS + RCSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6224299769268187}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( ARS + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM / MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.36220472440944884, "obj2": 0.5086731078160067}, {"determining": "( ( MDR * PN ) - ( ( DDR + MRS ) - ( Const + MRS ) ) )", "choosing": "Min( ( MLU + MUM ) ,( Max( CS,MUC ) + MUC ) )", "obj1": 0.8582677165354331, "obj2": 0.08730766821438529}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( FirstVNF_CPU_Server - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}], "33": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( FirstVNF_CPU - ( ARS + MRS ) )", "choosing": "( ( MLU / MLU ) + ( Max( ( CS + MUC ),DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) - ( PN / MRS ) )", "choosing": "( ( CS + DS ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Min( ( Min( ( Min( ( ( ( DDR / FirstVNF_RAM_Server ) * Max( ACS,BR ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_RAM / ARS ) ) + Max( ( ACS * MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_CPU ) * ( ARS / FirstVNF_RAM_Server ) ) + ( ( DDR - RRS ) * ( FirstVNF_Mem_Server + DDR ) ) ) ,Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( PN * MRS ) ) ,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) ,Max( ( ( ( ( RRS * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) - Min( ( FirstVNF_Mem_Server * BR ) ,Max( RRS,AMS ) ) ) * Max( ( Min( ACS ,BR ) * ( RRS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,DDR ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ),( Max( ( ( DDR / FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ),Min( ( MRS / MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / ( Max( RRS,RRS ) / ( ACS - MRS ) ) ) ) ) ) + ( ( ( Min( ( Min( Const ,ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( Min( AMS ,RRS ) + ( ACS - CRS ) ) - Min( Min( FirstVNF_Mem ,ARS ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) - ( Max( ( ( BR - ACS ) + Min( FirstVNF_RAM ,MDR ) ),( ( CRS / CRS ) + ( MRS + FirstVNF_CPU ) ) ) / Min( Max( ( FirstVNF_RAM - MDR ),( BR - FirstVNF_RAM_Server ) ) ,Min( Min( RRS ,MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + CRS ) - Max( FirstVNF_Mem_Server,CRS ) ) * ( ( PN / ARS ) * Max( DDR,DDR ) ) ) + ( ( ( MRS / AMS ) / ( Const + BR ) ) / Min( ( AMS - DDR ) ,( MRS + PN ) ) ) ) - ( ( ( Max( BR,Const ) - Min( FirstVNF_Mem ,Const ) ) * ( ( ACS / AMS ) - Max( CRS,PN ) ) ) + ( ( ( FirstVNF_Mem / AMS ) * Max( Const,FirstVNF_Mem ) ) + Max( ( BR * MDR ),Min( MDR ,MDR ) ) ) ) ) ) ) ,Max( ( Max( ( Max( ( ( ARS / FirstVNF_CPU_Server ) * Min( PN ,ACS ) ),( Min( BR ,FirstVNF_CPU_Server ) - Max( DDR,PN ) ) ) - ( ( Max( CRS,FirstVNF_CPU_Server ) * Min( BR ,ARS ) ) + Max( ( MDR * CRS ),( FirstVNF_RAM_Server * AMS ) ) ) ),( ( Min( Max( FirstVNF_CPU_Server,BR ) ,( AMS - BR ) ) + Min( ( FirstVNF_CPU / ARS ) ,( CRS + MRS ) ) ) - ( ( ( DDR - BR ) + ( RRS / FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( FirstVNF_RAM + MDR ) ) ) ) ) + ( ( ( ( ( PN / BR ) + ( ARS - DDR ) ) / Min( ( DDR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( ( ( MDR - BR ) + Max( RRS,ACS ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server * PN ) / ( PN + MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) + ( ( Max( FirstVNF_Mem_Server,MDR ) - ( DDR - CRS ) ) + ( Min( BR ,RRS ) / Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) ),( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),Min( CRS ,ARS ) ) - Min( ( PN / FirstVNF_CPU ) ,( AMS + FirstVNF_Mem_Server ) ) ) + ( Min( ( FirstVNF_CPU / DDR ) ,( FirstVNF_RAM_Server - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( Const ,Const ) ) ) ) / Min( ( ( Max( ARS,PN ) + Min( FirstVNF_CPU ,CRS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server * AMS ) * Min( FirstVNF_Mem_Server ,BR ) ),Max( Max( MRS,FirstVNF_RAM ),( FirstVNF_Mem_Server / AMS ) ) ) ) ) / Max( ( ( Max( Max( ACS,ARS ),( ARS - CRS ) ) - ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_CPU - ACS ) ) ) * Min( ( ( MRS - FirstVNF_RAM ) / ( ACS + FirstVNF_Mem ) ) ,( Max( MRS,Const ) / ( ARS + BR ) ) ) ),Min( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( MDR / CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS + CRS ) ) ) ,Min( ( Min( ACS ,AMS ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,Max( ( PN + FirstVNF_CPU_Server ),( CRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( ( ( MUC / DS ) - RMSe ) - MUC ) )", "obj1": 0.6220472440944882, "obj2": 0.28257358795499843}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( ( ACS + FirstVNF_CPU_Server ) - ACS ) ) ),Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MLU ) - ( MUC * MUC ) ),( Min( RCSe ,DS ) - ( MUC / CS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7742273806063228}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( AMS * BR ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) - Min( RRS ,FirstVNF_CPU ) ) ) / ( ( Min( FirstVNF_RAM_Server ,PN ) * Min( FirstVNF_RAM ,Const ) ) * ( Max( MDR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Max( MDR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) + ( CRS - FirstVNF_RAM_Server ) ) ) / Min( Max( ( AMS + DDR ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) + Min( Min( ( ( ( DDR / RRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + ( ( Const + ACS ) - ( CRS - CRS ) ) ) ,( ( Min( DDR ,MDR ) + ( Const - FirstVNF_CPU ) ) - Max( ( PN - AMS ),( BR * FirstVNF_RAM ) ) ) ) ,Max( Min( ( ( MRS / MRS ) / ( Const * PN ) ) ,Min( ( ARS * MDR ) ,( DDR * FirstVNF_RAM ) ) ),( Max( ( AMS / FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) ) * Max( Max( PN,FirstVNF_Mem ),( MRS * FirstVNF_RAM ) ) ) ) ) ) + ( ( ( Max( ( ( DDR * Const ) - ( AMS + CRS ) ),( Min( FirstVNF_Mem ,RRS ) - Min( AMS ,DDR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * Max( FirstVNF_Mem,RRS ) ) - Max( Min( MDR ,Const ),( Const / Const ) ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,MRS ) + ( FirstVNF_Mem / Const ) ) - Max( Min( MDR ,FirstVNF_CPU ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_CPU_Server ) * ( FirstVNF_RAM + BR ) ) * Min( Min( FirstVNF_Mem ,DDR ) ,( RRS * FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + RRS ) + ( ACS + MRS ) ) ,Max( Min( ARS ,Const ),( ACS * FirstVNF_CPU_Server ) ) ) - ( Max( Min( Const ,MRS ),Max( MRS,FirstVNF_RAM ) ) - Max( Max( FirstVNF_Mem_Server,ACS ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( ( Max( ( FirstVNF_RAM * BR ),( RRS - ARS ) ) / Max( ( BR * DDR ),( MRS - Const ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) + ( DDR / ARS ) ),( Min( FirstVNF_Mem ,CRS ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( PN,BR ) ,Max( RRS,BR ) ) / ( ( DDR - PN ) - ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( CRS + BR ) ) / ( ( MRS - MDR ) - Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( Const / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * Const ) ) * Min( Min( FirstVNF_Mem ,Const ) ,( FirstVNF_Mem - ARS ) ) ),( ( ( ACS - ARS ) / ( PN - ACS ) ) * ( Min( Const ,DDR ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( Min( ( ACS - RRS ) ,Max( BR,FirstVNF_RAM ) ),( ( MRS - FirstVNF_CPU_Server ) / Min( BR ,MDR ) ) ) ,( Min( ( DDR + PN ) ,Min( RRS ,RRS ) ) / Max( ( FirstVNF_CPU - MRS ),( FirstVNF_CPU_Server - ARS ) ) ) ) - ( Max( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU + FirstVNF_CPU ) ),( ( ACS / MRS ) * Min( ACS ,FirstVNF_CPU ) ) ) - ( ( ( Const + CRS ) - ( CRS - ACS ) ) * ( ( MRS * ACS ) / ( PN - BR ) ) ) ) ) ) ,( ( Max( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_Mem * Const ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( PN / RRS ) / ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * MDR ) / ( CRS + CRS ) ) ) ) / ( Max( Max( ( CRS / PN ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( ( RRS - BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / Const ) * ( MRS - Const ) ) + ( ( AMS / FirstVNF_Mem_Server ) + ( DDR * DDR ) ) ) ) ) + ( ( ( ( Max( CRS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * DDR ) - ( DDR + FirstVNF_CPU_Server ) ) ) / Min( ( Min( PN ,FirstVNF_CPU ) + Max( MDR,FirstVNF_Mem_Server ) ) ,( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( Const / MRS ) ) - ( ( CRS - FirstVNF_RAM_Server ) / ( RRS / DDR ) ) ) * Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( ACS - MRS ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( MUR / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.368341143150112}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( DDR + RRS ) - ( ( MRS / PN ) / BR ) )", "choosing": "( Min( ( DS + RMSe ) ,MUM ) + MUR )", "obj1": 0.9035433070866141, "obj2": 0.0707334662967307}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,( ( BR * BR ) / MDR ) ) )", "choosing": "( ( RMSe - MUR ) - ( CS + RCSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6224299769268187}, {"determining": "( Min( Min( PN ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) + ( RRS / FirstVNF_CPU ) )", "choosing": "( Max( MUC,DS ) * ( DS / RCSe ) )", "obj1": 0.4409448818897638, "obj2": 0.46255057353831086}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( FirstVNF_CPU_Server - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( ARS + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM / MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.36220472440944884, "obj2": 0.5086731078160067}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "( ( DDR / DDR ) - ( DDR + MRS ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.10826771653543307, "obj2": 0.8267632849620592}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU * AMS ),Min( FirstVNF_CPU_Server ,( FirstVNF_Mem - RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( MUC + CS ) )", "obj1": 0.4094488188976378, "obj2": 0.476830626313271}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( FirstVNF_CPU - Min( Min( PN ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS + ( ( RRSe - MUR ) / MUC ) ) + MUC ) )", "obj1": 0.2795275590551181, "obj2": 0.5857259486553208}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( MRS / MRS ) )", "choosing": "( Min( DS ,MLU ) + MUC )", "obj1": 0.9744094488188977, "obj2": 0.01888068710172459}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) ) ) )", "choosing": "( ( ( MUM / MLU ) - ( RMSe * MUC ) ) - ( RMSe * MUC ) )", "obj1": 0.3484251968503937, "obj2": 0.5265645609020407}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU * AMS ),Min( ( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU * AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe - MUR ) / DS ) ) + CS ) )", "obj1": 0.2618110236220472, "obj2": 0.5983596315622405}, {"determining": "( Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - MUR )", "obj1": 0.2874015748031496, "obj2": 0.5741205641430709}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) ) * ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( CS * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8011467151858614}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU * AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe - MUR ) / MUC ) ) + CS ) )", "obj1": 0.2618110236220472, "obj2": 0.5983596315622405}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}], "34": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( AMS / FirstVNF_Mem ) - ( AMS / CRS ) )", "choosing": "Max( Min( ( ( ( CS / Min( RRSe ,( Min( RRSe ,RRSe ) * ( DS + CS ) ) ) ) + ( ( ( ( RRSe + MUC ) + MLU ) + Min( MUC ,RCSe ) ) * ( RMSe + ( MUC + RCSe ) ) ) ) - MLU ) ,MUR ),Min( ( RCSe * ( MUR + MUM ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ARS + MRS ) )", "choosing": "( ( MLU / MLU ) + ( Max( ( CS + MUC ),DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( Min( Min( PN ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) + ( RRS / FirstVNF_CPU ) )", "choosing": "( Max( MUC,DS ) * ( DS / RCSe ) )", "obj1": 0.4409448818897638, "obj2": 0.46255057353831086}, {"determining": "( FirstVNF_CPU_Server - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,RRS ) ) ) )", "choosing": "( ( ( MUM / MLU ) - ( RMSe * MUC ) ) - ( RMSe * MUC ) )", "obj1": 0.3484251968503937, "obj2": 0.5265645609020407}, {"determining": "( ( DDR + RRS ) - ( ( MRS / PN ) / BR ) )", "choosing": "( Min( ( DS + RMSe ) ,MUM ) + MUR )", "obj1": 0.9035433070866141, "obj2": 0.0707334662967307}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "Max( Max( DDR,RRS ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.1062992125984252, "obj2": 0.8088220425861975}, {"determining": "( Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - MUR )", "obj1": 0.2874015748031496, "obj2": 0.5741205641430709}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU * AMS ),Min( FirstVNF_CPU_Server ,( FirstVNF_Mem - RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( MUC + CS ) )", "obj1": 0.4094488188976378, "obj2": 0.476830626313271}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( FirstVNF_CPU - Min( Min( PN ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS + ( ( RRSe - MUR ) / MUC ) ) + MUC ) )", "obj1": 0.2795275590551181, "obj2": 0.5857259486553208}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( MRS / MRS ) )", "choosing": "( Min( DS ,MLU ) + MUC )", "obj1": 0.9744094488188977, "obj2": 0.01888068710172459}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( ARS + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM / MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.36220472440944884, "obj2": 0.5086731078160067}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( PN - Max( FirstVNF_CPU,( PN - Max( FirstVNF_CPU,DDR ) ) ) )", "choosing": "( ( CS + Max( ( ( RRSe - MUR ) - MUR ),CS ) ) + RRSe )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( Max( CS,MUM ) - ( CS + Max( CS,MUM ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468264557535208}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( ARS + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM / MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.36220472440944884, "obj2": 0.5086731078160067}, {"determining": "( ( Max( Min( RRS ,DDR ),PN ) * Min( ACS ,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),FirstVNF_CPU ) ) ) - Min( ( FirstVNF_Mem + Min( ( ARS + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM / MUC ),Min( ( RCSe * ( MUR + MUM ) ) ,MUM ) ) - ( RMSe + CS ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}], "35": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( AMS / FirstVNF_Mem ) - ( AMS / CRS ) )", "choosing": "( ( MUC * DS ) - ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_Mem ) - ( AMS / CRS ) )", "choosing": "Max( Min( ( ( ( CS / Min( RRSe ,( Min( RRSe ,RRSe ) * ( DS + CS ) ) ) ) + ( ( ( ( RRSe + MUC ) + MLU ) + Min( MUC ,RCSe ) ) * ( RMSe + ( MUC + RCSe ) ) ) ) - MLU ) ,MUR ),Min( ( RCSe * ( MUR + MUM ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( DDR + RRS ) - ( ( MRS / PN ) / BR ) )", "choosing": "( Min( ( DS + RMSe ) ,MUM ) + MUR )", "obj1": 0.9035433070866141, "obj2": 0.0707334662967307}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( Min( Min( PN ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) + ( RRS / FirstVNF_CPU ) )", "choosing": "( Max( MUC,DS ) * ( DS / RCSe ) )", "obj1": 0.4409448818897638, "obj2": 0.46255057353831086}, {"determining": "( FirstVNF_CPU_Server - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "( ( ACS - RRS ) - ( RRS / RRS ) )", "choosing": "( Max( MUM,( Max( MUM,MLU ) / ( RMSe + MUC ) ) ) - ( RMSe + MUC ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "Max( Max( DDR,RRS ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.1062992125984252, "obj2": 0.8088220425861975}, {"determining": "( Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - MUR )", "obj1": 0.2874015748031496, "obj2": 0.5741205641430709}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU * AMS ),Min( FirstVNF_CPU_Server ,( FirstVNF_Mem - RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( MUC + CS ) )", "obj1": 0.4094488188976378, "obj2": 0.476830626313271}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( Max( Min( RRS ,DDR ),PN ) * Min( ACS ,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUM / MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.23818897637795275, "obj2": 0.6204272786234646}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.33267716535433073, "obj2": 0.5299892183512377}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.27755905511811024, "obj2": 0.5978827057355153}, {"determining": "( FirstVNF_CPU - Min( Min( PN ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS + ( ( RRSe - MUR ) / MUC ) ) + MUC ) )", "obj1": 0.2795275590551181, "obj2": 0.5857259486553208}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( Max( CS,MUM ) - ( CS + Max( CS,MUM ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468264557535208}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( ARS + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM / MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.36220472440944884, "obj2": 0.5086731078160067}, {"determining": "( ( Max( Min( RRS ,DDR ),PN ) * Min( ACS ,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),FirstVNF_CPU ) ) ) - Min( ( FirstVNF_Mem + Min( ( ARS + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM / MUC ),Min( ( RCSe * ( MUR + MUM ) ) ,MUM ) ) - ( RMSe + CS ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}], "36": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( Max( ACS,DDR ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe / DS ) + ( ( CS - MUC ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_Mem ) - ( AMS / CRS ) )", "choosing": "( ( MUC * DS ) - ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5068345289426749}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "Max( Max( DDR,RRS ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.1062992125984252, "obj2": 0.8088220425861975}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( FirstVNF_CPU_Server - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( PN - Max( FirstVNF_CPU,( PN - Max( FirstVNF_CPU,DDR ) ) ) )", "choosing": "( ( CS + Max( ( ( RRSe - MUR ) - MUR ),CS ) ) + RRSe )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU * AMS ),Min( FirstVNF_CPU_Server ,( FirstVNF_Mem - RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( MUC + CS ) )", "obj1": 0.4094488188976378, "obj2": 0.476830626313271}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.517798580006882}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "Max( ( PN + Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / ( PN - Max( FirstVNF_CPU,DDR ) ) ),FirstVNF_Mem ) - Const ) )", "choosing": "( ( ( MUM - ( MLU / MUR ) ) + RRSe ) * ( ( RRSe - MUR ) - MUR ) )", "obj1": 0.1515748031496063, "obj2": 0.7599096540801473}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( RRSe / DS ) + MUC )", "obj1": 0.10039370078740158, "obj2": 0.8288926096781951}, {"determining": "Max( Max( DDR,RRS ),( ACS - FirstVNF_CPU ) )", "choosing": "( Max( CS,MUM ) - ( CS + RCSe ) )", "obj1": 0.2283464566929134, "obj2": 0.627511459885852}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.33267716535433073, "obj2": 0.5299892183512377}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.27755905511811024, "obj2": 0.5978827057355153}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( CS,( RRSe / ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MUC ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5739273474136751}], "37": [{"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + RRSe ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( MUM / DS ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( Max( ACS,DDR ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe / DS ) + ( ( CS - MUC ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.27755905511811024, "obj2": 0.5978827057355153}, {"determining": "Max( Max( DDR,RRS ),( ACS - FirstVNF_CPU ) )", "choosing": "( Max( CS,MUM ) - ( CS + RCSe ) )", "obj1": 0.2283464566929134, "obj2": 0.627511459885852}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( CS,( RRSe / ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MUC ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5739273474136751}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "Max( Max( DDR,RRS ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.1062992125984252, "obj2": 0.8088220425861975}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( FirstVNF_CPU_Server - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / ACS ) )", "choosing": "( Max( ( ( MLU + MLU ) * Max( MUM,RRSe ) ),( ( MUR + DS ) + Max( MUR,MUR ) ) ) * ( ( ( DS - MLU ) + Min( RRSe ,MLU ) ) / ( ( MLU / RCSe ) / ( DS - RMSe ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.4168680601718263}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU * AMS ),Min( FirstVNF_CPU_Server ,( FirstVNF_Mem - RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( MUC + CS ) )", "obj1": 0.4094488188976378, "obj2": 0.476830626313271}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5068345289426749}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( RRSe / DS ) + MUC )", "obj1": 0.10039370078740158, "obj2": 0.8288926096781951}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.33267716535433073, "obj2": 0.5299892183512377}, {"determining": "( PN - Max( FirstVNF_CPU,( PN - Max( FirstVNF_CPU,DDR ) ) ) )", "choosing": "( ( CS + Max( ( ( RRSe - MUR ) - MUR ),CS ) ) + RRSe )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "Min( Max( RCSe,MUC ) ,( MUR - CS ) )", "obj1": 0.9035433070866141, "obj2": 0.06329050546356683}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5068345289426749}], "38": [{"determining": "Max( Min( DDR ,RRS ),( ACS - DDR ) )", "choosing": "( Max( RMSe,CS ) - Min( ( ( DS * RCSe ) * MLU ) ,DS ) )", "obj1": 0.09448818897637795, "obj2": 0.8758710087259044}, {"determining": "( ( BR + DDR ) - ( ( ACS + FirstVNF_Mem_Server ) - ( RRS + MRS ) ) )", "choosing": "( ( CS / MUM ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( MUM / DS ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,RRS ),( ACS - DDR ) )", "choosing": "( Max( RMSe,CS ) - Min( ( ( DS * RCSe ) * MLU ) ,DS ) )", "obj1": 0.09448818897637795, "obj2": 0.8758710087259044}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Max( Max( DDR,RRS ),( ACS - FirstVNF_CPU ) )", "choosing": "( Max( CS,MUM ) - ( CS + RCSe ) )", "obj1": 0.2283464566929134, "obj2": 0.627511459885852}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( FirstVNF_CPU_Server - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.33267716535433073, "obj2": 0.5299892183512377}, {"determining": "( PN - Max( FirstVNF_CPU,( PN - Max( FirstVNF_CPU,DDR ) ) ) )", "choosing": "( ( CS + Max( ( ( RRSe - MUR ) - MUR ),CS ) ) + RRSe )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5068345289426749}, {"determining": "Max( Max( DDR,RRS ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.1062992125984252, "obj2": 0.8088220425861975}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU * AMS ),Min( FirstVNF_CPU_Server ,( FirstVNF_Mem - RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( MUC + CS ) )", "obj1": 0.4094488188976378, "obj2": 0.476830626313271}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.27755905511811024, "obj2": 0.5978827057355153}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( CS,( RRSe / ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MUC ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5739273474136751}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5068345289426749}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "Min( Max( RCSe,MUC ) ,( MUR - CS ) )", "obj1": 0.9035433070866141, "obj2": 0.06329050546356683}], "39": [{"determining": "Max( Min( DDR ,RRS ),( ACS - DDR ) )", "choosing": "( Max( RMSe,CS ) - Min( ( ( DS * RCSe ) * MLU ) ,DS ) )", "obj1": 0.09448818897637795, "obj2": 0.8758710087259044}, {"determining": "( ( PN - FirstVNF_CPU_Server ) - ( RRS + MRS ) )", "choosing": "( ( DS + RRSe ) + ( Max( MUR,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + DDR ) - ( ( ACS + FirstVNF_Mem_Server ) - ( RRS + MRS ) ) )", "choosing": "( ( CS / MUM ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,RRS ),( ACS - DDR ) )", "choosing": "( Max( RMSe,CS ) - Min( ( ( DS * RCSe ) * MLU ) ,DS ) )", "obj1": 0.09448818897637795, "obj2": 0.8758710087259044}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "Max( Max( DDR,RRS ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.1062992125984252, "obj2": 0.8088220425861975}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.27755905511811024, "obj2": 0.5978827057355153}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( CS,( RRSe / ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MUC ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5739273474136751}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( FirstVNF_CPU_Server - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + ( DS + ( ( RRSe * MUR ) + MUC ) ) ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5166795268584307}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU * AMS ),Min( FirstVNF_CPU_Server ,( FirstVNF_Mem - RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( MUC + CS ) )", "obj1": 0.4094488188976378, "obj2": 0.476830626313271}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( PN - Max( FirstVNF_CPU,( PN - Max( FirstVNF_CPU,DDR ) ) ) )", "choosing": "( ( CS + Max( ( ( RRSe - MUR ) - MUR ),CS ) ) + RRSe )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) )", "choosing": "( ( DS / ( RCSe / MLU ) ) - ( CS + RCSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6211727105059407}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5068345289426749}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( Max( DDR,RRS ),( ACS - FirstVNF_CPU ) )", "choosing": "( Max( CS,MUM ) - ( CS + RCSe ) )", "obj1": 0.2283464566929134, "obj2": 0.627511459885852}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}], "40": [{"determining": "Max( Min( DDR ,RRS ),( ACS - DDR ) )", "choosing": "( Max( RMSe,CS ) - Min( ( ( DS * RCSe ) * MLU ) ,DS ) )", "obj1": 0.09448818897637795, "obj2": 0.8758710087259044}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) )", "choosing": "( MUM + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) - ( RRS + MRS ) )", "choosing": "( ( DS + RRSe ) + ( Max( MUR,DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,RRS ),( ACS - DDR ) )", "choosing": "( Max( RMSe,CS ) - Min( ( ( DS * RCSe ) * MLU ) ,DS ) )", "obj1": 0.09448818897637795, "obj2": 0.8758710087259044}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Max( Max( DDR,RRS ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.1062992125984252, "obj2": 0.8088220425861975}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.36023622047244097, "obj2": 0.5068345289426749}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( CS,( RRSe / ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MUC ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5739273474136751}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.27755905511811024, "obj2": 0.5978827057355153}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( PN - Max( FirstVNF_CPU,( PN - Max( FirstVNF_CPU,DDR ) ) ) )", "choosing": "( ( CS + Max( ( ( RRSe - MUR ) - MUR ),CS ) ) + RRSe )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) )", "choosing": "( ( DS / ( RCSe / MLU ) ) - ( CS + RCSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6211727105059407}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + ( DS + ( ( RRSe * MUR ) + MUC ) ) ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5166795268584307}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "( Max( MDR,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( Max( CS,MUM ) - ( CS + RCSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( Max( DDR,RRS ),( ACS - FirstVNF_CPU ) )", "choosing": "( Max( CS,MUM ) - ( CS + RCSe ) )", "obj1": 0.2283464566929134, "obj2": 0.627511459885852}], "41": [{"determining": "Max( Min( DDR ,RRS ),( ACS - DDR ) )", "choosing": "( Max( RMSe,CS ) - Min( ( ( DS * RCSe ) * MLU ) ,DS ) )", "obj1": 0.09448818897637795, "obj2": 0.8758710087259044}, {"determining": "( Max( MDR,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - ( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) )", "choosing": "( MUM + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,RRS ),( ACS - DDR ) )", "choosing": "( Max( RMSe,CS ) - Min( ( ( DS * RCSe ) * MLU ) ,DS ) )", "obj1": 0.09448818897637795, "obj2": 0.8758710087259044}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Max( Max( DDR,RRS ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.1062992125984252, "obj2": 0.8088220425861975}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.27755905511811024, "obj2": 0.5978827057355153}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( CS,( RRSe / ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MUC ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5739273474136751}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Max( MDR,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,( Max( CS,MUM ) - ( CS + RCSe ) ) ) - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( PN - Min( MDR ,DDR ) )", "choosing": "( ( CS + ( ( RRSe - MUR ) / Min( Max( MLU,MUC ) ,( MUR + MUM ) ) ) ) + RRSe )", "obj1": 0.7677165354330708, "obj2": 0.11209262874080009}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5300971566727893}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) )", "choosing": "( ( DS / ( RCSe / MLU ) ) - ( CS + RCSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6211727105059407}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( Max( DDR,RRS ),( ACS - FirstVNF_CPU ) )", "choosing": "( Max( CS,MUM ) - ( CS + RCSe ) )", "obj1": 0.2283464566929134, "obj2": 0.627511459885852}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}], "42": [{"determining": "( ( AMS / FirstVNF_Mem ) - ( AMS / CRS ) )", "choosing": "( CS - Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - ( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.27755905511811024, "obj2": 0.5978827057355153}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( CS,( RRSe / ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MUC ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5739273474136751}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "Max( Max( DDR,RRS ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.1062992125984252, "obj2": 0.8088220425861975}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( BR,( ( CRS / CRS ) + MRS ) ) )", "choosing": "Min( ( RCSe * ( DS + ( ( ( MUR / MUC ) - Min( ( RRSe * CS ) ,MUR ) ) / Max( MLU,DS ) ) ) ) ,( Max( ( ( MLU / RRSe ) * MUC ),( RCSe + MLU ) ) * ( DS + MLU ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5487334714141369}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( RRSe / DS ) + MUC )", "obj1": 0.10433070866141732, "obj2": 0.8271570833006694}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}, {"determining": "( ( ARS / ( DDR + Const ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUR / ( Max( MUC,DS ) * ( CS * RRSe ) ) ) + MUC )", "obj1": 0.32086614173228345, "obj2": 0.5313621850985584}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) )", "choosing": "( ( DS / ( RCSe / MLU ) ) - ( CS + RCSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6211727105059407}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( ( ( ( DS * RCSe ) * CS ) + MUM ) - ( CS + RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.5274187957213565}], "43": [{"determining": "( ( BR + MRS ) - DDR )", "choosing": "( ( CS / ( ( DS * RCSe ) * CS ) ) + ( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_Mem ) - ( AMS / CRS ) )", "choosing": "( CS - Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.27755905511811024, "obj2": 0.5978827057355153}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) )", "choosing": "( ( DS / ( RCSe / MLU ) ) - ( CS + RCSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6211727105059407}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( CS,( RRSe / ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MUC ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5739273474136751}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "Max( Max( DDR,RRS ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.1062992125984252, "obj2": 0.8088220425861975}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( ( ( ( DS * RCSe ) * CS ) + MUM ) - ( CS + RCSe ) )", "obj1": 0.33858267716535434, "obj2": 0.5274187957213565}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( Min( AMS ,MRS ),( Min( DDR ,DDR ) - ( DDR / RRS ) ) )", "choosing": "( ( MUM - MLU ) / ( DS - MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.6966040286933761}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3169291338582677, "obj2": 0.5412899373895005}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( RRSe / DS ) + MUC )", "obj1": 0.10433070866141732, "obj2": 0.8271570833006694}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}, {"determining": "( PN - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUR,CS ) ,Min( MUR ,MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.003214543584045698}], "44": [{"determining": "( Min( ( ( Min( Max( Max( ( PN - Const ),Max( DDR,ARS ) ),( ( CRS / FirstVNF_RAM_Server ) * ( RRS - MRS ) ) ) ,Min( ( Max( FirstVNF_Mem,MDR ) / ( RRS + FirstVNF_RAM_Server ) ) ,( ( MRS * MRS ) + ( FirstVNF_Mem_Server - DDR ) ) ) ) * ( ( ( Max( PN,ARS ) - ( Const - ACS ) ) + ( Max( MDR,AMS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + ( MRS / FirstVNF_Mem ) ) / ( ( Const + ARS ) / ( MRS + CRS ) ) ) ) ) * ( ( ( Max( ( MRS + ACS ),( FirstVNF_RAM_Server + RRS ) ) / Max( ( DDR + FirstVNF_Mem ),Max( AMS,PN ) ) ) - Max( ( ( FirstVNF_Mem - PN ) + ( ARS * ARS ) ),( ( FirstVNF_CPU_Server - ACS ) * ( FirstVNF_RAM * MDR ) ) ) ) * ( Max( Max( Max( AMS,FirstVNF_RAM_Server ),( RRS - FirstVNF_Mem_Server ) ),( ( CRS + ARS ) / ( DDR - MRS ) ) ) - ( ( ( FirstVNF_RAM / AMS ) * Min( RRS ,PN ) ) - Min( ( BR * ARS ) ,( Const + MDR ) ) ) ) ) ) ,( ( ( Min( Max( ( FirstVNF_Mem - CRS ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( PN ,ARS ) ) ) + ( ( Min( FirstVNF_Mem_Server ,MRS ) / Max( FirstVNF_RAM,FirstVNF_Mem ) ) - ( ( AMS + PN ) + ( ACS * Const ) ) ) ) / Min( ( ( ( ACS + FirstVNF_RAM ) + Max( BR,FirstVNF_CPU_Server ) ) * Min( ( Const + MDR ) ,( FirstVNF_RAM_Server - PN ) ) ) ,( Min( Min( RRS ,ACS ) ,( FirstVNF_RAM / CRS ) ) - ( ( Const / AMS ) + Min( PN ,ACS ) ) ) ) ) + Min( ( Max( ( ( FirstVNF_CPU_Server + PN ) * ( FirstVNF_Mem_Server * CRS ) ),( Min( FirstVNF_CPU ,BR ) / ( CRS * FirstVNF_Mem_Server ) ) ) - ( ( ( ACS / PN ) + ( FirstVNF_Mem / MRS ) ) / Max( Min( ARS ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ,( Max( ( ( MRS / DDR ) / ( FirstVNF_RAM + AMS ) ),Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) - Max( Min( ( DDR / AMS ) ,( FirstVNF_RAM / AMS ) ),( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( ( ( ( ( Const * FirstVNF_Mem_Server ) * ( MDR * CRS ) ) / ( ( MDR / Const ) * Max( FirstVNF_CPU,BR ) ) ) * ( Max( Min( DDR ,Const ),( ACS + FirstVNF_CPU_Server ) ) + ( ( FirstVNF_CPU_Server / DDR ) / ( DDR / MDR ) ) ) ) + Min( ( ( ( BR - ACS ) - ( MRS / CRS ) ) - Max( ( FirstVNF_CPU * DDR ),( AMS * ARS ) ) ) ,Max( ( Max( CRS,ACS ) / ( FirstVNF_RAM - MRS ) ),( ( MRS * FirstVNF_CPU ) + Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) + Min( ( Min( Min( ( FirstVNF_Mem * ACS ) ,( ARS * DDR ) ) ,( ( FirstVNF_Mem_Server * Const ) / Max( MDR,FirstVNF_Mem_Server ) ) ) * ( ( ( ACS * AMS ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - ( Max( ARS,MDR ) - ( FirstVNF_Mem_Server - MRS ) ) ) ) ,( Max( ( ( FirstVNF_CPU / FirstVNF_CPU ) + ( BR + FirstVNF_RAM ) ),( ( RRS + FirstVNF_Mem_Server ) - ( PN / MRS ) ) ) / ( ( ( PN / FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * Min( RRS ,ACS ) ) ) ) ) ) ,Min( Min( ( Max( Min( Min( DDR ,MDR ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,MRS ) ) ) - ( ( ( MDR / DDR ) * ( MRS + BR ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / Min( AMS ,ARS ) ) ) ) ,Min( ( ( ( PN + FirstVNF_RAM_Server ) * Max( BR,DDR ) ) + Max( ( ACS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,Min( ( ( FirstVNF_Mem_Server * MDR ) - Min( ARS ,DDR ) ) ,Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Min( BR ,PN ) ) ) ) ) ,Max( ( ( Min( Min( ARS ,ARS ) ,Max( MRS,MDR ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( Const + MRS ) ) ) + Max( ( Max( FirstVNF_CPU,AMS ) + ( MRS / BR ) ),( ( FirstVNF_CPU_Server / MDR ) - Min( RRS ,Const ) ) ) ),Min( ( Max( ( DDR * RRS ),( ACS * FirstVNF_Mem_Server ) ) + ( ( MRS * RRS ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_RAM * RRS ) ) + Max( ( DDR - CRS ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( MUR,RRSe ) + MUR ),( DS + ( RCSe - ( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + MRS ) - DDR )", "choosing": "( ( CS / ( ( DS * RCSe ) * CS ) ) + ( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.27755905511811024, "obj2": 0.5978827057355153}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) )", "choosing": "( ( DS / ( RCSe / MLU ) ) - ( CS + RCSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6211727105059407}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( CS,( RRSe / ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MUC ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5739273474136751}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( ( ACS / FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "( ( DS / ( Max( RCSe,MUC ) / ( MUR + RMSe ) ) ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.33858267716535434, "obj2": 0.523342366185596}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3169291338582677, "obj2": 0.5412899373895005}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4251968503937008, "obj2": 0.4496413539478303}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( RRSe / DS ) + MUC )", "obj1": 0.10433070866141732, "obj2": 0.8271570833006694}, {"determining": "( Min( AMS ,CRS ) - Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( ( Const / FirstVNF_CPU ) - FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,MUR ) - RCSe ) - ( DS / MUC ) )", "obj1": 0.11811023622047244, "obj2": 0.8067131645052963}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}, {"determining": "( PN - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUR,CS ) ,Min( MUR ,MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.003214543584045698}], "45": [{"determining": "( ( BR / FirstVNF_Mem ) - ( ARS / CRS ) )", "choosing": "( RRSe - Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( Max( Max( ( PN - Const ),Max( DDR,ARS ) ),( ( CRS / FirstVNF_RAM_Server ) * ( RRS - MRS ) ) ) ,Min( ( Max( FirstVNF_Mem,MDR ) / ( RRS + FirstVNF_RAM_Server ) ) ,( ( MRS * MRS ) + ( FirstVNF_Mem_Server - DDR ) ) ) ) * ( ( ( Max( PN,ARS ) - ( Const - ACS ) ) + ( Max( MDR,AMS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + ( MRS / FirstVNF_Mem ) ) / ( ( Const + ARS ) / ( MRS + CRS ) ) ) ) ) * ( ( ( Max( ( MRS + ACS ),( FirstVNF_RAM_Server + RRS ) ) / Max( ( DDR + FirstVNF_Mem ),Max( AMS,PN ) ) ) - Max( ( ( FirstVNF_Mem - PN ) + ( ARS * ARS ) ),( ( FirstVNF_CPU_Server - ACS ) * ( FirstVNF_RAM * MDR ) ) ) ) * ( Max( Max( Max( AMS,FirstVNF_RAM_Server ),( RRS - FirstVNF_Mem_Server ) ),( ( CRS + ARS ) / ( DDR - MRS ) ) ) - ( ( ( FirstVNF_RAM / AMS ) * Min( RRS ,PN ) ) - Min( ( BR * ARS ) ,( Const + MDR ) ) ) ) ) ) ,( ( ( Min( Max( ( FirstVNF_Mem - CRS ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( PN ,ARS ) ) ) + ( ( Min( FirstVNF_Mem_Server ,MRS ) / Max( FirstVNF_RAM,FirstVNF_Mem ) ) - ( ( AMS + PN ) + ( ACS * Const ) ) ) ) / Min( ( ( ( ACS + FirstVNF_RAM ) + Max( BR,FirstVNF_CPU_Server ) ) * Min( ( Const + MDR ) ,( FirstVNF_RAM_Server - PN ) ) ) ,( Min( Min( RRS ,ACS ) ,( FirstVNF_RAM / CRS ) ) - ( ( Const / AMS ) + Min( PN ,ACS ) ) ) ) ) + Min( ( Max( ( ( FirstVNF_CPU_Server + PN ) * ( FirstVNF_Mem_Server * CRS ) ),( Min( FirstVNF_CPU ,BR ) / ( CRS * FirstVNF_Mem_Server ) ) ) - ( ( ( ACS / PN ) + ( FirstVNF_Mem / MRS ) ) / Max( Min( ARS ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ,( Max( ( ( MRS / DDR ) / ( FirstVNF_RAM + AMS ) ),Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) - Max( Min( ( DDR / AMS ) ,( FirstVNF_RAM / AMS ) ),( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( ( ( ( ( Const * FirstVNF_Mem_Server ) * ( MDR * CRS ) ) / ( ( MDR / Const ) * Max( FirstVNF_CPU,BR ) ) ) * ( Max( Min( DDR ,Const ),( ACS + FirstVNF_CPU_Server ) ) + ( ( FirstVNF_CPU_Server / DDR ) / ( DDR / MDR ) ) ) ) + Min( ( ( ( BR - ACS ) - ( MRS / CRS ) ) - Max( ( FirstVNF_CPU * DDR ),( AMS * ARS ) ) ) ,Max( ( Max( CRS,ACS ) / ( FirstVNF_RAM - MRS ) ),( ( MRS * FirstVNF_CPU ) + Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) + Min( ( Min( Min( ( FirstVNF_Mem * ACS ) ,( ARS * DDR ) ) ,( ( FirstVNF_Mem_Server * Const ) / Max( MDR,FirstVNF_Mem_Server ) ) ) * ( ( ( ACS * AMS ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - ( Max( ARS,MDR ) - ( FirstVNF_Mem_Server - MRS ) ) ) ) ,( Max( ( ( FirstVNF_CPU / FirstVNF_CPU ) + ( BR + FirstVNF_RAM ) ),( ( RRS + FirstVNF_Mem_Server ) - ( PN / MRS ) ) ) / ( ( ( PN / FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * Min( RRS ,ACS ) ) ) ) ) ) ,Min( Min( ( Max( Min( Min( DDR ,MDR ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,MRS ) ) ) - ( ( ( MDR / DDR ) * ( MRS + BR ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / Min( AMS ,ARS ) ) ) ) ,Min( ( ( ( PN + FirstVNF_RAM_Server ) * Max( BR,DDR ) ) + Max( ( ACS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,Min( ( ( FirstVNF_Mem_Server * MDR ) - Min( ARS ,DDR ) ) ,Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Min( BR ,PN ) ) ) ) ) ,Max( ( ( Min( Min( ARS ,ARS ) ,Max( MRS,MDR ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( Const + MRS ) ) ) + Max( ( Max( FirstVNF_CPU,AMS ) + ( MRS / BR ) ),( ( FirstVNF_CPU_Server / MDR ) - Min( RRS ,Const ) ) ) ),Min( ( Max( ( DDR * RRS ),( ACS * FirstVNF_Mem_Server ) ) + ( ( MRS * RRS ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_CPU ,RRS ) / ( FirstVNF_RAM * RRS ) ) + Max( ( DDR - CRS ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( MUR,RRSe ) + MUR ),( DS + ( RCSe - ( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( PN - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( ( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) ),RRSe ) ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.10742155887581498}, {"determining": "( Min( DDR ,Max( Min( AMS ,MRS ),( Const / ACS ) ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MLU * MUM ) )", "obj1": 0.8464566929133859, "obj2": 0.09373709476998345}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / MUM ) / CS ) )", "obj1": 0.27755905511811024, "obj2": 0.5978827057355153}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( CS,( RRSe / ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MUC ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5739273474136751}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( ( ACS / FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "( ( DS / ( Max( RCSe,MUC ) / ( MUR + RMSe ) ) ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.33858267716535434, "obj2": 0.523342366185596}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3169291338582677, "obj2": 0.5412899373895005}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( PN - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUR,CS ) ,Min( MUR ,MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.003214543584045698}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Min( AMS ,CRS ) - Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( ( Const / FirstVNF_CPU ) - FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,MUR ) - RCSe ) - ( DS / MUC ) )", "obj1": 0.11811023622047244, "obj2": 0.8067131645052963}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "Max( Max( DDR,RRS ),Max( DDR,RRS ) )", "choosing": "( DS - Min( ( ( DS * CS ) * MLU ) ,DS ) )", "obj1": 0.30708661417322836, "obj2": 0.557250890626787}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( RRSe / DS ) + MUC )", "obj1": 0.10433070866141732, "obj2": 0.8271570833006694}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) )", "choosing": "( ( ( MUM - ( ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) / MUR ) ) + RRSe ) * Min( ( MUM / RRSe ) ,MUC ) )", "obj1": 0.24015748031496062, "obj2": 0.629564619724956}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}], "46": [{"determining": "( ( DDR - MDR ) - ( FirstVNF_CPU_Server / CRS ) )", "choosing": "( ( Max( RCSe,Min( MLU ,MLU ) ) / RCSe ) + Min( ( RMSe / DS ) ,( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) - ( ARS / CRS ) )", "choosing": "( RRSe - Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "Max( ( AMS * ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - ( DS + RCSe ) )", "obj1": 0.23818897637795275, "obj2": 0.6231524351937993}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( PN - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / Min( MUR ,CS ) ) + RCSe )", "obj1": 0.9940944881889764, "obj2": 0.002774913199134591}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Min( AMS ,CRS ) - Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( ( Const / FirstVNF_CPU ) - FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,MUR ) - RCSe ) - ( DS / MUC ) )", "obj1": 0.11811023622047244, "obj2": 0.8067131645052963}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( CS,( RRSe / ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MUC ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5739273474136751}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( RRSe / DS ) + MUC )", "obj1": 0.10433070866141732, "obj2": 0.8271570833006694}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) * Min( BR ,PN ) ) - ( ( DDR - PN ) / ( Const + Const ) ) )", "choosing": "( ( ( RCSe + CS ) + ( RMSe - RCSe ) ) - ( Min( ( RRSe - DS ) ,CS ) - ( RMSe - DS ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3169291338582677, "obj2": 0.5412899373895005}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( AMS ,DDR ) ) )", "choosing": "( ( DS / ( MUR + RMSe ) ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.33070866141732286, "obj2": 0.5281894850542035}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + ( MUM - ( MLU / MUR ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.780651205595134}, {"determining": "( Min( AMS ,CRS ) - ( Min( AMS ,CRS ) - Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / MUC ) - ( MUM / MUC ) )", "obj1": 0.17716535433070865, "obj2": 0.7029347830290067}], "47": [{"determining": "Min( ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MLU ) ) ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - MDR ) - ( FirstVNF_CPU_Server / CRS ) )", "choosing": "( ( Max( RCSe,Min( MLU ,MLU ) ) / RCSe ) + Min( ( RMSe / DS ) ,( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( PN ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( Min( Max( MUM,RRSe ) ,MUC ) + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.25196850393700787, "obj2": 0.6033121211497232}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.21653543307086615, "obj2": 0.6385448839109427}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Min( AMS ,CRS ) - Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( ( Const / FirstVNF_CPU ) - FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,MUR ) - RCSe ) - ( DS / MUC ) )", "obj1": 0.11811023622047244, "obj2": 0.8067131645052963}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.5732680386053155}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + ( RRSe * MUR ) ) ) + CS ) )", "obj1": 0.6751968503937008, "obj2": 0.24363142164338616}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( RRSe / DS ) + MUC )", "obj1": 0.10433070866141732, "obj2": 0.8271570833006694}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3169291338582677, "obj2": 0.5412899373895005}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "Max( ( AMS * ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - ( DS + RCSe ) )", "obj1": 0.23818897637795275, "obj2": 0.6231524351937993}, {"determining": "( PN - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / Min( MUR ,CS ) ) + RCSe )", "obj1": 0.9940944881889764, "obj2": 0.002774913199134591}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + ( MUM - ( MLU / MUR ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.780651205595134}], "48": [{"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RRSe ) ) ) + MLU ) ) ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.5732680386053155}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + ( RRSe * MUR ) ) ) + CS ) )", "obj1": 0.6751968503937008, "obj2": 0.24363142164338616}, {"determining": "( PN - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( MUR + RCSe )", "obj1": 0.9763779527559056, "obj2": 0.013272382706355584}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3169291338582677, "obj2": 0.5412899373895005}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ACS ) ) )", "choosing": "( ( RRSe + MUM ) - ( RRSe + MUM ) )", "obj1": 0.17716535433070865, "obj2": 0.7029347830290067}, {"determining": "( Min( AMS ,CRS ) - Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( ( Const / FirstVNF_CPU ) - FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,MUR ) - RCSe ) - ( DS / MUC ) )", "obj1": 0.11811023622047244, "obj2": 0.8067131645052963}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + ( MUM - ( MLU / MUR ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.780651205595134}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( AMS - ARS ),( MRS / MRS ) )", "choosing": "( ( Min( ( ( DS + RCSe ) - MUR ) ,MUM ) / CS ) - Min( ( ( DS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.602588760088834}], "49": [{"determining": "( ( AMS - FirstVNF_Mem ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( Min( AMS ,CRS ) - Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( ( Const / FirstVNF_CPU ) - FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,MUR ) - RCSe ) - ( DS / MUC ) )", "obj1": 0.11811023622047244, "obj2": 0.8067131645052963}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( Min( BR ,DDR ) + RRS ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( MUM ,DS ) - ( MUR - MLU ) )", "obj1": 0.5531496062992126, "obj2": 0.3522864341947845}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( ( DDR + PN ) - ( AMS * ( ( ( DDR / PN ) - ( AMS * FirstVNF_CPU_Server ) ) - ( RRS / MRS ) ) ) )", "choosing": "Min( ( RCSe + MUM ) ,Min( ( RCSe + MUM ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.029841802359307334}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.5732680386053155}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server + AMS ) ,Min( ( BR / ACS ) ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + MUC ) - ( CS + RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3677956114916166}, {"determining": "( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + ( RRSe * MUR ) ) ) + CS ) )", "obj1": 0.6751968503937008, "obj2": 0.24363142164338616}, {"determining": "Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6198587749732968}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3169291338582677, "obj2": 0.5412899373895005}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( AMS - ARS ),( MRS / MRS ) )", "choosing": "( ( Min( ( ( DS + RCSe ) - MUR ) ,MUM ) / CS ) - Min( ( ( DS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.602588760088834}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + ( MUM - ( MLU / MUR ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.780651205595134}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}], "50": [{"determining": "( ( AMS - FirstVNF_Mem ) - ( DDR / PN ) )", "choosing": "( Min( MLU ,MLU ) + ( Max( MUR,DS ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( Min( AMS ,CRS ) - Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( ( Const / FirstVNF_CPU ) - FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,MUR ) - RCSe ) - ( DS / MUC ) )", "obj1": 0.11811023622047244, "obj2": 0.8067131645052963}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6198587749732968}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + ( RRSe * MUR ) ) ) + CS ) )", "obj1": 0.6751968503937008, "obj2": 0.24363142164338616}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - ACS ) )", "choosing": "( Min( DS ,MUM ) - ( MUC + CS ) )", "obj1": 0.24803149606299213, "obj2": 0.6079176061634752}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3169291338582677, "obj2": 0.5412899373895005}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( AMS - ARS ),( MRS / MRS ) )", "choosing": "( ( Min( ( ( DS + RCSe ) - MUR ) ,MUM ) / CS ) - Min( ( ( DS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.602588760088834}, {"determining": "Max( Max( DDR,RRS ),FirstVNF_CPU_Server )", "choosing": "( ( RMSe / DS ) - Min( ( ( DS * MUM ) * MLU ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7953163215387464}, {"determining": "( PN - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( Max( MUR,CS ) ,Min( RRSe ,MUC ) ) + RCSe )", "obj1": 0.9763779527559056, "obj2": 0.013272382706355584}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + ( MUM - ( MLU / MUR ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.780651205595134}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}], "51": [{"determining": "( ( BR / FirstVNF_Mem ) - ( ARS / CRS ) )", "choosing": "( RRSe - Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - ( DDR / PN ) )", "choosing": "( Min( MLU ,MLU ) + ( Max( MUR,DS ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6198587749732968}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( AMS ,CRS ) - Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( ( Const / FirstVNF_CPU ) - FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,MUR ) - RCSe ) - ( DS / MUC ) )", "obj1": 0.11811023622047244, "obj2": 0.8067131645052963}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + ( RRSe * MUR ) ) ) + CS ) )", "obj1": 0.6751968503937008, "obj2": 0.24363142164338616}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Max( Min( DDR ,FirstVNF_Mem ),FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - ACS ) )", "choosing": "( Min( DS ,MUM ) - DS )", "obj1": 0.17716535433070865, "obj2": 0.7016760126997713}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( AMS - ARS ),( MRS / MRS ) )", "choosing": "( ( Min( ( ( DS + RCSe ) - MUR ) ,MUM ) / CS ) - Min( ( ( DS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.602588760088834}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( BR / FirstVNF_Mem ) - MDR )", "choosing": "( RRSe - Max( RCSe,Min( MUR ,( ( MLU - RRSe ) * ( DS + CS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.013025274009272076}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) - ( ( ( Min( DDR ,FirstVNF_Mem ) - ( ( ACS + AMS ) / ( DDR * MDR ) ) ) + AMS ) / ( Const * MDR ) ) ) - Max( Max( CRS,AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( DS + ( ( RRSe * Max( MUM,MLU ) ) + MUC ) ) + MUR ) )", "obj1": 0.15354330708661418, "obj2": 0.7515171095514076}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + ( MUM - ( MLU / MUR ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.780651205595134}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}], "52": [{"determining": "( ( BR / FirstVNF_Mem ) - ( ARS / CRS ) )", "choosing": "Max( Min( ( ( ( CS / Min( MUR ,( ( MLU - RRSe ) * ( DS + CS ) ) ) ) + Min( ( ( ( RCSe + MUC ) + RRSe ) + ( DS - RCSe ) ) ,( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Min( ( RCSe * ( MUR + MUM ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) - ( ARS / CRS ) )", "choosing": "( RRSe - Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6198587749732968}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + ( RRSe * MUR ) ) ) + CS ) )", "obj1": 0.6751968503937008, "obj2": 0.24363142164338616}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( ( BR / FirstVNF_Mem ) - MDR )", "choosing": "( RRSe - Max( RCSe,Min( MUR ,( ( MLU - RRSe ) * ( DS + CS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.013025274009272076}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - DDR ) )", "choosing": "( Min( DS ,MUM ) - CS )", "obj1": 0.3169291338582677, "obj2": 0.5448191963480696}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Max( Min( DDR ,FirstVNF_Mem ),FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - ACS ) )", "choosing": "( Min( DS ,MUM ) - DS )", "obj1": 0.17716535433070865, "obj2": 0.7016760126997713}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Min( AMS ,CRS ) - Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( ( Const / FirstVNF_CPU ) - FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,MUR ) - RCSe ) - ( DS / MUC ) )", "obj1": 0.11811023622047244, "obj2": 0.8067131645052963}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) - ( ( ( Min( DDR ,FirstVNF_Mem ) - ( ( ACS + AMS ) / ( DDR * MDR ) ) ) + AMS ) / ( Const * MDR ) ) ) - Max( Max( CRS,AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( DS + ( ( RRSe * Max( MUM,MLU ) ) + MUC ) ) + MUR ) )", "obj1": 0.15354330708661418, "obj2": 0.7515171095514076}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + ( MUM - ( MLU / MUR ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.780651205595134}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}], "53": [{"determining": "( ( BR / FirstVNF_Mem ) - ( ARS / CRS ) )", "choosing": "Max( Min( ( ( ( CS / Min( MUR ,( ( MLU - RRSe ) * ( DS + CS ) ) ) ) + Min( ( ( ( RCSe + MUC ) + RRSe ) + ( DS - RCSe ) ) ,( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Min( ( RCSe * ( MUR + MUM ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) - ( ARS / CRS ) )", "choosing": "Max( Min( ( ( ( CS / Min( MUR ,( ( MLU - RRSe ) * ( DS + CS ) ) ) ) + Min( ( ( ( RCSe + MUC ) + RRSe ) + ( DS - RCSe ) ) ,( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Min( ( RCSe * ( MUR + MUM ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6198587749732968}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,ACS ) )", "choosing": "( CS - ( CS + RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7116636184619571}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + ( RRSe * MUR ) ) ) + CS ) )", "obj1": 0.6751968503937008, "obj2": 0.24363142164338616}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - DDR ) )", "choosing": "( Min( DS ,MUM ) - CS )", "obj1": 0.3169291338582677, "obj2": 0.5448191963480696}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Max( Min( DDR ,FirstVNF_Mem ),FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - ACS ) )", "choosing": "( Min( DS ,MUM ) - DS )", "obj1": 0.17716535433070865, "obj2": 0.7016760126997713}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) - ( ( ( Min( DDR ,FirstVNF_Mem ) - ( ( ACS + AMS ) / ( DDR * MDR ) ) ) + AMS ) / ( Const * MDR ) ) ) - Max( Max( CRS,AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( DS + ( ( RRSe * Max( MUM,MLU ) ) + MUC ) ) + MUR ) )", "obj1": 0.15354330708661418, "obj2": 0.7515171095514076}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( ( DDR + BR ) - ( ( MRS / PN ) / BR ) )", "choosing": "( ( MLU + RCSe ) + MUC )", "obj1": 0.8976377952755905, "obj2": 0.07644967628218698}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + ( MUM - ( MLU / MUR ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.780651205595134}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - ACS ) )", "choosing": "( Min( DS ,MUM ) - ( MUC + CS ) )", "obj1": 0.25, "obj2": 0.613734842116434}], "54": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * ACS ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - Max( MUC,RCSe ) ) ) ) + MLU ) ) ) ,( MLU - ( ( MUR / MUC ) * ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) - ( ARS / CRS ) )", "choosing": "Max( Min( ( ( ( CS / Min( MUR ,( ( MLU - RRSe ) * ( DS + CS ) ) ) ) + Min( ( ( ( RCSe + MUC ) + RRSe ) + ( DS - RCSe ) ) ,( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Min( ( RCSe * ( MUR + MUM ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6198587749732968}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + ( RRSe * MUR ) ) ) + CS ) )", "obj1": 0.6751968503937008, "obj2": 0.24363142164338616}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - DDR ) )", "choosing": "( Min( DS ,MUM ) - CS )", "obj1": 0.3169291338582677, "obj2": 0.5448191963480696}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6035530619771926}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM_Server ) / AMS ) ,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + PN ) ) )", "choosing": "( Max( DS,MUM ) - ( RCSe * ( Min( RMSe ,RRSe ) + RRSe ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7636429159421814}, {"determining": "( Max( Min( DDR ,FirstVNF_Mem ),FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - ACS ) )", "choosing": "( Min( DS ,MUM ) - DS )", "obj1": 0.17716535433070865, "obj2": 0.7016760126997713}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) - ( ( ( Min( DDR ,FirstVNF_Mem ) - ( ( ACS + AMS ) / ( DDR * MDR ) ) ) + AMS ) / ( Const * MDR ) ) ) - Max( Max( CRS,AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( DS + ( ( RRSe * Max( MUM,MLU ) ) + MUC ) ) + MUR ) )", "obj1": 0.15354330708661418, "obj2": 0.7515171095514076}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + ( MUM - ( MLU / MUR ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.780651205595134}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}], "55": [{"determining": "( MRS - Min( FirstVNF_RAM ,ARS ) )", "choosing": "( ( RRSe / MUM ) + ( ( RMSe / DS ) - ( ( ( MUC + RCSe ) - MUR ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * ACS ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - Max( MUC,RCSe ) ) ) ) + MLU ) ) ) ,( MLU - ( ( MUR / MUC ) * ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( ( MDR + PN ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( CS ,( MUC + RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.24926798733686165}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6198587749732968}, {"determining": "( PN - ( FirstVNF_CPU - BR ) )", "choosing": "( ( MUC + ( ( MUM * MUM ) + CS ) ) + RRSe )", "obj1": 0.9881889763779528, "obj2": 0.0069245765828147635}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + ( RRSe * MUR ) ) ) + CS ) )", "obj1": 0.6751968503937008, "obj2": 0.24363142164338616}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6035530619771926}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_Mem ) )", "choosing": "( Min( RRSe ,MUM ) - ( MUM + ( MUM + CS ) ) )", "obj1": 0.25, "obj2": 0.6123187382071674}, {"determining": "( Max( Min( DDR ,FirstVNF_Mem ),FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - ACS ) )", "choosing": "( Min( DS ,MUM ) - DS )", "obj1": 0.17716535433070865, "obj2": 0.7016760126997713}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - DDR ) )", "choosing": "( Min( DS ,MUM ) - CS )", "obj1": 0.3169291338582677, "obj2": 0.5448191963480696}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) - ( ( ( Min( DDR ,FirstVNF_Mem ) - ( ( ACS + AMS ) / ( DDR * MDR ) ) ) + AMS ) / ( Const * MDR ) ) ) - Max( Max( CRS,AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( DS + ( ( RRSe * Max( MUM,MLU ) ) + MUC ) ) + MUR ) )", "obj1": 0.15354330708661418, "obj2": 0.7515171095514076}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}], "56": [{"determining": "( ( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - ( ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Min( FirstVNF_RAM ,ARS ) )", "choosing": "( ( RRSe / MUM ) + ( ( RMSe / DS ) - ( ( ( MUC + RCSe ) - MUR ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) - Min( Min( FirstVNF_CPU_Server ,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( RCSe - ( CS + RCSe ) )", "obj1": 0.484251968503937, "obj2": 0.41059718057329286}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - DDR ) )", "choosing": "( Min( DS ,MUM ) - CS )", "obj1": 0.3169291338582677, "obj2": 0.5448191963480696}, {"determining": "Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6198587749732968}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( ( FirstVNF_CPU - AMS ),( MRS + DDR ) )", "choosing": "( ( RMSe / DS ) - ( ( ( MUC + RCSe ) - MUR ) * MUM ) )", "obj1": 0.12992125984251968, "obj2": 0.7971539225355823}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( PN - ( FirstVNF_CPU * ( ( AMS + FirstVNF_Mem ) - ( Min( ( AMS * AMS ) ,( AMS + FirstVNF_CPU_Server ) ) - MRS ) ) ) )", "choosing": "( ( MUM * MUC ) + ( RMSe / Min( CS ,CS ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009414921702860474}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) - ( ( ( Min( DDR ,FirstVNF_Mem ) - ( ( ACS + AMS ) / ( DDR * MDR ) ) ) + AMS ) / ( Const * MDR ) ) ) - Max( Max( CRS,AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( DS + ( ( RRSe * Max( MUM,MLU ) ) + MUC ) ) + MUR ) )", "obj1": 0.15354330708661418, "obj2": 0.7515171095514076}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - ( MUM + CS ) )", "obj1": 0.2440944881889764, "obj2": 0.6186694330569492}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,MRS ) - BR ) )", "choosing": "( ( ( ( MUC + RCSe ) - MUR ) * MUM ) - ( MUM + CS ) )", "obj1": 0.27165354330708663, "obj2": 0.59392941076471}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}], "57": [{"determining": "( ( ( MRS + BR ) / ACS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( ( MUC + RCSe ) - MUR ) + ( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - ( ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "Max( ( FirstVNF_CPU - AMS ),( MRS + DDR ) )", "choosing": "( ( RMSe / DS ) - ( ( ( MUC + RCSe ) - MUR ) * MUM ) )", "obj1": 0.12992125984251968, "obj2": 0.7971539225355823}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( PN - ( FirstVNF_CPU * ( ( AMS + FirstVNF_Mem ) - ( Min( ( AMS * AMS ) ,( AMS + FirstVNF_CPU_Server ) ) - MRS ) ) ) )", "choosing": "( ( MUM * MUC ) + ( RMSe / Min( CS ,CS ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009414921702860474}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - DDR ) )", "choosing": "( Min( DS ,MUM ) - CS )", "obj1": 0.3169291338582677, "obj2": 0.5448191963480696}, {"determining": "Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6198587749732968}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "Max( ( FirstVNF_CPU - AMS ),( MRS + DDR ) )", "choosing": "( Min( RRSe ,MUM ) - ( MUM + CS ) )", "obj1": 0.25984251968503935, "obj2": 0.6021856406332962}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) - ( ( ( Min( DDR ,FirstVNF_Mem ) - ( ( ACS + AMS ) / ( DDR * MDR ) ) ) + AMS ) / ( Const * MDR ) ) ) - Max( Max( CRS,AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( DS + ( ( RRSe * Max( MUM,MLU ) ) + MUC ) ) + MUR ) )", "obj1": 0.15354330708661418, "obj2": 0.7515171095514076}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}], "58": [{"determining": "( MRS - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( MUC / Min( MLU ,MLU ) ) + ( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + BR ) / ACS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( ( MUC + RCSe ) - MUR ) + ( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( Min( MLU ,MLU ) / DS ) + MUC )", "obj1": 0.09448818897637795, "obj2": 0.860959025963737}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6198587749732968}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - DDR ) )", "choosing": "( Min( DS ,MUM ) - CS )", "obj1": 0.3169291338582677, "obj2": 0.5448191963480696}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "Max( ( FirstVNF_CPU - AMS ),( MRS + DDR ) )", "choosing": "( Min( RRSe ,MUM ) - ( MUM + CS ) )", "obj1": 0.25984251968503935, "obj2": 0.6021856406332962}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}], "59": [{"determining": "( Const - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "( ( ( MUC / MUM ) + ( MUR + MUC ) ) + ( Max( MUR,DS ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( MUC / Min( MLU ,MLU ) ) + ( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( PN * MDR ) )", "choosing": "( Min( MUM ,Max( RCSe,DS ) ) - ( RMSe + MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.00693209558708572}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - DDR ) )", "choosing": "( Min( DS ,MUM ) - CS )", "obj1": 0.3169291338582677, "obj2": 0.5448191963480696}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( AMS + Min( Const ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}], "60": [{"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "( ( ( MUC / MUM ) + ( MUR + MUC ) ) + ( Max( MUR,DS ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( PN * MDR ) )", "choosing": "( Min( MUM ,Max( RCSe,DS ) ) - ( RMSe + MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.00693209558708572}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Max( Min( ARS ,RRS ),CRS ) * Max( MDR,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}], "61": [{"determining": "( ( AMS - ACS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( MUC / DS ) + ( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( PN * MDR ) )", "choosing": "( Min( MUM ,Max( RCSe,DS ) ) - ( RMSe + MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.00693209558708572}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( Min( ARS ,RRS ),CRS ) * Max( MDR,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "Max( ( Const + ARS ),( Const * MDR ) )", "choosing": "Max( ( ( ( ( CS / Min( RRSe ,( Min( CS ,RCSe ) * ( DS / RMSe ) ) ) ) + ( ( ( ( MLU + RRSe ) + MLU ) - ( MUC / RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) - MUC ),Min( ( RMSe * ( MLU + MUM ) ) ,RCSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8382904579224698}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}], "62": [{"determining": "( ( AMS - ACS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( MUM * MUR ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ACS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( MUC / DS ) + ( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( PN * MDR ) )", "choosing": "( Min( MUM ,Max( RCSe,DS ) ) - ( RMSe + MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.00693209558708572}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Min( ( ( Max( Min( CRS ,RRS ),Const ) * Max( MDR,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( CS / Min( MUR ,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.7074799416337759}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( Min( ARS ,RRS ),CRS ) * Max( MDR,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}], "63": [{"determining": "( ( AMS - MRS ) - ( ACS + AMS ) )", "choosing": "( ( MUC * DS ) + Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ACS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( MUM * MUR ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( PN * MDR ) )", "choosing": "( Min( MUM ,Max( RCSe,DS ) ) - ( RMSe + MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.00693209558708572}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - Min( ( FirstVNF_Mem + Min( ( FirstVNF_Mem_Server + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),MLU ) - ( RMSe + CS ) )", "obj1": 0.421259842519685, "obj2": 0.4636519293791655}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( FirstVNF_Mem_Server + Max( Const,Min( AMS ,CRS ) ) )", "choosing": "( ( ( MUC - MUM ) - ( MUM / MUC ) ) * Max( DS,MUC ) )", "obj1": 0.1830708661417323, "obj2": 0.7000238083772307}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}], "64": [{"determining": "( ( AMS - FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,MDR ) )", "choosing": "( Min( RMSe ,MUR ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MRS ) - ( ACS + AMS ) )", "choosing": "( ( MUC * DS ) + Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( PN * MDR ) )", "choosing": "( Min( MUM ,Max( RCSe,DS ) ) - ( RMSe + MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.00693209558708572}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( FirstVNF_Mem_Server + Max( Const,Min( AMS ,CRS ) ) )", "choosing": "( ( ( MUC - MUM ) - ( MUM / MUC ) ) * Max( DS,MUC ) )", "obj1": 0.1830708661417323, "obj2": 0.7000238083772307}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}], "65": [{"determining": "( ( AMS - FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,MDR ) )", "choosing": "( ( MUC * MUC ) + ( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,MDR ) )", "choosing": "( Min( RMSe ,MUR ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( PN * MDR ) )", "choosing": "( Min( MUM ,Max( RCSe,DS ) ) - ( RMSe + MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.00693209558708572}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( FirstVNF_Mem_Server + Max( Const,Min( AMS ,CRS ) ) )", "choosing": "( ( ( MUC - MUM ) - ( MUM / MUC ) ) * Max( DS,MUC ) )", "obj1": 0.1830708661417323, "obj2": 0.7000238083772307}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}], "66": [{"determining": "( ( AMS - FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,MDR ) )", "choosing": "( Min( RMSe ,MUR ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,MDR ) )", "choosing": "( ( MUC * MUC ) + ( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( PN * MDR ) )", "choosing": "( Min( MUM ,Max( RCSe,DS ) ) - ( RMSe + MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.00693209558708572}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( FirstVNF_Mem_Server + Max( Const,Min( AMS ,CRS ) ) )", "choosing": "( ( ( MUC - MUM ) - ( MUM / MUC ) ) * Max( DS,MUC ) )", "obj1": 0.1830708661417323, "obj2": 0.7000238083772307}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}], "67": [{"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,MDR ) )", "choosing": "( Max( MLU,MUM ) + ( Max( MUR,MUR ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,MDR ) )", "choosing": "( Min( RMSe ,MUR ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( PN * MDR ) )", "choosing": "( Min( MUM ,Max( RCSe,DS ) ) - ( RMSe + MUC ) )", "obj1": 0.9940944881889764, "obj2": 0.00693209558708572}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),( Const - BR ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUR + RMSe ) + MUR ),MUM ) )", "obj1": 0.15354330708661418, "obj2": 0.7539476449200473}], "68": [{"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUC / RMSe ) + Min( MUR ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,MDR ) )", "choosing": "( Max( MLU,MUM ) + ( Max( MUR,MUR ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Max( ( ( ( ( ( ( ( PN - AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * Min( Max( Const,FirstVNF_Mem ) ,( PN * FirstVNF_CPU_Server ) ) ) / ( Min( ( PN * ARS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem + FirstVNF_CPU ),Min( ACS ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( ( FirstVNF_Mem_Server + CRS ) * ( RRS - ACS ) ) ,( ( ACS + PN ) - ( PN / CRS ) ) ) + Max( Max( ( FirstVNF_RAM - BR ),( PN / FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU * MRS ),Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) * ( ( ( ( ( RRS / Const ) * ( AMS - FirstVNF_RAM ) ) / ( Max( CRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU - ARS ) * ( AMS + ACS ) ) - ( Min( FirstVNF_CPU ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) - ( Max( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( ( Const + ARS ) - Max( RRS,CRS ) ) ) - ( ( ( MRS + MRS ) / ( ARS / FirstVNF_RAM ) ) * ( ( CRS / DDR ) - ( RRS / DDR ) ) ) ) ) ) * ( ( ( ( ( ( ARS + AMS ) + ( MDR + RRS ) ) - Min( ( FirstVNF_RAM_Server / MDR ) ,Min( AMS ,FirstVNF_RAM_Server ) ) ) / Max( Min( ( FirstVNF_Mem - MDR ) ,( CRS * ACS ) ),Min( Max( FirstVNF_RAM_Server,AMS ) ,( ARS + FirstVNF_Mem ) ) ) ) / ( ( ( ( Const - ACS ) * ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( AMS + MRS ) * ( MRS - BR ) ) ) / ( ( ( BR + DDR ) / ( PN + CRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) ) + ( Min( Min( ( Min( FirstVNF_Mem_Server ,RRS ) - Max( CRS,ARS ) ) ,Min( ( CRS + FirstVNF_CPU ) ,Min( Const ,RRS ) ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MDR ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) ) + ( ( ( ( AMS / RRS ) - Min( ARS ,ACS ) ) / Min( Min( ARS ,Const ) ,( FirstVNF_Mem_Server + MDR ) ) ) + ( ( ( BR + PN ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / Max( ( ARS - FirstVNF_Mem ),( FirstVNF_Mem + ARS ) ) ) ) ) ) ),( ( ( Min( ( ( ( FirstVNF_Mem_Server - ARS ) / ( FirstVNF_RAM * MRS ) ) - ( ( FirstVNF_Mem + MRS ) / Max( PN,FirstVNF_CPU_Server ) ) ) ,( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_CPU + RRS ) ) / ( ( FirstVNF_CPU * FirstVNF_RAM ) / Min( RRS ,ACS ) ) ) ) / ( ( ( Max( RRS,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - MDR ) ) + ( ( FirstVNF_RAM * Const ) * ( Const / MDR ) ) ) * Min( ( Max( MDR,RRS ) * ( AMS - FirstVNF_Mem_Server ) ) ,( ( BR * AMS ) / Max( MDR,Const ) ) ) ) ) * Min( ( ( Max( ( MDR * FirstVNF_CPU_Server ),Max( FirstVNF_CPU,PN ) ) - ( ( CRS / Const ) - ( FirstVNF_Mem_Server - CRS ) ) ) * ( ( ( AMS / FirstVNF_RAM ) - Max( AMS,FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( Const / MRS ) ) ) ) ,( Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / ( MDR + Const ) ) ,( ( RRS / AMS ) + Max( RRS,BR ) ) ) / ( ( Min( MDR ,DDR ) - ( AMS / Const ) ) / Min( ( FirstVNF_Mem * BR ) ,( PN / FirstVNF_RAM_Server ) ) ) ) ) ) / ( ( ( Max( Max( Min( BR ,FirstVNF_RAM ),( RRS / FirstVNF_CPU_Server ) ),( Min( AMS ,RRS ) / ( CRS / PN ) ) ) * Min( ( Min( Const ,MDR ) + ( MRS * FirstVNF_RAM ) ) ,( Max( PN,FirstVNF_Mem ) * ( FirstVNF_Mem + Const ) ) ) ) - ( ( Min( ( ARS - FirstVNF_RAM_Server ) ,( FirstVNF_CPU * MRS ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - Min( AMS ,MDR ) ) ) + ( Min( ( MDR - FirstVNF_Mem_Server ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_Mem + PN ) ,( Const * FirstVNF_Mem_Server ) ) ) ) ) - ( Min( ( ( Min( MDR ,Const ) / ( AMS * FirstVNF_Mem_Server ) ) / ( Max( CRS,MRS ) + Max( DDR,AMS ) ) ) ,Max( ( ( MRS + PN ) + ( RRS + RRS ) ),Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),( FirstVNF_Mem - Const ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,( PN - PN ) ) - ( ( MDR / PN ) - Min( MDR ,RRS ) ) ) / Max( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_CPU * MDR ) ),( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( Const * Const ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) + ( DS / RMSe ) )", "obj1": 0.9881889763779528, "obj2": 0.0046849111467148095}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,( ( BR + DDR ) - ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / MUM ) + ( DS + RRSe ) ) + MUC )", "obj1": 0.452755905511811, "obj2": 0.41542339683954277}, {"determining": "Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),( Const - BR ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUR + RMSe ) + MUR ),MUM ) )", "obj1": 0.15354330708661418, "obj2": 0.7539476449200473}], "69": [{"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Min( RMSe ,MUR ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUC / RMSe ) + Min( MUR ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Min( ( RMSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.15543741456882368}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Max( ( ( ( ( ( ( ( PN - AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * Min( Max( Const,FirstVNF_Mem ) ,( PN * FirstVNF_CPU_Server ) ) ) / ( Min( ( PN * ARS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem + FirstVNF_CPU ),Min( ACS ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( ( FirstVNF_Mem_Server + CRS ) * ( RRS - ACS ) ) ,( ( ACS + PN ) - ( PN / CRS ) ) ) + Max( Max( ( FirstVNF_RAM - BR ),( PN / FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU * MRS ),Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) * ( ( ( ( ( RRS / Const ) * ( AMS - FirstVNF_RAM ) ) / ( Max( CRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU - ARS ) * ( AMS + ACS ) ) - ( Min( FirstVNF_CPU ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) - ( Max( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( ( Const + ARS ) - Max( RRS,CRS ) ) ) - ( ( ( MRS + MRS ) / ( ARS / FirstVNF_RAM ) ) * ( ( CRS / DDR ) - ( RRS / DDR ) ) ) ) ) ) * ( ( ( ( ( ( ARS + AMS ) + ( MDR + RRS ) ) - Min( ( FirstVNF_RAM_Server / MDR ) ,Min( AMS ,FirstVNF_RAM_Server ) ) ) / Max( Min( ( FirstVNF_Mem - MDR ) ,( CRS * ACS ) ),Min( Max( FirstVNF_RAM_Server,AMS ) ,( ARS + FirstVNF_Mem ) ) ) ) / ( ( ( ( Const - ACS ) * ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( AMS + MRS ) * ( MRS - BR ) ) ) / ( ( ( BR + DDR ) / ( PN + CRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) ) + ( Min( Min( ( Min( FirstVNF_Mem_Server ,RRS ) - Max( CRS,ARS ) ) ,Min( ( CRS + FirstVNF_CPU ) ,Min( Const ,RRS ) ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MDR ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) ) + ( ( ( ( AMS / RRS ) - Min( ARS ,ACS ) ) / Min( Min( ARS ,Const ) ,( FirstVNF_Mem_Server + MDR ) ) ) + ( ( ( BR + PN ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / Max( ( ARS - FirstVNF_Mem ),( FirstVNF_Mem + ARS ) ) ) ) ) ) ),( ( ( Min( ( ( ( FirstVNF_Mem_Server - ARS ) / ( FirstVNF_RAM * MRS ) ) - ( ( FirstVNF_Mem + MRS ) / Max( PN,FirstVNF_CPU_Server ) ) ) ,( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_CPU + RRS ) ) / ( ( FirstVNF_CPU * FirstVNF_RAM ) / Min( RRS ,ACS ) ) ) ) / ( ( ( Max( RRS,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - MDR ) ) + ( ( FirstVNF_RAM * Const ) * ( Const / MDR ) ) ) * Min( ( Max( MDR,RRS ) * ( AMS - FirstVNF_Mem_Server ) ) ,( ( BR * AMS ) / Max( MDR,Const ) ) ) ) ) * Min( ( ( Max( ( MDR * FirstVNF_CPU_Server ),Max( FirstVNF_CPU,PN ) ) - ( ( CRS / Const ) - ( FirstVNF_Mem_Server - CRS ) ) ) * ( ( ( AMS / FirstVNF_RAM ) - Max( AMS,FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( Const / MRS ) ) ) ) ,( Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / ( MDR + Const ) ) ,( ( RRS / AMS ) + Max( RRS,BR ) ) ) / ( ( Min( MDR ,DDR ) - ( AMS / Const ) ) / Min( ( FirstVNF_Mem * BR ) ,( PN / FirstVNF_RAM_Server ) ) ) ) ) ) / ( ( ( Max( Max( Min( BR ,FirstVNF_RAM ),( RRS / FirstVNF_CPU_Server ) ),( Min( AMS ,RRS ) / ( CRS / PN ) ) ) * Min( ( Min( Const ,MDR ) + ( MRS * FirstVNF_RAM ) ) ,( Max( PN,FirstVNF_Mem ) * ( FirstVNF_Mem + Const ) ) ) ) - ( ( Min( ( ARS - FirstVNF_RAM_Server ) ,( FirstVNF_CPU * MRS ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - Min( AMS ,MDR ) ) ) + ( Min( ( MDR - FirstVNF_Mem_Server ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_Mem + PN ) ,( Const * FirstVNF_Mem_Server ) ) ) ) ) - ( Min( ( ( Min( MDR ,Const ) / ( AMS * FirstVNF_Mem_Server ) ) / ( Max( CRS,MRS ) + Max( DDR,AMS ) ) ) ,Max( ( ( MRS + PN ) + ( RRS + RRS ) ),Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),( FirstVNF_Mem - Const ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,( PN - PN ) ) - ( ( MDR / PN ) - Min( MDR ,RRS ) ) ) / Max( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_CPU * MDR ) ),( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( Const * Const ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) + ( DS / RMSe ) )", "obj1": 0.9881889763779528, "obj2": 0.0046849111467148095}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( Max( MRS,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ),( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - BR ) + FirstVNF_RAM_Server ) )", "choosing": "( ( DS + MUC ) - ( Min( DS ,Min( ( MUM * MUR ) ,MUC ) ) + RMSe ) )", "obj1": 0.1830708661417323, "obj2": 0.7056844486825493}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}], "70": [{"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUC / RMSe ) + Min( MUR ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Min( RMSe ,MUR ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( ( ( ( ( ( ( PN - AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * Min( Max( Const,FirstVNF_Mem ) ,( PN * FirstVNF_CPU_Server ) ) ) / ( Min( ( PN * ARS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem + FirstVNF_CPU ),Min( ACS ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( ( FirstVNF_Mem_Server + CRS ) * ( RRS - ACS ) ) ,( ( ACS + PN ) - ( PN / CRS ) ) ) + Max( Max( ( FirstVNF_RAM - BR ),( PN / FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU * MRS ),Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) * ( ( ( ( ( RRS / Const ) * ( AMS - FirstVNF_RAM ) ) / ( Max( CRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU - ARS ) * ( AMS + ACS ) ) - ( Min( FirstVNF_CPU ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) - ( Max( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( ( Const + ARS ) - Max( RRS,CRS ) ) ) - ( ( ( MRS + MRS ) / ( ARS / FirstVNF_RAM ) ) * ( ( CRS / DDR ) - ( RRS / DDR ) ) ) ) ) ) * ( ( ( ( ( ( ARS + AMS ) + ( MDR + RRS ) ) - Min( ( FirstVNF_RAM_Server / MDR ) ,Min( AMS ,FirstVNF_RAM_Server ) ) ) / Max( Min( ( FirstVNF_Mem - MDR ) ,( CRS * ACS ) ),Min( Max( FirstVNF_RAM_Server,AMS ) ,( ARS + FirstVNF_Mem ) ) ) ) / ( ( ( ( Const - ACS ) * ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( AMS + MRS ) * ( MRS - BR ) ) ) / ( ( ( BR + DDR ) / ( PN + CRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) ) + ( Min( Min( ( Min( FirstVNF_Mem_Server ,RRS ) - Max( CRS,ARS ) ) ,Min( ( CRS + FirstVNF_CPU ) ,Min( Const ,RRS ) ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MDR ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) ) + ( ( ( ( AMS / RRS ) - Min( ARS ,ACS ) ) / Min( Min( ARS ,Const ) ,( FirstVNF_Mem_Server + MDR ) ) ) + ( ( ( BR + PN ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / Max( ( ARS - FirstVNF_Mem ),( FirstVNF_Mem + ARS ) ) ) ) ) ) ),( ( ( Min( ( ( ( FirstVNF_Mem_Server - ARS ) / ( FirstVNF_RAM * MRS ) ) - ( ( FirstVNF_Mem + MRS ) / Max( PN,FirstVNF_CPU_Server ) ) ) ,( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_CPU + RRS ) ) / ( ( FirstVNF_CPU * FirstVNF_RAM ) / Min( RRS ,ACS ) ) ) ) / ( ( ( Max( RRS,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - MDR ) ) + ( ( FirstVNF_RAM * Const ) * ( Const / MDR ) ) ) * Min( ( Max( MDR,RRS ) * ( AMS - FirstVNF_Mem_Server ) ) ,( ( BR * AMS ) / Max( MDR,Const ) ) ) ) ) * Min( ( ( Max( ( MDR * FirstVNF_CPU_Server ),Max( FirstVNF_CPU,PN ) ) - ( ( CRS / Const ) - ( FirstVNF_Mem_Server - CRS ) ) ) * ( ( ( AMS / FirstVNF_RAM ) - Max( AMS,FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( Const / MRS ) ) ) ) ,( Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / ( MDR + Const ) ) ,( ( RRS / AMS ) + Max( RRS,BR ) ) ) / ( ( Min( MDR ,DDR ) - ( AMS / Const ) ) / Min( ( FirstVNF_Mem * BR ) ,( PN / FirstVNF_RAM_Server ) ) ) ) ) ) / ( ( ( Max( Max( Min( BR ,FirstVNF_RAM ),( RRS / FirstVNF_CPU_Server ) ),( Min( AMS ,RRS ) / ( CRS / PN ) ) ) * Min( ( Min( Const ,MDR ) + ( MRS * FirstVNF_RAM ) ) ,( Max( PN,FirstVNF_Mem ) * ( FirstVNF_Mem + Const ) ) ) ) - ( ( Min( ( ARS - FirstVNF_RAM_Server ) ,( FirstVNF_CPU * MRS ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - Min( AMS ,MDR ) ) ) + ( Min( ( MDR - FirstVNF_Mem_Server ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_Mem + PN ) ,( Const * FirstVNF_Mem_Server ) ) ) ) ) - ( Min( ( ( Min( MDR ,Const ) / ( AMS * FirstVNF_Mem_Server ) ) / ( Max( CRS,MRS ) + Max( DDR,AMS ) ) ) ,Max( ( ( MRS + PN ) + ( RRS + RRS ) ),Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),( FirstVNF_Mem - Const ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,( PN - PN ) ) - ( ( MDR / PN ) - Min( MDR ,RRS ) ) ) / Max( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_CPU * MDR ) ),( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( Const * Const ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) + ( DS / RMSe ) )", "obj1": 0.9881889763779528, "obj2": 0.0046849111467148095}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( FirstVNF_CPU_Server - ( PN * MDR ) )", "choosing": "( Min( MUM ,RCSe ) - ( RMSe + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7610917988938809}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( FirstVNF_Mem_Server + Max( Max( Const,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( ( ( MUC - MUM ) - ( MUM / Max( DS,DS ) ) ) * Max( DS,DS ) )", "obj1": 0.13582677165354332, "obj2": 0.7790053621514726}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}], "71": [{"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUC / RMSe ) + Min( MUR ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUC / RMSe ) + Min( MUR ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU - AMS ),( Const + BR ) )", "choosing": "( Max( DS,MUM ) - ( DS + RMSe ) )", "obj1": 0.08464566929133858, "obj2": 0.878369723440864}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Max( Min( AMS ,MRS ),( Const / ACS ) ) - ( DDR + RRS ) )", "choosing": "( Max( MUM,RMSe ) - ( MUC - MLU ) )", "obj1": 0.8681102362204725, "obj2": 0.07666531774270094}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( ( ( ( ( ( ( PN - AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * Min( Max( Const,FirstVNF_Mem ) ,( PN * FirstVNF_CPU_Server ) ) ) / ( Min( ( PN * ARS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem + FirstVNF_CPU ),Min( ACS ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( ( FirstVNF_Mem_Server + CRS ) * ( RRS - ACS ) ) ,( ( ACS + PN ) - ( PN / CRS ) ) ) + Max( Max( ( FirstVNF_RAM - BR ),( PN / FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU * MRS ),Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) * ( ( ( ( ( RRS / Const ) * ( AMS - FirstVNF_RAM ) ) / ( Max( CRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU - ARS ) * ( AMS + ACS ) ) - ( Min( FirstVNF_CPU ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) - ( Max( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( ( Const + ARS ) - Max( RRS,CRS ) ) ) - ( ( ( MRS + MRS ) / ( ARS / FirstVNF_RAM ) ) * ( ( CRS / DDR ) - ( RRS / DDR ) ) ) ) ) ) * ( ( ( ( ( ( ARS + AMS ) + ( MDR + RRS ) ) - Min( ( FirstVNF_RAM_Server / MDR ) ,Min( AMS ,FirstVNF_RAM_Server ) ) ) / Max( Min( ( FirstVNF_Mem - MDR ) ,( CRS * ACS ) ),Min( Max( FirstVNF_RAM_Server,AMS ) ,( ARS + FirstVNF_Mem ) ) ) ) / ( ( ( ( Const - ACS ) * ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( AMS + MRS ) * ( MRS - BR ) ) ) / ( ( ( BR + DDR ) / ( PN + CRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) ) + ( Min( Min( ( Min( FirstVNF_Mem_Server ,RRS ) - Max( CRS,ARS ) ) ,Min( ( CRS + FirstVNF_CPU ) ,Min( Const ,RRS ) ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MDR ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) ) + ( ( ( ( AMS / RRS ) - Min( ARS ,ACS ) ) / Min( Min( ARS ,Const ) ,( FirstVNF_Mem_Server + MDR ) ) ) + ( ( ( BR + PN ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / Max( ( ARS - FirstVNF_Mem ),( FirstVNF_Mem + ARS ) ) ) ) ) ) ),( ( ( Min( ( ( ( FirstVNF_Mem_Server - ARS ) / ( FirstVNF_RAM * MRS ) ) - ( ( FirstVNF_Mem + MRS ) / Max( PN,FirstVNF_CPU_Server ) ) ) ,( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_CPU + RRS ) ) / ( ( FirstVNF_CPU * FirstVNF_RAM ) / Min( RRS ,ACS ) ) ) ) / ( ( ( Max( RRS,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - MDR ) ) + ( ( FirstVNF_RAM * Const ) * ( Const / MDR ) ) ) * Min( ( Max( MDR,RRS ) * ( AMS - FirstVNF_Mem_Server ) ) ,( ( BR * AMS ) / Max( MDR,Const ) ) ) ) ) * Min( ( ( Max( ( MDR * FirstVNF_CPU_Server ),Max( FirstVNF_CPU,PN ) ) - ( ( CRS / Const ) - ( FirstVNF_Mem_Server - CRS ) ) ) * ( ( ( AMS / FirstVNF_RAM ) - Max( AMS,FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( Const / MRS ) ) ) ) ,( Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / ( MDR + Const ) ) ,( ( RRS / AMS ) + Max( RRS,BR ) ) ) / ( ( Min( MDR ,DDR ) - ( AMS / Const ) ) / Min( ( FirstVNF_Mem * BR ) ,( PN / FirstVNF_RAM_Server ) ) ) ) ) ) / ( ( ( Max( Max( Min( BR ,FirstVNF_RAM ),( RRS / FirstVNF_CPU_Server ) ),( Min( AMS ,RRS ) / ( CRS / PN ) ) ) * Min( ( Min( Const ,MDR ) + ( MRS * FirstVNF_RAM ) ) ,( Max( PN,FirstVNF_Mem ) * ( FirstVNF_Mem + Const ) ) ) ) - ( ( Min( ( ARS - FirstVNF_RAM_Server ) ,( FirstVNF_CPU * MRS ) ) + ( Max( FirstVNF_RAM_Server,AMS ) - Min( AMS ,MDR ) ) ) + ( Min( ( MDR - FirstVNF_Mem_Server ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_Mem + PN ) ,( Const * FirstVNF_Mem_Server ) ) ) ) ) - ( Min( ( ( Min( MDR ,Const ) / ( AMS * FirstVNF_Mem_Server ) ) / ( Max( CRS,MRS ) + Max( DDR,AMS ) ) ) ,Max( ( ( MRS + PN ) + ( RRS + RRS ) ),Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),( FirstVNF_Mem - Const ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,( PN - PN ) ) - ( ( MDR / PN ) - Min( MDR ,RRS ) ) ) / Max( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_CPU * MDR ) ),( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( Const * Const ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) + ( DS / RMSe ) )", "obj1": 0.9881889763779528, "obj2": 0.0046849111467148095}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Max( PN,( ( FirstVNF_CPU * BR ) / FirstVNF_Mem ) ) - ( ACS * MDR ) )", "choosing": "Min( Max( MUR,DS ) ,( ( Min( Max( MUM,RRSe ) ,RMSe ) * MLU ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.09033561539502108}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}, {"determining": "( FirstVNF_Mem_Server + Max( Max( Const,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( ( ( MUC - MUM ) - ( MUM / Max( DS,DS ) ) ) * Max( DS,DS ) )", "obj1": 0.13582677165354332, "obj2": 0.7790053621514726}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}], "72": [{"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Min( RMSe ,MUR ) + CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUC / RMSe ) + Min( MUR ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU - AMS ),( Const + BR ) )", "choosing": "( Max( DS,MUM ) - ( DS + RMSe ) )", "obj1": 0.08464566929133858, "obj2": 0.878369723440864}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( FirstVNF_Mem - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( RMSe / MUC ) ,( RRSe - MUC ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( PN - ( AMS * ( CRS + MDR ) ) )", "choosing": "( ( MUM - RCSe ) - ( RMSe - MUC ) )", "obj1": 0.7834645669291339, "obj2": 0.08949099507378487}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ARS + Const ) - ( MDR / BR ) )", "choosing": "( MUR + MUR )", "obj1": 0.9822834645669292, "obj2": 0.006918549389458784}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,RRS ) ) - Min( ( FirstVNF_CPU + AMS ) ,Min( DDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / RCSe ) * MLU ) - ( MLU + MUC ) )", "obj1": 0.5098425196850394, "obj2": 0.3866366300357944}], "73": [{"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Min( RMSe ,MUR ) + CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8779525978223937}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( PN,PN ) - ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( MLU - MUR ) ) + ( MUR + RMSe ) )", "obj1": 0.9566929133858267, "obj2": 0.019276151212527074}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( PN - ( AMS * ( CRS + MDR ) ) )", "choosing": "( ( MUM - RCSe ) - ( RMSe - MUC ) )", "obj1": 0.7834645669291339, "obj2": 0.08949099507378487}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( PN - Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ) )", "choosing": "( Min( ( MUM / RRSe ) ,MUC ) + MUC )", "obj1": 0.797244094488189, "obj2": 0.08683783925007638}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ARS + Const ) - ( MDR / BR ) )", "choosing": "( MUR + MUR )", "obj1": 0.9822834645669292, "obj2": 0.006918549389458784}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( DDR + ARS ),( MRS / DDR ) )", "choosing": "( ( RMSe / DS ) - DS )", "obj1": 0.10826771653543307, "obj2": 0.8099726644579295}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}], "74": [{"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( Min( RMSe ,MUR ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( CRS + BR ) - ( ( MRS - ARS ) / RRS ) )", "choosing": "( ( ( MUM * RMSe ) + DS ) + MUR )", "obj1": 0.9015748031496063, "obj2": 0.07068594828165933}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) )", "choosing": "( ( RMSe / CS ) - Min( Max( ( DS + RCSe ),MUR ) ,MUM ) )", "obj1": 0.30118110236220474, "obj2": 0.560445782843432}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( ARS + Const ) - ( MDR / BR ) )", "choosing": "( MUR + MUR )", "obj1": 0.9822834645669292, "obj2": 0.006918549389458784}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - DDR )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe + MUC ) - ( Min( DS ,Min( ( MUM * MUR ) ,MUC ) ) + RMSe ) ) )", "obj1": 0.5177165354330708, "obj2": 0.40049809709669987}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "( ( MLU - MLU ) + MUR )", "obj1": 0.7755905511811023, "obj2": 0.09481307312446961}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "( ( MUR * MUM ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.0834881276246829}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}], "75": [{"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( Min( RMSe ,MUR ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "( ( MLU - MLU ) + MUR )", "obj1": 0.7755905511811023, "obj2": 0.09481307312446961}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "( ( MUR * MUM ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.0834881276246829}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( Const ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( FirstVNF_CPU_Server ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( MUR,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + Max( CS,RCSe ) ) ) + RMSe ) ) ) ,( MLU - Max( MUR,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + Max( CS,RCSe ) ) ) + RMSe ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6999531353718662}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - DDR )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe + MUC ) - ( Min( DS ,Min( ( MUM * MUR ) ,MUC ) ) + RMSe ) ) )", "obj1": 0.5177165354330708, "obj2": 0.40049809709669987}, {"determining": "Max( ( AMS * ( FirstVNF_CPU - ( BR + Const ) ) ),( Min( FirstVNF_Mem ,ARS ) / ARS ) )", "choosing": "Min( ( ( Max( ( ( ( ( MUC + MLU ) * ( DS + MUR ) ) * ( Max( MUC,RMSe ) + ( RRSe * CS ) ) ) + ( ( ( RMSe - RMSe ) / ( DS * MLU ) ) + ( Max( DS,RMSe ) / Max( MUM,MUM ) ) ) ),Max( ( ( Max( RCSe,MUR ) + Max( CS,CS ) ) - ( ( MUM + MUC ) / ( DS - MUR ) ) ),Min( ( ( RMSe * DS ) + ( MUR + MUR ) ) ,( Max( RCSe,RRSe ) + Min( RMSe ,CS ) ) ) ) ) * ( ( Min( ( ( MUR / MUC ) - ( MUC / RMSe ) ) ,Min( ( MUM + RCSe ) ,( RMSe * MLU ) ) ) - ( ( ( MUM * RRSe ) / ( DS - DS ) ) * ( ( RCSe - CS ) - ( RCSe / DS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * Max( RRSe,CS ) ),( ( MUM - DS ) + ( RCSe / MUR ) ) ) + ( Min( ( MUM / MUM ) ,( RRSe * MUR ) ) * Max( ( RCSe + RMSe ),( MUC + RCSe ) ) ) ) ) ) * ( Min( ( ( Min( ( MUC + DS ) ,( MLU / MUC ) ) * ( ( MUM + RMSe ) * ( CS + RMSe ) ) ) + Max( Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ),( ( CS / MUC ) * ( RRSe + RMSe ) ) ) ) ,Max( ( Min( ( RMSe + DS ) ,Min( RCSe ,RCSe ) ) + ( ( CS - RMSe ) / Max( MUR,MLU ) ) ),( Max( ( DS + RMSe ),Min( MUM ,MUM ) ) * ( Min( RMSe ,RMSe ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( ( ( RMSe / RCSe ) - Min( MLU ,MUR ) ) ,( ( RCSe - RCSe ) / ( RMSe + MUR ) ) ) + ( ( ( DS * MUM ) / Min( RRSe ,MUR ) ) + ( ( MUR / RCSe ) / ( DS + RMSe ) ) ) ) * ( ( ( Max( MLU,MUC ) / ( MLU + RCSe ) ) / ( ( RCSe * MLU ) * Max( MUR,RRSe ) ) ) - Max( ( Min( DS ,MUR ) - ( DS + MUR ) ),( ( MLU + CS ) + ( MUR - RMSe ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( MLU + DS ) - ( RMSe + MUM ) ) + ( ( MLU - MUC ) / ( RMSe - RCSe ) ) ) + ( ( Max( CS,MUC ) * Min( CS ,MLU ) ) - ( Min( DS ,RMSe ) - Min( MLU ,CS ) ) ) ) / ( ( ( ( MLU + MUM ) / ( RRSe * DS ) ) * ( ( RMSe * RRSe ) * Max( CS,MLU ) ) ) - ( Max( Max( RMSe,RCSe ),( DS / DS ) ) - ( Min( DS ,RMSe ) * ( RMSe + MLU ) ) ) ) ),Max( Min( ( Max( ( RCSe * DS ),Max( MUR,RMSe ) ) - ( Min( RMSe ,RRSe ) + Max( MUR,MUR ) ) ) ,( ( ( RMSe * MUR ) * ( CS + MUR ) ) * ( ( DS / MUC ) / Max( RMSe,RMSe ) ) ) ),Max( Min( ( ( DS * MUC ) / Max( DS,MLU ) ) ,Max( ( RRSe + CS ),( RMSe * RRSe ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( DS + MUM ) ) ,Max( ( MUC - MLU ),( MUM - MUC ) ) ) ) ) ) + ( Min( ( ( ( ( RMSe + DS ) / Max( MUR,CS ) ) * ( ( RRSe * CS ) + ( RMSe - MUC ) ) ) + ( Min( ( RCSe - RRSe ) ,( RRSe - RRSe ) ) / ( ( CS * MUC ) / Max( MUM,MLU ) ) ) ) ,( ( ( Max( DS,RCSe ) + Min( MUC ,RMSe ) ) / Min( Min( RCSe ,DS ) ,Max( MUM,MUC ) ) ) - Min( ( ( MLU * MUC ) - ( MLU + CS ) ) ,( ( RCSe - RMSe ) - ( MUC / RCSe ) ) ) ) ) - Min( ( ( ( ( MUM * RCSe ) - ( RCSe / RMSe ) ) / ( ( DS / MUC ) - ( DS - RMSe ) ) ) - ( Min( Max( RCSe,MUR ) ,Min( RMSe ,RCSe ) ) * ( ( CS + MUM ) - ( DS + DS ) ) ) ) ,( ( ( Max( MUC,MUM ) / Max( RRSe,DS ) ) / ( Max( RMSe,DS ) + ( RCSe * MUR ) ) ) / Max( ( ( DS + RMSe ) - ( MLU * DS ) ),( ( DS - RRSe ) * ( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6104655488460736}], "76": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( Max( MLU,MUM ) + Max( Max( MUR,MUC ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "( ( MUR * MUM ) + RCSe )", "obj1": 0.8011811023622047, "obj2": 0.0834881276246829}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "( ( MLU - MLU ) + MUR )", "obj1": 0.7755905511811023, "obj2": 0.09481307312446961}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( Const ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( FirstVNF_CPU_Server ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( MUR,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + Max( CS,RCSe ) ) ) + RMSe ) ) ) ,( MLU - Max( MUR,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + Max( CS,RCSe ) ) ) + RMSe ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6999531353718662}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - DDR )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe + MUC ) - ( Min( DS ,Min( ( MUM * MUR ) ,MUC ) ) + RMSe ) ) )", "obj1": 0.5177165354330708, "obj2": 0.40049809709669987}], "77": [{"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( Max( MLU,MUM ) + Max( Max( MUR,MUC ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( ( ( MDR + AMS ) - ( RRS - PN ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + MUM )", "obj1": 0.7992125984251969, "obj2": 0.08271338241985098}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "( ( MLU - MLU ) + MUR )", "obj1": 0.7755905511811023, "obj2": 0.09481307312446961}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( Const ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( FirstVNF_CPU_Server ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( MUR,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + Max( CS,RCSe ) ) ) + RMSe ) ) ) ,( MLU - Max( MUR,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + Max( CS,RCSe ) ) ) + RMSe ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6999531353718662}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - DDR )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe + MUC ) - ( Min( DS ,Min( ( MUM * MUR ) ,MUC ) ) + RMSe ) ) )", "obj1": 0.5177165354330708, "obj2": 0.40049809709669987}], "78": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( Max( MLU,MUM ) + Max( Max( MUR,MUC ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( ( ( MDR + AMS ) - ( RRS - PN ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + MUM )", "obj1": 0.7992125984251969, "obj2": 0.08271338241985098}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "( ( MLU - MLU ) + MUR )", "obj1": 0.7755905511811023, "obj2": 0.09481307312446961}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( Const ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( FirstVNF_CPU_Server ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( MUR,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + Max( CS,RCSe ) ) ) + RMSe ) ) ) ,( MLU - Max( MUR,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + Max( CS,RCSe ) ) ) + RMSe ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6999531353718662}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - DDR )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe + MUC ) - ( Min( DS ,Min( ( MUM * MUR ) ,MUC ) ) + RMSe ) ) )", "obj1": 0.5177165354330708, "obj2": 0.40049809709669987}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}], "79": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( Max( MLU,MUM ) + Max( Max( MUR,MUC ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( FirstVNF_CPU_Server - ( AMS / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),PN ) ) )", "choosing": "( Max( MUM,MLU ) - ( ( ( ( CS / Min( RRSe ,( Min( CS ,MUR ) * ( DS / CS ) ) ) ) + ( ( ( ( MLU + MUC ) + MLU ) - Min( MUC ,RCSe ) ) * ( RMSe + ( MUC - RMSe ) ) ) ) - MLU ) + MUC ) )", "obj1": 0.3937007874015748, "obj2": 0.49037552389958333}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( ( ( MDR + AMS ) - ( RRS - PN ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + MUM )", "obj1": 0.7992125984251969, "obj2": 0.08271338241985098}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( CRS,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS - RCSe ) - ( ( DS + ( MUM - ( MLU / CS ) ) ) + MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.036576603827300276}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "( ( MLU - MLU ) + MUR )", "obj1": 0.7755905511811023, "obj2": 0.09481307312446961}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Max( FirstVNF_Mem_Server,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / MUR ) - RMSe )", "obj1": 0.17913385826771652, "obj2": 0.6997004477378498}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - DDR )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe + MUC ) - ( Min( DS ,Min( ( MUM * MUR ) ,MUC ) ) + RMSe ) ) )", "obj1": 0.5177165354330708, "obj2": 0.40049809709669987}], "80": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( RMSe / MUR ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( ( ( ( MDR + AMS ) - ( RRS - PN ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + MUM )", "obj1": 0.7992125984251969, "obj2": 0.08271338241985098}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( PN - Min( Min( ( FirstVNF_RAM_Server / MDR ) ,( PN + FirstVNF_Mem ) ) ,DDR ) )", "choosing": "( MUM - Min( RMSe ,MUM ) )", "obj1": 0.9468503937007874, "obj2": 0.022095221230989833}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - DDR )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe + MUC ) - ( Min( DS ,Min( ( MUM * MUR ) ,MUC ) ) + RMSe ) ) )", "obj1": 0.5177165354330708, "obj2": 0.40049809709669987}, {"determining": "( Max( BR,CRS ) / ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( MUM + RMSe ) - Max( MUC,MUM ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}], "81": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "Min( ( MDR + AMS ) ,( RRS - PN ) )", "choosing": "( Max( DS,MUC ) + ( Max( MUR,MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( RMSe / MUR ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) - Min( Min( FirstVNF_CPU ,AMS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - DS )", "obj1": 0.5669291338582677, "obj2": 0.32702116749037335}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( BR / FirstVNF_Mem ) - ( Max( Min( ARS ,RRS ),CRS ) * Max( FirstVNF_Mem_Server,Max( ( MDR * FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( RRSe - Max( ( RCSe * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.5433070866141733, "obj2": 0.34391171022998646}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( ( FirstVNF_Mem / AMS ) - Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( Max( ( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) ),MUC ) / ( MUR + RMSe ) )", "obj1": 0.5216535433070866, "obj2": 0.37479811775339555}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( AMS * PN ) + ( FirstVNF_CPU * AMS ) ) ,MRS ) )", "choosing": "( ( ( ( MUM + MUC ) + MUC ) / Max( CS,CS ) ) + RCSe )", "obj1": 0.5078740157480315, "obj2": 0.40425478842971185}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ( ( MDR + AMS ) - ( RRS - PN ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + MUM )", "obj1": 0.7992125984251969, "obj2": 0.08271338241985098}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - DDR )", "choosing": "( Max( RCSe,MLU ) / ( ( RCSe + MUC ) - ( Min( DS ,Min( ( MUM * MUR ) ,MUC ) ) + RMSe ) ) )", "obj1": 0.5177165354330708, "obj2": 0.40049809709669987}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}], "82": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Min( AMS ,FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU ) + ( Const / DDR ) ) ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - ( RRSe / RRSe ) ) ,( RMSe / Min( DS ,MUR ) ) ) + Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + AMS ) ,( RRS - PN ) )", "choosing": "( Max( DS,MUC ) + ( Max( MUR,MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ( ( MDR + AMS ) - ( RRS - PN ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + MUM )", "obj1": 0.7992125984251969, "obj2": 0.08271338241985098}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( RMSe / MUR ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "83": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( ( Max( Min( Min( ( ( CRS * ACS ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server - ACS ) / ( ACS - Const ) ) ) ,( ( ( ACS / ARS ) + ( FirstVNF_CPU - Const ) ) / Max( ( CRS - CRS ),( FirstVNF_RAM / CRS ) ) ) ),Min( Min( Max( Max( ACS,MRS ),Max( MDR,ACS ) ) ,( Max( FirstVNF_Mem_Server,CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) / ( CRS + AMS ) ) / Max( ( Const - PN ),Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU - RRS ) * Max( BR,Const ) ) * ( ( FirstVNF_RAM / ARS ) / ( FirstVNF_RAM_Server - CRS ) ) ) * ( ( ( MDR / FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_Mem_Server ) ) + ( Min( CRS ,BR ) + ( RRS / ARS ) ) ) ) + ( ( ( Max( CRS,DDR ) * Min( DDR ,ARS ) ) * ( ( FirstVNF_Mem + ARS ) * Min( FirstVNF_Mem ,ACS ) ) ) / ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Min( MRS ,FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_RAM ),( MRS + FirstVNF_RAM ) ) ) ) ) ) * ( ( Max( ( ( ( AMS + FirstVNF_CPU ) + Min( Const ,PN ) ) + ( Max( PN,BR ) + ( RRS - FirstVNF_CPU_Server ) ) ),( ( ( RRS + ARS ) - ( FirstVNF_RAM + ACS ) ) * Min( Min( ACS ,MRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) * Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / Min( PN ,RRS ) ) / ( ( FirstVNF_CPU + AMS ) / ( FirstVNF_CPU_Server / CRS ) ) ),Max( Min( ( CRS + MDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),Max( ( MRS * FirstVNF_CPU_Server ),Max( PN,ACS ) ) ) ) ) / Min( Max( ( Min( ( PN + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + MDR ) ) * ( ( FirstVNF_Mem / Const ) * ( FirstVNF_CPU_Server - PN ) ) ),( Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_CPU ,BR ) ) - ( ( ACS * PN ) * Min( ARS ,MRS ) ) ) ) ,Max( ( ( ( MDR / FirstVNF_Mem ) / ( ACS - BR ) ) / Max( ( Const * PN ),( Const * PN ) ) ),( Min( Min( FirstVNF_RAM ,AMS ) ,( MDR / BR ) ) + Min( ( AMS / FirstVNF_CPU_Server ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( Min( ( ( ( Min( MRS ,ACS ) + Min( ARS ,RRS ) ) / Min( ( FirstVNF_RAM_Server + Const ) ,( CRS * FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_RAM + RRS ) / ( FirstVNF_CPU_Server / Const ) ) - Max( Min( RRS ,DDR ),( BR * PN ) ) ) ) ,( ( Max( ( BR + DDR ),( CRS / FirstVNF_RAM_Server ) ) / ( Min( PN ,ARS ) + ( FirstVNF_CPU_Server * Const ) ) ) * ( ( ( FirstVNF_Mem - PN ) * ( AMS * MDR ) ) / ( ( PN / FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_CPU_Server ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU * AMS ) / ( MRS + FirstVNF_CPU_Server ) ) + Min( ( DDR * CRS ) ,( FirstVNF_CPU_Server + PN ) ) ) + ( ( ( ARS + RRS ) * ( PN / FirstVNF_Mem ) ) / ( Min( PN ,BR ) * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) - ( ( ( Min( AMS ,FirstVNF_Mem ) * ( ARS - ACS ) ) * ( ( FirstVNF_RAM + MRS ) * ( Const / Const ) ) ) - ( ( Max( MRS,FirstVNF_Mem_Server ) - ( RRS - ACS ) ) / ( Min( AMS ,CRS ) / ( MDR - ACS ) ) ) ) ) ) - Min( ( Max( ( ( ( BR * FirstVNF_CPU ) * Max( ARS,RRS ) ) / Max( ( PN + MRS ),( ARS + ARS ) ) ),Min( ( Min( DDR ,CRS ) * ( MDR - FirstVNF_CPU_Server ) ) ,( ( PN - FirstVNF_RAM ) / Min( DDR ,DDR ) ) ) ) * ( Max( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),( FirstVNF_RAM_Server - ACS ) ),Max( ( DDR - ACS ),( RRS - FirstVNF_Mem ) ) ) + ( ( Min( ARS ,DDR ) + Max( PN,PN ) ) + Min( ( CRS - MDR ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) ,( Max( ( ( ( FirstVNF_Mem_Server + AMS ) - ( MDR * FirstVNF_Mem ) ) * Min( Min( BR ,ARS ) ,( FirstVNF_CPU / AMS ) ) ),Min( ( Min( DDR ,FirstVNF_CPU ) + Min( DDR ,RRS ) ) ,Min( Min( FirstVNF_RAM ,CRS ) ,( MDR * BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,MRS ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem_Server + Const ) - Min( BR ,ACS ) ) ) * ( ( ( ACS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MRS ) ) / ( ( FirstVNF_Mem / AMS ) + ( FirstVNF_RAM_Server - CRS ) ) ) ) ) ) ) )", "choosing": "( ( Max( MUM,MUR ) * RRSe ) * ( CS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU ) + ( Const / DDR ) ) ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - ( RRSe / RRSe ) ) ,( RMSe / Min( DS ,MUR ) ) ) + Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ( ( MDR + AMS ) - ( RRS - PN ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + MUM )", "obj1": 0.7992125984251969, "obj2": 0.08271338241985098}, {"determining": "( PN - Min( AMS ,( FirstVNF_Mem * AMS ) ) )", "choosing": "( Min( CS ,MUM ) - Min( ( Max( RCSe,MUC ) - Min( MUC ,MUC ) ) ,MUM ) )", "obj1": 0.9960629921259843, "obj2": 0.005433375506728179}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( ( BR / MDR ) + Min( ( ( ACS * DDR ) - Max( AMS,Const ) ) ,FirstVNF_RAM ) )", "choosing": "( Max( MUM,RRSe ) * MUR )", "obj1": 0.9606299212598425, "obj2": 0.024213349291424498}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}], "84": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM / MUR ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( Min( ( ( CRS * ACS ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server - ACS ) / ( ACS - Const ) ) ) ,( ( ( ACS / ARS ) + ( FirstVNF_CPU - Const ) ) / Max( ( CRS - CRS ),( FirstVNF_RAM / CRS ) ) ) ),Min( Min( Max( Max( ACS,MRS ),Max( MDR,ACS ) ) ,( Max( FirstVNF_Mem_Server,CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ,( ( Max( FirstVNF_Mem_Server,Const ) / ( CRS + AMS ) ) / Max( ( Const - PN ),Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - ( ( ( ( ( FirstVNF_CPU - RRS ) * Max( BR,Const ) ) * ( ( FirstVNF_RAM / ARS ) / ( FirstVNF_RAM_Server - CRS ) ) ) * ( ( ( MDR / FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_Mem_Server ) ) + ( Min( CRS ,BR ) + ( RRS / ARS ) ) ) ) + ( ( ( Max( CRS,DDR ) * Min( DDR ,ARS ) ) * ( ( FirstVNF_Mem + ARS ) * Min( FirstVNF_Mem ,ACS ) ) ) / ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Min( MRS ,FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_RAM ),( MRS + FirstVNF_RAM ) ) ) ) ) ) * ( ( Max( ( ( ( AMS + FirstVNF_CPU ) + Min( Const ,PN ) ) + ( Max( PN,BR ) + ( RRS - FirstVNF_CPU_Server ) ) ),( ( ( RRS + ARS ) - ( FirstVNF_RAM + ACS ) ) * Min( Min( ACS ,MRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) * Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / Min( PN ,RRS ) ) / ( ( FirstVNF_CPU + AMS ) / ( FirstVNF_CPU_Server / CRS ) ) ),Max( Min( ( CRS + MDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),Max( ( MRS * FirstVNF_CPU_Server ),Max( PN,ACS ) ) ) ) ) / Min( Max( ( Min( ( PN + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + MDR ) ) * ( ( FirstVNF_Mem / Const ) * ( FirstVNF_CPU_Server - PN ) ) ),( Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_CPU ,BR ) ) - ( ( ACS * PN ) * Min( ARS ,MRS ) ) ) ) ,Max( ( ( ( MDR / FirstVNF_Mem ) / ( ACS - BR ) ) / Max( ( Const * PN ),( Const * PN ) ) ),( Min( Min( FirstVNF_RAM ,AMS ) ,( MDR / BR ) ) + Min( ( AMS / FirstVNF_CPU_Server ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( Min( ( ( ( Min( MRS ,ACS ) + Min( ARS ,RRS ) ) / Min( ( FirstVNF_RAM_Server + Const ) ,( CRS * FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_RAM + RRS ) / ( FirstVNF_CPU_Server / Const ) ) - Max( Min( RRS ,DDR ),( BR * PN ) ) ) ) ,( ( Max( ( BR + DDR ),( CRS / FirstVNF_RAM_Server ) ) / ( Min( PN ,ARS ) + ( FirstVNF_CPU_Server * Const ) ) ) * ( ( ( FirstVNF_Mem - PN ) * ( AMS * MDR ) ) / ( ( PN / FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_CPU_Server ) ) ) ) ) / ( ( ( ( ( FirstVNF_CPU * AMS ) / ( MRS + FirstVNF_CPU_Server ) ) + Min( ( DDR * CRS ) ,( FirstVNF_CPU_Server + PN ) ) ) + ( ( ( ARS + RRS ) * ( PN / FirstVNF_Mem ) ) / ( Min( PN ,BR ) * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) - ( ( ( Min( AMS ,FirstVNF_Mem ) * ( ARS - ACS ) ) * ( ( FirstVNF_RAM + MRS ) * ( Const / Const ) ) ) - ( ( Max( MRS,FirstVNF_Mem_Server ) - ( RRS - ACS ) ) / ( Min( AMS ,CRS ) / ( MDR - ACS ) ) ) ) ) ) - Min( ( Max( ( ( ( BR * FirstVNF_CPU ) * Max( ARS,RRS ) ) / Max( ( PN + MRS ),( ARS + ARS ) ) ),Min( ( Min( DDR ,CRS ) * ( MDR - FirstVNF_CPU_Server ) ) ,( ( PN - FirstVNF_RAM ) / Min( DDR ,DDR ) ) ) ) * ( Max( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ),( FirstVNF_RAM_Server - ACS ) ),Max( ( DDR - ACS ),( RRS - FirstVNF_Mem ) ) ) + ( ( Min( ARS ,DDR ) + Max( PN,PN ) ) + Min( ( CRS - MDR ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) ,( Max( ( ( ( FirstVNF_Mem_Server + AMS ) - ( MDR * FirstVNF_Mem ) ) * Min( Min( BR ,ARS ) ,( FirstVNF_CPU / AMS ) ) ),Min( ( Min( DDR ,FirstVNF_CPU ) + Min( DDR ,RRS ) ) ,Min( Min( FirstVNF_RAM ,CRS ) ,( MDR * BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,MRS ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem_Server + Const ) - Min( BR ,ACS ) ) ) * ( ( ( ACS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MRS ) ) / ( ( FirstVNF_Mem / AMS ) + ( FirstVNF_RAM_Server - CRS ) ) ) ) ) ) ) )", "choosing": "( ( Max( MUM,MUR ) * RRSe ) * ( CS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ( ( MDR + AMS ) - ( RRS - PN ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + MUM )", "obj1": 0.7992125984251969, "obj2": 0.08271338241985098}, {"determining": "( PN - Min( AMS ,( FirstVNF_Mem * AMS ) ) )", "choosing": "( Min( CS ,MUM ) - Min( ( Max( RCSe,MUC ) - Min( MUC ,MUC ) ) ,MUM ) )", "obj1": 0.9960629921259843, "obj2": 0.005433375506728179}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( ( BR / MDR ) + Min( ( ( ACS * DDR ) - Max( AMS,Const ) ) ,FirstVNF_RAM ) )", "choosing": "( Max( MUM,RRSe ) * MUR )", "obj1": 0.9606299212598425, "obj2": 0.024213349291424498}], "85": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( BR + ( ( ACS - RRS ) - Min( FirstVNF_Mem ,PN ) ) ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + MLU ) / RCSe ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM / MUR ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ( ( MDR + AMS ) - ( RRS - PN ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + MUM )", "obj1": 0.7992125984251969, "obj2": 0.08271338241985098}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0020642151432190797}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}], "86": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( ( ACS - RRS ) - Min( FirstVNF_Mem ,PN ) ) ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + MLU ) / RCSe ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ( ( MDR + AMS ) - ( RRS - PN ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + MUM )", "obj1": 0.7992125984251969, "obj2": 0.08271338241985098}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0020642151432190797}], "87": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUC,MUM ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( Min( ( Max( CS,MLU ) - ( MUC * MLU ) ) ,DS ) - MUC )", "obj1": 0.15748031496062992, "obj2": 0.7404077222833236}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( ( ( MDR + AMS ) - ( RRS - PN ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( ( MUM / RMSe ) + MUM )", "obj1": 0.7992125984251969, "obj2": 0.08271338241985098}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( PN - Min( Min( ( FirstVNF_Mem_Server / RRS ) ,FirstVNF_CPU ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,MUM ) - ( Max( RCSe,MUC ) - Min( MUC ,MUC ) ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}], "88": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUC,MUM ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( ( ACS + ( ( ACS + RRS ) - ACS ) ) - ACS )", "choosing": "( Max( MUM,RMSe ) - MUM )", "obj1": 0.18503937007874016, "obj2": 0.6868584260895956}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( AMS / RRS ) - ( DDR / PN ) )", "choosing": "( ( CS / MLU ) + ( MUM / MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( PN - Min( Min( ( FirstVNF_Mem_Server / RRS ) ,FirstVNF_CPU ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,MUM ) - ( Max( RCSe,MUC ) - Min( MUC ,MUC ) ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( ( RRS + ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,MUM ) + ( MUM - MUC ) )", "obj1": 0.8031496062992126, "obj2": 0.08240280761380366}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) ) - BR ) )", "choosing": "( Min( RRSe ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.16141732283464566, "obj2": 0.7091287663458229}], "89": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( PN - Min( Min( ( FirstVNF_Mem_Server / RRS ) ,FirstVNF_CPU ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,MUM ) - ( Max( RCSe,MUC ) - Min( MUC ,MUC ) ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( PN - Min( DDR ,FirstVNF_RAM ) )", "choosing": "Max( ( Max( CS,MUM ) - ( MUC - MLU ) ),( Max( RCSe,MUC ) - Min( MUC ,MUC ) ) )", "obj1": 0.9448818897637795, "obj2": 0.02456543593568153}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( ( RRS + ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,MUM ) + ( MUM - MUC ) )", "obj1": 0.8031496062992126, "obj2": 0.08240280761380366}], "90": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUC,MUM ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Min( ( Max( ( ( ( Max( ( FirstVNF_Mem - BR ),( BR - DDR ) ) * ( ( FirstVNF_RAM + Const ) / ( PN / Const ) ) ) - ( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_Mem + MRS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) - ( CRS + FirstVNF_CPU ) ) ) ) - ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,Max( AMS,CRS ) ) - ( Min( FirstVNF_RAM ,ARS ) + ( FirstVNF_CPU_Server - ACS ) ) ) * ( ( ( MDR * AMS ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) / ( Min( FirstVNF_Mem ,ARS ) / ( CRS - PN ) ) ) ) ),Max( Min( ( Min( ( FirstVNF_CPU * MRS ) ,( DDR * BR ) ) * ( Min( AMS ,MRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_CPU_Server - RRS ) - ( FirstVNF_CPU_Server / DDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( DDR * ARS ) ) ) ),( ( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) / Max( Min( BR ,FirstVNF_CPU ),( AMS + MRS ) ) ) / ( Min( ( DDR / FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + BR ) ) * ( Min( Const ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( ( Max( Max( ( Const / AMS ),( FirstVNF_RAM_Server / RRS ) ),( ( DDR + FirstVNF_Mem ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) + ( ( Min( MRS ,BR ) - ( FirstVNF_RAM / MRS ) ) - ( ( ARS - AMS ) + ( PN / ACS ) ) ) ) ,Max( ( Min( ( RRS / FirstVNF_RAM_Server ) ,Min( Const ,FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ACS + CRS ) ) ),Min( Min( Min( ACS ,FirstVNF_Mem_Server ) ,( Const / BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS / RRS ) ) ) ) ) + ( Min( ( ( ( DDR / RRS ) - ( MDR * CRS ) ) - Max( ( MRS / MDR ),Min( Const ,FirstVNF_Mem ) ) ) ,( ( Min( FirstVNF_RAM_Server ,Const ) + ( BR + BR ) ) / ( Min( FirstVNF_CPU ,BR ) / Min( CRS ,DDR ) ) ) ) / ( Min( ( Max( BR,ACS ) + Min( MRS ,FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem ,MDR ),( MDR / BR ) ) ) * Max( ( Min( Const ,DDR ) * ( FirstVNF_RAM / MDR ) ),Max( Min( FirstVNF_RAM_Server ,CRS ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) ) ) ) ) ,( ( Max( ( ( Max( ( DDR - MRS ),( FirstVNF_RAM / FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server * BR ) / ( MDR - CRS ) ) ) * ( ( ( ARS / BR ) - ( FirstVNF_CPU + RRS ) ) - Max( ( ARS + MDR ),Min( DDR ,CRS ) ) ) ),( ( Min( ( AMS + ARS ) ,( ARS - AMS ) ) + ( Min( AMS ,AMS ) * ( MDR - FirstVNF_RAM_Server ) ) ) + ( ( Min( CRS ,ACS ) - Max( FirstVNF_CPU_Server,DDR ) ) - ( Min( ACS ,FirstVNF_Mem ) - ( FirstVNF_Mem / PN ) ) ) ) ) + ( Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + ( FirstVNF_RAM_Server - MRS ) ) * Max( ( PN / RRS ),Min( PN ,CRS ) ) ),( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_CPU_Server + ARS ) ) + Max( ( BR + PN ),( Const / FirstVNF_RAM ) ) ) ) * Max( ( ( Max( FirstVNF_Mem_Server,RRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ( ( DDR * AMS ) * Max( CRS,ARS ) ) ),Max( ( Min( FirstVNF_Mem ,RRS ) + ( FirstVNF_RAM + FirstVNF_Mem ) ),( ( ACS * CRS ) / Min( Const ,DDR ) ) ) ) ) ) - Max( ( ( Min( Min( ( RRS + CRS ) ,( DDR / Const ) ) ,Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( PN + ACS ) ) ) - ( ( ( ACS * MRS ) / ( DDR - FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ACS * RRS ) ) ) ) - ( ( Min( Min( DDR ,FirstVNF_RAM_Server ) ,Max( ACS,FirstVNF_RAM ) ) - Min( ( MDR / MRS ) ,( MRS - FirstVNF_Mem ) ) ) / Max( ( Min( Const ,AMS ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ),Max( ( RRS - PN ),( MRS + BR ) ) ) ) ),( ( ( ( ( Const / FirstVNF_Mem_Server ) + Min( FirstVNF_CPU ,MDR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( AMS - RRS ) ) ) * ( ( ( MRS * DDR ) * ( BR * RRS ) ) / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( MDR ,CRS ) ) ) ) - ( ( Max( ( MDR + FirstVNF_Mem ),( BR + FirstVNF_RAM_Server ) ) / ( Min( BR ,FirstVNF_CPU ) + Min( FirstVNF_RAM ,RRS ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) - Max( FirstVNF_Mem_Server,AMS ) ) ,Min( ( FirstVNF_CPU_Server / ARS ) ,( DDR * PN ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( ( ( ( MUR / RRSe ) + Max( RCSe,RCSe ) ) + ( ( DS + MUR ) - ( MUM * CS ) ) ),Min( ( ( MUC * MUM ) - ( MUC / DS ) ) ,( ( RRSe + MUR ) / ( CS * DS ) ) ) ) - ( ( ( ( RMSe * MUR ) / Min( CS ,RRSe ) ) + Min( ( MUR * MLU ) ,( MLU / CS ) ) ) / Min( ( ( MUM * MUC ) / ( MUM + MUM ) ) ,( ( CS * RCSe ) + Max( MUM,RCSe ) ) ) ) ) + ( ( ( Max( Max( RMSe,MUC ),( MUR + RMSe ) ) / ( Max( MLU,RMSe ) / Max( RCSe,MUM ) ) ) * ( ( Min( MUR ,RRSe ) + Min( RRSe ,RRSe ) ) + Min( ( RCSe + RCSe ) ,( DS - DS ) ) ) ) - Max( ( ( Max( MLU,MLU ) - ( MUC - MUR ) ) * ( ( RCSe * CS ) * ( CS / RMSe ) ) ),( Max( Max( MUM,MUM ),( CS * CS ) ) - ( ( RMSe / DS ) - Min( CS ,MUC ) ) ) ) ) ),( ( ( ( ( ( MUR + RMSe ) * ( MUM + DS ) ) * ( ( CS * MUM ) - ( RRSe * RRSe ) ) ) + Min( ( Min( MUR ,DS ) - ( MUM / RCSe ) ) ,Max( Min( DS ,MUR ),Min( RRSe ,MUR ) ) ) ) + ( ( Max( ( DS - CS ),( CS + CS ) ) / Min( ( RRSe * RCSe ) ,Min( MUM ,DS ) ) ) / ( ( ( RCSe + MLU ) / ( RMSe / MUC ) ) / Min( Max( RMSe,RMSe ) ,Min( RMSe ,MUR ) ) ) ) ) / Min( ( Min( Min( ( RCSe - MUC ) ,( DS * RMSe ) ) ,Min( Max( RCSe,MUR ) ,Min( DS ,MLU ) ) ) * Min( ( ( MLU - MUC ) * Min( RCSe ,DS ) ) ,( ( RMSe / MUR ) - ( MUC * RMSe ) ) ) ) ,( ( ( ( RRSe * MUR ) / ( RMSe * MUM ) ) + ( Min( MUM ,RRSe ) * ( RMSe - MUR ) ) ) / Min( Min( ( MUC * RRSe ) ,( MUM / DS ) ) ,Min( Max( MUC,MUR ) ,( RRSe / MUR ) ) ) ) ) ) ) - ( Max( ( ( ( ( Max( RRSe,MLU ) - Max( MUR,MLU ) ) * ( Max( RRSe,RCSe ) - Min( RCSe ,MLU ) ) ) + ( ( ( CS / MUM ) / ( MUC + MLU ) ) + ( ( MUM - RRSe ) / ( MUC / MUR ) ) ) ) + Max( ( ( Max( RRSe,RMSe ) + ( RMSe - DS ) ) + Min( Min( DS ,RMSe ) ,( MUR * RMSe ) ) ),( ( ( RRSe / RMSe ) / ( DS - MUC ) ) * Max( ( MUC + DS ),( MUR / RRSe ) ) ) ) ),( ( Max( ( ( MUM + CS ) + ( CS * RCSe ) ),( Max( MUR,MUR ) * ( MUC * CS ) ) ) * Min( Max( ( MLU * MUC ),( RCSe / DS ) ) ,Max( Max( MLU,RMSe ),( DS * CS ) ) ) ) - Max( Max( ( Min( MUC ,DS ) * ( MUM / RCSe ) ),( ( MUM * MUR ) / Min( RCSe ,CS ) ) ),( ( ( MUR + RMSe ) + ( MLU * DS ) ) / Min( ( RRSe - DS ) ,( DS * CS ) ) ) ) ) ) * ( ( Max( Max( ( ( CS * MUM ) / ( RCSe * CS ) ),( ( DS + MLU ) * ( RCSe * RMSe ) ) ),Min( ( ( DS - RRSe ) / ( RRSe * MUM ) ) ,( Max( RMSe,DS ) * ( DS + MUR ) ) ) ) / ( Max( Min( ( MUR * CS ) ,( DS / CS ) ),Min( ( MUC - MLU ) ,( RCSe + RRSe ) ) ) * ( ( Max( RRSe,DS ) - ( MUM + CS ) ) * ( ( MUR * DS ) - ( RCSe / DS ) ) ) ) ) * Max( ( Min( ( ( RMSe * CS ) * ( DS * MUR ) ) ,Max( ( MUR - MUC ),Max( RMSe,MUM ) ) ) / ( ( ( RMSe * MUC ) / Max( DS,RRSe ) ) / ( ( RMSe - RRSe ) - Max( MLU,MUR ) ) ) ),( Max( ( ( RCSe * MUC ) / Min( CS ,MUR ) ),Max( Min( CS ,MLU ),Max( DS,MUC ) ) ) / ( Max( Min( MLU ,MUC ),Min( MUM ,RRSe ) ) - ( Max( MUM,MUC ) + ( MLU / CS ) ) ) ) ) ) ) )", "obj1": 0.9881889763779528, "obj2": 0.008465457400913968}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( PN - Min( DDR ,FirstVNF_RAM ) )", "choosing": "( Min( MUM ,MLU ) - ( RRSe / CS ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}], "91": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUC,MUM ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Min( ( Max( ( ( ( Max( ( FirstVNF_Mem - BR ),( BR - DDR ) ) * ( ( FirstVNF_RAM + Const ) / ( PN / Const ) ) ) - ( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_Mem + MRS ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) - ( CRS + FirstVNF_CPU ) ) ) ) - ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,Max( AMS,CRS ) ) - ( Min( FirstVNF_RAM ,ARS ) + ( FirstVNF_CPU_Server - ACS ) ) ) * ( ( ( MDR * AMS ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) / ( Min( FirstVNF_Mem ,ARS ) / ( CRS - PN ) ) ) ) ),Max( Min( ( Min( ( FirstVNF_CPU * MRS ) ,( DDR * BR ) ) * ( Min( AMS ,MRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_CPU_Server - RRS ) - ( FirstVNF_CPU_Server / DDR ) ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( DDR * ARS ) ) ) ),( ( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) / Max( Min( BR ,FirstVNF_CPU ),( AMS + MRS ) ) ) / ( Min( ( DDR / FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + BR ) ) * ( Min( Const ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( ( Max( Max( ( Const / AMS ),( FirstVNF_RAM_Server / RRS ) ),( ( DDR + FirstVNF_Mem ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) + ( ( Min( MRS ,BR ) - ( FirstVNF_RAM / MRS ) ) - ( ( ARS - AMS ) + ( PN / ACS ) ) ) ) ,Max( ( Min( ( RRS / FirstVNF_RAM_Server ) ,Min( Const ,FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ACS + CRS ) ) ),Min( Min( Min( ACS ,FirstVNF_Mem_Server ) ,( Const / BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS / RRS ) ) ) ) ) + ( Min( ( ( ( DDR / RRS ) - ( MDR * CRS ) ) - Max( ( MRS / MDR ),Min( Const ,FirstVNF_Mem ) ) ) ,( ( Min( FirstVNF_RAM_Server ,Const ) + ( BR + BR ) ) / ( Min( FirstVNF_CPU ,BR ) / Min( CRS ,DDR ) ) ) ) / ( Min( ( Max( BR,ACS ) + Min( MRS ,FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem ,MDR ),( MDR / BR ) ) ) * Max( ( Min( Const ,DDR ) * ( FirstVNF_RAM / MDR ) ),Max( Min( FirstVNF_RAM_Server ,CRS ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) ) ) ) ) ,( ( Max( ( ( Max( ( DDR - MRS ),( FirstVNF_RAM / FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server * BR ) / ( MDR - CRS ) ) ) * ( ( ( ARS / BR ) - ( FirstVNF_CPU + RRS ) ) - Max( ( ARS + MDR ),Min( DDR ,CRS ) ) ) ),( ( Min( ( AMS + ARS ) ,( ARS - AMS ) ) + ( Min( AMS ,AMS ) * ( MDR - FirstVNF_RAM_Server ) ) ) + ( ( Min( CRS ,ACS ) - Max( FirstVNF_CPU_Server,DDR ) ) - ( Min( ACS ,FirstVNF_Mem ) - ( FirstVNF_Mem / PN ) ) ) ) ) + ( Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + ( FirstVNF_RAM_Server - MRS ) ) * Max( ( PN / RRS ),Min( PN ,CRS ) ) ),( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_CPU_Server + ARS ) ) + Max( ( BR + PN ),( Const / FirstVNF_RAM ) ) ) ) * Max( ( ( Max( FirstVNF_Mem_Server,RRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ( ( DDR * AMS ) * Max( CRS,ARS ) ) ),Max( ( Min( FirstVNF_Mem ,RRS ) + ( FirstVNF_RAM + FirstVNF_Mem ) ),( ( ACS * CRS ) / Min( Const ,DDR ) ) ) ) ) ) - Max( ( ( Min( Min( ( RRS + CRS ) ,( DDR / Const ) ) ,Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( PN + ACS ) ) ) - ( ( ( ACS * MRS ) / ( DDR - FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ACS * RRS ) ) ) ) - ( ( Min( Min( DDR ,FirstVNF_RAM_Server ) ,Max( ACS,FirstVNF_RAM ) ) - Min( ( MDR / MRS ) ,( MRS - FirstVNF_Mem ) ) ) / Max( ( Min( Const ,AMS ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ),Max( ( RRS - PN ),( MRS + BR ) ) ) ) ),( ( ( ( ( Const / FirstVNF_Mem_Server ) + Min( FirstVNF_CPU ,MDR ) ) * Min( Min( ACS ,FirstVNF_RAM ) ,( AMS - RRS ) ) ) * ( ( ( MRS * DDR ) * ( BR * RRS ) ) / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( MDR ,CRS ) ) ) ) - ( ( Max( ( MDR + FirstVNF_Mem ),( BR + FirstVNF_RAM_Server ) ) / ( Min( BR ,FirstVNF_CPU ) + Min( FirstVNF_RAM ,RRS ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) - Max( FirstVNF_Mem_Server,AMS ) ) ,Min( ( FirstVNF_CPU_Server / ARS ) ,( DDR * PN ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Max( ( ( ( MUR / RRSe ) + Max( RCSe,RCSe ) ) + ( ( DS + MUR ) - ( MUM * CS ) ) ),Min( ( ( MUC * MUM ) - ( MUC / DS ) ) ,( ( RRSe + MUR ) / ( CS * DS ) ) ) ) - ( ( ( ( RMSe * MUR ) / Min( CS ,RRSe ) ) + Min( ( MUR * MLU ) ,( MLU / CS ) ) ) / Min( ( ( MUM * MUC ) / ( MUM + MUM ) ) ,( ( CS * RCSe ) + Max( MUM,RCSe ) ) ) ) ) + ( ( ( Max( Max( RMSe,MUC ),( MUR + RMSe ) ) / ( Max( MLU,RMSe ) / Max( RCSe,MUM ) ) ) * ( ( Min( MUR ,RRSe ) + Min( RRSe ,RRSe ) ) + Min( ( RCSe + RCSe ) ,( DS - DS ) ) ) ) - Max( ( ( Max( MLU,MLU ) - ( MUC - MUR ) ) * ( ( RCSe * CS ) * ( CS / RMSe ) ) ),( Max( Max( MUM,MUM ),( CS * CS ) ) - ( ( RMSe / DS ) - Min( CS ,MUC ) ) ) ) ) ),( ( ( ( ( ( MUR + RMSe ) * ( MUM + DS ) ) * ( ( CS * MUM ) - ( RRSe * RRSe ) ) ) + Min( ( Min( MUR ,DS ) - ( MUM / RCSe ) ) ,Max( Min( DS ,MUR ),Min( RRSe ,MUR ) ) ) ) + ( ( Max( ( DS - CS ),( CS + CS ) ) / Min( ( RRSe * RCSe ) ,Min( MUM ,DS ) ) ) / ( ( ( RCSe + MLU ) / ( RMSe / MUC ) ) / Min( Max( RMSe,RMSe ) ,Min( RMSe ,MUR ) ) ) ) ) / Min( ( Min( Min( ( RCSe - MUC ) ,( DS * RMSe ) ) ,Min( Max( RCSe,MUR ) ,Min( DS ,MLU ) ) ) * Min( ( ( MLU - MUC ) * Min( RCSe ,DS ) ) ,( ( RMSe / MUR ) - ( MUC * RMSe ) ) ) ) ,( ( ( ( RRSe * MUR ) / ( RMSe * MUM ) ) + ( Min( MUM ,RRSe ) * ( RMSe - MUR ) ) ) / Min( Min( ( MUC * RRSe ) ,( MUM / DS ) ) ,Min( Max( MUC,MUR ) ,( RRSe / MUR ) ) ) ) ) ) ) - ( Max( ( ( ( ( Max( RRSe,MLU ) - Max( MUR,MLU ) ) * ( Max( RRSe,RCSe ) - Min( RCSe ,MLU ) ) ) + ( ( ( CS / MUM ) / ( MUC + MLU ) ) + ( ( MUM - RRSe ) / ( MUC / MUR ) ) ) ) + Max( ( ( Max( RRSe,RMSe ) + ( RMSe - DS ) ) + Min( Min( DS ,RMSe ) ,( MUR * RMSe ) ) ),( ( ( RRSe / RMSe ) / ( DS - MUC ) ) * Max( ( MUC + DS ),( MUR / RRSe ) ) ) ) ),( ( Max( ( ( MUM + CS ) + ( CS * RCSe ) ),( Max( MUR,MUR ) * ( MUC * CS ) ) ) * Min( Max( ( MLU * MUC ),( RCSe / DS ) ) ,Max( Max( MLU,RMSe ),( DS * CS ) ) ) ) - Max( Max( ( Min( MUC ,DS ) * ( MUM / RCSe ) ),( ( MUM * MUR ) / Min( RCSe ,CS ) ) ),( ( ( MUR + RMSe ) + ( MLU * DS ) ) / Min( ( RRSe - DS ) ,( DS * CS ) ) ) ) ) ) * ( ( Max( Max( ( ( CS * MUM ) / ( RCSe * CS ) ),( ( DS + MLU ) * ( RCSe * RMSe ) ) ),Min( ( ( DS - RRSe ) / ( RRSe * MUM ) ) ,( Max( RMSe,DS ) * ( DS + MUR ) ) ) ) / ( Max( Min( ( MUR * CS ) ,( DS / CS ) ),Min( ( MUC - MLU ) ,( RCSe + RRSe ) ) ) * ( ( Max( RRSe,DS ) - ( MUM + CS ) ) * ( ( MUR * DS ) - ( RCSe / DS ) ) ) ) ) * Max( ( Min( ( ( RMSe * CS ) * ( DS * MUR ) ) ,Max( ( MUR - MUC ),Max( RMSe,MUM ) ) ) / ( ( ( RMSe * MUC ) / Max( DS,RRSe ) ) / ( ( RMSe - RRSe ) - Max( MLU,MUR ) ) ) ),( Max( ( ( RCSe * MUC ) / Min( CS ,MUR ) ),Max( Min( CS ,MLU ),Max( DS,MUC ) ) ) / ( Max( Min( MLU ,MUC ),Min( MUM ,RRSe ) ) - ( Max( MUM,MUC ) + ( MLU / CS ) ) ) ) ) ) ) )", "obj1": 0.9881889763779528, "obj2": 0.008465457400913968}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "Max( ( Max( ( FirstVNF_CPU_Server + Const ),Max( ACS,AMS ) ) + Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),CS ) * DS ) * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6914014720064993}], "92": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( RMSe ,MUM ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM / RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( ( Min( ( Max( ( ( ( FirstVNF_Mem_Server * AMS ) - ( RRS * FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,BR ) ) ),( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( MRS + PN ) ) + ( ( FirstVNF_Mem_Server + Const ) / ( RRS - MDR ) ) ) ) - ( ( ( ( DDR / AMS ) + ( CRS - MRS ) ) - ( ( FirstVNF_Mem_Server / AMS ) - ( Const + ARS ) ) ) * ( Max( Max( DDR,FirstVNF_RAM_Server ),( PN - MDR ) ) + ( ( FirstVNF_RAM_Server * CRS ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,Min( ( Min( Min( ( Const + FirstVNF_CPU ) ,Min( RRS ,PN ) ) ,( ( BR * PN ) / Max( RRS,FirstVNF_RAM_Server ) ) ) + ( Max( ( ACS * RRS ),( Const - FirstVNF_RAM ) ) / Min( Max( MDR,AMS ) ,Max( FirstVNF_Mem_Server,DDR ) ) ) ) ,( ( ( ( Const * BR ) / ( CRS - BR ) ) - Min( Max( PN,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) / ( Max( ( RRS + BR ),( MDR + FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( Max( ( ( ( Min( PN ,BR ) + ( CRS + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem_Server - RRS ),( PN - AMS ) ) ) / ( ( ( DDR * MDR ) - ( PN / FirstVNF_CPU_Server ) ) * Min( ( MRS / FirstVNF_CPU_Server ) ,( MRS / ACS ) ) ) ),( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( PN,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( AMS - BR ) ) ) * ( ( ( FirstVNF_CPU * ACS ) + Min( FirstVNF_Mem_Server ,ACS ) ) * Max( ( ARS / AMS ),Min( ARS ,MDR ) ) ) ) ) - ( ( Min( ( ( BR / PN ) / ( Const - DDR ) ) ,Max( ( CRS + FirstVNF_CPU ),Min( ARS ,AMS ) ) ) * Min( Max( Min( FirstVNF_Mem ,MDR ),Max( AMS,FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,RRS ) ) ) ) - ( ( Min( Min( AMS ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) * Max( ( CRS + FirstVNF_RAM ),Max( PN,MRS ) ) ) - ( ( ( Const + FirstVNF_CPU ) + ( CRS / MRS ) ) * Max( Max( FirstVNF_RAM,MDR ),( PN - Const ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( Const / BR ) / Min( MRS ,FirstVNF_RAM ) ),Max( ( DDR + RRS ),( Const / Const ) ) ) * ( ( Max( DDR,FirstVNF_Mem ) / Min( ARS ,AMS ) ) + ( Max( CRS,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * Min( MRS ,Const ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM / ACS ) / ( CRS - FirstVNF_Mem_Server ) ) / ( Max( Const,AMS ) + ( ARS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( ( ( RRS / Const ) - ( ARS + MDR ) ) / Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_CPU - PN ) ) ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) / ( ( PN + FirstVNF_Mem_Server ) + ( CRS + AMS ) ) ) ) * ( Max( ( ( ACS + CRS ) + ( FirstVNF_Mem_Server - RRS ) ),( ( MRS - CRS ) / Max( RRS,ARS ) ) ) / ( Max( ( PN - FirstVNF_CPU_Server ),( ARS * FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) / ( Max( ( ( ( ( MRS - PN ) / ( MRS / FirstVNF_Mem_Server ) ) + ( ( RRS - BR ) / ( PN + Const ) ) ) - ( Max( ( CRS + PN ),( DDR - RRS ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR - AMS ) ) ) ),( ( ( ( MRS / MDR ) * ( FirstVNF_RAM + ACS ) ) - Max( Min( MRS ,ARS ),( CRS - DDR ) ) ) * Max( Min( ( BR + ACS ) ,Min( BR ,BR ) ),( Max( Const,AMS ) / Max( FirstVNF_RAM,ACS ) ) ) ) ) + ( ( Max( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ),Max( ( AMS + ACS ),( RRS * FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( BR * ACS ) ) - Min( ( FirstVNF_CPU_Server * CRS ) ,( PN - FirstVNF_RAM ) ) ) ) + ( Max( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_CPU + DDR ) ),Max( Min( FirstVNF_CPU_Server ,DDR ),( MRS - DDR ) ) ) + ( ( ( BR * AMS ) + ( CRS * FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem ) + ( ACS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( Max( MUM,RMSe ) ,( MUC / MUR ) ) * Max( ( DS / MLU ),( MUC * MUR ) ) ) / ( Min( ( RRSe * RMSe ) ,( MLU / RRSe ) ) + ( Max( MUR,MLU ) - ( RMSe + RCSe ) ) ) ) - ( ( ( ( MUR + MUM ) / Max( RRSe,MUR ) ) / Min( Min( DS ,CS ) ,( MUM / RMSe ) ) ) / ( ( ( MUM + DS ) + ( MUC * RCSe ) ) - ( ( MLU - MUR ) + ( MLU * DS ) ) ) ) ),( ( ( Min( ( RRSe * MUM ) ,( MUM - MUC ) ) * ( Min( RRSe ,RMSe ) - ( DS + MUM ) ) ) / ( Max( Min( RCSe ,DS ),Min( RRSe ,RRSe ) ) + ( ( RRSe + RMSe ) / ( RRSe / CS ) ) ) ) + Max( ( Max( Max( DS,CS ),Min( MUC ,RCSe ) ) + ( ( RRSe * MUM ) - ( MUM * MUR ) ) ),( ( ( DS * MUM ) * Max( RRSe,RCSe ) ) - ( ( RCSe - RCSe ) / ( MLU + MLU ) ) ) ) ) ) + ( ( ( ( ( ( MUC + DS ) / ( RMSe / MUC ) ) * ( ( RMSe - CS ) * ( MLU + DS ) ) ) + ( Max( Max( MUM,RRSe ),( MUC * RMSe ) ) + Max( ( MLU / MUC ),( RMSe / RMSe ) ) ) ) - Min( ( ( ( MUC + MLU ) - ( RRSe / RRSe ) ) * Min( ( DS - RCSe ) ,( DS / MUC ) ) ) ,( ( ( MUC + DS ) / ( CS - MUR ) ) * ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) ) + Min( ( ( Max( Min( RRSe ,MLU ),( RCSe - MUM ) ) * ( ( DS / CS ) / Min( CS ,MUR ) ) ) + ( ( Min( MLU ,RRSe ) * ( MUR + MLU ) ) * ( ( MUM - RCSe ) - ( RMSe + MUR ) ) ) ) ,Max( ( ( ( MUR / RCSe ) / ( CS / MUM ) ) + Max( Min( RMSe ,RMSe ),Min( RCSe ,MUM ) ) ),( Min( ( RMSe - DS ) ,( DS + MUM ) ) * Max( ( DS + RMSe ),( MUC - MUC ) ) ) ) ) ) ) + Min( ( Min( ( ( ( ( MUM * RRSe ) + Min( MUR ,RMSe ) ) - Max( Max( RRSe,MUM ),Max( MUM,CS ) ) ) * ( Min( ( MUR - RCSe ) ,( CS - DS ) ) - ( ( DS + MUC ) + ( MUR - CS ) ) ) ) ,( Max( ( Max( RMSe,CS ) - ( RMSe + MUR ) ),( Min( RRSe ,RMSe ) - ( MUM / MUM ) ) ) + ( ( ( MUM + MLU ) * Min( CS ,RRSe ) ) * ( ( MUR + RRSe ) * ( MLU * RCSe ) ) ) ) ) * ( ( ( ( ( MUR / DS ) + ( RCSe * CS ) ) / ( Max( MUM,RMSe ) * ( RCSe + MUC ) ) ) - Max( ( ( MUM + RMSe ) - Max( MUM,MUM ) ),( ( RRSe / RCSe ) + Max( RMSe,RCSe ) ) ) ) - ( ( ( Min( RCSe ,MLU ) - ( CS / CS ) ) - Min( ( MLU + CS ) ,( CS / MUM ) ) ) * Min( Max( Max( RRSe,DS ),Min( RMSe ,RCSe ) ) ,( Min( MLU ,RRSe ) + ( MLU + MUR ) ) ) ) ) ) ,( ( ( Max( ( ( CS / MUC ) - Max( CS,MUR ) ),( ( RCSe * RMSe ) + ( DS + MUM ) ) ) / ( ( ( MUM + RCSe ) * ( RRSe - DS ) ) / Max( Max( RCSe,RRSe ),( MUM + MUC ) ) ) ) - ( ( ( ( MUR - DS ) - ( MLU + MUC ) ) * ( ( MUR + CS ) * ( CS / MUR ) ) ) - Min( Min( ( RMSe - CS ) ,( MLU + MUC ) ) ,( ( MUM * RMSe ) + ( CS - RMSe ) ) ) ) ) + ( ( ( Min( ( MLU / RRSe ) ,( RRSe / MUM ) ) * ( Min( MUR ,RMSe ) + Min( DS ,MUR ) ) ) + ( ( ( MLU / RRSe ) / Min( RCSe ,RCSe ) ) / ( Min( MUR ,RRSe ) + ( MLU * MUR ) ) ) ) - ( ( ( ( RCSe * RCSe ) - Max( RMSe,MUR ) ) + ( ( DS - RCSe ) - ( RRSe + CS ) ) ) + ( Max( Max( MLU,CS ),( MUC * MUC ) ) + Max( ( MLU + MLU ),( DS - MUM ) ) ) ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.4095113095367975}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( DDR / Const ) )", "choosing": "( ( DS * ( MLU * DS ) ) + RCSe )", "obj1": 0.9862204724409449, "obj2": 0.006064179607764256}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "Max( ( Max( ( FirstVNF_CPU_Server + Const ),Max( ACS,AMS ) ) + Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),CS ) * DS ) * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6914014720064993}], "93": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( MUM ,MUM ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( RMSe ,MUM ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "Max( ( Max( ( FirstVNF_CPU_Server + Const ),Max( ACS,AMS ) ) + Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),CS ) * DS ) * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6914014720064993}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( PN - Min( DDR ,PN ) ) ) + DDR ) / Max( Const,MDR ) ) )", "choosing": "( Min( MUM ,MUM ) - ( RRSe / RRSe ) )", "obj1": 0.984251968503937, "obj2": 0.007264611672381191}], "94": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( BR,CRS ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM - RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( MUM ,MUM ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( ( FirstVNF_CPU + BR ) ,MDR ) )", "choosing": "( ( CS + Max( MUM,MUM ) ) + RRSe )", "obj1": 0.7618110236220472, "obj2": 0.11036330479337758}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( AMS + Min( ( AMS + Min( Const ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - RMSe ) - ( CS / MUC ) ) * ( MUC - RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6075177302784851}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( PN - Min( DDR ,PN ) ) ) + DDR ) / Max( Const,MDR ) ) )", "choosing": "( Min( MUM ,MUM ) - ( RRSe / RRSe ) )", "obj1": 0.984251968503937, "obj2": 0.007264611672381191}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "Max( ( Max( ( FirstVNF_CPU_Server + Const ),Max( ACS,AMS ) ) + Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),CS ) * DS ) * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6914014720064993}], "95": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,CRS ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM - RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "Max( Max( FirstVNF_CPU_Server,Const ),Max( ACS,ACS ) )", "choosing": "( ( RMSe - ( Max( MUC,CS ) * DS ) ) - ( ( Max( MUC,CS ) * DS ) * MLU ) )", "obj1": 0.15551181102362205, "obj2": 0.7563722720163192}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( PN - Min( DDR ,PN ) ) ) + DDR ) / Max( Const,MDR ) ) )", "choosing": "( Min( MUM ,MUM ) - ( RRSe / RRSe ) )", "obj1": 0.984251968503937, "obj2": 0.007264611672381191}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "Max( ( Max( ( FirstVNF_CPU_Server + Const ),Max( ACS,AMS ) ) + Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),CS ) * DS ) * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6914014720064993}, {"determining": "( PN - Min( AMS ,DDR ) )", "choosing": "( Max( CS,MUM ) - Min( RMSe ,MUM ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}], "96": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( BR,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( Max( FirstVNF_CPU_Server,Const ),Max( ACS,ACS ) )", "choosing": "( ( RMSe - ( Max( MUC,CS ) * DS ) ) - ( ( Max( MUC,CS ) * DS ) * MLU ) )", "obj1": 0.15551181102362205, "obj2": 0.7563722720163192}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( PN - Min( DDR ,PN ) ) ) + DDR ) / Max( Const,MDR ) ) )", "choosing": "( Min( MUM ,MUM ) - ( RRSe / RRSe ) )", "obj1": 0.984251968503937, "obj2": 0.007264611672381191}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "Max( ( Max( ( FirstVNF_CPU_Server + Const ),Max( ACS,AMS ) ) + Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),CS ) * DS ) * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6914014720064993}], "97": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( Const,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( Max( FirstVNF_CPU_Server,Const ),Max( ACS,ACS ) )", "choosing": "( ( RMSe - ( Max( MUC,CS ) * DS ) ) - ( ( Max( MUC,CS ) * DS ) * MLU ) )", "obj1": 0.15551181102362205, "obj2": 0.7563722720163192}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( BR,CRS ) - ( Max( BR,CRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) - Max( MUC,RMSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6160321096438465}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "Max( Max( MDR,Const ),Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RRSe ) - ( ( ( MUR + CS ) * DS ) * MLU ) )", "obj1": 0.16929133858267717, "obj2": 0.6990230974852916}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( Max( ( FirstVNF_CPU_Server + Const ),Max( ACS,AMS ) ) + Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),CS ) * DS ) * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6914014720064993}, {"determining": "( ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( MUM * MLU ) - ( RRSe / RRSe ) ) - MLU ) / ( MLU + RMSe ) )", "obj1": 0.9783464566929134, "obj2": 0.013654202300690442}], "98": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( Const,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( Max( FirstVNF_CPU_Server,Const ),Max( ACS,ACS ) )", "choosing": "( ( RMSe - ( Max( MUC,CS ) * DS ) ) - ( ( Max( MUC,CS ) * DS ) * MLU ) )", "obj1": 0.15551181102362205, "obj2": 0.7563722720163192}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( Max( FirstVNF_CPU_Server,Const ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - ( ( Max( ( Max( MUM,MUR ) - ( MUC + MUM ) ),CS ) * MUM ) * MLU ) )", "obj1": 0.24803149606299213, "obj2": 0.6135284946651993}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( MUM * MLU ) - ( RRSe / RRSe ) ) - MLU ) / ( MLU + RMSe ) )", "obj1": 0.9783464566929134, "obj2": 0.013654202300690442}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( FirstVNF_Mem_Server - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - MUM ) * Max( MUR,RMSe ) ) - ( RCSe + CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6319088700431063}, {"determining": "Max( ( Max( ( FirstVNF_CPU_Server + Const ),Max( ACS,AMS ) ) + Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),CS ) * DS ) * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6914014720064993}], "99": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( Const,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( DS,MUC ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( Max( FirstVNF_CPU_Server,Const ),Max( ACS,ACS ) )", "choosing": "( ( RMSe - ( Max( MUC,CS ) * DS ) ) - ( ( Max( MUC,CS ) * DS ) * MLU ) )", "obj1": 0.15551181102362205, "obj2": 0.7563722720163192}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( Max( FirstVNF_CPU_Server,Const ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - ( ( Max( ( Max( MUM,MUR ) - ( MUC + MUM ) ),CS ) * MUM ) * MLU ) )", "obj1": 0.24803149606299213, "obj2": 0.6135284946651993}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Max( ( Max( ( FirstVNF_CPU_Server + Const ),Max( ACS,AMS ) ) + Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),CS ) * DS ) * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6914014720064993}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( MUM * MLU ) - ( RRSe / RRSe ) ) - MLU ) / ( MLU + RMSe ) )", "obj1": 0.9783464566929134, "obj2": 0.013654202300690442}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "Max( FirstVNF_CPU_Server,Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - ( ( Min( MUR ,RMSe ) * MUM ) * CS ) )", "obj1": 0.2263779527559055, "obj2": 0.6271974983651116}], "100": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( Const,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( DS,MUC ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( Max( FirstVNF_CPU_Server,Const ),Max( ACS,ACS ) )", "choosing": "( ( RMSe - ( Max( MUC,CS ) * DS ) ) - ( ( Max( MUC,CS ) * DS ) * MLU ) )", "obj1": 0.15551181102362205, "obj2": 0.7563722720163192}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "Max( ( DDR * ARS ),( MRS - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU_Server ,BR ) - ACS ) ) ) )", "choosing": "( ( RMSe + ( ( RRSe + MUM ) - ( CS + CS ) ) ) - Min( ( ( DS + RCSe ) * CS ) ,MUM ) )", "obj1": 0.2755905511811024, "obj2": 0.5895662086530479}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( AMS - MRS ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( RMSe + MUR ) - Max( ( ( MUC + RCSe ) + MUR ),MUM ) )", "obj1": 0.4311023622047244, "obj2": 0.46293969946493246}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RRSe ) * MUR ) * Max( RCSe,DS ) )", "obj1": 0.25393700787401574, "obj2": 0.6104882238064959}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "Max( ( Max( ( FirstVNF_CPU_Server + Const ),Max( ACS,AMS ) ) + Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),CS ) * DS ) * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6914014720064993}, {"determining": "Max( FirstVNF_CPU_Server,Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - ( ( Min( MUR ,RMSe ) * MUM ) * CS ) )", "obj1": 0.2263779527559055, "obj2": 0.6271974983651116}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "Max( Max( FirstVNF_CPU_Server,Const ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - ( ( Max( ( Max( MUM,MUR ) - ( MUC + MUM ) ),CS ) * MUM ) * MLU ) )", "obj1": 0.24803149606299213, "obj2": 0.6135284946651993}], "101": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( Const,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( Max( FirstVNF_CPU_Server,Const ),Max( ACS,ACS ) )", "choosing": "( ( RMSe - ( Max( MUC,CS ) * DS ) ) - ( ( Max( MUC,CS ) * DS ) * MLU ) )", "obj1": 0.15551181102362205, "obj2": 0.7563722720163192}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RCSe + CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5885072666740969}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * Max( RCSe,DS ) ) - ( RCSe + CS ) )", "obj1": 0.4311023622047244, "obj2": 0.4620159615205176}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( Max( Const,FirstVNF_RAM ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( Min( DS ,MUM ) + RCSe )", "obj1": 0.9822834645669292, "obj2": 0.01058975959993044}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RRSe ) * MUR ) * Max( RCSe,DS ) )", "obj1": 0.25393700787401574, "obj2": 0.6104882238064959}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( Max( ( FirstVNF_CPU_Server + Const ),Max( ACS,AMS ) ) + Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),CS ) * DS ) * MLU ) )", "obj1": 0.17913385826771652, "obj2": 0.6914014720064993}, {"determining": "Max( FirstVNF_CPU_Server,Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - ( ( Min( MUR ,RMSe ) * MUM ) * CS ) )", "obj1": 0.2263779527559055, "obj2": 0.6271974983651116}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}], "102": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( MRS,CRS ) - Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( MUM ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + RMSe ) + Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( ( MRS - FirstVNF_RAM ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - Max( MUC,MUM ) )", "obj1": 0.14173228346456693, "obj2": 0.7510045684313542}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RRSe ) * MUR ) * Max( RCSe,DS ) )", "obj1": 0.25393700787401574, "obj2": 0.6104882238064959}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "Max( Max( MDR,Const ),Max( ACS,AMS ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) / DS ) * MLU ) )", "obj1": 0.39173228346456695, "obj2": 0.5017738954463092}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * Max( RCSe,DS ) ) - ( RCSe + CS ) )", "obj1": 0.4311023622047244, "obj2": 0.4620159615205176}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( Max( Const,FirstVNF_RAM ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( Min( DS ,MUM ) + RCSe )", "obj1": 0.9822834645669292, "obj2": 0.01058975959993044}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RCSe + CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5885072666740969}, {"determining": "Max( FirstVNF_CPU_Server,Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - ( ( Min( MUR ,RMSe ) * MUM ) * CS ) )", "obj1": 0.2263779527559055, "obj2": 0.6271974983651116}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RCSe + CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5885072666740969}], "103": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( MRS,CRS ) - Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( RMSe - DS ) - ( ( Max( MUC,CS ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( MUM ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( ( MRS - FirstVNF_RAM ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - Max( MUC,MUM ) )", "obj1": 0.14173228346456693, "obj2": 0.7510045684313542}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RRSe + CS ) )", "obj1": 0.38779527559055116, "obj2": 0.4967896027045696}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * Max( RCSe,DS ) ) - ( RCSe + CS ) )", "obj1": 0.4311023622047244, "obj2": 0.4620159615205176}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RRSe ) * MUR ) * Max( RCSe,DS ) )", "obj1": 0.25393700787401574, "obj2": 0.6104882238064959}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * AMS ) ),Min( ( FirstVNF_Mem_Server / RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( CS,RMSe ) - Max( RRSe,RMSe ) )", "obj1": 0.0984251968503937, "obj2": 0.8520865158250842}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RCSe + CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5885072666740969}, {"determining": "( FirstVNF_Mem_Server + Max( MDR,( ( MDR * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * Max( MLU,DS ) )", "obj1": 0.2618110236220472, "obj2": 0.6086722242618601}, {"determining": "Max( FirstVNF_CPU_Server,Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - ( ( Min( MUR ,RMSe ) * MUM ) * CS ) )", "obj1": 0.2263779527559055, "obj2": 0.6271974983651116}], "104": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( MRS,CRS ) - Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( MUM ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( RMSe - DS ) - ( ( Max( MUC,CS ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "Max( ( MRS - FirstVNF_RAM ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - Max( MUC,MUM ) )", "obj1": 0.14173228346456693, "obj2": 0.7510045684313542}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RRSe + CS ) )", "obj1": 0.38779527559055116, "obj2": 0.4967896027045696}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "Max( ( RRS * ( ( DDR - FirstVNF_RAM ) / AMS ) ),( ( ( AMS / FirstVNF_CPU_Server ) * BR ) + CRS ) )", "choosing": "( ( ( RRSe - ( MUR / MLU ) ) * DS ) * Min( ( RMSe * RRSe ) ,DS ) )", "obj1": 0.17913385826771652, "obj2": 0.7165545517998752}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * Max( RCSe,DS ) ) - ( RCSe + CS ) )", "obj1": 0.4311023622047244, "obj2": 0.4620159615205176}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( ( ( ( Min( ( ( Min( ARS ,FirstVNF_CPU ) / Min( Const ,MRS ) ) - Max( ( RRS * BR ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ,Min( ( Max( Const,PN ) * ( FirstVNF_Mem * AMS ) ) ,Max( Max( FirstVNF_Mem_Server,ARS ),( AMS + FirstVNF_CPU_Server ) ) ) ) * ( Max( Max( ( RRS / FirstVNF_Mem_Server ),( DDR * MDR ) ),( ( Const * BR ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) + ( Min( Min( DDR ,DDR ) ,Max( AMS,ARS ) ) - ( ( AMS - ACS ) * ( PN + ACS ) ) ) ) ) - ( ( ( Min( ( FirstVNF_RAM / ARS ) ,( RRS / DDR ) ) / ( ( AMS - FirstVNF_RAM ) * ( RRS - MRS ) ) ) + ( ( ( ARS + FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) * Min( Min( RRS ,MDR ) ,( FirstVNF_RAM_Server + Const ) ) ) ) / Max( ( Max( ( DDR + PN ),Min( FirstVNF_Mem_Server ,ARS ) ) + ( ( RRS + FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * RRS ) ) ),Max( ( ( DDR - FirstVNF_Mem_Server ) * Min( RRS ,MDR ) ),( Min( MDR ,RRS ) / ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( Max( ( ( Max( RRS,FirstVNF_CPU ) + Min( CRS ,MRS ) ) + ( Max( ACS,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ),Min( ( ( ACS / FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_CPU ) ) ,Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( FirstVNF_CPU + DDR ) ) ) ) ,( ( ( ( DDR + ARS ) / ( BR * ARS ) ) * ( Max( CRS,ARS ) + ( DDR * PN ) ) ) + Max( ( ( AMS - BR ) - Max( FirstVNF_CPU,DDR ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / MDR ) ) ) ) ) + Min( ( ( ( ( Const + AMS ) + ( RRS + FirstVNF_Mem_Server ) ) - Max( ( BR + RRS ),Max( ARS,DDR ) ) ) - Max( ( Min( DDR ,MDR ) - Max( ARS,ACS ) ),( Max( DDR,MRS ) - Min( PN ,PN ) ) ) ) ,( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Min( MDR ,MDR ) ) - ( ( FirstVNF_CPU + RRS ) / ( Const * CRS ) ) ) / Max( ( Min( MRS ,FirstVNF_RAM ) + ( FirstVNF_CPU / RRS ) ),Min( ( RRS * FirstVNF_CPU_Server ) ,( MDR - ARS ) ) ) ) ) ) ) + Max( ( Max( ( ( Min( ( RRS + MRS ) ,Max( FirstVNF_CPU_Server,RRS ) ) / ( ( DDR / FirstVNF_Mem ) + ( BR * FirstVNF_Mem ) ) ) * Min( Max( Max( FirstVNF_Mem,FirstVNF_CPU ),Min( CRS ,CRS ) ) ,( ( MRS * FirstVNF_CPU_Server ) / ( AMS - AMS ) ) ) ),( ( ( ( ARS + PN ) - ( Const / FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * MDR ) - ( ACS + MRS ) ) ) * Max( ( ( ACS / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( Max( ARS,DDR ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem ) ,Min( DDR ,MDR ) ) * ( ( RRS * DDR ) * ( MRS + AMS ) ) ) * Min( ( ( Const / FirstVNF_CPU ) + ( PN / ACS ) ) ,( ( ACS + FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) + Max( Min( ( ( FirstVNF_CPU + ARS ) + Max( DDR,FirstVNF_CPU ) ) ,Max( Max( ARS,CRS ),( BR * PN ) ) ),( ( Max( AMS,AMS ) - ( Const - CRS ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem - MRS ) ) ) ) ) ),Min( ( Max( Min( ( ( FirstVNF_RAM_Server / RRS ) - ( RRS / ARS ) ) ,( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ),( ( Min( ARS ,BR ) / Min( CRS ,Const ) ) - ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) - ( MDR + MRS ) ) ) ) * ( Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + ( FirstVNF_Mem_Server - MRS ) ),( ( FirstVNF_CPU_Server + AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) - Min( Max( Max( ACS,FirstVNF_RAM_Server ),( RRS + FirstVNF_CPU_Server ) ) ,( ( MRS + ARS ) + ( FirstVNF_RAM_Server / CRS ) ) ) ) ) ,( ( ( ( ( AMS - RRS ) - ( BR + FirstVNF_RAM ) ) - ( ( RRS + ARS ) * Min( ACS ,FirstVNF_Mem ) ) ) + Min( ( Min( Const ,FirstVNF_CPU_Server ) + Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ,( ( RRS + AMS ) / ( PN - Const ) ) ) ) / Min( ( ( Max( DDR,CRS ) / ( DDR / CRS ) ) / ( ( PN / FirstVNF_RAM ) + Min( FirstVNF_RAM_Server ,RRS ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM ) + ( ARS + BR ) ) / ( ( FirstVNF_RAM - MDR ) / ( CRS * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RRSe,Max( DS,MLU ) ) + ( MLU * RMSe ) )", "obj1": 0.9881889763779528, "obj2": 0.008191927163784416}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RRSe ) * MUR ) * Max( RCSe,DS ) )", "obj1": 0.25393700787401574, "obj2": 0.6104882238064959}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * AMS ) ),Min( ( FirstVNF_Mem_Server / RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( CS,RMSe ) - Max( RRSe,RMSe ) )", "obj1": 0.0984251968503937, "obj2": 0.8520865158250842}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RCSe + CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5885072666740969}], "105": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( MRS,CRS ) - Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( MUM ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( MUM ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( ( MRS - FirstVNF_RAM ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - Max( MUC,MUM ) )", "obj1": 0.14173228346456693, "obj2": 0.7510045684313542}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RRSe + CS ) )", "obj1": 0.38779527559055116, "obj2": 0.4967896027045696}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( PN - Min( DDR ,Max( Const,MDR ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( MUM ,MLU ) - ( RRSe / CS ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02245408750815719}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * Max( RCSe,DS ) ) - ( RCSe + CS ) )", "obj1": 0.4311023622047244, "obj2": 0.4620159615205176}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RRSe ) * MUR ) * Max( RCSe,DS ) )", "obj1": 0.25393700787401574, "obj2": 0.6104882238064959}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RCSe + CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5885072666740969}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * AMS ) ),Min( ( FirstVNF_Mem_Server / RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( CS,RMSe ) - Max( RRSe,RMSe ) )", "obj1": 0.0984251968503937, "obj2": 0.8520865158250842}, {"determining": "( FirstVNF_Mem_Server + Min( ( FirstVNF_RAM_Server * DDR ) ,( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * RRSe )", "obj1": 0.265748031496063, "obj2": 0.6032532567729606}, {"determining": "( ( ( ( Min( ( ( Min( ARS ,FirstVNF_CPU ) / Min( Const ,MRS ) ) - Max( ( RRS * BR ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ,Min( ( Max( Const,PN ) * ( FirstVNF_Mem * AMS ) ) ,Max( Max( FirstVNF_Mem_Server,ARS ),( AMS + FirstVNF_CPU_Server ) ) ) ) * ( Max( Max( ( RRS / FirstVNF_Mem_Server ),( DDR * MDR ) ),( ( Const * BR ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) + ( Min( Min( DDR ,DDR ) ,Max( AMS,ARS ) ) - ( ( AMS - ACS ) * ( PN + ACS ) ) ) ) ) - ( ( ( Min( ( FirstVNF_RAM / ARS ) ,( RRS / DDR ) ) / ( ( AMS - FirstVNF_RAM ) * ( RRS - MRS ) ) ) + ( ( ( ARS + FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) * Min( Min( RRS ,MDR ) ,( FirstVNF_RAM_Server + Const ) ) ) ) / Max( ( Max( ( DDR + PN ),Min( FirstVNF_Mem_Server ,ARS ) ) + ( ( RRS + FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * RRS ) ) ),Max( ( ( DDR - FirstVNF_Mem_Server ) * Min( RRS ,MDR ) ),( Min( MDR ,RRS ) / ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( Max( ( ( Max( RRS,FirstVNF_CPU ) + Min( CRS ,MRS ) ) + ( Max( ACS,BR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ),Min( ( ( ACS / FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_CPU ) ) ,Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( FirstVNF_CPU + DDR ) ) ) ) ,( ( ( ( DDR + ARS ) / ( BR * ARS ) ) * ( Max( CRS,ARS ) + ( DDR * PN ) ) ) + Max( ( ( AMS - BR ) - Max( FirstVNF_CPU,DDR ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / MDR ) ) ) ) ) + Min( ( ( ( ( Const + AMS ) + ( RRS + FirstVNF_Mem_Server ) ) - Max( ( BR + RRS ),Max( ARS,DDR ) ) ) - Max( ( Min( DDR ,MDR ) - Max( ARS,ACS ) ),( Max( DDR,MRS ) - Min( PN ,PN ) ) ) ) ,( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Min( MDR ,MDR ) ) - ( ( FirstVNF_CPU + RRS ) / ( Const * CRS ) ) ) / Max( ( Min( MRS ,FirstVNF_RAM ) + ( FirstVNF_CPU / RRS ) ),Min( ( RRS * FirstVNF_CPU_Server ) ,( MDR - ARS ) ) ) ) ) ) ) + Max( ( Max( ( ( Min( ( RRS + MRS ) ,Max( FirstVNF_CPU_Server,RRS ) ) / ( ( DDR / FirstVNF_Mem ) + ( BR * FirstVNF_Mem ) ) ) * Min( Max( Max( FirstVNF_Mem,FirstVNF_CPU ),Min( CRS ,CRS ) ) ,( ( MRS * FirstVNF_CPU_Server ) / ( AMS - AMS ) ) ) ),( ( ( ( ARS + PN ) - ( Const / FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * MDR ) - ( ACS + MRS ) ) ) * Max( ( ( ACS / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server + FirstVNF_Mem ) ),( Max( ARS,DDR ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem ) ,Min( DDR ,MDR ) ) * ( ( RRS * DDR ) * ( MRS + AMS ) ) ) * Min( ( ( Const / FirstVNF_CPU ) + ( PN / ACS ) ) ,( ( ACS + FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) + Max( Min( ( ( FirstVNF_CPU + ARS ) + Max( DDR,FirstVNF_CPU ) ) ,Max( Max( ARS,CRS ),( BR * PN ) ) ),( ( Max( AMS,AMS ) - ( Const - CRS ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem - MRS ) ) ) ) ) ),Min( ( Max( Min( ( ( FirstVNF_RAM_Server / RRS ) - ( RRS / ARS ) ) ,( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ),( ( Min( ARS ,BR ) / Min( CRS ,Const ) ) - ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) - ( MDR + MRS ) ) ) ) * ( Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + ( FirstVNF_Mem_Server - MRS ) ),( ( FirstVNF_CPU_Server + AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) - Min( Max( Max( ACS,FirstVNF_RAM_Server ),( RRS + FirstVNF_CPU_Server ) ) ,( ( MRS + ARS ) + ( FirstVNF_RAM_Server / CRS ) ) ) ) ) ,( ( ( ( ( AMS - RRS ) - ( BR + FirstVNF_RAM ) ) - ( ( RRS + ARS ) * Min( ACS ,FirstVNF_Mem ) ) ) + Min( ( Min( Const ,FirstVNF_CPU_Server ) + Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ,( ( RRS + AMS ) / ( PN - Const ) ) ) ) / Min( ( ( Max( DDR,CRS ) / ( DDR / CRS ) ) / ( ( PN / FirstVNF_RAM ) + Min( FirstVNF_RAM_Server ,RRS ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM ) + ( ARS + BR ) ) / ( ( FirstVNF_RAM - MDR ) / ( CRS * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RRSe,Max( DS,MLU ) ) + ( MLU * RMSe ) )", "obj1": 0.9881889763779528, "obj2": 0.008191927163784416}], "106": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( MRS,CRS ) - Min( PN ,FirstVNF_CPU ) )", "choosing": "( Max( DS,MUC ) + Max( Max( MUR,MUC ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Min( PN ,FirstVNF_CPU ) )", "choosing": "( Min( MUM ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( ( MRS - FirstVNF_RAM ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - Max( MUC,MUM ) )", "obj1": 0.14173228346456693, "obj2": 0.7510045684313542}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RRSe + CS ) )", "obj1": 0.38779527559055116, "obj2": 0.4967896027045696}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( ( DDR * ARS ) - ( ( BR / DDR ) - ( RRS - ( RRS - FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( RRSe,RMSe ) )", "obj1": 0.18503937007874016, "obj2": 0.6974649304585557}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * Max( RCSe,DS ) ) - ( RCSe + CS ) )", "obj1": 0.4311023622047244, "obj2": 0.4620159615205176}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RRSe ) * MUR ) * Max( RCSe,DS ) )", "obj1": 0.25393700787401574, "obj2": 0.6104882238064959}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RCSe + CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5885072666740969}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * AMS ) ),Min( ( FirstVNF_Mem_Server / RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( CS,RMSe ) - Max( RRSe,RMSe ) )", "obj1": 0.0984251968503937, "obj2": 0.8520865158250842}, {"determining": "Max( ( MDR - AMS ),( Const + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + MDR ) ) ) )", "choosing": "( ( CS / MUR ) - Max( ( ( MUR + RMSe ) * ( ( MUM / RMSe ) + Min( RRSe ,MUC ) ) ),MLU ) )", "obj1": 0.9665354330708661, "obj2": 0.017280602768413388}, {"determining": "( FirstVNF_Mem_Server + Min( ( FirstVNF_RAM_Server * DDR ) ,( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * RRSe )", "obj1": 0.265748031496063, "obj2": 0.6032532567729606}, {"determining": "( ( PN - RRS ) - ( FirstVNF_Mem - PN ) )", "choosing": "( Min( MUM ,DS ) + MLU )", "obj1": 0.984251968503937, "obj2": 0.009919588248908252}], "107": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Min( PN ,FirstVNF_CPU ) )", "choosing": "( Max( DS,MUC ) + Max( Max( MUR,MUC ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( ( MRS - FirstVNF_RAM ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - Max( MUC,MUM ) )", "obj1": 0.14173228346456693, "obj2": 0.7510045684313542}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RRSe + CS ) )", "obj1": 0.38779527559055116, "obj2": 0.4967896027045696}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * Max( RCSe,DS ) ) - ( RCSe + CS ) )", "obj1": 0.4311023622047244, "obj2": 0.4620159615205176}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RRSe ) * MUR ) * Max( RCSe,DS ) )", "obj1": 0.25393700787401574, "obj2": 0.6104882238064959}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RCSe + CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5885072666740969}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "Max( Max( ( FirstVNF_RAM_Server / Const ),Max( PN,FirstVNF_CPU_Server ) ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - ( ( Max( MUC,RCSe ) / ( ( Max( MUC,RCSe ) / MUM ) / CS ) ) / CS ) )", "obj1": 0.18110236220472442, "obj2": 0.7006924543254355}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * AMS ) ),Min( ( FirstVNF_Mem_Server / RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( CS,RMSe ) - Max( RRSe,RMSe ) )", "obj1": 0.0984251968503937, "obj2": 0.8520865158250842}, {"determining": "( PN - Min( DDR ,ARS ) )", "choosing": "( Max( CS,RRSe ) - Max( MUR,MUM ) )", "obj1": 0.9429133858267716, "obj2": 0.026996003209380177}, {"determining": "( FirstVNF_Mem_Server + Min( ( FirstVNF_RAM_Server * DDR ) ,( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * RRSe )", "obj1": 0.265748031496063, "obj2": 0.6032532567729606}, {"determining": "( ( PN - RRS ) - ( FirstVNF_Mem - PN ) )", "choosing": "( Min( MUM ,DS ) + MLU )", "obj1": 0.984251968503937, "obj2": 0.009919588248908252}], "108": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( MUM ,MUM ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "Max( ( MRS - FirstVNF_RAM ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - Max( MUC,MUM ) )", "obj1": 0.14173228346456693, "obj2": 0.7510045684313542}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RRSe + CS ) )", "obj1": 0.38779527559055116, "obj2": 0.4967896027045696}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * Max( RCSe,DS ) ) - ( RCSe + CS ) )", "obj1": 0.4311023622047244, "obj2": 0.4620159615205176}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RRSe ) * MUR ) * Max( RCSe,DS ) )", "obj1": 0.25393700787401574, "obj2": 0.6104882238064959}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RCSe + CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5885072666740969}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "( PN - Min( DDR ,ARS ) )", "choosing": "( ( MUM + RRSe ) - Min( MUM ,CS ) )", "obj1": 0.9586614173228346, "obj2": 0.016395467183726645}, {"determining": "Max( ( RRS * ( ( DDR - FirstVNF_RAM ) / AMS ) ),Max( ( RRS * ( ( DDR - FirstVNF_RAM ) / AMS ) ),( ( ( AMS / FirstVNF_CPU_Server ) * BR ) + CRS ) ) )", "choosing": "( ( ( RRSe - ( MUR / MLU ) ) * ( ( ( RRSe - ( MUR / MLU ) ) * DS ) * Min( ( RMSe * RRSe ) ,DS ) ) ) * Min( ( RMSe * RRSe ) ,DS ) )", "obj1": 0.3110236220472441, "obj2": 0.5707326274620568}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * AMS ) ),Min( ( FirstVNF_Mem_Server / RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( CS,RMSe ) - Max( RRSe,RMSe ) )", "obj1": 0.0984251968503937, "obj2": 0.8520865158250842}, {"determining": "Max( ( FirstVNF_RAM_Server / ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - Max( MUC,MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.7010031645363465}, {"determining": "( FirstVNF_Mem_Server + Min( ( FirstVNF_RAM_Server * DDR ) ,( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe - RRSe ) * Max( MUR,RMSe ) ) * RRSe )", "obj1": 0.265748031496063, "obj2": 0.6032532567729606}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}], "109": [{"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( Max( BR,DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( CS ,MLU ) + ( MUR + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( PN / FirstVNF_CPU ) )", "choosing": "( Min( MUM ,MUM ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUM ) - ( DS + RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ACS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( MUM - ( MUM + MUC ) )", "obj1": 0.5, "obj2": 0.29405947043612707}, {"determining": "( Max( FirstVNF_Mem,ACS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + RRS ) )", "choosing": "( Max( ( ( Max( MUC,CS ) * DS ) * MLU ),MUR ) - ( MUC + RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.3643798010193591}, {"determining": "( ( ACS - AMS ) * ( MDR / ACS ) )", "choosing": "( Max( MUM,RCSe ) / ( MUC - RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.26849689919067593}, {"determining": "( ( Max( ( MDR - AMS ),( Const + FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - ( MDR + MDR ) )", "choosing": "( RMSe + Min( RRSe ,MUC ) )", "obj1": 0.8759842519685039, "obj2": 0.05135426198614897}, {"determining": "( PN - ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RMSe / Min( CS ,CS ) ) + RCSe )", "obj1": 0.6141732283464567, "obj2": 0.24026488424117864}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS / ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( ( ( ACS / PN ) - ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,CRS ) - Max( MDR,MRS ) ) ) - Min( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) ,( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU - ( ( MUR / RMSe ) / ( ( DS / ( MLU / MUC ) ) - RMSe ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.23193199037545734}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.8228346456692913, "obj2": 0.07161598159467054}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "( Max( CS,Max( RRSe,RRSe ) ) + RCSe )", "obj1": 0.7263779527559056, "obj2": 0.16955493417818548}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU + BR ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( Max( MUM,RRSe ) + MUC ) ) + CS ) )", "obj1": 0.4409448818897638, "obj2": 0.42839732354498633}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,RRS ),PN ) - ( MDR / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),CRS ) ) )", "choosing": "Max( Min( ( ( ( CS / Max( MUR,( ( MLU - RRSe ) * ( DS + RCSe ) ) ) ) + ( Min( ( ( RCSe + MUC ) - RRSe ) ,( DS - RCSe ) ) / ( RMSe / Max( MUC,RCSe ) ) ) ) - MLU ) ,MUR ),Max( ( MUR * ( MUR + MUM ) ),RCSe ) )", "obj1": 0.7460629921259843, "obj2": 0.11218022236765873}, {"determining": "Min( ( ( ( ( ( Min( ( ARS / PN ) ,( DDR + FirstVNF_Mem ) ) * ( ( RRS * ACS ) * ( CRS * ACS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) * Max( BR,ACS ) ) / Max( ( BR - DDR ),Min( RRS ,PN ) ) ) ) + ( ( Min( ( RRS / PN ) ,( MRS / Const ) ) * ( ( ARS / FirstVNF_Mem ) * Min( PN ,AMS ) ) ) - ( Min( ( MDR / FirstVNF_RAM ) ,Min( ACS ,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) ) ) ) / Min( ( Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( FirstVNF_RAM * ARS ) ),( Max( MRS,CRS ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( ARS / PN ) ) / ( ( MDR * Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( Min( Min( ( MRS - Const ) ,( ARS * CRS ) ) ,( ( AMS * FirstVNF_CPU ) - ( AMS + BR ) ) ) ,Max( Min( ( ACS / RRS ) ,( Const - MRS ) ),( Max( FirstVNF_CPU_Server,ARS ) / ( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( Const / FirstVNF_RAM ) ,( ACS - ACS ) ) / Min( ( FirstVNF_CPU_Server + MRS ) ,( CRS + BR ) ) ) / ( ( Max( CRS,FirstVNF_Mem ) + ( PN * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) / Min( Min( ( Min( FirstVNF_Mem ,AMS ) * ( MDR * BR ) ) ,Max( Min( FirstVNF_Mem_Server ,AMS ),Min( FirstVNF_Mem ,PN ) ) ) ,( ( ( ARS * FirstVNF_RAM_Server ) + ( BR + DDR ) ) * Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Max( ACS,MDR ) ) ) ) ) * Min( ( Max( Max( Min( MDR ,ACS ),( PN + PN ) ),( ( DDR - CRS ) / ( MRS * MRS ) ) ) - ( ( Max( FirstVNF_Mem,DDR ) - Min( FirstVNF_RAM ,AMS ) ) * Min( ( FirstVNF_CPU - Const ) ,( MRS * DDR ) ) ) ) ,Min( Max( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( DDR - PN ) ),( Min( AMS ,FirstVNF_CPU ) * ( MRS - ARS ) ) ) ,Max( Max( ( FirstVNF_CPU / ACS ),( MDR / FirstVNF_RAM_Server ) ),( Min( Const ,DDR ) - ( RRS - MDR ) ) ) ) ) ) ) ,( ( ( Min( ( ( ( FirstVNF_CPU - CRS ) - ( MDR + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / PN ) ,( CRS - Const ) ) ) ,( ( Max( MDR,BR ) * ( FirstVNF_CPU_Server + PN ) ) - ( Min( FirstVNF_Mem ,PN ) / ( Const - Const ) ) ) ) - Max( ( ( ( BR - DDR ) * Max( MDR,FirstVNF_RAM_Server ) ) / Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ),Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( Const / AMS ) ) ,Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / BR ) ) ) ) ) * ( ( ( ( ( MDR / FirstVNF_Mem_Server ) / ( CRS + Const ) ) * Min( ( Const + FirstVNF_CPU ) ,( CRS / AMS ) ) ) + Max( Max( ( ARS * DDR ),( FirstVNF_CPU * ACS ) ),( ( RRS - MRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) - ( ( Max( ARS,FirstVNF_Mem_Server ) - ( Min( DDR ,FirstVNF_Mem ) - BR ) ) - ( ( Min( ARS ,FirstVNF_Mem ) + ( RRS / Const ) ) * ( Min( ACS ,MRS ) + Min( DDR ,DDR ) ) ) ) ) ) + Max( ( ( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( AMS + MRS ) ) / ( ( ACS / ARS ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Max( Min( DDR ,PN ),( AMS / DDR ) ) - Max( ( ARS / FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + Max( RRS,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem * PN ) / ( FirstVNF_CPU - BR ) ) ,Max( Max( ACS,FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ),Max( Max( Min( ( ( BR / PN ) + Min( PN ,FirstVNF_CPU_Server ) ) ,( Min( ACS ,PN ) - ( FirstVNF_RAM_Server / PN ) ) ),( Max( ( AMS * PN ),( DDR / MDR ) ) * Min( ( BR / CRS ) ,Min( MDR ,FirstVNF_CPU ) ) ) ),Max( ( Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) * Min( ( ARS + FirstVNF_RAM_Server ) ,( MDR * FirstVNF_Mem_Server ) ) ),Min( ( Min( ARS ,AMS ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ,Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( CS,( RRSe + ( ( MLU * ( Max( MUC,MLU ) + ( CS - RCSe ) ) ) + MLU ) ) ) ,( Min( RRSe ,MUM ) - ( MUM + CS ) ) )", "obj1": 0.7066929133858267, "obj2": 0.20497564614105296}, {"determining": "( ( ARS + Const ) - ( ( MDR - PN ) / BR ) )", "choosing": "( ( CS * ( ( MUR - MUM ) + RCSe ) ) + MUR )", "obj1": 0.734251968503937, "obj2": 0.14043103201024082}, {"determining": "( Min( FirstVNF_RAM ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / MUC ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.3464566929133858, "obj2": 0.5023708317419157}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( ( AMS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) - ( RCSe + MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6468961166954723}, {"determining": "Max( Max( ( FirstVNF_CPU - AMS ),( Const + BR ) ),( Const + BR ) )", "choosing": "( ( CS + MUR ) - Max( ( ( CS + MUR ) + MUR ),MLU ) )", "obj1": 0.23228346456692914, "obj2": 0.621911309477078}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( AMS * CRS ) )", "choosing": "( ( MUM - DS ) / ( MUR + RMSe ) )", "obj1": 0.11811023622047244, "obj2": 0.7590483736744208}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RRSe + CS ) )", "obj1": 0.38779527559055116, "obj2": 0.4967896027045696}, {"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) * ( Max( RRSe,DS ) - ( MUR / MLU ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6861743537207734}, {"determining": "( ( ACS / ( ( ACS / RRS ) - ( PN / MRS ) ) ) - ( DDR - Const ) )", "choosing": "( Max( ( RCSe * DS ),RCSe ) + MUC )", "obj1": 0.90748031496063, "obj2": 0.045395346465301606}, {"determining": "( ( Max( Min( ( ( ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) / ( ( MRS / FirstVNF_CPU_Server ) * ( Const / ARS ) ) ) * Min( ( ( PN / FirstVNF_Mem ) - ( RRS + ARS ) ) ,Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ARS + AMS ) ) ) ) ,Max( Max( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),Max( AMS,CRS ) ),( ( AMS + MDR ) * ( PN - PN ) ) ),Max( ( ( BR * FirstVNF_RAM ) / Min( PN ,AMS ) ),( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ) ) ),( ( Max( Max( ( RRS / MRS ),( MDR * ACS ) ),( ( FirstVNF_CPU / MRS ) - Max( FirstVNF_Mem_Server,Const ) ) ) - Min( ( ( BR / PN ) * ( RRS * ARS ) ) ,( Max( BR,RRS ) / ( CRS - FirstVNF_RAM ) ) ) ) * Max( ( ( ( BR + Const ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Min( ( BR - FirstVNF_Mem ) ,Min( ACS ,RRS ) ) ),( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + Min( ( BR * ACS ) ,( RRS * PN ) ) ) ) ) ) + ( ( ( Min( Max( ( ARS + FirstVNF_Mem_Server ),( MDR - CRS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,MRS ) ) ) / ( ( ( CRS + FirstVNF_Mem_Server ) + Max( AMS,ACS ) ) / ( Max( FirstVNF_RAM,PN ) * Max( MDR,RRS ) ) ) ) / Max( Min( ( ( FirstVNF_RAM_Server + ACS ) + Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( ARS * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,FirstVNF_RAM_Server ) - ( FirstVNF_RAM - MRS ) ) - ( ( MDR + MRS ) - ( FirstVNF_RAM - BR ) ) ) ) ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) * Max( BR,Const ) ) / Min( ( AMS * RRS ) ,( MRS + FirstVNF_RAM ) ) ) - Max( ( ( PN + RRS ) + ( ACS + FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) ) ) / ( ( Max( ( AMS / BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + ( Min( ACS ,MRS ) + ( MRS / PN ) ) ) / ( Max( ( CRS * FirstVNF_Mem_Server ),( Const / PN ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( RRS + RRS ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( MDR * RRS ) ,Min( RRS ,FirstVNF_CPU ) ) + Max( Max( MRS,RRS ),( RRS - PN ) ) ) / ( ( ( BR * Const ) / ( CRS * PN ) ) * ( ( DDR * ARS ) - ( RRS * FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_CPU + ARS ) + ( Const * AMS ) ) / Max( ( MDR * FirstVNF_Mem_Server ),Min( Const ,DDR ) ) ) - ( ( ( ACS / DDR ) / ( DDR / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( CRS / PN ) ) ) ) ) - ( Min( ( ( ( PN / FirstVNF_Mem ) - ( FirstVNF_CPU + MDR ) ) - ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU_Server / CRS ) ) ) ,( ( ( MRS / FirstVNF_RAM ) + Max( DDR,FirstVNF_RAM ) ) - ( Min( Const ,MDR ) * Min( FirstVNF_CPU ,DDR ) ) ) ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) / ( BR / FirstVNF_CPU ) ) * ( ( MDR + FirstVNF_Mem_Server ) / ( AMS / Const ) ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( DDR - CRS ) * ( AMS * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,ACS ) ),( ( RRS - ARS ) * ( DDR + CRS ) ) ) + ( ( ( ACS / MRS ) + Min( FirstVNF_RAM ,ACS ) ) / ( ( DDR / BR ) / ( FirstVNF_Mem_Server / AMS ) ) ) ) + ( ( ( ( AMS - Const ) / ( DDR * RRS ) ) * Max( ( AMS + FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server * BR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ),( ( DDR + DDR ) + Min( ARS ,PN ) ) ) ) ) / ( ( ( ( ( MDR - MDR ) - ( FirstVNF_Mem / RRS ) ) - Max( ( MRS * MDR ),( ACS - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( AMS - BR ) ) / ( ( FirstVNF_CPU / MRS ) * ( MRS - FirstVNF_CPU ) ) ) ) * ( ( ( ( ARS - MDR ) + ( ARS * AMS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) / ( ( ( AMS / MRS ) - ( BR * FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Min( MLU ,RRSe ),( MUM - CS ) ) + Max( ( CS / RMSe ),Min( RMSe ,RMSe ) ) ) + ( ( ( MUR * RCSe ) - Max( RCSe,MLU ) ) * Max( ( RMSe * MUR ),( MUR + RRSe ) ) ) ) / Max( ( Min( Max( RCSe,RMSe ) ,( MLU * RCSe ) ) / ( ( RRSe / MUC ) / Min( MUC ,CS ) ) ),( ( ( RCSe * RMSe ) - ( MUR - MUR ) ) / ( Min( RCSe ,DS ) + Min( MLU ,RRSe ) ) ) ) ) * ( ( Max( ( ( RMSe - RCSe ) + ( RMSe / CS ) ),( Min( RCSe ,MUC ) / Min( MUC ,MUM ) ) ) - Max( ( Max( RCSe,CS ) + Max( DS,MUM ) ),( ( CS + RMSe ) / ( RMSe / MUR ) ) ) ) + ( ( ( ( MLU * MUR ) + ( MUC / MUC ) ) - ( Min( MUC ,MUC ) / ( MUM / MUR ) ) ) - Min( ( Max( DS,RCSe ) / ( DS / MUM ) ) ,( ( MUC + DS ) - Max( RMSe,MUC ) ) ) ) ) ) - Min( ( ( ( Min( ( RCSe + RCSe ) ,Max( DS,MLU ) ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) + Min( Max( ( MUC - MUC ),( MLU / DS ) ) ,( ( MUR * RCSe ) / ( MUC + RRSe ) ) ) ) / ( Max( Max( ( DS / RMSe ),( RMSe + MUC ) ),( ( MUR / RRSe ) * ( MUR * RMSe ) ) ) + ( ( ( RCSe * DS ) * ( MLU + CS ) ) * ( Min( RRSe ,MUR ) / Min( MUR ,RMSe ) ) ) ) ) ,( Min( ( Min( ( DS - RMSe ) ,( DS + MLU ) ) - ( Max( MLU,MUM ) - ( MUM * RRSe ) ) ) ,( Min( ( DS * MLU ) ,Min( RRSe ,RMSe ) ) + Max( Min( MUC ,MLU ),Max( MLU,MUC ) ) ) ) * ( ( ( ( MLU / RCSe ) * ( MLU * RRSe ) ) * Min( ( MUR - MUC ) ,( RMSe - MUM ) ) ) / ( ( ( DS - MUM ) - ( RCSe / CS ) ) / ( ( MUR - DS ) + ( MUC * MUC ) ) ) ) ) ) ) + Max( ( Max( ( ( ( ( MUC + MUM ) + ( DS * MUC ) ) / ( Max( CS,MUM ) + Max( MUC,CS ) ) ) + Min( Max( ( RMSe / DS ),( MUC - MUR ) ) ,( Min( RCSe ,DS ) + ( CS - CS ) ) ) ),( Min( Max( Max( MUC,MUM ),( MLU * DS ) ) ,Min( Max( DS,RMSe ) ,Max( MUR,MLU ) ) ) * ( Min( ( MUR / DS ) ,Max( RCSe,MUM ) ) - ( ( RCSe * DS ) * ( MUR * MUR ) ) ) ) ) / ( ( ( Max( ( DS + MUR ),Max( RRSe,DS ) ) * Max( ( CS / MUC ),Min( RRSe ,RRSe ) ) ) - ( ( ( MUC - RMSe ) * ( RRSe - RRSe ) ) + ( ( RRSe - MUR ) * ( MUC - MUC ) ) ) ) - ( ( ( Max( MUM,MUM ) - Min( RRSe ,RCSe ) ) / ( ( DS - MLU ) - ( MLU / MLU ) ) ) * ( ( ( MLU * RMSe ) - Min( MUR ,RMSe ) ) * ( ( MUM / MUC ) * ( MLU * MLU ) ) ) ) ) ),( ( Min( ( ( ( RCSe / RCSe ) - ( MUM + RRSe ) ) / ( ( DS - RRSe ) * ( MUR - RMSe ) ) ) ,( ( ( DS * MLU ) * ( MLU / CS ) ) / Max( ( MUR - RRSe ),( MUR * MUC ) ) ) ) - ( Max( ( ( RMSe * RMSe ) + ( RCSe + RMSe ) ),( ( DS + MUC ) + Max( CS,MUM ) ) ) + ( ( ( RRSe - RCSe ) * Max( MUM,RRSe ) ) - ( ( CS / RMSe ) * Max( RMSe,RCSe ) ) ) ) ) / ( ( ( Max( Max( MUC,MLU ),( RCSe + MUM ) ) / ( ( RCSe / MUC ) + ( DS / RMSe ) ) ) + ( ( ( MUC / RCSe ) - ( MUM * MUM ) ) + Min( Min( RCSe ,RMSe ) ,( MLU / RMSe ) ) ) ) - ( ( ( ( CS * CS ) * Max( RRSe,DS ) ) * ( Min( RCSe ,RCSe ) + ( MUC - DS ) ) ) / ( Max( ( MUC * MUR ),( MUM * CS ) ) / ( ( MLU - RRSe ) - ( CS - MUM ) ) ) ) ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6353854751009675}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * Max( MUR,RMSe ) ) * Max( RCSe,RMSe ) )", "obj1": 0.11614173228346457, "obj2": 0.7945010263207427}, {"determining": "( PN - ( CRS + MDR ) )", "choosing": "Min( ( MUR + MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7755905511811023, "obj2": 0.09432700357943856}, {"determining": "Max( ( FirstVNF_RAM_Server / ( Max( MDR,FirstVNF_CPU ) + FirstVNF_RAM ) ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RRSe ) - Max( MUC,MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.7010031645363465}, {"determining": "( Min( AMS ,Max( FirstVNF_CPU,ACS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( RRSe - MUR ) + MUC ) - ( ( DS + ( ( RRSe - MUR ) + MUC ) ) + CS ) )", "obj1": 0.5964566929133859, "obj2": 0.2501225764147548}, {"determining": "Max( ( MDR + Const ),Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RMSe - MUR ) - ( ( Max( MUC,CS ) * DS ) * MUM ) )", "obj1": 0.15748031496062992, "obj2": 0.7165550522089041}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ( ( ( DDR - Const ) - ( ( MRS + AMS ) * ( MDR * FirstVNF_Mem ) ) ) + CRS ) / Max( Const,MDR ) ) )", "choosing": "Max( Min( MUM ,MLU ),( RRSe / RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.039303216967684663}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( DS + MUC ) ) + CS ) )", "obj1": 0.3188976377952756, "obj2": 0.5268627193840463}, {"determining": "Max( ( AMS - ARS ),( DDR / DDR ) )", "choosing": "( ( RMSe / CS ) - Min( ( ( CS + RCSe ) - MUR ) ,MUM ) )", "obj1": 0.2874015748031496, "obj2": 0.5754380035265999}, {"determining": "Max( ( MRS - FirstVNF_RAM ),Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) - Max( MUC,MUM ) )", "obj1": 0.14173228346456693, "obj2": 0.7510045684313542}, {"determining": "( PN - Min( DDR ,ARS ) )", "choosing": "( DS - ( RCSe + MUR ) )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "( PN - Min( DDR ,ARS ) )", "choosing": "( ( MUM + RRSe ) - Min( MUM ,CS ) )", "obj1": 0.9586614173228346, "obj2": 0.016395467183726645}, {"determining": "( ( DDR + DDR ) - ( ( ( DDR / PN ) - ( AMS + FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM + CS ) )", "obj1": 0.6929133858267716, "obj2": 0.2212893874332815}, {"determining": "( Max( BR,FirstVNF_RAM ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Max( Max( ( ( Max( ( MUR * RMSe ),( RRSe * MUC ) ) - ( Min( RCSe ,MUM ) * Min( CS ,MLU ) ) ) + Min( ( ( MUR + MUM ) * ( MLU / MUM ) ) ,Max( ( RMSe / MUR ),( DS + MUM ) ) ) ),( ( ( ( MUR * MLU ) / ( MLU - MUC ) ) - ( ( RCSe / MUC ) + ( MUC - MLU ) ) ) + ( ( Min( DS ,RCSe ) + Min( MLU ,MUC ) ) + ( ( CS * CS ) / ( RMSe - RRSe ) ) ) ) ),Max( ( ( Max( Min( DS ,MLU ),( MUM + MUR ) ) * Min( Min( RRSe ,MUR ) ,Min( RCSe ,MUC ) ) ) + ( ( Min( MLU ,RRSe ) - Max( CS,CS ) ) * Min( ( RRSe - RMSe ) ,( CS + MUR ) ) ) ),Min( ( ( ( RRSe - RMSe ) * ( MUM / RCSe ) ) + ( ( RRSe * MUC ) / Min( MLU ,MUC ) ) ) ,( ( ( RRSe + CS ) / ( MUR / DS ) ) * ( ( MUM - MLU ) + ( DS + CS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe + MUM ),( DS * MUC ) ) + ( ( MUC - MLU ) - ( MUC * MLU ) ) ) ,Min( ( Max( MLU,MUM ) * Max( DS,DS ) ) ,( ( DS * MLU ) - ( MLU / MUR ) ) ) ) * Min( Min( ( ( MUC + DS ) / ( MUM - MUR ) ) ,Min( ( RMSe + DS ) ,( MUR / MUR ) ) ) ,( ( ( MLU / MLU ) - ( MLU - RMSe ) ) + ( Max( MUR,MLU ) + ( DS + RCSe ) ) ) ) ) + ( Min( Max( Min( Min( RMSe ,RMSe ) ,( MUC - MUC ) ),Min( ( RMSe / RCSe ) ,( MUR - DS ) ) ) ,Min( Max( ( DS - RRSe ),( RRSe / MUM ) ) ,( Min( RRSe ,RMSe ) - Min( MLU ,MUM ) ) ) ) / ( ( ( ( DS / MUM ) + ( RCSe / RCSe ) ) * ( ( RRSe + MLU ) * ( RCSe * MUR ) ) ) / Max( Max( ( MUR * DS ),( MLU - MUC ) ),( ( RRSe + RCSe ) - ( RCSe / RCSe ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( CS + MLU ),( DS * CS ) ) * ( ( MLU + MUM ) - ( MUR - MLU ) ) ) ,Min( ( Min( RRSe ,MUR ) * ( RRSe * RRSe ) ) ,Max( Max( MUC,RRSe ),Min( MUR ,MUM ) ) ) ) - ( ( Max( Max( RCSe,MLU ),( CS * RCSe ) ) + ( Min( MUC ,RCSe ) / ( DS - RRSe ) ) ) - Max( Min( ( MUC / MUR ) ,( DS - RRSe ) ),( Min( MUC ,MUM ) * ( RMSe + CS ) ) ) ) ) / ( ( ( Min( ( RMSe - RCSe ) ,Max( RMSe,MLU ) ) + ( Max( CS,MUC ) * ( CS / RCSe ) ) ) + ( ( ( DS - MLU ) * Max( MLU,MUM ) ) * ( Min( RMSe ,MLU ) - ( CS * MLU ) ) ) ) + Min( ( ( ( MUM / MUR ) / ( MUM * RCSe ) ) / ( ( MUM + MUC ) / ( DS - RMSe ) ) ) ,( Max( Min( CS ,MUR ),( MLU * CS ) ) + ( Min( CS ,MUC ) + ( DS / MUR ) ) ) ) ) ),( ( ( ( ( ( MLU + RRSe ) / ( DS / MUM ) ) * Min( ( RCSe + RMSe ) ,( CS * RCSe ) ) ) / ( ( ( RCSe * MUM ) * Min( MUC ,DS ) ) - ( Min( RCSe ,CS ) + ( MUC / RCSe ) ) ) ) / ( ( ( ( MLU / DS ) - ( RCSe - MUC ) ) * Max( ( RCSe - RCSe ),Max( MUC,MUR ) ) ) + ( ( ( MUR + MUC ) + ( MUC * RCSe ) ) - ( Min( MUM ,CS ) * ( RRSe + CS ) ) ) ) ) - Min( Max( ( Max( Min( CS ,RRSe ),( MUC + MUM ) ) - ( ( RRSe / MLU ) * ( MUM / RMSe ) ) ),( ( ( MLU - MUR ) - ( DS + MUR ) ) - Max( ( MUM + MLU ),Max( RRSe,MUR ) ) ) ) ,( ( ( Min( RMSe ,MUM ) * ( RCSe - RCSe ) ) / ( Max( RRSe,RCSe ) / ( MUM / RRSe ) ) ) * Min( ( ( DS * MUC ) / ( RCSe * RMSe ) ) ,( Max( MUM,MUR ) / ( RRSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.31496062992125984, "obj2": 0.560250505971047}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,ACS ) ) - Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + Min( ( MUM / RRSe ) ,MUC ) ) + CS ) )", "obj1": 0.33661417322834647, "obj2": 0.5234211147036956}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + MDR ) ) - ( RRS - PN ) )", "choosing": "( Max( MUC,Min( MUR ,RMSe ) ) + ( Max( MUR,MUC ) - MUC ) )", "obj1": 0.8090551181102362, "obj2": 0.07971230791631066}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - RRSe ) * MUR ) * Max( RCSe,DS ) )", "obj1": 0.25393700787401574, "obj2": 0.6104882238064959}, {"determining": "Max( DDR,( ( ( AMS / FirstVNF_CPU_Server ) * BR ) + CRS ) )", "choosing": "( ( ( RRSe - ( MUR / MLU ) ) * DS ) * Min( ( ( RMSe * RRSe ) * RRSe ) ,DS ) )", "obj1": 0.15354330708661418, "obj2": 0.7363415360767337}, {"determining": "( FirstVNF_Mem_Server + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( DS - ( RCSe + CS ) )", "obj1": 0.26968503937007876, "obj2": 0.5885072666740969}, {"determining": "( Min( AMS ,FirstVNF_Mem ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( ( CS / MUM ) + ( RMSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8230696944430075}, {"determining": "( Min( PN ,DDR ) - Max( CRS,MDR ) )", "choosing": "( Max( RCSe,MLU ) / ( Max( CS,RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0847883440540761}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.4035433070866142, "obj2": 0.4685468373061075}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( MRS - MRS ) )", "choosing": "( ( RRSe / ( CS / ( CS / DS ) ) ) + MUM )", "obj1": 0.1141732283464567, "obj2": 0.8191079702635985}, {"determining": "( PN - ( PN + ( ( DDR - Const ) - ( ( MRS + AMS ) * ( DDR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / CS ) - Min( RMSe ,MUM ) )", "obj1": 0.3937007874015748, "obj2": 0.4802092085946664}, {"determining": "( Min( FirstVNF_RAM ,Max( Max( PN,Min( ( FirstVNF_CPU + BR ) ,MDR ) ),( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Const ) ) ) - Max( ( FirstVNF_CPU - AMS ),Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MUR / RCSe ) - ( ( DS + ( ( RRSe * MUR ) + MUC ) ) + CS ) )", "obj1": 0.43503937007874016, "obj2": 0.44323791541169283}, {"determining": "Max( ( RRS * ( ( DDR - FirstVNF_RAM ) / AMS ) ),Max( ( RRS * ( ( DDR - FirstVNF_RAM ) / AMS ) ),( ( ( AMS / FirstVNF_CPU_Server ) * BR ) + CRS ) ) )", "choosing": "( ( ( RRSe - ( MUR / MLU ) ) * ( ( ( RRSe - ( MUR / MLU ) ) * DS ) * Min( ( RMSe * RRSe ) ,DS ) ) ) * Min( ( RMSe * RRSe ) ,DS ) )", "obj1": 0.3110236220472441, "obj2": 0.5707326274620568}, {"determining": "( AMS + ( AMS + Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MUC - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) ) - RMSe ) - ( CS / MUC ) ) * Max( DS,DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8526581867004082}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * AMS ) ),Min( ( FirstVNF_Mem_Server / RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( CS,RMSe ) - Max( RRSe,RMSe ) )", "obj1": 0.0984251968503937, "obj2": 0.8520865158250842}]}