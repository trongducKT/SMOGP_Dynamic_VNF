{"1": [{"determining": "( ( CRS + CRS ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUM / MUR ) / ( MUR / RRSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6775836264451152}, {"determining": "Min( ( Min( ( Const * Const ) ,( PN * MDR ) ) + ( ( CRS - RRS ) / ( AMS / RRS ) ) ) ,( ( Max( FirstVNF_Mem_Server,ACS ) * ( BR + MRS ) ) / ( ( ACS + MRS ) * ( DDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - RCSe ) + ( ( RCSe / RMSe ) + CS ) )", "obj1": 0.1673228346456693, "obj2": 0.8495671027294674}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) + ( FirstVNF_Mem_Server - BR ) )", "choosing": "Max( Max( DS,RMSe ),( RRSe * MLU ) )", "obj1": 0.281496062992126, "obj2": 0.622060712729296}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( CRS + DDR ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / RMSe ) )", "obj1": 0.3661417322834646, "obj2": 0.5466050145260434}, {"determining": "( Min( PN ,ACS ) * ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( CS - MLU ) + Min( CS ,RRSe ) )", "obj1": 0.2204724409448819, "obj2": 0.7531962406204578}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "Max( Max( FirstVNF_CPU_Server,RRS ),( DDR + Const ) )", "choosing": "( Max( RMSe,RCSe ) + ( RCSe * CS ) )", "obj1": 0.24606299212598426, "obj2": 0.697021440315514}, {"determining": "( Max( ARS,PN ) / Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( MUM / MUR ) )", "obj1": 0.2440944881889764, "obj2": 0.6998928975015305}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,MUR ) / ( RRSe - DS ) )", "obj1": 0.3464566929133858, "obj2": 0.5748186488955874}, {"determining": "( Max( ( ACS / ACS ),RRS ) - Max( ( ( FirstVNF_Mem * FirstVNF_RAM ) / FirstVNF_Mem_Server ),Max( Max( DDR,FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( Min( RRSe ,RMSe ) * Min( RCSe ,DS ) ),MLU ),( MUC / ( Max( RMSe,MLU ) + ( RRSe * Min( MUR ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,ACS ) + ( FirstVNF_CPU - PN ) )", "choosing": "Max( ( RCSe * DS ),Max( CS,RCSe ) )", "obj1": 0.17913385826771652, "obj2": 0.8219582912822341}, {"determining": "( ( AMS + Const ) - Min( FirstVNF_Mem_Server ,( AMS / ( Max( FirstVNF_RAM,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Max( Min( AMS ,Max( FirstVNF_CPU_Server,MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + MUC ) / Min( ( ( CS * MUM ) / ( ( MLU * ( Max( ( RCSe + RMSe ),Min( CS ,RRSe ) ) * MUR ) ) / Min( ( ( ( MLU * RRSe ) * DS ) + MUR ) ,MLU ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( ACS - FirstVNF_RAM ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.1830708661417323, "obj2": 0.6999354736839013}, {"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.8235772481831903}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) )", "choosing": "Max( ( MLU - MLU ),Max( MUC,DS ) )", "obj1": 0.2578740157480315, "obj2": 0.6658113781146833}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) ) ,MLU ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.6742313125615734}, {"determining": "( Max( MDR,BR ) / ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( Max( RCSe,RRSe ) * Min( MLU ,RCSe ) )", "obj1": 0.2559055118110236, "obj2": 0.6719111447779608}, {"determining": "Max( ( Const - RRS ),( PN - ACS ) )", "choosing": "Max( Max( MUR,DS ),( RMSe * CS ) )", "obj1": 0.25393700787401574, "obj2": 0.6604581378384369}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( Min( MUC ,MUM ) * ( RMSe * RMSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28863990552272434}, {"determining": "( ( Const + ( ( CRS + FirstVNF_Mem_Server ) * ( Max( FirstVNF_RAM,( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) / PN ) ) + FirstVNF_CPU ) ) ) + Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( MUM,RCSe ) ) ) / ( Max( ( ( MUR / CS ) / ( MUM * MLU ) ),RMSe ) - MUM ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + ( ( MUM * CS ) + MUM ) ) * Min( RMSe ,MLU ) )", "obj1": 0.9625984251968503, "obj2": 0.04624123735644682}, {"determining": "( ( AMS / MRS ) * Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( CRS ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( ( MLU + MLU ),( MUC + RRSe ) ) * RRSe ) - MUR ) / ( MUR + CS ) )", "obj1": 0.2047244094488189, "obj2": 0.6854759011666474}, {"determining": "( Max( AMS,AMS ) - Min( Const ,BR ) )", "choosing": "Min( ( MUC * DS ) ,( RCSe + RMSe ) )", "obj1": 0.3838582677165354, "obj2": 0.5165512130094075}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RRSe + RCSe ) - ( MUM - MUC ) )", "obj1": 0.23031496062992127, "obj2": 0.6972378177426993}, {"determining": "( ( AMS * BR ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.2440944881889764, "obj2": 0.6974618262117711}, {"determining": "( Max( PN,ACS ) * ( CRS - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.24606299212598426, "obj2": 0.6203592920139329}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) )", "choosing": "( ( CS + MUR ) - ( CS * DS ) )", "obj1": 0.1673228346456693, "obj2": 0.7859321681064639}, {"determining": "( ( ( ( ( MRS - BR ) / Min( PN ,MRS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * MDR ) ) + FirstVNF_CPU_Server ) * ( ( Max( ARS,( ( ( CRS - Const ) + PN ) - ( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM * DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUR ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( DS / RCSe ) )", "obj1": 0.15748031496062992, "obj2": 0.7667488301593507}, {"determining": "Min( ( ARS + CRS ) ,Max( AMS,MRS ) )", "choosing": "Max( ( MLU - RCSe ),( RMSe - DS ) )", "obj1": 0.17125984251968504, "obj2": 0.7454476966048986}, {"determining": "( ( BR * FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,RMSe ) / ( MUM * RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8471497170121559}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + Max( DDR,PN ) )", "choosing": "Max( ( MLU * RRSe ),Max( CS,MUC ) )", "obj1": 0.1732283464566929, "obj2": 0.8196893936781295}, {"determining": "Max( Min( FirstVNF_RAM_Server ,BR ),Min( FirstVNF_CPU ,RRS ) )", "choosing": "Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) )", "obj1": 0.23622047244094488, "obj2": 0.6498971991983291}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( CRS / AMS ) )", "choosing": "( ( RMSe / RRSe ) - Min( MUR ,RCSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6784244889898579}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_Mem_Server,DDR ) ) + AMS ) ) ,Min( ARS ,Max( BR,Min( ARS ,CRS ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - ( ( ( Min( ( MUC - MUR ) ,( Max( RCSe,CS ) + MLU ) ) + ( MUM / MUR ) ) - Max( MUM,Max( Min( ( CS - MUC ) ,( MUR + DS ) ),MUM ) ) ) / Max( MUR,( RMSe * Max( CS,MLU ) ) ) ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( CS / RRSe ) ,( RRSe * ( Min( ( Max( MUC,( RCSe + MUR ) ) * RMSe ) ,( ( Max( ( MUR - RRSe ),RMSe ) - ( MLU * ( RRSe / RMSe ) ) ) / RCSe ) ) + MUM ) ) )", "obj1": 0.4251968503937008, "obj2": 0.47584271103263387}, {"determining": "Max( Max( ( DDR + FirstVNF_CPU_Server ),( MRS + BR ) ),( ( DDR / FirstVNF_RAM ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( Min( RMSe ,MLU ) + MUR ) - Min( DS ,MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.6727210570863926}, {"determining": "( ( ( AMS - FirstVNF_RAM ) * ( FirstVNF_Mem + ACS ) ) - ( ( MDR - FirstVNF_Mem_Server ) / ( MDR * Const ) ) )", "choosing": "Max( ( DS - ( MUM * MUM ) ),( ( MUR - DS ) - RMSe ) )", "obj1": 0.15551181102362205, "obj2": 0.8340534372736861}, {"determining": "( ( ( RRS * MDR ) / ( ARS / RRS ) ) + Max( Min( ARS ,FirstVNF_Mem ),( ( CRS - FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( Min( Min( MUR ,RCSe ) ,RRSe ) - ( ( ( ( ( MUC * DS ) + DS ) + MUM ) * MLU ) + Min( RMSe ,MLU ) ) )", "obj1": 0.26968503937007876, "obj2": 0.6377785675011423}, {"determining": "( Min( CRS ,ARS ) * Max( ( Min( ( ( MRS - CRS ) / ARS ) ,MDR ) / FirstVNF_RAM ),( AMS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( Max( Max( ( Min( MUM ,MUM ) + MUR ),RCSe ),Max( RMSe,( MUR * ( RMSe / Min( MUR ,DS ) ) ) ) ) ,RMSe ) + ( ( ( RCSe + MUC ) / RMSe ) - Min( ( CS + MUM ) ,Max( DS,( RMSe - Max( RMSe,( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_RAM ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) ),Max( Max( MRS,ARS ),( Const + PN ) ) )", "choosing": "( Min( ( RRSe - MUC ) ,( RMSe - RRSe ) ) - ( ( DS + RCSe ) - ( RCSe - MUC ) ) )", "obj1": 0.17519685039370078, "obj2": 0.7637657158884229}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( PN + AMS ) )", "choosing": "Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) )", "obj1": 0.2559055118110236, "obj2": 0.6143039654417172}, {"determining": "( ( ( ARS + ACS ) / ( FirstVNF_Mem_Server + CRS ) ) + Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU / RRSe ) ,( MUC / ( MUR + CS ) ) )", "obj1": 0.2933070866141732, "obj2": 0.601450165231341}, {"determining": "( Max( ( FirstVNF_Mem * Const ),Const ) + Max( Max( ACS,ACS ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( DS * RCSe ) + ( MUM - CS ) ),( ( RMSe / RCSe ) / ( RRSe / MUR ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6530571733949192}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) * ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Min( ( ( RMSe * CS ) + ( DS / DS ) ) ,( ( MUC / RRSe ) + ( MUM * MUC ) ) )", "obj1": 0.2578740157480315, "obj2": 0.6761628523421833}, {"determining": "( Max( Min( CRS ,BR ),( Const - ARS ) ) + ( ( AMS / MRS ) + ( PN / MRS ) ) )", "choosing": "( ( ( MUR + CS ) - ( MUR + MLU ) ) * ( ( RCSe * RRSe ) * ( MUM + RMSe ) ) )", "obj1": 0.17913385826771652, "obj2": 0.8112226724195213}, {"determining": "( ( ( ( ( FirstVNF_CPU - ARS ) - ( FirstVNF_RAM_Server + Max( MDR,Const ) ) ) - DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) / ( MLU / CS ) ) / ( ( ( CS * MUC ) + RMSe ) * ( MUM * MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.27755905511811024, "obj2": 0.6408540211156621}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Min( ( MUC / MLU ) ,( ( MUC + MUM ) - MLU ) )", "obj1": 0.24606299212598426, "obj2": 0.6621122606177371}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( Const - FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC / RMSe ) * Min( RCSe ,RMSe ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6667631894066655}, {"determining": "( ( Const + ( FirstVNF_RAM * ARS ) ) * Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MLU * Min( MUC ,Max( RMSe,( ( Max( RMSe,RMSe ) / ( RRSe / MUM ) ) + MLU ) ) ) ) ,Max( RCSe,MUC ) ) / ( Max( MLU,MUM ) - ( CS / RMSe ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7575560889317986}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) + ( ARS / FirstVNF_Mem_Server ) )", "choosing": "( ( Max( RCSe,RRSe ) * Min( DS ,MUC ) ) - ( RCSe - MLU ) )", "obj1": 0.31496062992125984, "obj2": 0.5992797046744279}, {"determining": "Max( Min( ACS ,DDR ),Max( ( BR - ( FirstVNF_CPU_Server / ( MDR * RRS ) ) ),RRS ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.19488188976377951, "obj2": 0.701528589444533}, {"determining": "( ( ( ( ( FirstVNF_CPU + PN ) + MRS ) + BR ) + FirstVNF_CPU ) - ( AMS + ( FirstVNF_Mem - BR ) ) )", "choosing": "( Min( RMSe ,MUC ) / ( MUM + Min( DS ,RMSe ) ) )", "obj1": 0.7401574803149606, "obj2": 0.22329344869173343}, {"determining": "Max( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_RAM / RRS ) ),( ( DDR + RRS ) - Max( ARS,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) + ( MUM * DS ) ) - Min( ( CS / RMSe ) ,( MUR - DS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5619305432143454}, {"determining": "( ( ( ( FirstVNF_RAM + ( Const + CRS ) ) + FirstVNF_RAM ) + CRS ) - ( AMS - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR + MUC ) - ( MLU * RRSe ) ) * Min( Min( RCSe ,RMSe ) ,MUC ) )", "obj1": 0.3188976377952756, "obj2": 0.6759506549809544}, {"determining": "( ( ( DDR / BR ) - Min( Const ,FirstVNF_CPU_Server ) ) - Max( ( PN - CRS ),( BR - FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * CS ) / ( MLU - DS ) ) - ( ( RRSe - RMSe ) / ( CS - DS ) ) )", "obj1": 0.22244094488188976, "obj2": 0.7179579706905206}, {"determining": "Max( ( PN * FirstVNF_RAM ),( Min( ARS ,BR ) / ( AMS + Const ) ) )", "choosing": "Min( ( ( RRSe + RCSe ) + ( CS * RCSe ) ) ,( ( MUR + RCSe ) / ( Max( RMSe,RCSe ) * RCSe ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7522641384316933}, {"determining": "( Max( Max( CRS,FirstVNF_Mem_Server ),FirstVNF_CPU ) / Max( FirstVNF_CPU,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR + CS ),( ( MUM + MLU ) / MUM ) )", "obj1": 0.15551181102362205, "obj2": 0.801626631996554}, {"determining": "Max( ( FirstVNF_CPU - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ),( Min( FirstVNF_CPU ,MDR ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) )", "choosing": "Max( ( ( CS + RMSe ) + ( MUC + CS ) ),( ( MLU - MUC ) + ( MUR * MUM ) ) )", "obj1": 0.1968503937007874, "obj2": 0.7560983568176273}, {"determining": "( Min( MDR ,AMS ) / ( Max( ACS,FirstVNF_CPU_Server ) / ( ARS * ACS ) ) )", "choosing": "Max( ( Max( RRSe,Min( Max( DS,MUM ) ,RMSe ) ) * ( CS * MUR ) ),Max( Max( MUR,MUC ),( MUR / RCSe ) ) )", "obj1": 0.2559055118110236, "obj2": 0.6363711368388923}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( Min( MDR ,( MDR * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe + ( MUM / RRSe ) ) + MUM ) / RMSe ) / ( RRSe - ( MLU - DS ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6833352041730091}, {"determining": "( ( ( ARS - MDR ) + Min( ACS ,ARS ) ) + ( ( ACS / FirstVNF_CPU ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "( Max( ( MLU / MUR ),( RCSe * CS ) ) * Min( Max( RMSe,CS ) ,( RCSe / MUC ) ) )", "obj1": 0.19291338582677164, "obj2": 0.8045443707380862}, {"determining": "Max( ( ( FirstVNF_RAM_Server / DDR ) / Min( BR ,FirstVNF_CPU ) ),( Min( CRS ,Const ) / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR - RCSe ) / ( MUR / CS ) ) + ( ( MUM * MUM ) / Max( MLU,MUC ) ) )", "obj1": 0.2933070866141732, "obj2": 0.6177458192054885}, {"determining": "( Min( PN ,( ( FirstVNF_RAM * CRS ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server * Const ) * ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - MUR ) / RRSe ) + ( DS * MUC ) )", "obj1": 0.41732283464566927, "obj2": 0.48686654739273955}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( MRS,MDR ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( ( MUC - MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,RCSe ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_CPU_Server,Min( MRS ,MDR ) ),Min( BR ,MDR ) )", "choosing": "Min( Max( ( MUM / DS ),( RMSe * RCSe ) ) ,( DS - MUR ) )", "obj1": 0.2440944881889764, "obj2": 0.6510714410776287}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( CS + MLU ),RRSe ) + RCSe ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( DDR,PN ),PN ) * ARS ) * Max( CRS,CRS ) )", "choosing": "Max( ( Max( ( MLU / ( MUM - Min( RRSe ,( MUC + MUM ) ) ) ),( MLU / MUC ) ) - ( RRSe + ( MUC - RCSe ) ) ),Max( MUR,CS ) )", "obj1": 0.16141732283464566, "obj2": 0.821854871641349}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,DS ) + ( RRSe + ( DS + CS ) ) )", "obj1": 0.9133858267716536, "obj2": 0.09167260199523555}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - Min( ( RRS + ( FirstVNF_Mem / ACS ) ) ,Min( MDR ,RRS ) ) )", "choosing": "Min( ( MLU - Max( MUC,MUM ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.25196850393700787, "obj2": 0.632364672851668}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( FirstVNF_Mem * ACS ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( MUM ,MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.7118061089022117}, {"determining": "( Min( FirstVNF_RAM_Server ,( CRS - ( PN + FirstVNF_RAM_Server ) ) ) / Min( RRS ,Max( ACS,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RRSe ,MUM ) + Max( MUR,DS ) )", "obj1": 0.2933070866141732, "obj2": 0.62424006581594}, {"determining": "Max( Max( ( ( ACS * FirstVNF_Mem ) - Min( ACS ,MDR ) ),( ( ACS - FirstVNF_Mem_Server ) * ( CRS / FirstVNF_RAM_Server ) ) ),( Min( ( PN * FirstVNF_CPU_Server ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Max( ( PN + ARS ),Max( FirstVNF_RAM,CRS ) ) ) )", "choosing": "( Min( MUC ,( Min( RCSe ,MLU ) + DS ) ) - Max( RCSe,MUM ) )", "obj1": 0.1968503937007874, "obj2": 0.6885792759925061}, {"determining": "( Min( AMS ,MRS ) + ( ( BR * RRS ) + MDR ) )", "choosing": "( ( Max( ( MLU / MLU ),RRSe ) / MUC ) + ( CS * MUM ) )", "obj1": 0.2106299212598425, "obj2": 0.7763813347065844}, {"determining": "Min( Max( Min( ( FirstVNF_RAM / AMS ) ,( PN * FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem + MDR ),( MRS / ARS ) ) ) ,( Min( Max( PN,BR ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( CS,RMSe ) * ( RRSe - MUM ) ) / ( ( RMSe - MLU ) / ( MUC / MUC ) ) ) - ( ( ( DS + RCSe ) - ( CS - RMSe ) ) - Min( ( CS / RCSe ) ,( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( MDR + ACS ) + ( ARS - ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) ) * ( Max( MUR,CS ) - Max( RRSe,MUM ) ) ) - Min( Min( ( DS - RCSe ) ,( MUR / DS ) ) ,( Max( MUR,RRSe ) - Max( RRSe,CS ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7582329153227932}, {"determining": "( ( Min( Max( FirstVNF_CPU_Server,Const ) ,( AMS / MRS ) ) + ( Max( MDR,CRS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) - ( Max( ( FirstVNF_RAM_Server - DDR ),( PN * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / RCSe ),Max( MUC,( MUC + MUM ) ) )", "obj1": 0.4507874015748031, "obj2": 0.4864933787191708}, {"determining": "( Max( ( ( Const / PN ) - ( FirstVNF_Mem - MDR ) ),( ( RRS - Const ) / ( DDR / CRS ) ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( BR * RRS ) ) - Max( ( RRS / PN ),Max( DDR,ACS ) ) ) )", "choosing": "Max( ( ( ( CS + MUR ) * Max( MUM,MLU ) ) / ( ( MUM + MUM ) + Min( RCSe ,CS ) ) ),( Min( Max( MUC,RMSe ) ,Min( MUM ,MUM ) ) + Min( Min( MUC ,CS ) ,Min( MUM ,DS ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.4817648049775907}, {"determining": "( ( ( ( PN - BR ) / ( DDR + Const ) ) * ( Min( MDR ,PN ) / ( AMS * BR ) ) ) - ( ( ( Const / ARS ) + ( ARS + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server - MRS ) * Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( DS * ( DS * RCSe ) ),( CS / ( RCSe - MLU ) ) )", "obj1": 0.610236220472441, "obj2": 0.3457241552359776}, {"determining": "( ( FirstVNF_RAM + CRS ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - Min( Max( ( ( ( MLU / RMSe ) - MUM ) + RCSe ),Min( CS ,MUM ) ) ,RCSe ) ) ) ,( Max( Max( MUC,CS ),Min( MLU ,MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.684022399521366}, {"determining": "( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + MUM ) - ( DS * CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.7705779960955669}, {"determining": "Min( Min( ( ( BR / ACS ) + ( CRS / ( FirstVNF_CPU_Server * MDR ) ) ) ,FirstVNF_CPU_Server ) ,( Const + AMS ) )", "choosing": "( Min( MUC ,( MUR + MUC ) ) * ( ( ( MLU - MUC ) / DS ) / ( Min( MLU ,MUR ) / ( RCSe * MLU ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6834096172584068}, {"determining": "Max( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( Const / ARS ) ) ,( ( MRS + MRS ) + Max( Const,PN ) ) ),Max( ( Max( MDR,PN ) / Max( FirstVNF_RAM_Server,PN ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) )", "choosing": "( ( Max( ( RRSe * DS ),Max( MUR,DS ) ) - ( Max( MUR,MLU ) * ( RMSe - MUC ) ) ) / ( Min( ( MUR * MUM ) ,Min( MUC ,MUM ) ) - ( Min( MUC ,RRSe ) + ( MUM - CS ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.805504647379869}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MLU * RRSe ) )", "obj1": 0.43503937007874016, "obj2": 0.499104589147302}, {"determining": "( Max( ( Max( ARS,BR ) + ( ACS - Const ) ),Min( ( ARS * FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,BR ) ) ) + ( ( ( CRS / FirstVNF_Mem_Server ) * ( AMS / RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC - MLU ) - ( Max( ( DS * MUM ),MUR ) + ( MUC - ( RRSe + MUM ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6551664413527807}, {"determining": "Max( ( FirstVNF_CPU + BR ),Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( RRSe - MLU ) ) / ( ( CS / CS ) / ( MUC * MUM ) ) ) ,Min( ( Max( RRSe,MUC ) * ( DS - RCSe ) ) ,( Min( DS ,MLU ) + ( MUM / CS ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.5849731262836957}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Min( PN ,MDR ) + BR ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + FirstVNF_CPU ),( PN - ( Min( MRS ,FirstVNF_CPU_Server ) - ACS ) ) )", "choosing": "Max( ( DS * MUM ),( MUC * ( ( CS / RMSe ) * DS ) ) )", "obj1": 0.4074803149606299, "obj2": 0.49828271039835004}, {"determining": "( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) + ACS ) / Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( RRSe + MLU ) + Min( RRSe ,DS ) ) ,Max( Min( DS ,RCSe ),( MUR + RRSe ) ) ) / ( ( ( MUC + CS ) - Min( RRSe ,CS ) ) * ( ( CS / MLU ) - ( MUR / MUM ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.7523190124992886}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ),( ( ( FirstVNF_CPU + FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( ( ( MLU * MUM ) / Min( RCSe ,MUR ) ) + ( ( MUM - RCSe ) - ( MLU - RRSe ) ) ) - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - MUR ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6484745386820782}, {"determining": "Max( ( ( ( Min( CRS ,CRS ) + FirstVNF_RAM_Server ) - Min( CRS ,DDR ) ) - PN ),Min( ( FirstVNF_RAM * PN ) ,Max( ACS,( ( PN / BR ) + Const ) ) ) )", "choosing": "( Max( MUM,( ( ( ( CS + RMSe ) / MUM ) * RRSe ) - ( ( Max( ( MUR * Min( DS ,MUC ) ),RRSe ) / RCSe ) * RCSe ) ) ) / ( Min( MLU ,RRSe ) / MUR ) )", "obj1": 0.2874015748031496, "obj2": 0.5988214964929385}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.5216535433070866, "obj2": 0.4023352424008532}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - ( RRSe - CS ) )", "obj1": 0.27165354330708663, "obj2": 0.6528422261283261}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_RAM ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Max( ARS,ACS ) ) ) + ( ( Max( Const,DDR ) + ( DDR * FirstVNF_CPU_Server ) ) / Max( Max( PN,MDR ),( DDR - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) )", "obj1": 0.29133858267716534, "obj2": 0.627268563059642}, {"determining": "( ( ( Max( FirstVNF_CPU,RRS ) + ( MDR + FirstVNF_RAM ) ) + ( ( BR - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,MDR ) ) ) + ( Max( Min( FirstVNF_CPU ,BR ),Max( RRS,BR ) ) / ( ( ACS / AMS ) + Min( RRS ,AMS ) ) ) )", "choosing": "( ( ( ( RCSe + RMSe ) * Max( DS,CS ) ) - ( ( DS * RRSe ) / Max( MLU,RMSe ) ) ) / Min( ( ( MUR + MUR ) + ( RCSe + MUM ) ) ,( ( MUM - MUC ) + Min( MUR ,RCSe ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.8189644786784167}, {"determining": "Max( Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_Mem + DDR ) ),( ( RRS - ARS ) * Max( ACS,BR ) ) ),( Max( Min( MDR ,FirstVNF_Mem ),Max( BR,AMS ) ) - ( ( ARS / FirstVNF_Mem_Server ) + ( BR / BR ) ) ) )", "choosing": "Min( Min( ( Min( MUM ,CS ) + ( MLU / DS ) ) ,( ( RCSe / DS ) * Max( RMSe,RMSe ) ) ) ,( Min( ( MUM - RRSe ) ,( MUM + CS ) ) / ( ( MUR / RMSe ) - ( RMSe / RRSe ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.8091518678575228}], "2": [{"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_RAM ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Max( ARS,ACS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS / ACS ),RRS ) - Max( ( ( FirstVNF_Mem * FirstVNF_RAM ) / FirstVNF_Mem_Server ),Max( Max( DDR,FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( Min( RRSe ,RMSe ) * Min( RCSe ,DS ) ),MLU ),( MUC / ( Max( RMSe,MLU ) + ( RRSe * Min( MUR ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( ( RCSe + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.6181102362204725, "obj2": 0.27406483727767256}, {"determining": "( ( FirstVNF_CPU_Server + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.22341037547162632}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( Min( MUC ,MUM ) * ( RMSe * RMSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28863990552272434}, {"determining": "( ( Min( Max( ( FirstVNF_Mem - MDR ),Const ) ,( AMS / MRS ) ) + ( Max( MDR,CRS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) - ( Max( ( FirstVNF_RAM_Server - DDR ),( PN * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / RCSe ),( Min( Max( MUC,RMSe ) ,Min( MUM ,MUM ) ) + Min( Min( MUC ,CS ) ,Min( MUM ,DS ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.3879783991705009}, {"determining": "( ( ( ( PN - BR ) / ( DDR + Const ) ) * ( Min( MDR ,PN ) / ( AMS * BR ) ) ) - ( ( ( Const / ARS ) + ( ARS + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server - MRS ) * Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( DS * ( DS * RCSe ) ),( CS / ( RCSe - MLU ) ) )", "obj1": 0.610236220472441, "obj2": 0.3457241552359776}, {"determining": "( ( ( ( ( FirstVNF_CPU + PN ) + MRS ) + BR ) + FirstVNF_CPU ) - ( AMS + ( FirstVNF_Mem - BR ) ) )", "choosing": "( Min( RMSe ,MUC ) / ( MUM + Min( DS ,RMSe ) ) )", "obj1": 0.9015748031496063, "obj2": 0.10891096419327265}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( ( RRSe + ( DS + CS ) ) ,MUM ) ) )", "obj1": 0.9114173228346457, "obj2": 0.07736139665768202}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "( ( RRSe - ( MUC - MUC ) ) / Min( MUM ,( MUM / MUR ) ) )", "obj1": 0.7854330708661418, "obj2": 0.18986516741929743}, {"determining": "( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,MUM ) * ( RMSe * RMSe ) )", "obj1": 0.9625984251968503, "obj2": 0.04566220066071436}, {"determining": "Max( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ),Max( Max( MRS,ARS ),( Const + PN ) ) )", "choosing": "( Min( ( RRSe - MUC ) ,( RMSe - RRSe ) ) - ( ( Max( DS,RCSe ) / ( MUC * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7817176489007743}, {"determining": "( ( ( ( PN - BR ) / ( DDR + Const ) ) * ( Min( MDR ,PN ) / ( AMS * BR ) ) ) - ( ( ( Const / ARS ) + ( ARS + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server - MRS ) * Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / MLU ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.4419012283245196}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU * RRSe ) - RMSe ) * Min( Min( RCSe ,RMSe ) ,MUC ) )", "obj1": 0.7559055118110236, "obj2": 0.21283602944275518}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "( ( ( Const / PN ) + ( Max( MDR,CRS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) - ( Max( ( FirstVNF_RAM_Server - DDR ),( PN * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / RCSe ),Max( ( ( ( CS + MUR ) * Max( MUM,MLU ) ) / ( ( MUM + MUM ) + Min( RCSe ,CS ) ) ),( Min( Max( MUC,RMSe ) ,Min( MUM ,MUM ) ) + Min( Min( MUC ,CS ) ,Min( MUM ,DS ) ) ) ) )", "obj1": 0.5098425196850394, "obj2": 0.4193818920125242}, {"determining": "( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - MUR ) / ( MUR + CS ) )", "obj1": 0.9645669291338582, "obj2": 0.038455883404945955}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) + ACS ) / Min( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) ,( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( RRSe + MLU ) + Min( RRSe ,DS ) ) ,Max( Min( DS ,RCSe ),( MUR + RRSe ) ) ) / ( ( ( MUC + CS ) - Min( RRSe ,CS ) ) * ( ( ( ( MLU * MUM ) / Min( RCSe ,MUR ) ) + ( ( MUM - RCSe ) - ( MLU - RRSe ) ) ) - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - MUR ) / Max( MUM,RRSe ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5923974455884599}, {"determining": "Max( Min( ACS ,DDR ),Max( ( BR - ( FirstVNF_CPU_Server / ( MDR * RRS ) ) ),RRS ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.13582677165354332, "obj2": 0.8279999260054343}, {"determining": "( ( ( BR * FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) ) + Max( MDR,RRS ) )", "choosing": "( Max( MUC,RMSe ) - ( DS / RCSe ) )", "obj1": 0.14763779527559054, "obj2": 0.7562318782661233}, {"determining": "( ( BR * FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,RMSe ) / ( MUM * RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8471497170121559}, {"determining": "Max( DDR,Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( RMSe / RRSe ) ,Min( RRSe ,DS ) )", "obj1": 0.4330708661417323, "obj2": 0.46390875276671195}, {"determining": "( ( BR * DDR ) * ( PN + AMS ) )", "choosing": "Min( ( ( ( CS / DS ) - RCSe ) - CS ) ,( DS / DS ) )", "obj1": 0.1732283464566929, "obj2": 0.7053855601870657}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( Max( ( MLU * MUM ),( RRSe * MUC ) ) ,MUM ) )", "obj1": 0.3405511811023622, "obj2": 0.5543402629427967}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) / ( CRS + DDR ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( CS ,RRSe ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5258927971686219}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( CRS / Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( CS / RRSe ) )", "obj1": 0.3169291338582677, "obj2": 0.5650231172842024}, {"determining": "Min( ( ARS + CRS ) ,Max( AMS,MRS ) )", "choosing": "Max( ( MLU - RCSe ),( RMSe - DS ) )", "obj1": 0.17125984251968504, "obj2": 0.7454476966048986}, {"determining": "( ( ( ( ( FirstVNF_CPU + PN ) + MRS ) + BR ) + FirstVNF_CPU ) - ( AMS + ( FirstVNF_Mem - BR ) ) )", "choosing": "( Min( RMSe ,MUC ) / ( MUM + Min( DS ,RMSe ) ) )", "obj1": 0.9015748031496063, "obj2": 0.10891096419327265}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( PN + AMS ) )", "choosing": "( ( Max( DS,RCSe ) / ( MUC * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5401788979128986}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "Max( ( ( CRS - Min( DDR ,CRS ) ) - PN ),Min( ( FirstVNF_Mem * PN ) ,Max( ( Const + Const ),ACS ) ) )", "choosing": "( ( ( ( MLU * MUM ) / Min( RCSe ,MUR ) ) + ( ( MUM - RCSe ) - ( MLU - RRSe ) ) ) - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - MUR ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6621603760971322}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "( ( Const + ( FirstVNF_RAM * ARS ) ) * Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MLU * Min( MUC ,Max( RMSe,( ( Max( RMSe,RMSe ) / ( RRSe / MUM ) ) + MLU ) ) ) ) ,Max( RCSe,MUC ) ) / ( Max( MLU,MUM ) - ( CS / RMSe ) ) )", "obj1": 0.297244094488189, "obj2": 0.5862192653319575}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( ( FirstVNF_Mem / ACS ) / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,DS ) + ( RRSe + ( RMSe + CS ) ) )", "obj1": 0.9094488188976378, "obj2": 0.09668209219930675}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Const * Min( FirstVNF_CPU ,RRS ) ) ) * Max( ( Const - FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe * ( MUC + MUM ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.1220472440944882, "obj2": 0.8334160666244286}, {"determining": "Max( ( PN * FirstVNF_RAM ),( Min( ARS ,BR ) / ( AMS + Const ) ) )", "choosing": "Min( ( ( RRSe + RCSe ) + ( CS * RCSe ) ) ,( ( MUR + RCSe ) / ( Max( RMSe,RCSe ) * RCSe ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7522641384316933}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( ( Min( Max( FirstVNF_CPU_Server,Const ) ,( AMS / MRS ) ) + ( Max( MDR,CRS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) - ( Max( ( FirstVNF_RAM_Server - DDR ),( PN * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( ( CS + MUR ) * Max( MUM,MLU ) ) / ( ( MUM + MUM ) + Min( RCSe ,CS ) ) ),( Min( Max( MUC,RMSe ) ,Min( MUM ,MUM ) ) + Min( Min( MUC ,CS ) ,Min( MUM ,DS ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.39666384205421606}, {"determining": "( Max( PN,ACS ) * ( CRS - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.24606299212598426, "obj2": 0.6203592920139329}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5141470649225344}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.5216535433070866, "obj2": 0.4023352424008532}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( PN + AMS ) )", "choosing": "Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) )", "obj1": 0.2559055118110236, "obj2": 0.6143039654417172}, {"determining": "( ( AMS * BR ) / ( MDR * FirstVNF_Mem ) )", "choosing": "Min( ( MUC * DS ) ,( RCSe + RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.50520860856229}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + Max( DDR,PN ) )", "choosing": "Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) )", "obj1": 0.35039370078740156, "obj2": 0.5498466553189609}, {"determining": "Max( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem_Server ,MDR ) ),Min( BR ,Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( MUR * MLU ) + ( MUM / MUC ) ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4717310901545544}, {"determining": "( Max( ( FirstVNF_Mem * Const ),Const ) + Max( Max( ACS,ACS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) )", "obj1": 0.2559055118110236, "obj2": 0.6143039654417172}, {"determining": "Max( ( ( CRS - Min( DDR ,CRS ) ) - PN ),Min( ( FirstVNF_Mem * PN ) ,Max( ( Const + Const ),ACS ) ) )", "choosing": "( ( MUM * ( RRSe - CS ) ) / ( Min( MLU ,RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.5702797770462165}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Max( ( FirstVNF_Mem * Const ),Const ) + Max( Max( ACS,ACS ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( DS * RCSe ) + ( MUM - CS ) ),( ( RMSe / RCSe ) / ( RRSe / MUR ) ) )", "obj1": 0.24606299212598426, "obj2": 0.631764417863038}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) ),FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / DS ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8449022889752559}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( FirstVNF_Mem * ACS ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( MUM ,MUM ) ) )", "obj1": 0.17913385826771652, "obj2": 0.7004433504087433}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( FirstVNF_Mem * ACS ) ) ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU / MUM ) - Max( CS,Min( MUM ,MUM ) ) ) + ( RRSe + ( DS + CS ) ) )", "obj1": 0.905511811023622, "obj2": 0.10632289156885438}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.5216535433070866, "obj2": 0.4023352424008532}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( BR * FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MUC,RMSe ) / ( MUM * RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.8471497170121559}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7401574803149606, "obj2": 0.22329344869173343}, {"determining": "( Max( ( FirstVNF_Mem * Const ),Const ) + Max( Max( ACS,ACS ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( DS * RCSe ) + ( MUM - CS ) ),( ( RMSe / RCSe ) / ( RRSe / MUR ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6530571733949192}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( ( AMS - Max( ACS,FirstVNF_Mem ) ) + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - ( MLU * RRSe ) ) )", "obj1": 0.39173228346456695, "obj2": 0.5055404867994879}, {"determining": "( FirstVNF_Mem + Max( Max( ACS,ACS ),FirstVNF_CPU_Server ) )", "choosing": "Max( MUC,( ( RMSe / RCSe ) / ( RRSe / MUR ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6564841013421584}, {"determining": "( ( ( ( ( FirstVNF_CPU + PN ) + MRS ) + BR ) + FirstVNF_CPU ) - ( AMS + ( FirstVNF_Mem - BR ) ) )", "choosing": "( Min( RMSe ,MUC ) / ( MUM + Min( DS ,RMSe ) ) )", "obj1": 0.7401574803149606, "obj2": 0.22329344869173343}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( PN + AMS ) )", "choosing": "Max( ( ( DS * RCSe ) + ( MUM - CS ) ),( ( RMSe / RCSe ) / ( RRSe / MUR ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6530571733949192}, {"determining": "( ( ( ( ( FirstVNF_CPU - ARS ) - ( FirstVNF_RAM_Server + Max( MDR,Const ) ) ) - DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) / ( MLU / CS ) ) / ( ( ( CS * MUC ) + RMSe ) * ( MUM * MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( BR * FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) )", "choosing": "Max( ( MLU - RCSe ),( RMSe - DS ) )", "obj1": 0.17125984251968504, "obj2": 0.7454476966048986}, {"determining": "( ( Const + ( FirstVNF_RAM * ARS ) ) * Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MLU * Min( MUC ,Max( RMSe,( ( Max( RMSe,RMSe ) / ( RRSe / MUM ) ) + MLU ) ) ) ) ,Max( RCSe,MUC ) ) / ( Max( MLU,MUM ) - ( CS / RMSe ) ) )", "obj1": 0.297244094488189, "obj2": 0.5862192653319575}, {"determining": "( ( AMS + Const ) - Min( FirstVNF_Mem_Server ,( AMS / ( Max( FirstVNF_RAM,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Max( Min( AMS ,Max( FirstVNF_CPU_Server,MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + MUC ) / Min( ( ( CS * MUM ) / ( ( MLU * ( Max( ( RCSe + RMSe ),Min( CS ,RRSe ) ) * MUR ) ) / Min( ( ( ( MLU * RRSe ) * DS ) + MUR ) ,MLU ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - BR ) / Min( PN ,MRS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * MDR ) ) + FirstVNF_CPU_Server ) * ( ( Max( ARS,( ( ( CRS - Const ) + PN ) - ( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM * DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUR ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_Mem_Server,DDR ) ) + AMS ) ) ,Min( ARS ,Max( BR,Min( ARS ,CRS ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - ( ( ( Min( ( MUC - MUR ) ,( Max( RCSe,CS ) + MLU ) ) + ( MUM / MUR ) ) - Max( MUM,Max( Min( ( CS - MUC ) ,( MUR + DS ) ),MUM ) ) ) / Max( MUR,( RMSe * Max( CS,MLU ) ) ) ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,ARS ) * Max( ( Min( ( ( MRS - CRS ) / ARS ) ,MDR ) / FirstVNF_RAM ),( AMS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( Max( Max( ( Min( MUM ,MUM ) + MUR ),RCSe ),Max( RMSe,( MUR * ( RMSe / Min( MUR ,DS ) ) ) ) ) ,RMSe ) + ( ( ( RCSe + MUC ) / RMSe ) - Min( ( CS + MUM ) ,Max( DS,( RMSe - Max( RMSe,( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( MRS,MDR ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( ( MUC - MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,RCSe ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( CS + MLU ),RRSe ) + RCSe ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( ( FirstVNF_RAM / AMS ) ,( PN * FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem + MDR ),( MRS / ARS ) ) ) ,( Min( Max( PN,BR ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( CS,RMSe ) * ( RRSe - MUM ) ) / ( ( RMSe - MLU ) / ( MUC / MUC ) ) ) - ( ( ( DS + RCSe ) - ( CS - RMSe ) ) - Min( ( CS / RCSe ) ,( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( DDR,CRS ) * ( RRS - PN ) ) / Max( Max( MRS,Const ),( CRS + AMS ) ) ) ,Max( Min( Min( MRS ,FirstVNF_Mem ) ,Max( RRS,FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) + ( Min( ( DS / MUM ) ,RRSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_RAM ) - ( ( ACS + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) + ( Min( PN ,MDR ) + BR ) )", "choosing": "( Min( ( ( RMSe * MUC ) + ( RCSe / RMSe ) ) ,( Max( MLU,RRSe ) + Min( MUC ,MLU ) ) ) - Min( ( ( MUM / DS ) - Min( MUR ,MUC ) ) ,( ( CS / RRSe ) / Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ARS ,Min( FirstVNF_Mem_Server ,RRS ) ) ,FirstVNF_CPU ) - ACS ) / ( ARS * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR - MUR ),RRSe ) / ( Max( MUR,( DS * RCSe ) ) - Max( MUR,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,DDR ) - ( ( FirstVNF_RAM_Server / ( ( BR + PN ) * ARS ) ) / ( ( ( ARS + CRS ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( ( MLU / ( MUR + MLU ) ),RMSe ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU / ( ( MDR - FirstVNF_RAM_Server ) / CRS ) ) / RRS ) ) - ( Const / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( Max( MLU,Max( MUM,( ( ( ( MUC + DS ) * CS ) - CS ) * RMSe ) ) ),RRSe ),( ( ( MUC * Max( RCSe,Max( ( RMSe / Max( DS,CS ) ),MUM ) ) ) + RRSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) + ( PN + Min( ARS ,FirstVNF_RAM ) ) ) + Min( ARS ,Const ) ) - ( ( ARS * MDR ) + MRS ) )", "choosing": "( ( ( RCSe + MUR ) + DS ) / ( ( MUM + Min( MUC ,( ( ( Max( DS,RRSe ) + Max( MLU,RRSe ) ) / DS ) + MLU ) ) ) + Min( ( MUM - ( DS + Max( MLU,( Max( RCSe,MUR ) * MLU ) ) ) ) ,( RCSe * Min( Min( DS ,( MUC / ( CS - DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( MRS - ( FirstVNF_CPU - ( RRS + RRS ) ) ) ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( Max( RCSe,MLU ),MLU ) + ( RRSe - ( ( ( RRSe * ( Min( RMSe ,DS ) * MUC ) ) / ( CS + ( RRSe / RRSe ) ) ) + RMSe ) ) ),( CS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,ARS ) - Max( BR,ACS ) ) - ( Min( CRS ,FirstVNF_RAM ) * FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / ARS ) )", "choosing": "( Max( MUC,Max( MUC,MUC ) ) / ( MUM + ( ( MLU / ( ( ( MUR * ( CS * RCSe ) ) - MUM ) + Min( MUR ,( CS - RRSe ) ) ) ) * ( MUM - ( RCSe + ( RRSe * ( Max( RMSe,CS ) - CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,( BR + ARS ) ) / FirstVNF_Mem_Server ) * MRS ) - Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - DDR ) ,( ( Max( AMS,FirstVNF_CPU ) + Max( ( FirstVNF_RAM / ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ),MRS ) ) / ( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUR ) / ( MUR + ( ( MUR + ( MUM * MLU ) ) - ( ( RRSe * ( ( MUR + RCSe ) + RRSe ) ) + Max( MUM,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,AMS ) * ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,MUM ) * ( RMSe * ( ( RCSe + RRSe ) * Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,AMS ) * ( Const - MDR ) ) + ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RRSe ) * Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,ACS ) * ( ( AMS - AMS ) - CRS ) )", "choosing": "( ( ( RRSe + RCSe ) / RCSe ) - Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( MLU - DS ) + ( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( ( Const - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( CS + MUR ) - ( ( MLU - MUM ) + ( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( CS + MUR ) - ( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( Max( AMS,AMS ) - ( AMS / MRS ) )", "choosing": "( ( ( Max( ( MLU + MLU ),( MUC + RRSe ) ) * RRSe ) - MUR ) / Max( ( MLU + MLU ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_RAM ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Max( ARS,ACS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( ( RCSe + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.6181102362204725, "obj2": 0.27406483727767256}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( FirstVNF_CPU_Server + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.22341037547162632}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( Min( MUC ,MUM ) * ( RMSe * RMSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28863990552272434}, {"determining": "( ( Min( Max( ( FirstVNF_Mem - MDR ),Const ) ,( AMS / MRS ) ) + ( Max( MDR,CRS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) - ( Max( ( FirstVNF_RAM_Server - DDR ),( PN * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / RCSe ),( Min( Max( MUC,RMSe ) ,Min( MUM ,MUM ) ) + Min( Min( MUC ,CS ) ,Min( MUM ,DS ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.3879783991705009}, {"determining": "( ( ( ( PN - BR ) / ( DDR + Const ) ) * ( Min( MDR ,PN ) / ( AMS * BR ) ) ) - ( ( ( Const / ARS ) + ( ARS + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server - MRS ) * Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( DS * ( DS * RCSe ) ),( CS / ( RCSe - MLU ) ) )", "obj1": 0.610236220472441, "obj2": 0.3457241552359776}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( ( RRSe + ( DS + CS ) ) ,MUM ) ) )", "obj1": 0.9114173228346457, "obj2": 0.07736139665768202}, {"determining": "( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,MUM ) * ( RMSe * RMSe ) )", "obj1": 0.9625984251968503, "obj2": 0.04566220066071436}, {"determining": "( ( BR / FirstVNF_Mem ) * ( ( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU / MUC ) / Max( MLU,MUR ) ) - ( RRSe + RCSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8384897555017627}, {"determining": "( ( ( ( PN - BR ) / ( DDR + Const ) ) * ( Min( MDR ,PN ) / ( AMS * BR ) ) ) - ( ( ( Const / ARS ) + ( ARS + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server - MRS ) * Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / MLU ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.4419012283245196}, {"determining": "( ( ( Const / PN ) + ( Max( MDR,CRS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) - ( Max( ( FirstVNF_RAM_Server - DDR ),( PN * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / RCSe ),Max( ( ( ( CS + MUR ) * Max( MUM,MLU ) ) / ( ( MUM + MUM ) + Min( RCSe ,CS ) ) ),( Min( Max( MUC,RMSe ) ,Min( MUM ,MUM ) ) + Min( Min( MUC ,CS ) ,Min( MUM ,DS ) ) ) ) )", "obj1": 0.5098425196850394, "obj2": 0.4193818920125242}, {"determining": "( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - MUR ) / ( MUR + CS ) )", "obj1": 0.9645669291338582, "obj2": 0.038455883404945955}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( ( FirstVNF_Mem / ACS ) / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,DS ) + ( RRSe + ( RMSe + CS ) ) )", "obj1": 0.9094488188976378, "obj2": 0.09668209219930675}, {"determining": "( ( AMS / MRS ) * Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( CRS ,Min( Const ,( RRS - ( DDR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( Max( ( MLU + MLU ),RCSe ) * RRSe ) - MUR ) / DS )", "obj1": 0.12401574803149606, "obj2": 0.8110636775314848}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "( ( RRSe - ( MUC - MUC ) ) / Min( MUM ,( MUM / MUR ) ) )", "obj1": 0.7854330708661418, "obj2": 0.18986516741929743}, {"determining": "( ( BR * DDR ) * ( PN + AMS ) )", "choosing": "Min( ( ( ( CS / DS ) - RCSe ) - CS ) ,( DS / DS ) )", "obj1": 0.1732283464566929, "obj2": 0.7053855601870657}, {"determining": "( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) + ACS ) / Min( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) ,( ( CRS * FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( RRSe + MLU ) + Min( RRSe ,DS ) ) ,Max( Min( DS ,RCSe ),( MUR + RRSe ) ) ) / ( ( ( MUC + CS ) - Min( RRSe ,CS ) ) * ( ( ( ( MLU * MUM ) / Min( RCSe ,MUR ) ) + ( ( MUM - RCSe ) - ( MLU - RRSe ) ) ) - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - MUR ) / Max( MUM,RRSe ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5923974455884599}, {"determining": "( ( AMS / MRS ) * Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( CRS ,( FirstVNF_CPU_Server * Max( FirstVNF_CPU_Server,Min( MRS ,MDR ) ) ) ) ) ) )", "choosing": "( ( ( Max( ( MUM / DS ),( RMSe * RCSe ) ) * RRSe ) - MUR ) / ( MUR + CS ) )", "obj1": 0.13385826771653545, "obj2": 0.7854229621874158}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MLU * MLU ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5213052828230235}, {"determining": "Min( ( ARS + CRS ) ,Max( AMS,MRS ) )", "choosing": "Max( ( MLU - RCSe ),( RMSe - DS ) )", "obj1": 0.17125984251968504, "obj2": 0.7454476966048986}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU * RRSe ) - RMSe ) * Min( Min( RCSe ,RMSe ) ,MUC ) )", "obj1": 0.7559055118110236, "obj2": 0.21283602944275518}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),( Const * Min( FirstVNF_CPU ,RRS ) ) ) * Max( ( Const - FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe * ( MUC + MUM ) ) ,( Max( CS,RMSe ) - ( MUM + MUM ) ) )", "obj1": 0.1220472440944882, "obj2": 0.8334160666244286}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + Max( DDR,PN ) )", "choosing": "Min( ( MUR - RCSe ) ,Max( RMSe,MUC ) )", "obj1": 0.35039370078740156, "obj2": 0.5498466553189609}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) / ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( ( ( CS - MLU ) + Min( CS ,RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5807468154548092}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "Max( ( AMS * ( Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - ( CS * Max( ( DS + DS ),( MLU - RCSe ) ) ) ) ,MLU ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.5010740880026119}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( Max( ( MLU * MUM ),( RRSe * MUC ) ) ,MUM ) )", "obj1": 0.3405511811023622, "obj2": 0.5543402629427967}, {"determining": "( Max( PN,ACS ) * ( CRS - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.24606299212598426, "obj2": 0.6203592920139329}, {"determining": "( ( ( BR * FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) ) + Max( MDR,RRS ) )", "choosing": "( Max( MUC,RMSe ) - ( DS / RCSe ) )", "obj1": 0.14763779527559054, "obj2": 0.7562318782661233}, {"determining": "Max( ( PN * FirstVNF_RAM ),( Min( ARS ,BR ) / ( AMS + Const ) ) )", "choosing": "Min( ( ( RRSe + RCSe ) + ( CS * RCSe ) ) ,( ( MUR + RCSe ) / ( Max( RMSe,RCSe ) * RCSe ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7522641384316933}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / CRS )", "choosing": "( ( RMSe / Min( CS ,RRSe ) ) * ( RMSe / Min( CS ,RRSe ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5623181871832502}, {"determining": "( ( Min( Max( FirstVNF_CPU_Server,Const ) ,( AMS / MRS ) ) + ( Max( MDR,CRS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) - ( Max( ( FirstVNF_RAM_Server - DDR ),( PN * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( ( CS + MUR ) * Max( MUM,MLU ) ) / ( ( MUM + MUM ) + Min( RCSe ,CS ) ) ),( Min( Max( MUC,RMSe ) ,Min( MUM ,MUM ) ) + Min( Min( MUC ,CS ) ,Min( MUM ,DS ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.39666384205421606}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.44881889763779526, "obj2": 0.45827198200182606}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.5216535433070866, "obj2": 0.4023352424008532}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "Max( ( ( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ),MDR ) / Max( ACS,ACS ) ) / ( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ),( ( ( FirstVNF_CPU + FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( ( ( MLU * MUM ) / Min( RCSe ,MUR ) ) + ( ( MUM - RCSe ) - ( ( CS + MUR ) - ( CS * DS ) ) ) ) - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - MUR ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.6047043474110259}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,( MUM / MUR ) ) / ( RRSe - DS ) )", "obj1": 0.765748031496063, "obj2": 0.2029349246983889}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - MLU ) ,MLU ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5211693317374565}, {"determining": "Max( DDR,Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( RMSe / RRSe ) ,Min( RRSe ,DS ) )", "obj1": 0.4330708661417323, "obj2": 0.46390875276671195}, {"determining": "Max( Min( ( Const * FirstVNF_Mem_Server ) ,( ( MRS + MRS ) + Max( Const,PN ) ) ),Max( ( Max( MDR,PN ) / Max( FirstVNF_RAM_Server,PN ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) )", "choosing": "( ( Max( ( RRSe * DS ),Max( MUR,DS ) ) - ( Max( MUR,MLU ) * ( RMSe - MUC ) ) ) / Min( ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ,( ( ( MUC - MUR ) + ( MUR - MUC ) ) - ( ( MUM + MUM ) - ( DS * CS ) ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6317334732332348}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "Max( ( ( CRS - Min( DDR ,CRS ) ) - PN ),Min( ( FirstVNF_Mem * PN ) ,Max( ( Const + Const ),ACS ) ) )", "choosing": "( ( MUM * ( RRSe - CS ) ) / ( Min( MLU ,RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.5702797770462165}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( AMS / ( Const * ACS ) ) )", "choosing": "Max( ( ( ( MLU + MUM ) / RMSe ) / ( RRSe - ( MLU - MUR ) ) ),Max( Max( MUR,MUC ),( MUR / RCSe ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6734877008681919}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( CRS / Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( CS / RRSe ) )", "obj1": 0.3169291338582677, "obj2": 0.5650231172842024}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,( MUM / MUR ) ) / ( RRSe - DS ) )", "obj1": 0.765748031496063, "obj2": 0.2029349246983889}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "Max( ( ( CRS - Min( DDR ,CRS ) ) - PN ),Min( ( FirstVNF_Mem * PN ) ,Max( ( Const + Const ),ACS ) ) )", "choosing": "( ( ( ( MLU * MUM ) / Min( RCSe ,MUR ) ) + ( ( MUM - RCSe ) - ( MLU - RRSe ) ) ) - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( DS - MUR ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6621603760971322}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( FirstVNF_Mem * ACS ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( MUM ,MUM ) ) )", "obj1": 0.17913385826771652, "obj2": 0.7004433504087433}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,( MUM / MUR ) ) / ( RRSe - DS ) )", "obj1": 0.7854330708661418, "obj2": 0.18986516741929743}, {"determining": "( Max( AMS,CRS ) - Min( Const ,BR ) )", "choosing": "( ( ( MUM - MUC ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.2637795275590551, "obj2": 0.6107306737428996}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - Const ) )", "choosing": "( ( Max( ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7760240083101991}, {"determining": "Max( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem_Server ,MDR ) ),Min( BR ,Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( MUR * MLU ) + ( MUM / MUC ) ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4717310901545544}, {"determining": "( Min( Const ,( ( CRS + ( PN - FirstVNF_CPU ) ) / ( RRS - ( DDR - ACS ) ) ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RMSe ) ) ) / MLU ) ),Max( RMSe,Min( MUM ,RMSe ) ) ) + RRSe ) * Min( MUR ,RMSe ) )", "obj1": 0.4566929133858268, "obj2": 0.4538867342109494}, {"determining": "( PN * Min( FirstVNF_RAM ,Const ) )", "choosing": "( RCSe / ( ( CS + MUR ) + MUR ) )", "obj1": 0.22440944881889763, "obj2": 0.6488264624013984}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.2047244094488189, "obj2": 0.6756714124274891}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.5216535433070866, "obj2": 0.4023352424008532}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( ( ( ( FirstVNF_CPU + PN ) + MRS ) + BR ) + FirstVNF_CPU ) - ( AMS + ( FirstVNF_Mem - BR ) ) )", "choosing": "( Min( RMSe ,MUC ) / ( MUM + Min( DS ,RMSe ) ) )", "obj1": 0.7401574803149606, "obj2": 0.22329344869173343}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5141470649225344}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( Max( ( FirstVNF_Mem * Const ),Const ) + Max( Max( ACS,ACS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) )", "obj1": 0.2559055118110236, "obj2": 0.6143039654417172}, {"determining": "( ( BR / FirstVNF_Mem ) * ( DDR * FirstVNF_Mem ) )", "choosing": "( ( DS + ( RRSe + RCSe ) ) - ( RRSe + RCSe ) )", "obj1": 0.4311023622047244, "obj2": 0.46905693513637853}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5141470649225344}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( PN + AMS ) )", "choosing": "Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) )", "obj1": 0.2559055118110236, "obj2": 0.6143039654417172}, {"determining": "( Max( ARS,PN ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( RRSe / RCSe ) )", "obj1": 0.21850393700787402, "obj2": 0.6558665098680888}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7401574803149606, "obj2": 0.22329344869173343}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( ( Const + ( ( FirstVNF_CPU * ACS ) / CRS ) ) + ( AMS / PN ) )", "choosing": "( ( ( ( MUR + CS ) * MLU ) + RRSe ) * Min( ( RCSe - ( RMSe / MLU ) ) ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "( ( ( ( ( FirstVNF_CPU - ARS ) - ( FirstVNF_RAM_Server + Max( MDR,Const ) ) ) - DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) / ( MLU / CS ) ) / ( ( ( CS * MUC ) + RMSe ) * ( MUM * MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "Max( Min( AMS ,( AMS * Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RMSe ) ,( RMSe - ( MLU / DS ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5064280269917265}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( BR * FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) )", "choosing": "Max( ( MLU - RCSe ),( RMSe - DS ) )", "obj1": 0.17125984251968504, "obj2": 0.7454476966048986}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( PN + AMS ) )", "choosing": "Max( ( ( DS * RCSe ) + ( MUM - CS ) ),( ( RMSe / RCSe ) / ( RRSe / MUR ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6530571733949192}, {"determining": "( Max( ( FirstVNF_Mem * Const ),Const ) + Max( Max( ACS,ACS ),FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( DS * RCSe ) + ( MUM - CS ) ),( ( RMSe / RCSe ) / ( RRSe / MUR ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6530571733949192}, {"determining": "( ( Const + ( Const / ( ( FirstVNF_RAM * ACS ) + ( FirstVNF_CPU_Server * ( Min( FirstVNF_CPU ,( ACS / FirstVNF_CPU ) ) * FirstVNF_Mem ) ) ) ) ) + ( FirstVNF_CPU_Server / MRS ) )", "choosing": "( Max( RRSe,( ( ( MLU * ( Min( MUC ,Min( RCSe ,MUC ) ) * MLU ) ) * ( ( ( RCSe + RCSe ) + ( RRSe + CS ) ) - MLU ) ) + RMSe ) ) * Min( ( ( ( MLU + ( MUR + CS ) ) / RMSe ) / CS ) ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( Max( ( ACS / ACS ),RRS ) - Max( ( ( FirstVNF_Mem * FirstVNF_RAM ) / FirstVNF_Mem_Server ),Max( Max( DDR,FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( Min( RRSe ,RMSe ) * Min( RCSe ,DS ) ),MLU ),( MUC / ( Max( RMSe,MLU ) + ( RRSe * Min( MUR ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Const ) - Min( FirstVNF_Mem_Server ,( AMS / ( Max( FirstVNF_RAM,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Max( Min( AMS ,Max( FirstVNF_CPU_Server,MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + MUC ) / Min( ( ( CS * MUM ) / ( ( MLU * ( Max( ( RCSe + RMSe ),Min( CS ,RRSe ) ) * MUR ) ) / Min( ( ( ( MLU * RRSe ) * DS ) + MUR ) ,MLU ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - BR ) / Min( PN ,MRS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * MDR ) ) + FirstVNF_CPU_Server ) * ( ( Max( ARS,( ( ( CRS - Const ) + PN ) - ( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM * DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUR ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_Mem_Server,DDR ) ) + AMS ) ) ,Min( ARS ,Max( BR,Min( ARS ,CRS ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - ( ( ( Min( ( MUC - MUR ) ,( Max( RCSe,CS ) + MLU ) ) + ( MUM / MUR ) ) - Max( MUM,Max( Min( ( CS - MUC ) ,( MUR + DS ) ),MUM ) ) ) / Max( MUR,( RMSe * Max( CS,MLU ) ) ) ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,ARS ) * Max( ( Min( ( ( MRS - CRS ) / ARS ) ,MDR ) / FirstVNF_RAM ),( AMS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( Max( Max( ( Min( MUM ,MUM ) + MUR ),RCSe ),Max( RMSe,( MUR * ( RMSe / Min( MUR ,DS ) ) ) ) ) ,RMSe ) + ( ( ( RCSe + MUC ) / RMSe ) - Min( ( CS + MUM ) ,Max( DS,( RMSe - Max( RMSe,( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( MRS,MDR ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( ( MUC - MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ARS ) + ( ARS - MDR ) ) * ( ( ACS + ARS ) / ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RCSe,RCSe ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) + ( CRS * CRS ) ),( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ( ( MDR / MDR ) - ( AMS / CRS ) ) - Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),( ACS / AMS ) ) ) )", "choosing": "( ( Max( ( CS + MLU ),RRSe ) + RCSe ) / ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( ( FirstVNF_RAM / AMS ) ,( PN * FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem + MDR ),( MRS / ARS ) ) ) ,( Min( Max( PN,BR ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( CS,RMSe ) * ( RRSe - MUM ) ) / ( ( RMSe - MLU ) / ( MUC / MUC ) ) ) - ( ( ( DS + RCSe ) - ( CS - RMSe ) ) - Min( ( CS / RCSe ) ,( RRSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( Max( RMSe,RCSe ) + ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,AMS ) - ( AMS / MRS ) )", "choosing": "( ( ( Max( ( MLU + MLU ),( MUC + RRSe ) ) * RRSe ) - MUR ) / Max( ( MLU + MLU ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( ( RCSe + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.6181102362204725, "obj2": 0.27406483727767256}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( FirstVNF_CPU_Server + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7381889763779528, "obj2": 0.22341037547162632}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( Min( ACS ,AMS ) * ( Const - MDR ) )", "choosing": "( Min( MUC ,MUM ) * ( RMSe * RMSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28863990552272434}, {"determining": "( ( Min( Max( ( FirstVNF_Mem - MDR ),Const ) ,( AMS / MRS ) ) + ( Max( MDR,CRS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) - ( Max( ( FirstVNF_RAM_Server - DDR ),( PN * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / RCSe ),( Min( Max( MUC,RMSe ) ,Min( MUM ,MUM ) ) + Min( Min( MUC ,CS ) ,Min( MUM ,DS ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.3879783991705009}, {"determining": "( ( BR / FirstVNF_Mem ) * ( ( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU / MUC ) / Max( MLU,MUR ) ) - ( RRSe + RCSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8384897555017627}, {"determining": "( ( ( ( PN - BR ) / ( DDR + Const ) ) * ( Min( MDR ,PN ) / ( AMS * BR ) ) ) - ( ( ( Const / ARS ) + ( ARS + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server - MRS ) * Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( DS * ( DS * RCSe ) ),( CS / ( RCSe - MLU ) ) )", "obj1": 0.610236220472441, "obj2": 0.3457241552359776}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( ( RRSe + ( DS + CS ) ) ,MUM ) ) )", "obj1": 0.9114173228346457, "obj2": 0.07736139665768202}, {"determining": "( Min( Max( FirstVNF_CPU,( FirstVNF_RAM * Min( BR ,FirstVNF_RAM_Server ) ) ) ,( ACS * FirstVNF_CPU_Server ) ) - ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - ( RRSe / RCSe ) ) / ( MUM + ( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( CS ,RRSe ) ) ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.045016815933056946}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( ( ( PN - BR ) / ( DDR + Const ) ) * ( Min( MDR ,PN ) / ( AMS * BR ) ) ) - ( ( ( Const / ARS ) + ( ARS + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server - MRS ) * Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / MLU ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.4419012283245196}, {"determining": "( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - MUR ) / ( MUR + CS ) )", "obj1": 0.9645669291338582, "obj2": 0.038455883404945955}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( ( ( Const / PN ) + ( Max( MDR,CRS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) - ( Max( ( FirstVNF_RAM_Server - DDR ),( PN * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / RCSe ),Max( ( ( ( CS + MUR ) * Max( MUM,MLU ) ) / ( ( MUM + MUM ) + Min( RCSe ,CS ) ) ),( Min( Max( MUC,RMSe ) ,Min( MUM ,MUM ) ) + Min( Min( MUC ,CS ) ,Min( MUM ,DS ) ) ) ) )", "obj1": 0.5098425196850394, "obj2": 0.4193818920125242}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( ( FirstVNF_Mem / ACS ) / FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,DS ) + ( RRSe + ( RMSe + CS ) ) )", "obj1": 0.9094488188976378, "obj2": 0.09668209219930675}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "( ( RRSe - ( MUC - MUC ) ) / Min( MUM ,( MUM / MUR ) ) )", "obj1": 0.7854330708661418, "obj2": 0.18986516741929743}, {"determining": "( Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( DS - RMSe ) ,Min( Max( ( MLU * MUM ),( RRSe * MUC ) ) ,MUM ) )", "obj1": 0.3405511811023622, "obj2": 0.5543402629427967}, {"determining": "( ( ( BR * FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) ) + Max( MDR,RRS ) )", "choosing": "( Max( MUC,RMSe ) - ( DS / RCSe ) )", "obj1": 0.14763779527559054, "obj2": 0.7562318782661233}, {"determining": "( ( BR * DDR ) * ( PN + AMS ) )", "choosing": "Min( ( ( ( CS / DS ) - RCSe ) - CS ) ,( DS / DS ) )", "obj1": 0.1732283464566929, "obj2": 0.7053855601870657}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU * RRSe ) - RMSe ) * Min( Min( RCSe ,RMSe ) ,MUC ) )", "obj1": 0.7559055118110236, "obj2": 0.21283602944275518}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Const * ACS ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.35039370078740156, "obj2": 0.5394342506977349}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MLU * MLU ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5213052828230235}, {"determining": "( Max( ARS,PN ) / Min( ( Max( ARS,PN ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - MUM ) / ( DS + MUC ) )", "obj1": 0.20669291338582677, "obj2": 0.6695519648824936}, {"determining": "( Min( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) / ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5617107759992483}, {"determining": "( ( Min( Max( FirstVNF_CPU_Server,Const ) ,( AMS / MRS ) ) + ( Max( MDR,CRS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) - ( Max( ( FirstVNF_RAM_Server - DDR ),( PN * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( ( CS + MUR ) * Max( MUM,MLU ) ) / ( ( MUM + MUM ) + Min( RCSe ,CS ) ) ),( Min( Max( MUC,RMSe ) ,Min( MUM ,MUM ) ) + Min( Min( MUC ,CS ) ,Min( MUM ,DS ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.39666384205421606}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.5216535433070866, "obj2": 0.4023352424008532}, {"determining": "( Max( PN,ACS ) * ( CRS - CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.24606299212598426, "obj2": 0.6203592920139329}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "Max( ( Const - RRS ),( PN - ACS ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.38779527559055116, "obj2": 0.499828461302263}, {"determining": "( FirstVNF_CPU / ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Min( CS ,RRSe ) ) / RRSe ) * ( RMSe / Min( CS ,RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5850972969742942}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,( MUM / MUR ) ) / ( RRSe - DS ) )", "obj1": 0.765748031496063, "obj2": 0.2029349246983889}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - MLU ) ,MLU ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5211693317374565}, {"determining": "Max( DDR,Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( RMSe / RRSe ) ,Min( RRSe ,DS ) )", "obj1": 0.4330708661417323, "obj2": 0.46390875276671195}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Min( RCSe ,MUM ) ) ) - ( CS * Min( RCSe ,MUM ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6267271432070682}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( Min( Min( DS ,MUR ) ,RRSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2736220472440945, "obj2": 0.5911640431871289}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) / ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( ( ( CS - MLU ) + Min( CS ,RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5807468154548092}, {"determining": "( Max( ( FirstVNF_Mem * Const ),Const ) + Max( Max( ACS,ACS ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) )", "obj1": 0.2559055118110236, "obj2": 0.6143039654417172}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,( MUM / MUR ) ) / ( RRSe - DS ) )", "obj1": 0.765748031496063, "obj2": 0.2029349246983889}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( CRS / Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( CS / RRSe ) )", "obj1": 0.3169291338582677, "obj2": 0.5650231172842024}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,( MUM / MUR ) ) / ( RRSe - DS ) )", "obj1": 0.7854330708661418, "obj2": 0.18986516741929743}, {"determining": "( PN * Min( FirstVNF_RAM ,Const ) )", "choosing": "( RCSe / ( ( CS + MUR ) + MUR ) )", "obj1": 0.22440944881889763, "obj2": 0.6488264624013984}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.44881889763779526, "obj2": 0.45827198200182606}, {"determining": "Max( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem_Server ,MDR ) ),Min( BR ,Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( MUR * MLU ) + ( MUM / MUC ) ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4717310901545544}, {"determining": "( Min( Const ,( ( CRS + ( PN - FirstVNF_CPU ) ) / ( RRS - ( DDR - ACS ) ) ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RMSe ) ) ) / MLU ) ),Max( RMSe,Min( MUM ,RMSe ) ) ) + RRSe ) * Min( MUR ,RMSe ) )", "obj1": 0.4566929133858268, "obj2": 0.4538867342109494}, {"determining": "( ( Max( ( CRS * FirstVNF_Mem_Server ),( RRS - FirstVNF_CPU ) ) + Max( ( MDR - Const ),( MRS + FirstVNF_RAM ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( ( MUM * MUC ) ,RCSe ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 0.5216535433070866, "obj2": 0.4023352424008532}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - Const ) )", "choosing": "( ( Max( ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7760240083101991}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "( ( MUM + Min( MUM ,RMSe ) ) / ( RRSe - RMSe ) )", "obj1": 0.7401574803149606, "obj2": 0.22329344869173343}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( FirstVNF_Mem * ACS ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( MUM ,MUM ) ) )", "obj1": 0.17913385826771652, "obj2": 0.7004433504087433}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.2047244094488189, "obj2": 0.6756714124274891}, {"determining": "( ( BR / FirstVNF_Mem ) * ( DDR * FirstVNF_Mem ) )", "choosing": "( ( DS + ( RRSe + RCSe ) ) - ( RRSe + RCSe ) )", "obj1": 0.4311023622047244, "obj2": 0.46905693513637853}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / CRS )", "choosing": "( ( DS / ( RMSe / Min( CS ,RRSe ) ) ) * ( RMSe / Min( CS ,RRSe ) ) )", "obj1": 0.44881889763779526, "obj2": 0.45827198200182606}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( ( ( ( FirstVNF_CPU + PN ) + MRS ) + BR ) + FirstVNF_CPU ) - ( AMS + ( FirstVNF_Mem - BR ) ) )", "choosing": "( Min( RMSe ,MUC ) / ( MUM + Min( DS ,RMSe ) ) )", "obj1": 0.7401574803149606, "obj2": 0.22329344869173343}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( PN + AMS ) )", "choosing": "Min( ( ( DS - RCSe ) - CS ) ,( DS / DS ) )", "obj1": 0.2559055118110236, "obj2": 0.6143039654417172}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.26968503937007876, "obj2": 0.5932332930721679}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5141470649225344}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5141470649225344}, {"determining": "Max( ( AMS * ( Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - ( CS * Max( ( DS + DS ),( MLU - RCSe ) ) ) ) ,MLU ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.5010740880026119}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.26968503937007876, "obj2": 0.5932332930721679}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "Max( Min( AMS ,( AMS * Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RMSe ) ,( RMSe - ( MLU / DS ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5064280269917265}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( Const + ( ( FirstVNF_CPU * ACS ) / CRS ) ) + ( AMS / PN ) )", "choosing": "( ( ( ( MUR + CS ) * MLU ) + RRSe ) * Min( ( RCSe - ( RMSe / MLU ) ) ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( Min( AMS ,( Min( ARS ,( Max( ( FirstVNF_RAM_Server * BR ),FirstVNF_CPU ) * RRS ) ) + FirstVNF_Mem ) ) / Max( Min( ( ACS * PN ) ,PN ),Min( MRS ,( CRS * ( RRS * Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( DS + MUC ) + Min( Min( ( MLU * ( RCSe / ( MUR * MUC ) ) ) ,Min( MUM ,MUR ) ) ,Max( DS,DS ) ) ) ) / ( RRSe - ( ( ( RRSe * RCSe ) * ( ( MUR / Max( RMSe,MUM ) ) / RMSe ) ) - ( DS - ( RCSe * MUM ) ) ) ) )", "obj1": 0.17716535433070865, "obj2": 0.7029347830290067}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - ( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7772108232474204}, {"determining": "Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - PN ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - PN ) * Min( PN ,( RRS + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( Max( MLU,CS ) / Min( CS ,MUC ) ),RRSe ) + MUR ) / ( Max( ( Max( MLU,CS ) / Min( CS ,MUC ) ),RRSe ) + MUR ) )", "obj1": 0.17716535433070865, "obj2": 0.7029347830290067}, {"determining": "( ( Const + ( ( CRS + ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( MLU * Min( RMSe ,RCSe ) ) ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "( ( ( ( ( FirstVNF_CPU - ARS ) - ( FirstVNF_RAM_Server + Max( MDR,Const ) ) ) - DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) / ( MLU / CS ) ) / ( ( ( CS * MUC ) + RMSe ) * ( MUM * MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_RAM ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Max( ARS,ACS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS / ACS ),RRS ) - Max( ( ( FirstVNF_Mem * FirstVNF_RAM ) / FirstVNF_Mem_Server ),Max( Max( DDR,FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( Min( RRSe ,RMSe ) * Min( RCSe ,DS ) ),MLU ),( MUC / ( Max( RMSe,MLU ) + ( RRSe * Min( MUR ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Const ) - Min( FirstVNF_Mem_Server ,( AMS / ( Max( FirstVNF_RAM,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Max( Min( AMS ,Max( FirstVNF_CPU_Server,MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + MUC ) / Min( ( ( CS * MUM ) / ( ( MLU * ( Max( ( RCSe + RMSe ),Min( CS ,RRSe ) ) * MUR ) ) / Min( ( ( ( MLU * RRSe ) * DS ) + MUR ) ,MLU ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - BR ) / Min( PN ,MRS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * MDR ) ) + FirstVNF_CPU_Server ) * ( ( Max( ARS,( ( ( CRS - Const ) + PN ) - ( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM * DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUR ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_Mem_Server,DDR ) ) + AMS ) ) ,Min( ARS ,Max( BR,Min( ARS ,CRS ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - ( ( ( Min( ( MUC - MUR ) ,( Max( RCSe,CS ) + MLU ) ) + ( MUM / MUR ) ) - Max( MUM,Max( Min( ( CS - MUC ) ,( MUR + DS ) ),MUM ) ) ) / Max( MUR,( RMSe * Max( CS,MLU ) ) ) ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,ARS ) * Max( ( Min( ( ( MRS - CRS ) / ARS ) ,MDR ) / FirstVNF_RAM ),( AMS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( Max( Max( ( Min( MUM ,MUM ) + MUR ),RCSe ),Max( RMSe,( MUR * ( RMSe / Min( MUR ,DS ) ) ) ) ) ,RMSe ) + ( ( ( RCSe + MUC ) / RMSe ) - Min( ( CS + MUM ) ,Max( DS,( RMSe - Max( RMSe,( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ) )", "choosing": "( Min( Max( Min( RRSe ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) ,( RRSe / RCSe ) ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( Max( RMSe,RCSe ) + ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( ( ( PN - BR ) / ( DDR + Const ) ) * ( Min( MDR ,PN ) / ( AMS * BR ) ) ) - ( ( ( Const / ARS ) + ( ARS + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server - MRS ) * Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / MLU ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.4419012283245196}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + DDR ) ) ) ) )", "choosing": "( ( CS / MUR ) - ( CS * ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( BR / FirstVNF_Mem ) * ( ( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU / MUC ) / Max( MLU,MUR ) ) - ( RRSe + RCSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8384897555017627}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( MRS + FirstVNF_Mem_Server ) - ( ACS / ARS ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + DS ) - Min( MUR ,MUR ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.781496062992126, "obj2": 0.18641728201631533}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + DDR ) + ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - MUR ) / ( MUR + CS ) )", "obj1": 0.9645669291338582, "obj2": 0.038455883404945955}, {"determining": "( ( Min( BR ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.05228962035977104}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( ( RRSe + ( DS + CS ) ) ,MUM ) ) )", "obj1": 0.9114173228346457, "obj2": 0.07736139665768202}, {"determining": "( Max( ARS,PN ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - FirstVNF_Mem ) ) )", "choosing": "( Min( RMSe ,CS ) / ( RCSe * CS ) )", "obj1": 0.9035433070866141, "obj2": 0.08970594058509296}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Const * ACS ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.35039370078740156, "obj2": 0.5394342506977349}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "Min( PN ,( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * Min( MUM ,DS ) ) - RMSe ) / ( MLU + ( MLU / MUC ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5513241561227299}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ( BR * FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) ) + Max( MDR,RRS ) )", "choosing": "( Max( MUC,RMSe ) - ( DS / RCSe ) )", "obj1": 0.14763779527559054, "obj2": 0.7562318782661233}, {"determining": "( Min( Max( FirstVNF_CPU,( FirstVNF_RAM * Min( BR ,FirstVNF_RAM_Server ) ) ) ,( ACS * FirstVNF_CPU_Server ) ) - ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - ( RRSe / RCSe ) ) / ( MUM + ( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( CS ,RRSe ) ) ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.045016815933056946}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MLU * MLU ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5213052828230235}, {"determining": "( Max( ARS,PN ) / Min( ( Max( ARS,PN ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - MUM ) / ( DS + MUC ) )", "obj1": 0.20669291338582677, "obj2": 0.6695519648824936}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "Max( ( Const - RRS ),( PN - ACS ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.38779527559055116, "obj2": 0.499828461302263}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - MLU ) ,MLU ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5211693317374565}, {"determining": "( FirstVNF_CPU / ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Min( CS ,RRSe ) ) / RRSe ) * ( RMSe / Min( CS ,RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5850972969742942}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "Max( DDR,Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( RMSe / RRSe ) ,Min( RRSe ,DS ) )", "obj1": 0.4330708661417323, "obj2": 0.46390875276671195}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( Min( Min( DS ,MUR ) ,RRSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2736220472440945, "obj2": 0.5911640431871289}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) / ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( ( ( CS - MLU ) + Min( CS ,RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5807468154548092}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( FirstVNF_Mem * ACS ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( MUM ,MUM ) ) )", "obj1": 0.17913385826771652, "obj2": 0.7004433504087433}, {"determining": "( Min( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) / ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5617107759992483}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( CRS / Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( CS / RRSe ) )", "obj1": 0.3169291338582677, "obj2": 0.5650231172842024}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.44881889763779526, "obj2": 0.45827198200182606}, {"determining": "Max( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem_Server ,MDR ) ),Min( BR ,Min( ( RRS / MDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( MUR * MLU ) + ( MUM / MUC ) ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4717310901545544}, {"determining": "( Min( Const ,( ( CRS + ( PN - FirstVNF_CPU ) ) / ( RRS - ( DDR - ACS ) ) ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RMSe ) ) ) / MLU ) ),Max( RMSe,Min( MUM ,RMSe ) ) ) + RRSe ) * Min( MUR ,RMSe ) )", "obj1": 0.4566929133858268, "obj2": 0.4538867342109494}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - Const ) )", "choosing": "( ( Max( ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7760240083101991}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( MUR / RCSe ),( Max( DS,RMSe ) + ( CS / MUM ) ) ) + MLU ) / ( CS - DS ) )", "obj1": 0.2677165354330709, "obj2": 0.5979138830771584}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.2047244094488189, "obj2": 0.6756714124274891}, {"determining": "( ( BR / FirstVNF_Mem ) * ( DDR * FirstVNF_Mem ) )", "choosing": "( ( DS + ( RRSe + RCSe ) ) - ( RRSe + RCSe ) )", "obj1": 0.4311023622047244, "obj2": 0.46905693513637853}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / CRS )", "choosing": "( ( DS / ( RMSe / Min( CS ,RRSe ) ) ) * ( RMSe / Min( CS ,RRSe ) ) )", "obj1": 0.44881889763779526, "obj2": 0.45827198200182606}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "Max( ( AMS * ( Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - ( CS * Max( ( DS + DS ),( MLU - RCSe ) ) ) ) ,MLU ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.5010740880026119}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( AMS + MDR ) )", "choosing": "Min( ( RRSe / RCSe ) ,Min( DS ,MUM ) )", "obj1": 0.45866141732283466, "obj2": 0.4496066832853467}, {"determining": "Max( Min( AMS ,( AMS * Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RMSe ) ,( RMSe - ( MLU / DS ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5064280269917265}, {"determining": "( MDR / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( RCSe * MUR ) ,MUR ) - CS ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.26968503937007876, "obj2": 0.5932332930721679}, {"determining": "( ( Const + ( ( FirstVNF_CPU * ACS ) / CRS ) ) + ( AMS / PN ) )", "choosing": "( ( ( ( MUR + CS ) * MLU ) + RRSe ) * Min( ( RCSe - ( RMSe / MLU ) ) ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( ( ( ( FirstVNF_CPU - ARS ) - ( FirstVNF_RAM_Server + Max( MDR,Const ) ) ) - DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) / ( MLU / CS ) ) / ( ( ( CS * MUC ) + RMSe ) * ( MUM * MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RCSe ) ) ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.26968503937007876, "obj2": 0.5932332930721679}, {"determining": "Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - ( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7772108232474204}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * Min( Min( RMSe ,MUM ) ,DS ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7772108232474204}, {"determining": "( Max( AMS,AMS ) - ( AMS / MRS ) )", "choosing": "( ( ( Max( ( MLU + MLU ),( MUC + RRSe ) ) * RRSe ) - MUR ) / Max( ( MLU + MLU ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_RAM ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Max( ARS,ACS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS / ACS ),RRS ) - Max( ( ( FirstVNF_Mem * FirstVNF_RAM ) / FirstVNF_Mem_Server ),Max( Max( DDR,FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( Min( RRSe ,RMSe ) * Min( RCSe ,DS ) ),MLU ),( MUC / ( Max( RMSe,MLU ) + ( RRSe * Min( MUR ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Const ) - Min( FirstVNF_Mem_Server ,( AMS / ( Max( FirstVNF_RAM,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Max( Min( AMS ,Max( FirstVNF_CPU_Server,MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + MUC ) / Min( ( ( CS * MUM ) / ( ( MLU * ( Max( ( RCSe + RMSe ),Min( CS ,RRSe ) ) * MUR ) ) / Min( ( ( ( MLU * RRSe ) * DS ) + MUR ) ,MLU ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - BR ) / Min( PN ,MRS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * MDR ) ) + FirstVNF_CPU_Server ) * ( ( Max( ARS,( ( ( CRS - Const ) + PN ) - ( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM * DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUR ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_Mem_Server,DDR ) ) + AMS ) ) ,Min( ARS ,Max( BR,Min( ARS ,CRS ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - ( ( ( Min( ( MUC - MUR ) ,( Max( RCSe,CS ) + MLU ) ) + ( MUM / MUR ) ) - Max( MUM,Max( Min( ( CS - MUC ) ,( MUR + DS ) ),MUM ) ) ) / Max( MUR,( RMSe * Max( CS,MLU ) ) ) ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,ARS ) * Max( ( Min( ( ( MRS - CRS ) / ARS ) ,MDR ) / FirstVNF_RAM ),( AMS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( Max( Max( ( Min( MUM ,MUM ) + MUR ),RCSe ),Max( RMSe,( MUR * ( RMSe / Min( MUR ,DS ) ) ) ) ) ,RMSe ) + ( ( ( RCSe + MUC ) / RMSe ) - Min( ( CS + MUM ) ,Max( DS,( RMSe - Max( RMSe,( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,( ( ( ( PN - ARS ) / FirstVNF_RAM ) * ( ( ARS + Min( FirstVNF_CPU ,PN ) ) - FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem,Min( ( ACS - FirstVNF_Mem ) ,Max( Min( DDR ,AMS ),PN ) ) ) ) ) / ( FirstVNF_Mem_Server * CRS ) ) / Max( MRS,RRS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) * ( Max( CS,CS ) + ( RMSe - ( ( Max( RCSe,RCSe ) / ( ( DS - MUM ) / ( CS / RCSe ) ) ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * ( Min( CS ,RRSe ) / RMSe ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( ( Const - CRS ) - Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Min( MUC ,RCSe ) ) - ( ( ( MUR * MUM ) / Min( Min( RRSe ,( Max( MUM,CS ) - MUM ) ) ,( MLU - Min( ( ( RCSe - MUC ) - Min( MLU ,MUR ) ) ,( MLU - RRSe ) ) ) ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ) )", "choosing": "( Min( Max( Min( RRSe ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) ,( RRSe / RCSe ) ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( BR / FirstVNF_Mem ) * ( ( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU / MUC ) / Max( MLU,MUR ) ) - ( RRSe + RCSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8384897555017627}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - ( Max( DS,RMSe ) + ( CS / MUR ) ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.7755905511811023, "obj2": 0.1613373071357457}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server + DDR ) ) ) ) )", "choosing": "( ( CS / MUR ) - ( CS * ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( Min( BR ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,RRSe ) )", "obj1": 0.9350393700787402, "obj2": 0.05228962035977104}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( ( RRSe + ( DS + CS ) ) ,MUM ) ) )", "obj1": 0.9114173228346457, "obj2": 0.07736139665768202}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Const * ACS ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.35039370078740156, "obj2": 0.5394342506977349}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) + BR ) - Min( FirstVNF_RAM ,( ARS / ACS ) ) )", "choosing": "( Min( ( CS / ( ( MUM - MUR ) / ( DS + MUC ) ) ) ,Min( RMSe ,RCSe ) ) / ( DS + MUC ) )", "obj1": 0.8996062992125984, "obj2": 0.09657874736243155}, {"determining": "Min( PN ,( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * Min( MUM ,DS ) ) - RMSe ) / ( MLU + ( MLU / MUC ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5513241561227299}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MLU * MLU ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5213052828230235}, {"determining": "( Max( ARS,PN ) / Min( ( Max( ARS,PN ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - MUM ) / ( DS + MUC ) )", "obj1": 0.20669291338582677, "obj2": 0.6695519648824936}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( Max( ACS,MRS ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( Max( RMSe,( Max( RMSe,CS ) * RMSe ) ) * RMSe ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7487781315779158}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( CRS / Max( ( MRS - RRS ),Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( CS / RRSe ) )", "obj1": 0.3169291338582677, "obj2": 0.5650231172842024}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( FirstVNF_Mem - ( ACS / ARS ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - Min( MUR ,MUR ) ) ) * MUR ) ) / Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) )", "obj1": 0.9035433070866141, "obj2": 0.08186506538399121}, {"determining": "Max( ( Const - RRS ),( PN - ACS ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.38779527559055116, "obj2": 0.499828461302263}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - MLU ) ,MLU ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5211693317374565}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( Min( Min( DS ,MUR ) ,RRSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2736220472440945, "obj2": 0.5911640431871289}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( FirstVNF_CPU / ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Min( CS ,RRSe ) ) / RRSe ) * ( RMSe / Min( CS ,RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5850972969742942}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( FirstVNF_Mem * ACS ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( MUM ,MUM ) ) )", "obj1": 0.17913385826771652, "obj2": 0.7004433504087433}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) / ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( ( ( CS - MLU ) + Min( CS ,RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5807468154548092}, {"determining": "( ( ( Const - CRS ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) - Min( RRSe ,MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.690902886169831}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Max( Max( FirstVNF_RAM,ARS ),( FirstVNF_CPU_Server - PN ) ) / FirstVNF_RAM_Server )", "choosing": "( Max( ( ( ( DS + RMSe ) + MUM ) / MUR ),( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.32086614173228345, "obj2": 0.5513461725180417}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - Const ) )", "choosing": "( ( Max( ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7760240083101991}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( MUR / RCSe ),( Max( DS,RMSe ) + ( CS / MUM ) ) ) + MLU ) / ( CS - DS ) )", "obj1": 0.2677165354330709, "obj2": 0.5979138830771584}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.2047244094488189, "obj2": 0.6756714124274891}, {"determining": "( MDR / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( RCSe * MUR ) ,MUR ) - CS ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "Max( ( AMS * ( Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - ( CS * Max( ( DS + DS ),( MLU - RCSe ) ) ) ) ,MLU ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.5010740880026119}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * Min( ( ( CS - MLU ) + Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) ) ,DS ) ) - RMSe ) / ( MLU + MUM ) )", "obj1": 0.28937007874015747, "obj2": 0.5827701161845353}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "Max( Min( AMS ,( AMS * Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RMSe ) ,( RMSe - ( MLU / DS ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5064280269917265}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.26968503937007876, "obj2": 0.5932332930721679}, {"determining": "( ( Const + ( ( FirstVNF_CPU * ACS ) / CRS ) ) + ( AMS / PN ) )", "choosing": "( ( ( ( MUR + CS ) * MLU ) + RRSe ) * Min( ( RCSe - ( RMSe / MLU ) ) ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RCSe ) ) ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.26968503937007876, "obj2": 0.5932332930721679}, {"determining": "( ( ( ( ( FirstVNF_CPU - ARS ) - ( FirstVNF_RAM_Server + Max( MDR,Const ) ) ) - DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) / ( MLU / CS ) ) / ( ( ( CS * MUC ) + RMSe ) * ( MUM * MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( Max( Max( FirstVNF_RAM,ARS ),( FirstVNF_CPU_Server - PN ) ) / FirstVNF_RAM_Server )", "choosing": "( Max( ( ( ( DS + RMSe ) + MUM ) / MUR ),( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.32086614173228345, "obj2": 0.5513461725180417}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - ( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7772108232474204}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * Min( Min( RMSe ,MUM ) ,DS ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7772108232474204}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( Max( RMSe,RCSe ) + ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,AMS ) - ( AMS / MRS ) )", "choosing": "( ( ( Max( ( MLU + MLU ),( MUC + RRSe ) ) * RRSe ) - MUR ) / Max( ( MLU + MLU ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_RAM ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Max( ARS,ACS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS / ACS ),RRS ) - Max( ( ( FirstVNF_Mem * FirstVNF_RAM ) / FirstVNF_Mem_Server ),Max( Max( DDR,FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( Min( RRSe ,RMSe ) * Min( RCSe ,DS ) ),MLU ),( MUC / ( Max( RMSe,MLU ) + ( RRSe * Min( MUR ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Const ) - Min( FirstVNF_Mem_Server ,( AMS / ( Max( FirstVNF_RAM,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Max( Min( AMS ,Max( FirstVNF_CPU_Server,MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + MUC ) / Min( ( ( CS * MUM ) / ( ( MLU * ( Max( ( RCSe + RMSe ),Min( CS ,RRSe ) ) * MUR ) ) / Min( ( ( ( MLU * RRSe ) * DS ) + MUR ) ,MLU ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - BR ) / Min( PN ,MRS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * MDR ) ) + FirstVNF_CPU_Server ) * ( ( Max( ARS,( ( ( CRS - Const ) + PN ) - ( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM * DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUR ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_Mem_Server,DDR ) ) + AMS ) ) ,Min( ARS ,Max( BR,Min( ARS ,CRS ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - ( ( ( Min( ( MUC - MUR ) ,( Max( RCSe,CS ) + MLU ) ) + ( MUM / MUR ) ) - Max( MUM,Max( Min( ( CS - MUC ) ,( MUR + DS ) ),MUM ) ) ) / Max( MUR,( RMSe * Max( CS,MLU ) ) ) ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,ARS ) * Max( ( Min( ( ( MRS - CRS ) / ARS ) ,MDR ) / FirstVNF_RAM ),( AMS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( Max( Max( ( Min( MUM ,MUM ) + MUR ),RCSe ),Max( RMSe,( MUR * ( RMSe / Min( MUR ,DS ) ) ) ) ) ,RMSe ) + ( ( ( RCSe + MUC ) / RMSe ) - Min( ( CS + MUM ) ,Max( DS,( RMSe - Max( RMSe,( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,( ( ( ( PN - ARS ) / FirstVNF_RAM ) * ( ( ARS + Min( FirstVNF_CPU ,PN ) ) - FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem,Min( ( ACS - FirstVNF_Mem ) ,Max( Min( DDR ,AMS ),PN ) ) ) ) ) / ( FirstVNF_Mem_Server * CRS ) ) / Max( MRS,RRS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) * ( Max( CS,CS ) + ( RMSe - ( ( Max( RCSe,RCSe ) / ( ( DS - MUM ) / ( CS / RCSe ) ) ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * ( Min( CS ,RRSe ) / RMSe ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - CRS ) - Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Min( MUC ,RCSe ) ) - ( ( ( MUR * MUM ) / Min( Min( RRSe ,( Max( MUM,CS ) - MUM ) ) ,( MLU - Min( ( ( RCSe - MUC ) - Min( MLU ,MUR ) ) ,( MLU - RRSe ) ) ) ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( MUR * Min( MUM ,Max( MLU,MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8969432961436017}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - ( Max( DS,RMSe ) + ( CS / MUR ) ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.7755905511811023, "obj2": 0.1613373071357457}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( BR / FirstVNF_Mem ) * ( ( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU / MUC ) / Max( MLU,MUR ) ) - ( RRSe + RCSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8384897555017627}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( CRS - Const ) + Min( ARS ,Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( MUM * MUR ) / Min( Min( RRSe ,MUM ) ,( MUC - Min( ( MUM - Min( MLU ,MUR ) ) ,CS ) ) ) ) ,RRSe ) - Max( ( DS / ( RMSe * MLU ) ),CS ) )", "obj1": 0.9330708661417323, "obj2": 0.05091364413316679}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Const * ACS ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.35039370078740156, "obj2": 0.5394342506977349}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( ( RRSe + ( DS + CS ) ) ,MUM ) ) )", "obj1": 0.9114173228346457, "obj2": 0.07736139665768202}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) + BR ) - Min( FirstVNF_RAM ,( ARS / ACS ) ) )", "choosing": "( Min( ( CS / ( ( MUM - MUR ) / ( DS + MUC ) ) ) ,Min( RMSe ,RCSe ) ) / ( DS + MUC ) )", "obj1": 0.8996062992125984, "obj2": 0.09657874736243155}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MLU * MLU ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5213052828230235}, {"determining": "( Max( ARS,PN ) / Min( ( Max( ARS,PN ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - MUM ) / ( DS + MUC ) )", "obj1": 0.20669291338582677, "obj2": 0.6695519648824936}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( FirstVNF_Mem - ( ACS / ARS ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - Min( MUR ,MUR ) ) ) * MUR ) ) / Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) )", "obj1": 0.9035433070866141, "obj2": 0.08186506538399121}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - MLU ) ,MLU ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5211693317374565}, {"determining": "( FirstVNF_CPU / ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Min( CS ,RRSe ) ) / RRSe ) * ( RMSe / Min( CS ,RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5850972969742942}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Max( Max( ( FirstVNF_Mem * CRS ),( ( FirstVNF_Mem - ( FirstVNF_CPU_Server / MRS ) ) - PN ) ),( DDR - Const ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3937007874015748, "obj2": 0.49894387925286926}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( FirstVNF_Mem * ACS ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( MUM ,MUM ) ) )", "obj1": 0.17913385826771652, "obj2": 0.7004433504087433}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) / ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( ( ( CS - MLU ) + Min( CS ,RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5807468154548092}, {"determining": "( ( ( Const - CRS ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) - Min( RRSe ,MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.690902886169831}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - Const ) )", "choosing": "( ( Max( ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7760240083101991}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.2047244094488189, "obj2": 0.6756714124274891}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "Max( ( AMS * ( Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - ( CS * Max( ( DS + DS ),( MLU - RCSe ) ) ) ) ,MLU ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.5010740880026119}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * Min( ( ( CS - MLU ) + Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) ) ,DS ) ) - RMSe ) / ( MLU + MUM ) )", "obj1": 0.28937007874015747, "obj2": 0.5827701161845353}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "Max( ( Const - RRS ),( PN - ACS ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.38779527559055116, "obj2": 0.499828461302263}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( Max( ( FirstVNF_Mem * CRS ),( ( ARS - ( FirstVNF_CPU_Server / MRS ) ) - PN ) ),( DDR - Const ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( MLU,( MLU / RMSe ) ) / ( Max( MUR,( MUM / RCSe ) ) * RCSe ) ) ,MUR ) / ( RRSe - MUC ) ) / Min( Min( ( ( Max( DS,RCSe ) + ( DS + RMSe ) ) - ( ( Max( ( MLU * RMSe ),MUM ) / ( MLU * ( MUC * RMSe ) ) ) * RRSe ) ) ,MUC ) ,Max( MUC,RCSe ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6446279945232679}, {"determining": "Max( Min( AMS ,( AMS * Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RMSe ) ,( RMSe - ( MLU / DS ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5064280269917265}, {"determining": "( MDR / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( RCSe * MUR ) ,MUR ) - CS ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( ( Const + ( ( FirstVNF_CPU * ACS ) / CRS ) ) + ( AMS / PN ) )", "choosing": "( ( ( ( MUR + CS ) * MLU ) + RRSe ) * Min( ( RCSe - ( RMSe / MLU ) ) ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "( ( ( ( ( FirstVNF_CPU - ARS ) - ( FirstVNF_RAM_Server + Max( MDR,Const ) ) ) - DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) / ( MLU / CS ) ) / ( ( ( CS * MUC ) + RMSe ) * ( MUM * MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RCSe ) ) ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - ( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7772108232474204}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * Min( Min( RMSe ,MUM ) ,DS ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7772108232474204}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ) )", "choosing": "( Min( Max( Min( RRSe ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) ,( RRSe / RCSe ) ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( Max( RMSe,RCSe ) + ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,AMS ) - ( AMS / MRS ) )", "choosing": "( ( ( Max( ( MLU + MLU ),( MUC + RRSe ) ) * RRSe ) - MUR ) / Max( ( MLU + MLU ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_RAM ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Max( ARS,ACS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS / ACS ),RRS ) - Max( ( ( FirstVNF_Mem * FirstVNF_RAM ) / FirstVNF_Mem_Server ),Max( Max( DDR,FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( Min( RRSe ,RMSe ) * Min( RCSe ,DS ) ),MLU ),( MUC / ( Max( RMSe,MLU ) + ( RRSe * Min( MUR ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Const ) - Min( FirstVNF_Mem_Server ,( AMS / ( Max( FirstVNF_RAM,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Max( Min( AMS ,Max( FirstVNF_CPU_Server,MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + MUC ) / Min( ( ( CS * MUM ) / ( ( MLU * ( Max( ( RCSe + RMSe ),Min( CS ,RRSe ) ) * MUR ) ) / Min( ( ( ( MLU * RRSe ) * DS ) + MUR ) ,MLU ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - BR ) / Min( PN ,MRS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * MDR ) ) + FirstVNF_CPU_Server ) * ( ( Max( ARS,( ( ( CRS - Const ) + PN ) - ( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM * DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUR ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_Mem_Server,DDR ) ) + AMS ) ) ,Min( ARS ,Max( BR,Min( ARS ,CRS ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - ( ( ( Min( ( MUC - MUR ) ,( Max( RCSe,CS ) + MLU ) ) + ( MUM / MUR ) ) - Max( MUM,Max( Min( ( CS - MUC ) ,( MUR + DS ) ),MUM ) ) ) / Max( MUR,( RMSe * Max( CS,MLU ) ) ) ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,ARS ) * Max( ( Min( ( ( MRS - CRS ) / ARS ) ,MDR ) / FirstVNF_RAM ),( AMS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( Max( Max( ( Min( MUM ,MUM ) + MUR ),RCSe ),Max( RMSe,( MUR * ( RMSe / Min( MUR ,DS ) ) ) ) ) ,RMSe ) + ( ( ( RCSe + MUC ) / RMSe ) - Min( ( CS + MUM ) ,Max( DS,( RMSe - Max( RMSe,( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,( ( ( ( PN - ARS ) / FirstVNF_RAM ) * ( ( ARS + Min( FirstVNF_CPU ,PN ) ) - FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem,Min( ( ACS - FirstVNF_Mem ) ,Max( Min( DDR ,AMS ),PN ) ) ) ) ) / ( FirstVNF_Mem_Server * CRS ) ) / Max( MRS,RRS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) * ( Max( CS,CS ) + ( RMSe - ( ( Max( RCSe,RCSe ) / ( ( DS - MUM ) / ( CS / RCSe ) ) ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * ( Min( CS ,RRSe ) / RMSe ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / RCSe ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( Min( MDR ,( ( CRS / ( FirstVNF_RAM / PN ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe + ( MUM / RRSe ) ) + MUM ) / RMSe ) / ( RRSe - ( MUR - DS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8892519718583998}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - ( Max( DS,RMSe ) + ( CS / MUR ) ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.7755905511811023, "obj2": 0.1613373071357457}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( BR / FirstVNF_Mem ) * ( ( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU / MUC ) / Max( MLU,MUR ) ) - ( RRSe + RCSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8384897555017627}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Const * ACS ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.35039370078740156, "obj2": 0.5394342506977349}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) + BR ) - Min( FirstVNF_RAM ,( ARS / ACS ) ) )", "choosing": "( Min( ( CS / ( ( MUM - MUR ) / ( DS + MUC ) ) ) ,Min( RMSe ,RCSe ) ) / ( DS + MUC ) )", "obj1": 0.8996062992125984, "obj2": 0.09657874736243155}, {"determining": "( ( ARS / CRS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RMSe / ( CS - Max( ( RRSe + MUM ),RCSe ) ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029475}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( ( CRS - Const ) + Min( ARS ,Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( MUM * MUR ) / Min( Min( RRSe ,MUM ) ,( MUC - Min( ( MUM - Min( MLU ,MUR ) ) ,CS ) ) ) ) ,RRSe ) - Max( ( DS / ( RMSe * MLU ) ),CS ) )", "obj1": 0.9330708661417323, "obj2": 0.05091364413316679}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( Max( ( ( FirstVNF_RAM / CRS ) - ( MDR * AMS ) ),Max( ( FirstVNF_Mem_Server - MDR ),( Const - FirstVNF_CPU ) ) ) / ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS - PN ) ) - ( Min( RRS ,MRS ) + ( AMS / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( ( RRSe + ( DS + CS ) ) ,MUM ) ) )", "obj1": 0.9114173228346457, "obj2": 0.07736139665768202}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MLU * MLU ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5213052828230235}, {"determining": "( Max( ARS,PN ) / Min( ( Max( ARS,PN ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - MUM ) / ( DS + MUC ) )", "obj1": 0.20669291338582677, "obj2": 0.6695519648824936}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( FirstVNF_Mem - ( ACS / ARS ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - Min( MUR ,MUR ) ) ) * MUR ) ) / Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) )", "obj1": 0.9035433070866141, "obj2": 0.08186506538399121}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - MLU ) ,MLU ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5211693317374565}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Max( Max( ( FirstVNF_Mem * CRS ),( ( FirstVNF_Mem - ( FirstVNF_CPU_Server / MRS ) ) - PN ) ),( DDR - Const ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3937007874015748, "obj2": 0.49894387925286926}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU_Server / ( DDR / FirstVNF_Mem ) ) ) * PN ) ) )", "choosing": "( ( MUR / ( MLU / ( MUM - RCSe ) ) ) - Max( Min( RMSe ,MUR ),( DS * RCSe ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6305423578714979}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "( ( Const + FirstVNF_Mem ) / ( ARS - ( Const - ( ( ( FirstVNF_Mem / ( BR * ( FirstVNF_Mem_Server + ARS ) ) ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_RAM_Server ) ),( DDR - ( MDR * MDR ) ) ) ) / CRS ) ) ) )", "choosing": "( ( ( ( Min( Min( ( MUC / ( MUC - MUR ) ) ,( RMSe * ( MUM * MUR ) ) ) ,RRSe ) - Max( ( Min( Max( MUC,MLU ) ,Max( MUC,MLU ) ) - Min( ( MUM * MUR ) ,Min( MUM ,CS ) ) ),( MLU * Max( RCSe,RMSe ) ) ) ) / Max( ( Max( MUR,( Max( RRSe,MUR ) + RMSe ) ) / RCSe ),Min( MUM ,RMSe ) ) ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( FirstVNF_Mem * ACS ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( MUM ,MUM ) ) )", "obj1": 0.17913385826771652, "obj2": 0.7004433504087433}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( ( Const - CRS ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) - Min( RRSe ,MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.690902886169831}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - Const ) )", "choosing": "( ( Max( ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7760240083101991}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( ( CRS / ARS ) / Max( ( CRS - ARS ),Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / ( CS - RRSe ) ) / ( CS - ( DS * ( ( RMSe / ( CS - RRSe ) ) * MUM ) ) ) ) * ( ( DS + ( MUR + ( Min( RMSe ,MLU ) + MUR ) ) ) + RMSe ) )", "obj1": 0.297244094488189, "obj2": 0.5796131675782347}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.2047244094488189, "obj2": 0.6756714124274891}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( Max( FirstVNF_RAM,ARS ),( FirstVNF_CPU_Server - PN ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( FirstVNF_CPU / ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Min( CS ,RRSe ) ) / RRSe ) * ( RMSe / Min( CS ,RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5850972969742942}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) / ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( ( ( CS - MLU ) + Min( CS ,RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5807468154548092}, {"determining": "Max( ( AMS * ( Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - ( CS * Max( ( DS + DS ),( MLU - RCSe ) ) ) ) ,MLU ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.5010740880026119}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * Min( ( ( CS - MLU ) + Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) ) ,DS ) ) - RMSe ) / ( MLU + MUM ) )", "obj1": 0.28937007874015747, "obj2": 0.5827701161845353}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "Max( ( Const - RRS ),( PN - ACS ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.38779527559055116, "obj2": 0.499828461302263}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( Max( ( FirstVNF_Mem * CRS ),( ( ARS - ( FirstVNF_CPU_Server / MRS ) ) - PN ) ),( DDR - Const ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( MLU,( MLU / RMSe ) ) / ( Max( MUR,( MUM / RCSe ) ) * RCSe ) ) ,MUR ) / ( RRSe - MUC ) ) / Min( Min( ( ( Max( DS,RCSe ) + ( DS + RMSe ) ) - ( ( Max( ( MLU * RMSe ),MUM ) / ( MLU * ( MUC * RMSe ) ) ) * RRSe ) ) ,MUC ) ,Max( MUC,RCSe ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6446279945232679}, {"determining": "Max( Min( AMS ,( AMS * Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RMSe ) ,( RMSe - ( MLU / DS ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5064280269917265}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( ( Const + ( ( FirstVNF_CPU * ACS ) / CRS ) ) + ( AMS / PN ) )", "choosing": "( ( ( ( MUR + CS ) * MLU ) + RRSe ) * Min( ( RCSe - ( RMSe / MLU ) ) ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RCSe ) ) ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ( ( ( FirstVNF_CPU - ARS ) - ( FirstVNF_RAM_Server + Max( MDR,Const ) ) ) - DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) / ( MLU / CS ) ) / ( ( ( CS * MUC ) + RMSe ) * ( MUM * MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( PN - FirstVNF_Mem ) * ( Max( FirstVNF_RAM,( RRS / FirstVNF_Mem_Server ) ) + ( ( Max( ACS,ARS ) + FirstVNF_CPU_Server ) + Min( BR ,RRS ) ) ) )", "choosing": "( ( ( RMSe - ( RCSe + ( MUM - MUC ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( Max( DS,MUM ) ,( RRSe / RCSe ) ) / RMSe ) )", "obj1": 0.9980314960629921, "obj2": 0.001536105824587879}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - ( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7772108232474204}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * Min( Min( RMSe ,MUM ) ,DS ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7772108232474204}, {"determining": "( ( PN - FirstVNF_Mem ) * ( Max( FirstVNF_RAM,( RRS / FirstVNF_Mem_Server ) ) + ( ( Max( ACS,ARS ) + FirstVNF_CPU_Server ) + Min( BR ,RRS ) ) ) )", "choosing": "( ( ( RMSe - ( RCSe + ( MUM - MUC ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( Max( DS,MUM ) ,( RRSe / RCSe ) ) / RMSe ) )", "obj1": 0.9980314960629921, "obj2": 0.001536105824587879}, {"determining": "( ( Const - CRS ) - Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Min( MUC ,RCSe ) ) - ( ( ( MUR * MUM ) / Min( Min( RRSe ,( Max( MUM,CS ) - MUM ) ) ,( MLU - Min( ( ( RCSe - MUC ) - Min( MLU ,MUR ) ) ,( MLU - RRSe ) ) ) ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ) )", "choosing": "( Min( Max( Min( RRSe ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) ,( RRSe / RCSe ) ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( Max( RMSe,RCSe ) + ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,AMS ) - ( AMS / MRS ) )", "choosing": "( ( ( Max( ( MLU + MLU ),( MUC + RRSe ) ) * RRSe ) - MUR ) / Max( ( MLU + MLU ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_RAM ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Max( ARS,ACS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS / ACS ),RRS ) - Max( ( ( FirstVNF_Mem * FirstVNF_RAM ) / FirstVNF_Mem_Server ),Max( Max( DDR,FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( Min( RRSe ,RMSe ) * Min( RCSe ,DS ) ),MLU ),( MUC / ( Max( RMSe,MLU ) + ( RRSe * Min( MUR ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Const ) - Min( FirstVNF_Mem_Server ,( AMS / ( Max( FirstVNF_RAM,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Max( Min( AMS ,Max( FirstVNF_CPU_Server,MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + MUC ) / Min( ( ( CS * MUM ) / ( ( MLU * ( Max( ( RCSe + RMSe ),Min( CS ,RRSe ) ) * MUR ) ) / Min( ( ( ( MLU * RRSe ) * DS ) + MUR ) ,MLU ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - BR ) / Min( PN ,MRS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * MDR ) ) + FirstVNF_CPU_Server ) * ( ( Max( ARS,( ( ( CRS - Const ) + PN ) - ( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM * DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUR ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_Mem_Server,DDR ) ) + AMS ) ) ,Min( ARS ,Max( BR,Min( ARS ,CRS ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - ( ( ( Min( ( MUC - MUR ) ,( Max( RCSe,CS ) + MLU ) ) + ( MUM / MUR ) ) - Max( MUM,Max( Min( ( CS - MUC ) ,( MUR + DS ) ),MUM ) ) ) / Max( MUR,( RMSe * Max( CS,MLU ) ) ) ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,ARS ) * Max( ( Min( ( ( MRS - CRS ) / ARS ) ,MDR ) / FirstVNF_RAM ),( AMS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( Max( Max( ( Min( MUM ,MUM ) + MUR ),RCSe ),Max( RMSe,( MUR * ( RMSe / Min( MUR ,DS ) ) ) ) ) ,RMSe ) + ( ( ( RCSe + MUC ) / RMSe ) - Min( ( CS + MUM ) ,Max( DS,( RMSe - Max( RMSe,( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "Min( ( Max( DS,RCSe ) / Max( DS,CS ) ) ,Max( ( MLU * MUM ),( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,( ( ( ( PN - ARS ) / FirstVNF_RAM ) * ( ( ARS + Min( FirstVNF_CPU ,PN ) ) - FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem,Min( ( ACS - FirstVNF_Mem ) ,Max( Min( DDR ,AMS ),PN ) ) ) ) ) / ( FirstVNF_Mem_Server * CRS ) ) / Max( MRS,RRS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) * ( Max( CS,CS ) + ( RMSe - ( ( Max( RCSe,RCSe ) / ( ( DS - MUM ) / ( CS / RCSe ) ) ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,MUM ) - MLU ) * ( Min( CS ,RRSe ) / RMSe ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / RCSe ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / Min( ( FirstVNF_Mem_Server + ARS ) ,( Max( ( MRS + FirstVNF_RAM ),Min( ( FirstVNF_Mem - ( AMS - ( RRS + BR ) ) ) ,( ACS - ( ACS + MRS ) ) ) ) + Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR + Min( MUR ,MUR ) ) / Min( RRSe ,Max( ( RCSe + ( ( ( DS / MLU ) - Min( CS ,RCSe ) ) * Max( CS,( MUC * MUC ) ) ) ),( ( DS * RCSe ) / RRSe ) ) ) ) / Min( MUM ,DS ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) + BR ) - Min( FirstVNF_RAM ,( ARS / ACS ) ) )", "choosing": "( Min( ( CS / ( ( MUM - MUR ) / ( DS + MUC ) ) ) ,Min( RMSe ,RCSe ) ) / ( DS + MUC ) )", "obj1": 0.8996062992125984, "obj2": 0.09657874736243155}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( Min( FirstVNF_RAM ,( ARS / ACS ) ) - ACS ) )", "choosing": "Max( Min( RRSe ,MLU ),( ( RMSe - ( RCSe * MLU ) ) / RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.18104607242916815}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Const * ACS ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.35039370078740156, "obj2": 0.5394342506977349}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - ( Max( DS,RMSe ) + ( CS / MUR ) ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.7755905511811023, "obj2": 0.1613373071357457}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MLU * MLU ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5213052828230235}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - MLU ) ,MLU ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5211693317374565}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU_Server / ( DDR / FirstVNF_Mem ) ) ) * PN ) ) )", "choosing": "( ( MUR / ( MLU / ( MUM - RCSe ) ) ) - Max( Min( RMSe ,MUR ),( DS * RCSe ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6305423578714979}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( ( RRS + MDR ) + ( BR + ( FirstVNF_CPU_Server + ( FirstVNF_Mem * ACS ) ) ) )", "choosing": "( ( MLU / MUM ) - Max( CS,Min( MUM ,MUM ) ) )", "obj1": 0.17913385826771652, "obj2": 0.7004433504087433}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( ( Const - CRS ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) - Min( RRSe ,MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.690902886169831}, {"determining": "Max( Min( AMS ,( AMS * Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RMSe ) ,( RMSe - ( MLU / DS ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5064280269917265}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( Min( MDR ,AMS ) / ( Max( ACS,FirstVNF_CPU_Server ) / ( ARS * ACS ) ) )", "choosing": "Max( ( Max( RRSe,Min( Max( DS,MUM ) ,RMSe ) ) * ( CS * MUR ) ),Max( Max( MUR,MUC ),( MUR / RCSe ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6641799841656808}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,Const ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( MLU * RMSe ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.8270898358926171}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Max( ARS,PN ) / Min( ( Max( ARS,PN ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - MUM ) / ( DS + MUC ) )", "obj1": 0.20669291338582677, "obj2": 0.6695519648824936}, {"determining": "( ( Const + FirstVNF_Mem ) / ( ARS - ( Const - ( ( ( FirstVNF_Mem / ( BR * ( FirstVNF_Mem_Server + ARS ) ) ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_RAM_Server ) ),( DDR - ( MDR * MDR ) ) ) ) / CRS ) ) ) )", "choosing": "( ( ( ( Min( Min( ( MUC / ( MUC - MUR ) ) ,( RMSe * ( MUM * MUR ) ) ) ,RRSe ) - Max( ( Min( Max( MUC,MLU ) ,Max( MUC,MLU ) ) - Min( ( MUM * MUR ) ,Min( MUM ,CS ) ) ),( MLU * Max( RCSe,RMSe ) ) ) ) / Max( ( Max( MUR,( Max( RRSe,MUR ) + RMSe ) ) / RCSe ),Min( MUM ,RMSe ) ) ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - Const ) )", "choosing": "( ( Max( ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.7760240083101991}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( ( CRS / ARS ) / Max( ( CRS - ARS ),Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / ( CS - RRSe ) ) / ( CS - ( DS * ( ( RMSe / ( CS - RRSe ) ) * MUM ) ) ) ) * ( ( DS + ( MUR + ( Min( RMSe ,MLU ) + MUR ) ) ) + RMSe ) )", "obj1": 0.297244094488189, "obj2": 0.5796131675782347}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.2047244094488189, "obj2": 0.6756714124274891}, {"determining": "( ( Max( ( Const * AMS ),( PN * ACS ) ) * Const ) / ( FirstVNF_CPU - ACS ) )", "choosing": "( Min( Max( ( ( MUM + DS ) / CS ),RCSe ) ,RRSe ) / ( Max( DS,Max( ( MUM / RCSe ),( ( ( ( MUM / CS ) + MLU ) * ( ( MUC + MUC ) + CS ) ) * RCSe ) ) ) / ( ( Max( MUR,RRSe ) * ( ( MUR + ( DS + RCSe ) ) * CS ) ) + MUR ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),( ( ( FirstVNF_CPU + FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( ( ( MLU * MUM ) / Min( RCSe ,MUR ) ) + ( ( MUM - RCSe ) - ( MLU - RRSe ) ) ) - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( MUC - RRSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.666451232544797}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( FirstVNF_CPU / ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Min( CS ,RRSe ) ) / RRSe ) * ( RMSe / Min( CS ,RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5850972969742942}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) / ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( ( ( CS - MLU ) + Min( CS ,RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5807468154548092}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * Min( ( ( CS - MLU ) + Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) ) ,DS ) ) - RMSe ) / ( MLU + MUM ) )", "obj1": 0.28937007874015747, "obj2": 0.5827701161845353}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( Max( ( FirstVNF_Mem * CRS ),( ( ARS - ( FirstVNF_CPU_Server / MRS ) ) - PN ) ),( DDR - Const ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( MLU,( MLU / RMSe ) ) / ( Max( MUR,( MUM / RCSe ) ) * RCSe ) ) ,MUR ) / ( RRSe - MUC ) ) / Min( Min( ( ( Max( DS,RCSe ) + ( DS + RMSe ) ) - ( ( Max( ( MLU * RMSe ),MUM ) / ( MLU * ( MUC * RMSe ) ) ) * RRSe ) ) ,MUC ) ,Max( MUC,RCSe ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6446279945232679}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( Max( Max( FirstVNF_RAM,ARS ),( FirstVNF_CPU_Server - PN ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "( ( Const + ( ( FirstVNF_CPU * ACS ) / CRS ) ) + ( AMS / PN ) )", "choosing": "( ( ( ( MUR + CS ) * MLU ) + RRSe ) * Min( ( RCSe - ( RMSe / MLU ) ) ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ( ( ( FirstVNF_CPU - ARS ) - ( FirstVNF_RAM_Server + Max( MDR,Const ) ) ) - DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) / ( MLU / CS ) ) / ( ( ( CS * MUC ) + RMSe ) * ( MUM * MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RCSe ) ) ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7779142319360065}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( Const + ( ( CRS + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - ( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7772108232474204}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * Min( Min( RMSe ,MUM ) ,DS ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7772108232474204}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - CRS ) - Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Min( MUC ,RCSe ) ) - ( ( ( MUR * MUM ) / Min( Min( RRSe ,( Max( MUM,CS ) - MUM ) ) ,( MLU - Min( ( ( RCSe - MUC ) - Min( MLU ,MUR ) ) ,( MLU - RRSe ) ) ) ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ) )", "choosing": "( Min( Max( Min( RRSe ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) ,( RRSe / RCSe ) ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( Max( RMSe,RCSe ) + ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,AMS ) - ( AMS / MRS ) )", "choosing": "( ( ( Max( ( MLU + MLU ),( MUC + RRSe ) ) * RRSe ) - MUR ) / Max( ( MLU + MLU ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_RAM ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Max( ARS,ACS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS / ACS ),RRS ) - Max( ( ( FirstVNF_Mem * FirstVNF_RAM ) / FirstVNF_Mem_Server ),Max( Max( DDR,FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( Min( RRSe ,RMSe ) * Min( RCSe ,DS ) ),MLU ),( MUC / ( Max( RMSe,MLU ) + ( RRSe * Min( MUR ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Const ) - Min( FirstVNF_Mem_Server ,( AMS / ( Max( FirstVNF_RAM,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - Max( Min( AMS ,Max( FirstVNF_CPU_Server,MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + MUC ) / Min( ( ( CS * MUM ) / ( ( MLU * ( Max( ( RCSe + RMSe ),Min( CS ,RRSe ) ) * MUR ) ) / Min( ( ( ( MLU * RRSe ) * DS ) + MUR ) ,MLU ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - BR ) / Min( PN ,MRS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * MDR ) ) + FirstVNF_CPU_Server ) * ( ( Max( ARS,( ( ( CRS - Const ) + PN ) - ( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM * DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUR ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_Mem_Server,DDR ) ) + AMS ) ) ,Min( ARS ,Max( BR,Min( ARS ,CRS ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - ( ( ( Min( ( MUC - MUR ) ,( Max( RCSe,CS ) + MLU ) ) + ( MUM / MUR ) ) - Max( MUM,Max( Min( ( CS - MUC ) ,( MUR + DS ) ),MUM ) ) ) / Max( MUR,( RMSe * Max( CS,MLU ) ) ) ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,ARS ) * Max( ( Min( ( ( MRS - CRS ) / ARS ) ,MDR ) / FirstVNF_RAM ),( AMS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( Max( Max( ( Min( MUM ,MUM ) + MUR ),RCSe ),Max( RMSe,( MUR * ( RMSe / Min( MUR ,DS ) ) ) ) ) ,RMSe ) + ( ( ( RCSe + MUC ) / RMSe ) - Min( ( CS + MUM ) ,Max( DS,( RMSe - Max( RMSe,( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( AMS / FirstVNF_RAM_Server ) / Min( ( FirstVNF_Mem_Server + ARS ) ,( Max( ( MRS + FirstVNF_RAM ),Min( ( FirstVNF_Mem - ( AMS - ( RRS + BR ) ) ) ,( ACS - ( ACS + MRS ) ) ) ) + Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR + Min( MUR ,MUR ) ) / Min( RRSe ,Max( ( RCSe + ( ( ( DS / MLU ) - Min( CS ,RCSe ) ) * Max( CS,( MUC * MUC ) ) ) ),( ( DS * RCSe ) / RRSe ) ) ) ) / Min( MUM ,DS ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / RCSe ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( CRS - ARS ) / ( ( ( CRS - ARS ) / ( CRS - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( ( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) ) / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.8228346456692913, "obj2": 0.1193066699876313}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) + BR ) - Min( FirstVNF_RAM ,( ARS / ACS ) ) )", "choosing": "( Min( ( CS / ( ( MUM - MUR ) / ( DS + MUC ) ) ) ,Min( RMSe ,RCSe ) ) / ( DS + MUC ) )", "obj1": 0.8996062992125984, "obj2": 0.09657874736243155}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( Min( FirstVNF_RAM ,( ARS / ACS ) ) - ACS ) )", "choosing": "Max( Min( RRSe ,MLU ),( ( RMSe - ( RCSe * MLU ) ) / RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.18104607242916815}, {"determining": "( ( Max( ( Const * AMS ),( PN * ACS ) ) * Const ) / ( FirstVNF_CPU - ACS ) )", "choosing": "( Min( Max( ( ( MUM + DS ) / CS ),RCSe ) ,RRSe ) / ( Max( DS,Max( ( MUM / RCSe ),( ( ( ( MUM / CS ) + MLU ) * ( ( MUC + MUC ) + CS ) ) * RCSe ) ) ) / ( ( Max( MUR,RRSe ) * ( ( MUR + ( DS + RCSe ) ) * CS ) ) + MUR ) ) )", "obj1": 0.9744094488188977, "obj2": 0.02950416365335647}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - ( Max( DS,RMSe ) + ( CS / MUR ) ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.7755905511811023, "obj2": 0.1613373071357457}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Const * ACS ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.35039370078740156, "obj2": 0.5394342506977349}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MLU * MLU ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5213052828230235}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - MLU ) ,MLU ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5211693317374565}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU_Server / ( DDR / FirstVNF_Mem ) ) ) * PN ) ) )", "choosing": "( ( MUR / ( MLU / ( MUM - RCSe ) ) ) - Max( Min( RMSe ,MUR ),( DS * RCSe ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6305423578714979}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( MUC,MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.02950416365335647}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( ( Const - CRS ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) - Min( RRSe ,MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.690902886169831}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "Max( Min( AMS ,( AMS * Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RMSe ) ,( RMSe - ( MLU / DS ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5064280269917265}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "( Min( MDR ,AMS ) / ( Max( ACS,FirstVNF_CPU_Server ) / ( ARS * ACS ) ) )", "choosing": "Max( ( Max( RRSe,Min( Max( DS,MUM ) ,RMSe ) ) * ( CS * MUR ) ),Max( Max( MUR,MUC ),( MUR / RCSe ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6641799841656808}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Max( ARS,PN ) / Min( ( Max( ARS,PN ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - MUM ) / ( DS + MUC ) )", "obj1": 0.20669291338582677, "obj2": 0.6695519648824936}, {"determining": "( ( Const + FirstVNF_Mem ) / ( ARS - ( Const - ( ( ( FirstVNF_Mem / ( BR * ( FirstVNF_Mem_Server + ARS ) ) ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_RAM_Server ) ),( DDR - ( MDR * MDR ) ) ) ) / CRS ) ) ) )", "choosing": "( ( ( ( Min( Min( ( MUC / ( MUC - MUR ) ) ,( RMSe * ( MUM * MUR ) ) ) ,RRSe ) - Max( ( Min( Max( MUC,MLU ) ,Max( MUC,MLU ) ) - Min( ( MUM * MUR ) ,Min( MUM ,CS ) ) ),( MLU * Max( RCSe,RMSe ) ) ) ) / Max( ( Max( MUR,( Max( RRSe,MUR ) + RMSe ) ) / RCSe ),Min( MUM ,RMSe ) ) ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( ( CRS / ARS ) / Max( ( CRS - ARS ),Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / ( CS - RRSe ) ) / ( CS - ( DS * ( ( RMSe / ( CS - RRSe ) ) * MUM ) ) ) ) * ( ( DS + ( MUR + ( Min( RMSe ,MLU ) + MUR ) ) ) + RMSe ) )", "obj1": 0.297244094488189, "obj2": 0.5796131675782347}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) + Max( CRS,MRS ) )", "choosing": "( ( MLU / MUC ) / Max( MLU,MUR ) )", "obj1": 0.2047244094488189, "obj2": 0.6756714124274891}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( CRS - ARS ) ) - ARS ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "Max( ( ( Max( FirstVNF_Mem,MDR ) / Max( ACS,ACS ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),( ( ( FirstVNF_CPU + FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) * ( ACS * RRS ) ) ) )", "choosing": "( ( ( ( MLU * MUM ) / Min( RCSe ,MUR ) ) + ( ( MUM - RCSe ) - ( MLU - RRSe ) ) ) - Max( Min( ( DS * MUR ) ,( MUR + RCSe ) ),( ( MUC - RRSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.666451232544797}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( FirstVNF_CPU / ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Min( CS ,RRSe ) ) / RRSe ) * ( RMSe / Min( CS ,RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5850972969742942}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) / ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( ( ( CS - MLU ) + Min( CS ,RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5807468154548092}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * Min( ( ( CS - MLU ) + Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) ) ,DS ) ) - RMSe ) / ( MLU + MUM ) )", "obj1": 0.28937007874015747, "obj2": 0.5827701161845353}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( Max( ( FirstVNF_Mem * CRS ),( ( ARS - ( FirstVNF_CPU_Server / MRS ) ) - PN ) ),( DDR - Const ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( MLU,( MLU / RMSe ) ) / ( Max( MUR,( MUM / RCSe ) ) * RCSe ) ) ,MUR ) / ( RRSe - MUC ) ) / Min( Min( ( ( Max( DS,RCSe ) + ( DS + RMSe ) ) - ( ( Max( ( MLU * RMSe ),MUM ) / ( MLU * ( MUC * RMSe ) ) ) * RRSe ) ) ,MUC ) ,Max( MUC,RCSe ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6446279945232679}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ( ( ( FirstVNF_CPU - ARS ) - ( FirstVNF_RAM_Server + Max( MDR,Const ) ) ) - DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) / ( MLU / CS ) ) / ( ( ( CS * MUC ) + RMSe ) * ( MUM * MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / RCSe ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - CRS ) - Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Min( MUC ,RCSe ) ) - ( ( ( MUR * MUM ) / Min( Min( RRSe ,( Max( MUM,CS ) - MUM ) ) ,( MLU - Min( ( ( RCSe - MUC ) - Min( MLU ,MUR ) ) ,( MLU - RRSe ) ) ) ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ) )", "choosing": "( Min( Max( Min( RRSe ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) ,( RRSe / RCSe ) ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( Max( RMSe,RCSe ) + ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,AMS ) - ( AMS / MRS ) )", "choosing": "( ( ( Max( ( MLU + MLU ),( MUC + RRSe ) ) * RRSe ) - MUR ) / Max( ( MLU + MLU ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_RAM ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) * Max( ARS,ACS ) ) ) + ( ( ( MRS * AMS ) - Max( DDR,MRS ) ) / ( ( FirstVNF_CPU_Server + MDR ) * Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "Min( Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) ,Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS / ACS ),RRS ) - Max( ( ( FirstVNF_Mem * FirstVNF_RAM ) / FirstVNF_Mem_Server ),Max( Max( DDR,FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( Min( RRSe ,RMSe ) * Min( RCSe ,DS ) ),MLU ),( MUC / ( Max( RMSe,MLU ) + ( RRSe * Min( MUR ,Min( MUM ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / RCSe ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( CRS - ARS ) / ( ( ( CRS - ARS ) / ( CRS - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( ( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) ) / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.8228346456692913, "obj2": 0.1193066699876313}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) + BR ) - Min( FirstVNF_RAM ,( ARS / ACS ) ) )", "choosing": "( Min( ( CS / ( ( MUM - MUR ) / ( DS + MUC ) ) ) ,Min( RMSe ,RCSe ) ) / ( DS + MUC ) )", "obj1": 0.8996062992125984, "obj2": 0.09657874736243155}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( Min( FirstVNF_RAM ,( ARS / ACS ) ) - ACS ) )", "choosing": "Max( Min( RRSe ,MLU ),( ( RMSe - ( RCSe * MLU ) ) / RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.18104607242916815}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - ( Max( DS,RMSe ) + ( CS / MUR ) ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.7755905511811023, "obj2": 0.1613373071357457}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( Min( ( CRS - ARS ) ,DDR ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( DS ,CS ) - MLU ) * MUM ) ),CS ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6603988238182976}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Max( MUC,MUR ) )", "obj1": 0.9803149606299213, "obj2": 0.023825620265441105}, {"determining": "( Min( AMS ,MDR ) / ( AMS / ( Const * ACS ) ) )", "choosing": "( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.35039370078740156, "obj2": 0.5394342506977349}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "( ( ( CRS + CRS ) - CRS ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( ( RCSe + Min( DS ,RRSe ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.84154830109955}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MLU * MLU ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5213052828230235}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + DS ) ,( RMSe - ( DS / Min( ( MUC - MLU ) ,MLU ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5211693317374565}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU_Server / ( DDR / FirstVNF_Mem ) ) ) * PN ) ) )", "choosing": "( ( MUR / ( MLU / ( MUM - RCSe ) ) ) - Max( Min( RMSe ,MUR ),( DS * RCSe ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6305423578714979}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( ( Const - CRS ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) + Max( MDR,( BR + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) - Min( RRSe ,MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.690902886169831}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "Max( Min( AMS ,( AMS * Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ),Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RMSe ) ,( RMSe - ( MLU / DS ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5064280269917265}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( Const + FirstVNF_Mem ) / ( ARS - ( Const - ( ( ( FirstVNF_Mem / ( BR * ( FirstVNF_Mem_Server + ARS ) ) ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_RAM_Server ) ),( DDR - ( MDR * MDR ) ) ) ) / CRS ) ) ) )", "choosing": "( ( ( ( Min( Min( ( MUC / ( MUC - MUR ) ) ,( RMSe * ( MUM * MUR ) ) ) ,RRSe ) - Max( ( Min( Max( MUC,MLU ) ,Max( MUC,MLU ) ) - Min( ( MUM * MUR ) ,Min( MUM ,CS ) ) ),( MLU * Max( RCSe,RMSe ) ) ) ) / Max( ( Max( MUR,( Max( RRSe,MUR ) + RMSe ) ) / RCSe ),Min( MUM ,RMSe ) ) ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( ( CRS / ARS ) / Max( ( CRS - ARS ),Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / ( CS - RRSe ) ) / ( CS - ( DS * ( ( RMSe / ( CS - RRSe ) ) * MUM ) ) ) ) * ( ( DS + ( MUR + ( Min( RMSe ,MLU ) + MUR ) ) ) + RMSe ) )", "obj1": 0.297244094488189, "obj2": 0.5796131675782347}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / Min( ( FirstVNF_Mem_Server + ARS ) ,( Max( ( MRS + FirstVNF_RAM ),Min( ( FirstVNF_Mem - ( AMS - ( RRS + BR ) ) ) ,( ACS - ( ACS + MRS ) ) ) ) + Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR + Min( MUR ,MUR ) ) / Min( RRSe ,Max( ( RCSe + ( ( ( DS / MLU ) - Min( CS ,RCSe ) ) * Max( CS,( MUC * MUC ) ) ) ),( ( DS * RCSe ) / RRSe ) ) ) ) / Min( MUM ,DS ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( FirstVNF_CPU / ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe / Min( CS ,RRSe ) ) / RRSe ) * ( RMSe / Min( CS ,RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5850972969742942}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) / ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * ( RMSe / ( ( CS - MLU ) + Min( ( ( CS - MLU ) + Min( CS ,RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5807468154548092}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * Min( ( ( CS - MLU ) + Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) ) ,DS ) ) - RMSe ) / ( MLU + MUM ) )", "obj1": 0.28937007874015747, "obj2": 0.5827701161845353}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( MUC,MUR ) ,RRSe ) )", "obj1": 0.9783464566929134, "obj2": 0.026972629943060003}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( Max( ( FirstVNF_Mem * CRS ),( ( ARS - ( FirstVNF_CPU_Server / MRS ) ) - PN ) ),( DDR - Const ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( MLU,( MLU / RMSe ) ) / ( Max( MUR,( MUM / RCSe ) ) * RCSe ) ) ,MUR ) / ( RRSe - MUC ) ) / Min( Min( ( ( Max( DS,RCSe ) + ( DS + RMSe ) ) - ( ( Max( ( MLU * RMSe ),MUM ) / ( MLU * ( MUC * RMSe ) ) ) * RRSe ) ) ,MUC ) ,Max( MUC,RCSe ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6446279945232679}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( CRS - ARS ) ) - ARS ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.37401574803149606, "obj2": 0.5120299975855662}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) )", "obj1": 0.3779527559055118, "obj2": 0.5092120932646172}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ( ( ( FirstVNF_CPU - ARS ) - ( FirstVNF_RAM_Server + Max( MDR,Const ) ) ) - DDR ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) / ( MLU / CS ) ) / ( ( ( CS * MUC ) + RMSe ) * ( MUM * MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "Max( ( Const * Const ),( FirstVNF_CPU_Server - ( FirstVNF_RAM * RRS ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM * MUR ) ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.38188976377952755, "obj2": 0.5065087548808113}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / RCSe ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - CRS ) - Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Min( MUC ,RCSe ) ) - ( ( ( MUR * MUM ) / Min( Min( RRSe ,( Max( MUM,CS ) - MUM ) ) ,( MLU - Min( ( ( RCSe - MUC ) - Min( MLU ,MUR ) ) ,( MLU - RRSe ) ) ) ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ) )", "choosing": "( Min( Max( Min( RRSe ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) ,( RRSe / RCSe ) ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( Max( RMSe,RCSe ) + ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( RRS - RRS ) - ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( CRS - ARS ) / ( ( ( CRS - ARS ) / ( CRS - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( ( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) ) / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.8228346456692913, "obj2": 0.1193066699876313}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) + BR ) - Min( FirstVNF_RAM ,( ARS / ACS ) ) )", "choosing": "( Min( ( CS / ( ( MUM - MUR ) / ( DS + MUC ) ) ) ,Min( RMSe ,RCSe ) ) / ( DS + MUC ) )", "obj1": 0.8996062992125984, "obj2": 0.09657874736243155}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( Min( FirstVNF_RAM ,( ARS / ACS ) ) - ACS ) )", "choosing": "Max( Min( RRSe ,MLU ),( ( RMSe - ( RCSe * MLU ) ) / RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.18104607242916815}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - ( Max( DS,RMSe ) + ( CS / MUR ) ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.7755905511811023, "obj2": 0.1613373071357457}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( Min( ( CRS - ARS ) ,DDR ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( DS ,CS ) - MLU ) * MUM ) ),CS ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6603988238182976}, {"determining": "( ( ( CRS + CRS ) - CRS ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( ( RCSe + Min( DS ,RRSe ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.84154830109955}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_RAM + CRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) )", "obj1": 0.9862204724409449, "obj2": 0.016053802759881206}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU_Server / ( DDR / FirstVNF_Mem ) ) ) * PN ) ) )", "choosing": "( ( MUR / ( MLU / ( MUM - RCSe ) ) ) - Max( Min( RMSe ,MUR ),( DS * RCSe ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6305423578714979}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "( ( Const - ACS ) * ( MRS / ( Max( Min( FirstVNF_Mem ,PN ),Min( ( Max( FirstVNF_RAM_Server,Const ) * MRS ) ,AMS ) ) - ( MRS + BR ) ) ) )", "choosing": "( ( MLU - MUM ) + Max( MUM,( RMSe * ( ( RRSe + MUM ) - ( MUR - Max( RRSe,MUM ) ) ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.009575554640560603}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * ( ( AMS - MDR ) + RRS ) ) ),FirstVNF_RAM ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( ( DS - ( MLU - ( CS + ( RCSe * DS ) ) ) ) / RCSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6900963748740816}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( Const + FirstVNF_Mem ) / ( ARS - ( Const - ( ( ( FirstVNF_Mem / ( BR * ( FirstVNF_Mem_Server + ARS ) ) ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_RAM_Server ) ),( DDR - ( MDR * MDR ) ) ) ) / CRS ) ) ) )", "choosing": "( ( ( ( Min( Min( ( MUC / ( MUC - MUR ) ) ,( RMSe * ( MUM * MUR ) ) ) ,RRSe ) - Max( ( Min( Max( MUC,MLU ) ,Max( MUC,MLU ) ) - Min( ( MUM * MUR ) ,Min( MUM ,CS ) ) ),( MLU * Max( RCSe,RMSe ) ) ) ) / Max( ( Max( MUR,( Max( RRSe,MUR ) + RMSe ) ) / RCSe ),Min( MUM ,RMSe ) ) ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * Min( ( ( CS - MLU ) + Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) ) ,DS ) ) - RMSe ) / ( MLU + MUM ) )", "obj1": 0.28937007874015747, "obj2": 0.5827701161845353}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "Max( ( ARS / CRS ),Min( ( ( ARS / CRS ) / Min( ( Const / DDR ) ,BR ) ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5836197200336165}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( Max( ( FirstVNF_Mem * CRS ),( ( ARS - ( FirstVNF_CPU_Server / MRS ) ) - PN ) ),( DDR - Const ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( MLU,( MLU / RMSe ) ) / ( Max( MUR,( MUM / RCSe ) ) * RCSe ) ) ,MUR ) / ( RRSe - MUC ) ) / Min( Min( ( ( Max( DS,RCSe ) + ( DS + RMSe ) ) - ( ( Max( ( MLU * RMSe ),MUM ) / ( MLU * ( MUC * RMSe ) ) ) * RRSe ) ) ,MUC ) ,Max( MUC,RCSe ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6446279945232679}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / RCSe ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / RCSe ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - CRS ) - Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Min( MUC ,RCSe ) ) - ( ( ( MUR * MUM ) / Min( Min( RRSe ,( Max( MUM,CS ) - MUM ) ) ,( MLU - Min( ( ( RCSe - MUC ) - Min( MLU ,MUR ) ) ,( MLU - RRSe ) ) ) ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ) )", "choosing": "( Min( Max( Min( RRSe ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) ,( RRSe / RCSe ) ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( Max( RMSe,RCSe ) + ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MDR - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( CS / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MDR - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( ( ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - ARS ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Const + FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( RRSe / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( AMS - MDR ) + RRS ) ) / ( ( MDR - ARS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( Min( ( MUC + RCSe ) ,( ( RCSe * DS ) * MLU ) ) * ( Min( RMSe ,MUM ) - MLU ) ) ) - CS ) ) * ( ( DS + ( MUR + ( Min( RMSe ,MLU ) + ( CS / ( RMSe / MUM ) ) ) ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( AMS - MDR ) + RRS ) ) / ( ( FirstVNF_RAM_Server - ( Const + FirstVNF_CPU_Server ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( ( ( RRS / BR ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem * PN ) ) / ( Max( MDR,BR ) + ( MDR + ( ( RRS / BR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( MUR * ( ( RRSe * MLU ) / RRSe ) ) - MUM ),MLU ) + Max( ( ( MUR - MUC ) / CS ),MUM ) ) / Min( MLU ,( ( MUR * ( ( RRSe * MLU ) / RRSe ) ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( CRS - ARS ) / ( ( ( CRS - ARS ) / ( CRS - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( ( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) ) / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.8228346456692913, "obj2": 0.1193066699876313}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) + BR ) - Min( FirstVNF_RAM ,( ARS / ACS ) ) )", "choosing": "( Min( ( CS / ( ( MUM - MUR ) / ( DS + MUC ) ) ) ,Min( RMSe ,RCSe ) ) / ( DS + MUC ) )", "obj1": 0.8996062992125984, "obj2": 0.09657874736243155}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( Min( FirstVNF_RAM ,( ARS / ACS ) ) - ACS ) )", "choosing": "Max( Min( RRSe ,MLU ),( ( RMSe - ( RCSe * MLU ) ) / RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.18104607242916815}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - ( Max( DS,RMSe ) + ( CS / MUR ) ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.7755905511811023, "obj2": 0.1613373071357457}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / ( ( ( MRS + Const ) + ACS ) / BR ) )", "choosing": "( ( Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ),MUC ) ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8351201745800465}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - DDR ) - Min( ( MDR - ( RRS * RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RMSe ,Max( RRSe,DS ) ),( CS / ( RCSe / ( ( RRSe + ( Max( RCSe,RCSe ) + CS ) ) / Min( ( Max( RMSe,( RRSe - RCSe ) ) + ( ( MUM - MUC ) - MUR ) ) ,DS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( Min( ( CRS - ARS ) ,DDR ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( DS ,CS ) - MLU ) * MUM ) ),CS ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6603988238182976}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_RAM + CRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) )", "obj1": 0.9862204724409449, "obj2": 0.016053802759881206}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU_Server / ( DDR / FirstVNF_Mem ) ) ) * PN ) ) )", "choosing": "( ( MUR / ( MLU / ( MUM - RCSe ) ) ) - Max( Min( RMSe ,MUR ),( DS * RCSe ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6305423578714979}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "( ( Const - ACS ) * ( MRS / ( Max( Min( FirstVNF_Mem ,PN ),Min( ( Max( FirstVNF_RAM_Server,Const ) * MRS ) ,AMS ) ) - ( MRS + BR ) ) ) )", "choosing": "( ( MLU - MUM ) + Max( MUM,( RMSe * ( ( RRSe + MUM ) - ( MUR - Max( RRSe,MUM ) ) ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.009575554640560603}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( Min( FirstVNF_Mem ,DDR ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( ( CRS - ARS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( RCSe * MUM ) ),CS ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6572740994669836}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * ( ( AMS - MDR ) + RRS ) ) ),FirstVNF_RAM ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( ( DS - ( MLU - ( CS + ( RCSe * DS ) ) ) ) / RCSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6900963748740816}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( Const + FirstVNF_Mem ) / ( ARS - ( Const - ( ( ( FirstVNF_Mem / ( BR * ( FirstVNF_Mem_Server + ARS ) ) ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_RAM_Server ) ),( DDR - ( MDR * MDR ) ) ) ) / CRS ) ) ) )", "choosing": "( ( ( ( Min( Min( ( MUC / ( MUC - MUR ) ) ,( RMSe * ( MUM * MUR ) ) ) ,RRSe ) - Max( ( Min( Max( MUC,MLU ) ,Max( MUC,MLU ) ) - Min( ( MUM * MUR ) ,Min( MUM ,CS ) ) ),( MLU * Max( RCSe,RMSe ) ) ) ) / Max( ( Max( MUR,( Max( RRSe,MUR ) + RMSe ) ) / RCSe ),Min( MUM ,RMSe ) ) ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * Min( ( ( CS - MLU ) + Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) ) ,DS ) ) - RMSe ) / ( MLU + MUM ) )", "obj1": 0.28937007874015747, "obj2": 0.5827701161845353}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( ( BR - MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU * RRSe ) ,( ( RRSe + RRSe ) + Max( RCSe,RCSe ) ) ) / ( Max( MUM,MLU ) - ( CS / RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0022751906434388762}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "Max( ( ARS / CRS ),Min( ( ( ARS / CRS ) / Min( ( Const / DDR ) ,BR ) ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5836197200336165}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( Max( ( FirstVNF_Mem * CRS ),( ( ARS - ( FirstVNF_CPU_Server / MRS ) ) - PN ) ),( DDR - Const ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( MLU,( MLU / RMSe ) ) / ( Max( MUR,( MUM / RCSe ) ) * RCSe ) ) ,MUR ) / ( RRSe - MUC ) ) / Min( Min( ( ( Max( DS,RCSe ) + ( DS + RMSe ) ) - ( ( Max( ( MLU * RMSe ),MUM ) / ( MLU * ( MUC * RMSe ) ) ) * RRSe ) ) ,MUC ) ,Max( MUC,RCSe ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6446279945232679}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / RCSe ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / RCSe ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( ( Min( FirstVNF_RAM_Server ,BR ) - FirstVNF_RAM ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - ( Min( MUC ,MUC ) - ( DS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - CRS ) - Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Min( MUC ,RCSe ) ) - ( ( ( MUR * MUM ) / Min( Min( RRSe ,( Max( MUM,CS ) - MUM ) ) ,( MLU - Min( ( ( RCSe - MUC ) - Min( MLU ,MUR ) ) ,( MLU - RRSe ) ) ) ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU_Server - PN ) / ( DDR - AMS ) ) ) )", "choosing": "( Min( Max( Min( RRSe ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) ,( RRSe / RCSe ) ) / Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( Max( RMSe,RCSe ) + ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( Max( ( AMS / ARS ),Min( CRS ,ARS ) ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( RRSe / RCSe ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( ( RRSe / RCSe ) ,Min( MLU ,MUM ) ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / BR ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem * PN ) ) / ( Max( MDR,BR ) + ( MDR + ( ( RRS / BR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( ( MUR * ( ( RRSe * MLU ) / RRSe ) ) - MUM ),MLU ) + Max( ( ( MUR - MUC ) / CS ),MUM ) ) / Min( MLU ,( ( MUR * ( ( RRSe * MLU ) / RRSe ) ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( CRS - ARS ) / ( ( ( CRS - ARS ) / ( CRS - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( ( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) ) / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.8228346456692913, "obj2": 0.1193066699876313}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) + BR ) - Min( FirstVNF_RAM ,( ARS / ACS ) ) )", "choosing": "( Min( ( CS / ( ( MUM - MUR ) / ( DS + MUC ) ) ) ,Min( RMSe ,RCSe ) ) / ( DS + MUC ) )", "obj1": 0.8996062992125984, "obj2": 0.09657874736243155}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( Min( FirstVNF_RAM ,( ARS / ACS ) ) - ACS ) )", "choosing": "Max( Min( RRSe ,MLU ),( ( RMSe - ( RCSe * MLU ) ) / RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.18104607242916815}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - ( Max( DS,RMSe ) + ( CS / MUR ) ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.7755905511811023, "obj2": 0.1613373071357457}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.029794413971344247}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / ( ( ( MRS + Const ) + ACS ) / BR ) )", "choosing": "( ( Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ),MUC ) ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8351201745800465}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_RAM + CRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) )", "obj1": 0.9862204724409449, "obj2": 0.016053802759881206}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU_Server / ( DDR / FirstVNF_Mem ) ) ) * PN ) ) )", "choosing": "( ( MUR / ( MLU / ( MUM - RCSe ) ) ) - Max( Min( RMSe ,MUR ),( DS * RCSe ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6305423578714979}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU / Const ) / MDR ) ,Min( ARS ,Const ) ) * ACS ) + DDR ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_RAM_Server ,MRS ) * BR ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( RMSe ,CS ) - MLU ) * MUM ) ),CS ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6603988238182976}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * ( ( AMS - MDR ) + RRS ) ) ),FirstVNF_RAM ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( ( DS - ( MLU - ( CS + ( RCSe * DS ) ) ) ) / RCSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6900963748740816}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( Const + FirstVNF_Mem ) / ( ARS - ( Const - ( ( ( FirstVNF_Mem / ( BR * ( FirstVNF_Mem_Server + ARS ) ) ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_RAM_Server ) ),( DDR - ( MDR * MDR ) ) ) ) / CRS ) ) ) )", "choosing": "( ( ( ( Min( Min( ( MUC / ( MUC - MUR ) ) ,( RMSe * ( MUM * MUR ) ) ) ,RRSe ) - Max( ( Min( Max( MUC,MLU ) ,Max( MUC,MLU ) ) - Min( ( MUM * MUR ) ,Min( MUM ,CS ) ) ),( MLU * Max( RCSe,RMSe ) ) ) ) / Max( ( Max( MUR,( Max( RRSe,MUR ) + RMSe ) ) / RCSe ),Min( MUM ,RMSe ) ) ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * Min( ( ( CS - MLU ) + Max( Min( RRSe ,MLU ),( RRSe / RCSe ) ) ) ,DS ) ) - RMSe ) / ( MLU + MUM ) )", "obj1": 0.28937007874015747, "obj2": 0.5827701161845353}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( Min( FirstVNF_Mem ,DDR ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( ( CRS - ARS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( RCSe * MUM ) ),CS ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6572740994669836}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( FirstVNF_RAM / Min( ( MDR * Max( ( Const - MRS ),ACS ) ) ,FirstVNF_RAM_Server ) ) / Max( ARS,CRS ) )", "choosing": "( ( ( MLU / ( Max( ( MUM + ( MUM * ( MUR - DS ) ) ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2637795275590551, "obj2": 0.5997913854267901}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "Max( ( ARS / CRS ),Min( ( ( ARS / CRS ) / Min( ( Const / DDR ) ,BR ) ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5836197200336165}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "( ( ARS / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6519652914449736}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( ( ( FirstVNF_Mem_Server / Const ) + Max( Min( FirstVNF_Mem_Server ,( ( ( Const * FirstVNF_RAM ) - PN ) / FirstVNF_Mem ) ),FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server - ( ( PN * Min( DDR ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( ( RMSe - ( RMSe - Min( MUM ,( RMSe - Min( MUM ,MUR ) ) ) ) ) * ( ( CS * ( MUM * RRSe ) ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe / MUR ) ,MUM ) ) ) ) ) - ( RMSe - Min( MUM ,( RMSe - Min( MUM ,MUR ) ) ) ) ) * ( ( CS * ( MUM * RRSe ) ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe / MUR ) ,MUM ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6422794739488952}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( Min( ( CRS - ARS ) ,DDR ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( DS ,CS ) - MLU ) * MUM ) ),CS ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6603988238182976}, {"determining": "( Max( ARS,PN ) / FirstVNF_RAM_Server )", "choosing": "( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.281496062992126, "obj2": 0.5867630835626504}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( ( MRS / FirstVNF_RAM_Server ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( RMSe ,( CS + DS ) ) - DS ) * MUM ) ),CS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) / ( FirstVNF_Mem - ( Max( ACS,MRS ) - AMS ) ) ) - Min( Min( ( ( FirstVNF_RAM - MRS ) + Min( ( Max( ( FirstVNF_RAM_Server + MRS ),FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR + ( ( MDR / RRS ) + BR ) ) ) ,( ( MDR - ( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( Max( RRSe,RRSe ) / ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) ) ) - RRSe ) / ( MUR + DS ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - DDR ) - Min( ( MDR - ( RRS * RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RMSe ,Max( RRSe,DS ) ),( CS / ( RCSe / ( ( RRSe + ( Max( RCSe,RCSe ) + CS ) ) / Min( ( Max( RMSe,( RRSe - RCSe ) ) + ( ( MUM - MUC ) - MUR ) ) ,DS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}], "15": [{"determining": "( ( Max( MDR,BR ) + ( ( FirstVNF_RAM_Server * ( CRS - ( ( Max( DDR,MRS ) / BR ) - FirstVNF_RAM_Server ) ) ) / MDR ) ) / Min( CRS ,BR ) )", "choosing": "( ( ( Min( Min( ( ( ( CS / MUC ) * RCSe ) * RMSe ) ,Max( MUC,RCSe ) ) ,MUM ) * CS ) / RMSe ) / ( Max( ( ( MUR - DS ) - MUM ),MLU ) * ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS / ARS ),Min( CRS ,ARS ) ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( RRSe / RCSe ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( ( RRSe / RCSe ) ,Min( MLU ,MUM ) ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( ( CRS - ARS ) / ( ( ( CRS - ARS ) / ( CRS - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( ( ( RMSe / ( RMSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) ) / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.8228346456692913, "obj2": 0.1193066699876313}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( AMS + ( FirstVNF_Mem - BR ) ) - ( ( AMS + DDR ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUC / RMSe ) ,Min( ( MUM - RMSe ) ,( RMSe + MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.15000466700222567}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) + BR ) - Min( FirstVNF_RAM ,( ARS / ACS ) ) )", "choosing": "( Min( ( CS / ( ( MUM - MUR ) / ( DS + MUC ) ) ) ,Min( RMSe ,RCSe ) ) / ( DS + MUC ) )", "obj1": 0.8996062992125984, "obj2": 0.09657874736243155}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( FirstVNF_Mem - ( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( Min( DS ,MUC ) - ( ( Min( RMSe ,MUM ) - MLU ) * MUM ) ) / ( MUM + Max( MUC,RMSe ) ) )", "obj1": 0.8740157480314961, "obj2": 0.11120427351079444}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( Min( FirstVNF_RAM ,( ARS / ACS ) ) - ACS ) )", "choosing": "Max( Min( RRSe ,MLU ),( ( RMSe - ( RCSe * MLU ) ) / RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.18104607242916815}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - ( Max( DS,RMSe ) + ( CS / MUR ) ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.7755905511811023, "obj2": 0.1613373071357457}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( Min( FirstVNF_CPU ,( ( Const + RRS ) * ( Const / FirstVNF_CPU_Server ) ) ) * ( Const / CRS ) )", "choosing": "( Min( ( CS + MUM ) ,( Min( ( RCSe - DS ) ,MLU ) + ( RMSe - MUR ) ) ) - ( CS * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.7366465591625336}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( ( Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - ( ACS / ARS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) + Max( Min( ARS ,FirstVNF_Mem ),( MRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU * MLU ) + Min( RMSe ,( ( MUM * MUM ) + ( CS / DS ) ) ) ) - Min( Min( MUR ,RCSe ) ,MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.10324740509202322}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.029794413971344247}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / ( ( ( MRS + Const ) + ACS ) / BR ) )", "choosing": "( ( Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ),MUC ) ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8351201745800465}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Min( ( ( ( Min( ( MRS / Min( ACS ,FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) * FirstVNF_RAM ) * Min( ( FirstVNF_Mem + ( ( Const - FirstVNF_Mem ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ,( BR + FirstVNF_RAM ) ) ) ,( ARS + AMS ) ) * ( FirstVNF_CPU_Server + Max( Const,ACS ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5829867183050506}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "( ( Min( ( MDR * Max( ( Const - MRS ),ACS ) ) ,FirstVNF_RAM_Server ) / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6092883788879292}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_RAM + CRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) )", "obj1": 0.9862204724409449, "obj2": 0.016053802759881206}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server / Const ) + ( ( RRS - FirstVNF_RAM_Server ) * Min( DDR ,ACS ) ) ) / ( CRS - ( ( ( RRS - FirstVNF_RAM_Server ) * Min( DDR ,ACS ) ) / DDR ) ) )", "choosing": "( ( RMSe - ( ( ( Max( MUC,MUR ) + RCSe ) / RMSe ) - Min( MUM ,( RMSe - Min( MUM ,MUR ) ) ) ) ) * ( ( CS * ( MUM * RRSe ) ) / ( ( ( Max( MUC,MUR ) + RCSe ) / RMSe ) / ( RCSe / Min( ( RRSe / ( RRSe - DS ) ) ,MUM ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6272218846547489}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server / AMS ) ,( MDR - ACS ) ),FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM * ARS ) * ( ARS - FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_RAM ,AMS ),Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe + ( MLU + MUC ) ) ,( MUC - ( RRSe + MUM ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6775935409997242}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( Min( ( CRS - ARS ) ,DDR ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( DS ,CS ) - MLU ) * MUM ) ),CS ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6603988238182976}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * ( ( AMS - MDR ) + RRS ) ) ),FirstVNF_RAM ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( ( DS - ( MLU - ( CS + ( RCSe * DS ) ) ) ) / RCSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6900963748740816}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( MDR - CRS ) + Max( MDR,RRS ) )", "choosing": "( Min( RRSe ,MUC ) - ( ( CS + MUR ) - ( Min( RRSe ,MUC ) - ( DS / RCSe ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6858910302400649}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( Min( FirstVNF_Mem ,DDR ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( ( CRS - ARS ) / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( RCSe * MUM ) ),CS ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6572740994669836}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( FirstVNF_RAM / Min( ( MDR * Max( ( Const - MRS ),ACS ) ) ,FirstVNF_RAM_Server ) ) / Max( ARS,CRS ) )", "choosing": "( ( ( MLU / ( Max( ( MUM + ( MUM * ( MUR - DS ) ) ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2637795275590551, "obj2": 0.5997913854267901}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( RRS / ARS ) ) * ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_Mem_Server / BR ) ) ) ,( ( ( FirstVNF_Mem_Server + ACS ) + ( ACS - FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( ( CS * ( DS - MLU ) ) - Min( Max( DS,RMSe ) ,( MLU * Max( MLU,MUM ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6778094077785316}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "( ( ARS / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6519652914449736}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( ( ( FirstVNF_Mem_Server / Const ) + Max( Min( FirstVNF_Mem_Server ,( ( ( Const * FirstVNF_RAM ) - PN ) / FirstVNF_Mem ) ),FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server - ( ( PN * Min( DDR ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( ( RMSe - ( RMSe - Min( MUM ,( RMSe - Min( MUM ,MUR ) ) ) ) ) * ( ( CS * ( MUM * RRSe ) ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe / MUR ) ,MUM ) ) ) ) ) - ( RMSe - Min( MUM ,( RMSe - Min( MUM ,MUR ) ) ) ) ) * ( ( CS * ( MUM * RRSe ) ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe / MUR ) ,MUM ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6422794739488952}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU / Const ) / MDR ) ,Min( ARS ,Const ) ) * ACS ) + DDR ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_RAM_Server ,MRS ) * BR ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( RMSe ,CS ) - MLU ) * MUM ) ),CS ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6603988238182976}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) / ( FirstVNF_Mem - ( Max( ACS,MRS ) - AMS ) ) ) - Min( Min( ( ( FirstVNF_RAM - MRS ) + Min( ( Max( ( FirstVNF_RAM_Server + MRS ),FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR + ( ( MDR / RRS ) + BR ) ) ) ,( ( MDR - ( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( Max( RRSe,RRSe ) / ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) ) ) - RRSe ) / ( MUR + DS ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( ( MRS / FirstVNF_RAM_Server ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( RMSe ,( CS + DS ) ) - DS ) * MUM ) ),CS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - DDR ) - Min( ( MDR - ( RRS * RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RMSe ,Max( RRSe,DS ) ),( CS / ( RCSe / ( ( RRSe + ( Max( RCSe,RCSe ) + CS ) ) / Min( ( Max( RMSe,( RRSe - RCSe ) ) + ( ( MUM - MUC ) - MUR ) ) ,DS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}], "16": [{"determining": "( ( ( RRS + Const ) * Min( MDR ,Max( FirstVNF_Mem,RRS ) ) ) / ( CRS - ARS ) )", "choosing": "( ( Min( Min( CS ,MUM ) ,Max( MUR,Min( RMSe ,RRSe ) ) ) / RMSe ) * ( ( MLU - ( DS * ( MUM * Min( MLU ,RCSe ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,BR ) + ( ( FirstVNF_RAM_Server * ( CRS - ( ( Max( DDR,MRS ) / BR ) - FirstVNF_RAM_Server ) ) ) / MDR ) ) / Min( CRS ,BR ) )", "choosing": "( ( ( Min( Min( ( ( ( CS / MUC ) * RCSe ) * RMSe ) ,Max( MUC,RCSe ) ) ,MUM ) * CS ) / RMSe ) / ( Max( ( ( MUR - DS ) - MUM ),MLU ) * ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( MDR * RRS ) + ( FirstVNF_Mem_Server / MRS ) ) * ( ( BR * DDR ) - Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( CRS + MRS ) ) ) )", "choosing": "( ( Max( DS,RCSe ) / ( Max( MUM,( ( MUC + ( CS * MUR ) ) - ( Max( DS,RMSe ) + ( CS / MUR ) ) ) ) * MUR ) ) / ( ( MUM * MUM ) + ( CS / DS ) ) )", "obj1": 0.7755905511811023, "obj2": 0.1613373071357457}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ARS / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6549022161604381}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( Min( FirstVNF_RAM ,( ARS / ACS ) ) - ACS ) )", "choosing": "Max( Min( RRSe ,MLU ),( ( RMSe - ( RCSe * MLU ) ) / RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.18104607242916815}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.029794413971344247}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / ( ( ( MRS + Const ) + ACS ) / BR ) )", "choosing": "( ( Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ),MUC ) ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8351201745800465}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( ( ( ( Min( ( MRS / Min( ACS ,FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) * FirstVNF_RAM ) * Min( ( FirstVNF_Mem + ( ( Const - FirstVNF_Mem ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ,( BR + FirstVNF_RAM ) ) ) ,( ARS + AMS ) ) * ( FirstVNF_CPU_Server + Max( Const,ACS ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5829867183050506}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "( ( Min( ( MDR * Max( ( Const - MRS ),ACS ) ) ,FirstVNF_RAM_Server ) / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6092883788879292}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( ( ARS / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6519652914449736}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server / Const ) + ( ( RRS - FirstVNF_RAM_Server ) * Min( DDR ,ACS ) ) ) / ( CRS - ( ( ( RRS - FirstVNF_RAM_Server ) * Min( DDR ,ACS ) ) / DDR ) ) )", "choosing": "( ( RMSe - ( ( ( Max( MUC,MUR ) + RCSe ) / RMSe ) - Min( MUM ,( RMSe - Min( MUM ,MUR ) ) ) ) ) * ( ( CS * ( MUM * RRSe ) ) / ( ( ( Max( MUC,MUR ) + RCSe ) / RMSe ) / ( RCSe / Min( ( RRSe / ( RRSe - DS ) ) ,MUM ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6272218846547489}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "( ( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS + DDR ) ) ) ) / MDR ) ) - FirstVNF_RAM ) - ( ARS - ARS ) )", "choosing": "Max( Max( DS,MUR ),Min( Min( Min( MLU ,Max( RRSe,Min( CS ,RMSe ) ) ) ,CS ) ,MLU ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( ( FirstVNF_RAM / Min( ( MDR * Max( ( Const - MRS ),ACS ) ) ,FirstVNF_RAM_Server ) ) / Max( ARS,CRS ) )", "choosing": "( ( ( MLU / ( Max( ( MUM + ( MUM * ( MUR - DS ) ) ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2637795275590551, "obj2": 0.5997913854267901}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( ( ( FirstVNF_Mem_Server / Const ) + Max( Min( FirstVNF_Mem_Server ,( ( ( Const * FirstVNF_RAM ) - PN ) / FirstVNF_Mem ) ),FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server - ( ( PN * Min( DDR ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( ( RMSe - ( RMSe - Min( MUM ,( RMSe - Min( MUM ,MUR ) ) ) ) ) * ( ( CS * ( MUM * RRSe ) ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe / MUR ) ,MUM ) ) ) ) ) - ( RMSe - Min( MUM ,( RMSe - Min( MUM ,MUR ) ) ) ) ) * ( ( CS * ( MUM * RRSe ) ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe / MUR ) ,MUM ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6422794739488952}, {"determining": "( ( FirstVNF_Mem * ( CRS / RRS ) ) / ( Max( CRS,( Min( Max( FirstVNF_CPU,CRS ) ,FirstVNF_Mem ) / ACS ) ) + FirstVNF_RAM ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39960629921259844, "obj2": 0.49130429239194723}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( ( MRS / FirstVNF_RAM_Server ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( RMSe ,( CS + DS ) ) - DS ) * MUM ) ),CS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) / ( FirstVNF_Mem - ( Max( ACS,MRS ) - AMS ) ) ) - Min( Min( ( ( FirstVNF_RAM - MRS ) + Min( ( Max( ( FirstVNF_RAM_Server + MRS ),FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR + ( ( MDR / RRS ) + BR ) ) ) ,( ( MDR - ( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( Max( RRSe,RRSe ) / ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) ) ) - RRSe ) / ( MUR + DS ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - DDR ) - Min( ( MDR - ( RRS * RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RMSe ,Max( RRSe,DS ) ),( CS / ( RCSe / ( ( RRSe + ( Max( RCSe,RCSe ) + CS ) ) / Min( ( Max( RMSe,( RRSe - RCSe ) ) + ( ( MUM - MUC ) - MUR ) ) ,DS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( ( Min( ( Const / DDR ) ,BR ) / CRS ) / Max( ARS,CRS ) )", "choosing": "( ( ( MLU / ( Max( ( Max( ( RRSe + RRSe ),MUC ) + ( MUM * DS ) ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2637795275590551, "obj2": 0.5997913854267901}, {"determining": "( ( FirstVNF_Mem * ( CRS / RRS ) ) / ( Max( CRS,( Min( Max( FirstVNF_CPU,CRS ) ,FirstVNF_Mem ) / ACS ) ) + FirstVNF_RAM ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( Max( ( AMS / ARS ),Min( CRS ,ARS ) ) / ( CRS - ARS ) )", "choosing": "( ( ( CS - ( DS * ( RRSe / RCSe ) ) ) / ( RMSe / ( CS - RRSe ) ) ) * ( Min( ( RRSe / RCSe ) ,Min( MLU ,MUM ) ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( ( Const + RRS ) * ( RRS + DDR ) ) / ( ( ( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) / ( CRS - ARS ) ) - Max( FirstVNF_Mem_Server,Min( MDR ,Max( FirstVNF_Mem,RRS ) ) ) ) )", "choosing": "( ( RMSe / ( ( RMSe - ( Min( RCSe ,MUC ) - Min( MLU ,RCSe ) ) ) + MUC ) ) * ( MUC * ( CS - ( DS * ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + Const ) * Min( MDR ,Max( FirstVNF_Mem,RRS ) ) ) / ( CRS - ARS ) )", "choosing": "( ( Min( Min( CS ,MUM ) ,Max( MUR,Min( RMSe ,RRSe ) ) ) / RMSe ) * ( ( MLU - ( DS * ( MUM * Min( MLU ,RCSe ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / Max( Min( Min( Min( MUM ,MLU ) ,( MLU + Max( MUC,MUM ) ) ) ,CS ),( RCSe + CS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.11125446584975732}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ARS / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6549022161604381}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.029794413971344247}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / ( ( ( MRS + Const ) + ACS ) / BR ) )", "choosing": "( ( Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ),MUC ) ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8351201745800465}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( ( ( ( Min( ( MRS / Min( ACS ,FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) * FirstVNF_RAM ) * Min( ( FirstVNF_Mem + ( ( Const - FirstVNF_Mem ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ,( BR + FirstVNF_RAM ) ) ) ,( ARS + AMS ) ) * ( FirstVNF_CPU_Server + Max( Const,ACS ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5829867183050506}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "( ( Min( ( MDR * Max( ( Const - MRS ),ACS ) ) ,FirstVNF_RAM_Server ) / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6092883788879292}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( ( ARS / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6519652914449736}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server / Const ) + ( ( RRS - FirstVNF_RAM_Server ) * Min( DDR ,ACS ) ) ) / ( CRS - ( ( ( RRS - FirstVNF_RAM_Server ) * Min( DDR ,ACS ) ) / DDR ) ) )", "choosing": "( ( RMSe - ( ( ( Max( MUC,MUR ) + RCSe ) / RMSe ) - Min( MUM ,( RMSe - Min( MUM ,MUR ) ) ) ) ) * ( ( CS * ( MUM * RRSe ) ) / ( ( ( Max( MUC,MUR ) + RCSe ) / RMSe ) / ( RCSe / Min( ( RRSe / ( RRSe - DS ) ) ,MUM ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6272218846547489}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( Const - CRS ) + ( Const - CRS ) )", "choosing": "( RCSe - ( DS / RCSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7650247193491906}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.08858267716535433, "obj2": 0.8655603679763583}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( ( FirstVNF_RAM / Min( ( MDR * Max( ( Const - MRS ),ACS ) ) ,FirstVNF_RAM_Server ) ) / Max( ARS,CRS ) )", "choosing": "( ( ( MLU / ( Max( ( MUM + ( MUM * ( MUR - DS ) ) ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2637795275590551, "obj2": 0.5997913854267901}, {"determining": "( ( CRS + FirstVNF_RAM ) / ( ( BR + DDR ) * ( Const * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( RMSe,MLU ) ,( MLU + RRSe ) ) - ( ( RCSe + DS ) - ( RMSe / ( ( ( RCSe * CS ) * ( DS + CS ) ) / ( Min( MUC ,CS ) / Max( MUC,MUM ) ) ) ) ) ) ,( Max( Max( CS,MUC ),( MLU + MUM ) ) + ( ( MUM + MLU ) * ( MUM + RCSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6356947822150367}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Max( ( RRS * Const ),FirstVNF_RAM ) * ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( ( CS + MUR ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6446811943919459}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( Max( Const,Max( MRS,ACS ) ) / MDR ) - ( Const - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - ( DS + CS ) ) ,( ( MUR - RCSe ) / RMSe ) )", "obj1": 0.2263779527559055, "obj2": 0.6410117178196905}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( Const + RRS ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( Const / CRS ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( ( CS + MUR ) - DS ) ,MLU ) + ( RMSe - MUR ) ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6516880216273412}, {"determining": "( ( ( FirstVNF_Mem_Server / Const ) + Max( Min( FirstVNF_Mem_Server ,( ( ( Const * FirstVNF_RAM ) - PN ) / FirstVNF_Mem ) ),FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server - ( ( PN * Min( DDR ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( ( RMSe - ( RMSe - Min( MUM ,( RMSe - Min( MUM ,MUR ) ) ) ) ) * ( ( CS * ( MUM * RRSe ) ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe / MUR ) ,MUM ) ) ) ) ) - ( RMSe - Min( MUM ,( RMSe - Min( MUM ,MUR ) ) ) ) ) * ( ( CS * ( MUM * RRSe ) ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe / MUR ) ,MUM ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6422794739488952}, {"determining": "( ( FirstVNF_Mem * ( CRS / RRS ) ) / ( Max( CRS,( Min( Max( FirstVNF_CPU,CRS ) ,FirstVNF_Mem ) / ACS ) ) + FirstVNF_RAM ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39960629921259844, "obj2": 0.49130429239194723}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( BR + MRS ) + ( AMS - AMS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS + DDR ) ) ) ) / MDR ) ) - FirstVNF_RAM ) - ( ARS - ARS ) )", "choosing": "Max( Max( DS,MUR ),Min( Min( Min( MLU ,Max( RRSe,Min( CS ,RMSe ) ) ) ,CS ) ,MLU ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) / ( FirstVNF_Mem - ( Max( ACS,MRS ) - AMS ) ) ) - Min( Min( ( ( FirstVNF_RAM - MRS ) + Min( ( Max( ( FirstVNF_RAM_Server + MRS ),FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR + ( ( MDR / RRS ) + BR ) ) ) ,( ( MDR - ( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( Max( RRSe,RRSe ) / ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) ) ) - RRSe ) / ( MUR + DS ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( ( MRS / FirstVNF_RAM_Server ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( RMSe ,( CS + DS ) ) - DS ) * MUM ) ),CS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( FirstVNF_Mem * ( Const / CRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6326417034095524}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - DDR ) - Min( ( MDR - ( RRS * RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RMSe ,Max( RRSe,DS ) ),( CS / ( RCSe / ( ( RRSe + ( Max( RCSe,RCSe ) + CS ) ) / Min( ( Max( RMSe,( RRSe - RCSe ) ) + ( ( MUM - MUC ) - MUR ) ) ,DS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( ( Min( ( Const / DDR ) ,BR ) / CRS ) / Max( ARS,CRS ) )", "choosing": "( ( ( MLU / ( Max( ( Max( ( RRSe + RRSe ),MUC ) + ( MUM * DS ) ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2637795275590551, "obj2": 0.5997913854267901}, {"determining": "( ( FirstVNF_Mem * ( CRS / RRS ) ) / ( Max( CRS,( Min( Max( FirstVNF_CPU,CRS ) ,FirstVNF_Mem ) / ACS ) ) + FirstVNF_RAM ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}], "18": [{"determining": "( ( ( MRS - BR ) - FirstVNF_RAM ) / Max( ( ARS * RRS ),( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( DS - ( Min( RMSe ,RMSe ) / ( MUC - ( ( MLU - MUC ) * RRSe ) ) ) ) + MUC ) ) * Max( ( RRSe - ( MUR - MUC ) ),( MUC - ( CS * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + RRS ) * ( RRS + DDR ) ) / ( ( ( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) / ( CRS - ARS ) ) - Max( FirstVNF_Mem_Server,Min( MDR ,Max( FirstVNF_Mem,RRS ) ) ) ) )", "choosing": "( ( RMSe / ( ( RMSe - ( Min( RCSe ,MUC ) - Min( MLU ,RCSe ) ) ) + MUC ) ) * ( MUC * ( CS - ( DS * ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / Max( Min( Min( Min( MUM ,MLU ) ,( MLU + Max( MUC,MUM ) ) ) ,CS ),( RCSe + CS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.11125446584975732}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ARS / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6549022161604381}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.029794413971344247}, {"determining": "( ( ARS + CRS ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( MUC,( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6260678301049835}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / ( ( ( MRS + Const ) + ACS ) / BR ) )", "choosing": "( ( Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ),MUC ) ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8351201745800465}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ARS ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU + MLU ) / Min( ( ( CS * MUM ) / ( Max( MLU,( Max( ( MUC + MLU ),MUM ) * MUR ) ) / Min( ( RCSe * MUM ) ,MLU ) ) ) ,RRSe ) )", "obj1": 0.20866141732283464, "obj2": 0.6497812782441668}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( ( ( ( Min( ( MRS / Min( ACS ,FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) * FirstVNF_RAM ) * Min( ( FirstVNF_Mem + ( ( Const - FirstVNF_Mem ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ,( BR + FirstVNF_RAM ) ) ) ,( ARS + AMS ) ) * ( FirstVNF_CPU_Server + Max( Const,ACS ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5829867183050506}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( Max( Min( FirstVNF_Mem ,( DDR * ACS ) ),Min( ( Max( FirstVNF_RAM_Server,Const ) * MRS ) ,FirstVNF_Mem_Server ) ) - ( MRS + BR ) )", "choosing": "Max( ( MLU / ( MLU / ( ( RRSe / MUC ) * CS ) ) ),( ( RCSe + MUC ) / ( MUM * MUR ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7532370823298595}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS * AMS ) ) ) / Max( CRS,ARS ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.25393700787401574, "obj2": 0.6101284791183507}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) + RRSe ) ) / ( MLU / CS ) )", "obj1": 0.22244094488188976, "obj2": 0.6350066690891187}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) / ( FirstVNF_Mem - ( Max( ACS,MRS ) - AMS ) ) ) - Min( Min( ( ( FirstVNF_RAM - MRS ) + Min( ( Max( ( FirstVNF_RAM_Server + MRS ),FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR + ( ( MDR / RRS ) + BR ) ) ) ,( ( MDR - ( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( Max( RRSe,RRSe ) / ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) ) ) - RRSe ) / ( MUR + DS ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Min( AMS ,( Min( ARS ,( Max( ( FirstVNF_RAM_Server * BR ),FirstVNF_CPU ) * RRS ) ) + FirstVNF_Mem ) ) / Max( Min( ( ACS * PN ) ,PN ),Min( MRS ,( CRS * ( RRS * Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( DS + MUC ) + Min( Min( ( MLU * ( RCSe / ( MUR * MUC ) ) ) ,Min( MUM ,MUR ) ) ,Max( DS,DS ) ) ) ) / ( RRSe - ( ( ( RRSe * RCSe ) * ( ( MUR / Max( RMSe,MUM ) ) / RMSe ) ) - ( DS - ( RCSe * MUM ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6394126428028125}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( FirstVNF_RAM / Max( MRS,MRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( DS - CS ) ) * ( RMSe - ( ( Max( DS,MUC ) - ( Min( MUR ,MLU ) / ( DS - CS ) ) ) / ( RCSe + MUM ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5976498545330919}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( Max( ACS,MRS ) + ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,Max( RCSe,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) ) + RRSe ) ) / ( MUR / CS ) )", "obj1": 0.30118110236220474, "obj2": 0.5691365039007791}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( Min( ( MDR * Max( ( Const - MRS ),ACS ) ) ,FirstVNF_RAM_Server ) / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6092883788879292}, {"determining": "( ( FirstVNF_Mem * ( CRS / RRS ) ) / ( Max( CRS,( Min( Max( FirstVNF_CPU,CRS ) ,FirstVNF_Mem ) / ACS ) ) + FirstVNF_RAM ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39960629921259844, "obj2": 0.49130429239194723}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS + DDR ) ) ) ) / MDR ) ) - FirstVNF_RAM ) - ( ARS - ARS ) )", "choosing": "Max( Max( DS,MUR ),Min( Min( Min( MLU ,Max( RRSe,Min( CS ,RMSe ) ) ) ,CS ) ,MLU ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - DDR ) - Min( ( MDR - ( RRS * RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RMSe ,Max( RRSe,DS ) ),( CS / ( RCSe / ( ( RRSe + ( Max( RCSe,RCSe ) + CS ) ) / Min( ( Max( RMSe,( RRSe - RCSe ) ) + ( ( MUM - MUC ) - MUR ) ) ,DS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( ( MRS / FirstVNF_RAM_Server ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( RMSe ,( CS + DS ) ) - DS ) * MUM ) ),CS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( ( FirstVNF_Mem * ( CRS / RRS ) ) / ( Max( CRS,( Min( Max( FirstVNF_CPU,CRS ) ,FirstVNF_Mem ) / ACS ) ) + FirstVNF_RAM ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( ( RRS + Const ) * Min( MDR ,Max( FirstVNF_Mem,RRS ) ) ) / ( CRS - ARS ) )", "choosing": "( ( Min( Min( CS ,MUM ) ,Max( MUR,Min( RMSe ,RRSe ) ) ) / RMSe ) * ( ( MLU - ( DS * ( MUM * Min( MLU ,RCSe ) ) ) ) / ( RMSe / ( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - ( ACS + ( ( FirstVNF_CPU / ( ( Min( Const ,( ARS - MDR ) ) / ( FirstVNF_Mem / MDR ) ) + ARS ) ) - Max( MDR,Min( ( FirstVNF_RAM * BR ) ,MDR ) ) ) ) )", "choosing": "( Min( ( ( CS * CS ) / ( Max( MLU,( Max( ( MUC + MLU ),MUM ) * MUR ) ) / Min( ( RCSe * MUM ) ,MLU ) ) ) ,MUR ) / ( Max( MUR,MUM ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - ( ACS + ( ( FirstVNF_CPU / ( ( Min( Const ,( ARS - MDR ) ) / ( FirstVNF_Mem / MDR ) ) + ARS ) ) - Max( MDR,BR ) ) ) )", "choosing": "( Min( ( ( CS * MUM ) / ( Max( MLU,( Max( ( MUC + MLU ),MUM ) * MUR ) ) / Min( ( RCSe * MUM ) ,MLU ) ) ) ,MUR ) / ( Max( MUR,MUM ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - ( ACS + ( ( FirstVNF_CPU / ( ( Min( Const ,( ARS - MDR ) ) / ( FirstVNF_Mem / MDR ) ) + ARS ) ) - Max( MDR,BR ) ) ) )", "choosing": "( Min( ( ( CS * MUM ) / ( Max( MLU,( Max( ( MUC + MLU ),( CS - RRSe ) ) * MUR ) ) / Min( ( RCSe * MUM ) ,MLU ) ) ) ,MUR ) / ( Max( MUR,MUM ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( Min( ACS ,( Max( ( BR * FirstVNF_CPU ),Const ) - ( MRS / MRS ) ) ) / ( ( MDR / BR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - BR ) - FirstVNF_RAM ) / Max( ( ARS * RRS ),( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( DS - ( Min( RMSe ,RMSe ) / ( MUC - ( ( MLU - MUC ) * RRSe ) ) ) ) + MUC ) ) * Max( ( RRSe - ( MUR - MUC ) ),( MUC - ( CS * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / Max( Min( Min( Min( MUM ,MLU ) ,( MLU + Max( MUC,MUM ) ) ) ,CS ),( RCSe + CS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.11125446584975732}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( ( FirstVNF_Mem - BR ) ,AMS ) ) ),AMS ) - ( ( ACS + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) / Min( ARS ,( ( MRS + ( FirstVNF_Mem_Server - PN ) ) * ( ( FirstVNF_CPU_Server * ( CRS + Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ) + ( ( FirstVNF_RAM_Server - Const ) - CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( Min( ( RMSe / ( DS - Min( CS ,RRSe ) ) ) ,MLU ) - ( CS / CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS - AMS ) / ( FirstVNF_RAM - BR ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / RRSe ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.38848464769316804}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ARS / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6549022161604381}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.029794413971344247}, {"determining": "( ( ARS + CRS ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( MUC,( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6260678301049835}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / ( ( ( MRS + Const ) + ACS ) / BR ) )", "choosing": "( ( Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ),MUC ) ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8351201745800465}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ARS ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU + MLU ) / Min( ( ( CS * MUM ) / ( Max( MLU,( Max( ( MUC + MLU ),MUM ) * MUR ) ) / Min( ( RCSe * MUM ) ,MLU ) ) ) ,RRSe ) )", "obj1": 0.20866141732283464, "obj2": 0.6497812782441668}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( ( ( ( Min( ( MRS / Min( ACS ,FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) * FirstVNF_RAM ) * Min( ( FirstVNF_Mem + ( ( Const - FirstVNF_Mem ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ,( BR + FirstVNF_RAM ) ) ) ,( ARS + AMS ) ) * ( FirstVNF_CPU_Server + Max( Const,ACS ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5829867183050506}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MRS,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( RRSe ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( Max( MUR,MUM ) + MUC ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7504675132606774}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS * AMS ) ) ) / Max( CRS,ARS ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.25393700787401574, "obj2": 0.6101284791183507}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) + RRSe ) ) / ( MLU / CS ) )", "obj1": 0.22244094488188976, "obj2": 0.6350066690891187}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) / ( FirstVNF_Mem - ( Max( ACS,MRS ) - AMS ) ) ) - Min( Min( ( ( FirstVNF_RAM - MRS ) + Min( ( Max( ( FirstVNF_RAM_Server + MRS ),FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR + ( ( MDR / RRS ) + BR ) ) ) ,( ( MDR - ( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( Max( RRSe,RRSe ) / ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) ) ) - RRSe ) / ( MUR + DS ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Min( AMS ,( Min( ARS ,( Max( ( FirstVNF_RAM_Server * BR ),FirstVNF_CPU ) * RRS ) ) + FirstVNF_Mem ) ) / Max( Min( ( ACS * PN ) ,PN ),Min( MRS ,( CRS * ( RRS * Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( DS + MUC ) + Min( Min( ( MLU * ( RCSe / ( MUR * MUC ) ) ) ,Min( MUM ,MUR ) ) ,Max( DS,DS ) ) ) ) / ( RRSe - ( ( ( RRSe * RCSe ) * ( ( MUR / Max( RMSe,MUM ) ) / RMSe ) ) - ( DS - ( RCSe * MUM ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6394126428028125}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( FirstVNF_RAM / Max( MRS,MRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( DS - CS ) ) * ( RMSe - ( ( Max( DS,MUC ) - ( Min( MUR ,MLU ) / ( DS - CS ) ) ) / ( RCSe + MUM ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5976498545330919}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( Max( ACS,MRS ) + ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,Max( RCSe,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) ) + RRSe ) ) / ( MUR / CS ) )", "obj1": 0.30118110236220474, "obj2": 0.5691365039007791}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( Min( ( MDR * Max( ( Const - MRS ),ACS ) ) ,FirstVNF_RAM_Server ) / CRS ) / Min( ( Const / DDR ) ,BR ) )", "choosing": "( ( ( MLU - ( Max( ( RRSe + RRSe ),MUC ) * MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6092883788879292}, {"determining": "( ( FirstVNF_Mem * ( CRS / RRS ) ) / ( Max( CRS,( Min( Max( FirstVNF_CPU,CRS ) ,FirstVNF_Mem ) / ACS ) ) + FirstVNF_RAM ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39960629921259844, "obj2": 0.49130429239194723}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS + DDR ) ) ) ) / MDR ) ) - FirstVNF_RAM ) - ( ARS - ARS ) )", "choosing": "Max( Max( DS,MUR ),Min( Min( Min( MLU ,Max( RRSe,Min( CS ,RMSe ) ) ) ,CS ) ,MLU ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ACS - AMS ) / ( ( FirstVNF_Mem_Server * Const ) / Min( RRS ,( FirstVNF_RAM - BR ) ) ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / Min( CS ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - DDR ) - Min( ( MDR - ( RRS * RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RMSe ,Max( RRSe,DS ) ),( CS / ( RCSe / ( ( RRSe + ( Max( RCSe,RCSe ) + CS ) ) / Min( ( Max( RMSe,( RRSe - RCSe ) ) + ( ( MUM - MUC ) - MUR ) ) ,DS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( ( MRS / ( CRS / FirstVNF_Mem ) ) - Min( ( MRS / FirstVNF_RAM_Server ) ,Min( ( ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) + Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,DS ) / ( DS + Max( ( DS * ( ( Min( RMSe ,( CS + DS ) ) - DS ) * MUM ) ),CS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6481370908877977}, {"determining": "( ( FirstVNF_Mem * ( CRS / RRS ) ) / ( Max( CRS,( Min( Max( FirstVNF_CPU,CRS ) ,FirstVNF_Mem ) / ACS ) ) + FirstVNF_RAM ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}], "20": [{"determining": "( ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / Min( RRS ,( Min( RRS ,( FirstVNF_RAM - BR ) ) - BR ) ) ) / ( ACS - ( ( CRS * ARS ) - ( RRS + ACS ) ) ) )", "choosing": "( ( Min( RRSe ,DS ) + CS ) * Max( Min( MUR ,( RRSe * CS ) ),( RRSe * ( ( CS - MUM ) * ( ( ( CS - MLU ) - RCSe ) / Min( CS ,( CS - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( Max( ( BR * FirstVNF_CPU ),Const ) - ( MRS / MRS ) ) ) / ( ( MDR / BR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / Max( Min( Min( Min( MUM ,MLU ) ,( MLU + Max( MUC,MUM ) ) ) ,CS ),( RCSe + CS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.11125446584975732}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( ( FirstVNF_Mem - BR ) ,AMS ) ) ),AMS ) - ( ( ACS + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) / Min( ARS ,( ( MRS + ( FirstVNF_Mem_Server - PN ) ) * ( ( FirstVNF_CPU_Server * ( CRS + Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ) + ( ( FirstVNF_RAM_Server - Const ) - CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( Min( ( RMSe / ( DS - Min( CS ,RRSe ) ) ) ,MLU ) - ( CS / CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS - AMS ) / ( FirstVNF_RAM - BR ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / RRSe ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.38848464769316804}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.029794413971344247}, {"determining": "( ( ARS + CRS ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( MUC,( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6260678301049835}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / ( ( ( MRS + Const ) + ACS ) / BR ) )", "choosing": "( ( Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ),MUC ) ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8351201745800465}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( ( ( ( Min( ( MRS / Min( ACS ,FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) * FirstVNF_RAM ) * Min( ( FirstVNF_Mem + ( ( Const - FirstVNF_Mem ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ,( BR + FirstVNF_RAM ) ) ) ,( ARS + AMS ) ) * ( FirstVNF_CPU_Server + Max( Const,ACS ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5829867183050506}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( Min( AMS ,( Min( ARS ,( Max( ( FirstVNF_RAM_Server * BR ),FirstVNF_CPU ) * RRS ) ) + FirstVNF_Mem ) ) / Max( Min( ( ACS * PN ) ,PN ),Min( MRS ,( CRS * ( RRS * Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( DS + MUC ) + Min( Min( ( MLU * ( RCSe / ( MUR * MUC ) ) ) ,Min( MUM ,MUR ) ) ,Max( DS,DS ) ) ) ) / ( RRSe - ( ( ( RRSe * RCSe ) * ( ( MUR / Max( RMSe,MUM ) ) / RMSe ) ) - ( DS - ( RCSe * MUM ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6394126428028125}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM * ( AMS / FirstVNF_RAM ) ) ) / ( RRS * FirstVNF_CPU ) ) / ( ( MDR / AMS ) - ACS ) )", "choosing": "( ( RMSe * MUC ) / Max( MUC,( Min( RMSe ,( ( MUR + ( DS * CS ) ) * ( ( CS / ( MLU - RRSe ) ) - Min( RCSe ,MUC ) ) ) ) - ( RCSe / RCSe ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6481012511805225}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS * AMS ) ) ) / Max( CRS,ARS ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.25393700787401574, "obj2": 0.6101284791183507}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) + RRSe ) ) / ( MLU / CS ) )", "obj1": 0.22244094488188976, "obj2": 0.6350066690891187}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_Mem ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe / Max( RRSe,MUR ) ) ,Min( ( MUR - DS ) ,MUR ) ) / ( MUC + DS ) )", "obj1": 0.15551181102362205, "obj2": 0.7501227781097828}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * Max( Max( ( ARS * FirstVNF_RAM_Server ),( CRS * FirstVNF_Mem ) ),Max( ACS,Min( DDR ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( Min( RMSe ,MUR ) * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6481012511805225}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( FirstVNF_RAM / Max( MRS,MRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( DS - CS ) ) * ( RMSe - ( ( Max( DS,MUC ) - ( Min( MUR ,MLU ) / ( DS - CS ) ) ) / ( RCSe + MUM ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5976498545330919}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MRS,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( RRSe ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( Max( MUR,MUM ) + MUC ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7504675132606774}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( ( Max( ACS,MRS ) + ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,Max( RCSe,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) ) + RRSe ) ) / ( MUR / CS ) )", "obj1": 0.30118110236220474, "obj2": 0.5691365039007791}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( ( ACS * AMS ) / ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * MRS ) ) ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( ( ( ( MUC - RRSe ) * ( RCSe - MUC ) ) - ( Min( MUR ,RMSe ) / ( DS / DS ) ) ),( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6079343979936587}, {"determining": "( ( FirstVNF_Mem * ( CRS / RRS ) ) / ( Max( CRS,( Min( Max( FirstVNF_CPU,CRS ) ,FirstVNF_Mem ) / ACS ) ) + FirstVNF_RAM ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39960629921259844, "obj2": 0.49130429239194723}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS + DDR ) ) ) ) / MDR ) ) - FirstVNF_RAM ) - ( ARS - ARS ) )", "choosing": "Max( Max( DS,MUR ),Min( Min( Min( MLU ,Max( RRSe,Min( CS ,RMSe ) ) ) ,CS ) ,MLU ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ACS - AMS ) / ( ( FirstVNF_Mem_Server * Const ) / Min( RRS ,( FirstVNF_RAM - BR ) ) ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / Min( CS ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - DDR ) - Min( ( MDR - ( RRS * RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RMSe ,Max( RRSe,DS ) ),( CS / ( RCSe / ( ( RRSe + ( Max( RCSe,RCSe ) + CS ) ) / Min( ( Max( RMSe,( RRSe - RCSe ) ) + ( ( MUM - MUC ) - MUR ) ) ,DS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( MRS - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.25393700787401574, "obj2": 0.6101284791183507}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}], "21": [{"determining": "( ( CRS / Const ) / Min( ( RRS / FirstVNF_RAM ) ,Min( ( DDR - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( Max( MLU,( ( DS * RCSe ) / RRSe ) ) ,RRSe ) ) / Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / Min( RRS ,( Min( RRS ,( FirstVNF_RAM - BR ) ) - BR ) ) ) / ( ACS - ( ( CRS * ARS ) - ( RRS + ACS ) ) ) )", "choosing": "( ( Min( RRSe ,DS ) + CS ) * Max( Min( MUR ,( RRSe * CS ) ),( RRSe * ( ( CS - MUM ) * ( ( ( CS - MLU ) - RCSe ) / Min( CS ,( CS - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / Max( Min( Min( Min( MUM ,MLU ) ,( MLU + Max( MUC,MUM ) ) ) ,CS ),( RCSe + CS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.11125446584975732}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( ( FirstVNF_Mem - BR ) ,AMS ) ) ),AMS ) - ( ( ACS + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) / Min( ARS ,( ( MRS + ( FirstVNF_Mem_Server - PN ) ) * ( ( FirstVNF_CPU_Server * ( CRS + Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ) + ( ( FirstVNF_RAM_Server - Const ) - CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( Min( ( RMSe / ( DS - Min( CS ,RRSe ) ) ) ,MLU ) - ( CS / CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( ( ACS - AMS ) / ( FirstVNF_RAM - BR ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / RRSe ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.38848464769316804}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ) / Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) ) / Min( DS ,RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.8596646570031381}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.029794413971344247}, {"determining": "( ( ARS + CRS ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( MUC,( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6260678301049835}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / ( ( ( MRS + Const ) + ACS ) / BR ) )", "choosing": "( ( Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ),MUC ) ,MLU ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.8351201745800465}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( ( ( ( Min( ( MRS / Min( ACS ,FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) * FirstVNF_RAM ) * Min( ( FirstVNF_Mem + ( ( Const - FirstVNF_Mem ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ,( BR + FirstVNF_RAM ) ) ) ,( ARS + AMS ) ) * ( FirstVNF_CPU_Server + Max( Const,ACS ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5829867183050506}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / DS )", "obj1": 0.11811023622047244, "obj2": 0.7991279937175133}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( ( ACS / CRS ) / Min( FirstVNF_CPU_Server ,( Min( FirstVNF_Mem ,DDR ) - ( PN + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RMSe ,CS ) / ( Min( DS ,CS ) / ( Max( MUM,RRSe ) + MUC ) ) )", "obj1": 0.11614173228346457, "obj2": 0.8054358767227414}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( Min( AMS ,( Min( ARS ,( Max( ( FirstVNF_RAM_Server * BR ),FirstVNF_CPU ) * RRS ) ) + FirstVNF_Mem ) ) / Max( Min( ( ACS * PN ) ,PN ),Min( MRS ,( CRS * ( RRS * Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( DS + MUC ) + Min( Min( ( MLU * ( RCSe / ( MUR * MUC ) ) ) ,Min( MUM ,MUR ) ) ,Max( DS,DS ) ) ) ) / ( RRSe - ( ( ( RRSe * RCSe ) * ( ( MUR / Max( RMSe,MUM ) ) / RMSe ) ) - ( DS - ( RCSe * MUM ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6394126428028125}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM * ( AMS / FirstVNF_RAM ) ) ) / ( RRS * FirstVNF_CPU ) ) / ( ( MDR / AMS ) - ACS ) )", "choosing": "( ( RMSe * MUC ) / Max( MUC,( Min( RMSe ,( ( MUR + ( DS * CS ) ) * ( ( CS / ( MLU - RRSe ) ) - Min( RCSe ,MUC ) ) ) ) - ( RCSe / RCSe ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6481012511805225}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( ( MDR * RRS ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUM ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( MRS ,PN ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( Min( ( PN + Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( FirstVNF_CPU + PN ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) ,Max( RCSe,( MLU + ( MUM - ( MUM + ( RCSe + MUC ) ) ) ) ) ) / ( Min( Min( CS ,MUR ) ,( RCSe + ( ( CS / MUC ) / Max( Min( DS ,RRSe ),RCSe ) ) ) ) * MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.700386572348784}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS * AMS ) ) ) / Max( CRS,ARS ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.25393700787401574, "obj2": 0.6101284791183507}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) + RRSe ) ) / ( MLU / CS ) )", "obj1": 0.22244094488188976, "obj2": 0.6350066690891187}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_Mem ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe / Max( RRSe,MUR ) ) ,Min( ( MUR - DS ) ,MUR ) ) / ( MUC + DS ) )", "obj1": 0.15551181102362205, "obj2": 0.7501227781097828}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) / Min( DS ,RRSe ) )", "obj1": 0.1062992125984252, "obj2": 0.8226924765038618}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * Max( Max( ( ARS * FirstVNF_RAM_Server ),( CRS * FirstVNF_Mem ) ),Max( ACS,Min( DDR ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( Min( RMSe ,MUR ) * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6481012511805225}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( FirstVNF_RAM / Max( MRS,MRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( DS - CS ) ) * ( RMSe - ( ( Max( DS,MUC ) - ( Min( MUR ,MLU ) / ( DS - CS ) ) ) / ( RCSe + MUM ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5976498545330919}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MRS,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( RRSe ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( Max( MUR,MUM ) + MUC ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7504675132606774}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) / Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,DDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( ( Max( ACS,MRS ) + ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,Max( RCSe,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) ) + RRSe ) ) / ( MUR / CS ) )", "obj1": 0.30118110236220474, "obj2": 0.5691365039007791}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( PN / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RCSe / Min( DS ,RRSe ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( ACS * AMS ) / ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * MRS ) ) ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( ( ( ( MUC - RRSe ) * ( RCSe - MUC ) ) - ( Min( MUR ,RMSe ) / ( DS / DS ) ) ),( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6079343979936587}, {"determining": "( ( FirstVNF_Mem * ( CRS / RRS ) ) / ( Max( CRS,( Min( Max( FirstVNF_CPU,CRS ) ,FirstVNF_Mem ) / ACS ) ) + FirstVNF_RAM ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39960629921259844, "obj2": 0.49130429239194723}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "( ( MUM / RRSe ) * ( RMSe - ( ( Max( DS,MUC ) - ( Min( MUR ,MLU ) / ( DS - CS ) ) ) / ( RCSe + MUM ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS + DDR ) ) ) ) / MDR ) ) - FirstVNF_RAM ) - ( ARS - ARS ) )", "choosing": "Max( Max( DS,MUR ),Min( Min( Min( MLU ,Max( RRSe,Min( CS ,RMSe ) ) ) ,CS ) ,MLU ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ACS - AMS ) / ( ( FirstVNF_Mem_Server * Const ) / Min( RRS ,( FirstVNF_RAM - BR ) ) ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / Min( CS ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Max( Const,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ,AMS ) - ( ( ( MDR * RRS ) / Min( ( Min( CRS ,MDR ) + FirstVNF_RAM_Server ) ,DDR ) ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RCSe,( RCSe / ( MUC * ( Max( Max( RMSe,MUC ),DS ) + ( MLU * RMSe ) ) ) ) ) ) / Min( RRSe ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.8221911089933426}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - DDR ) - Min( ( MDR - ( RRS * RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RMSe ,Max( RRSe,DS ) ),( CS / ( RCSe / ( ( RRSe + ( Max( RCSe,RCSe ) + CS ) ) / Min( ( Max( RMSe,( RRSe - RCSe ) ) + ( ( MUM - MUC ) - MUR ) ) ,DS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}], "22": [{"determining": "( ( ( CRS * ( Min( ( MRS * FirstVNF_RAM_Server ) ,PN ) * CRS ) ) - ( RRS + ACS ) ) / ( ( MDR / BR ) + ( ( FirstVNF_RAM_Server + Max( MRS,( ( ( DDR + MDR ) + FirstVNF_Mem_Server ) + Const ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + MUC ),( MUR / MLU ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( ( ( MLU - CS ) - RCSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) / Min( ( RRS / FirstVNF_RAM ) ,Min( ( DDR - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( Max( MLU,( ( DS * RCSe ) / RRSe ) ) ,RRSe ) ) / Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( RRSe ,Min( Min( MUC ,( MUC - MUR ) ) ,MUM ) ) - Max( ( Min( Max( MUC,MLU ) ,Max( MUC,MLU ) ) - ( ( DS + RCSe ) - Min( MUM ,CS ) ) ),RCSe ) ) / RMSe ) / RMSe ) * ( MUC - ( ( RRSe - ( ( CS / RRSe ) - MUC ) ) + Min( MUC ,DS ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.17855247122403076}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / Max( Min( Min( Min( MUM ,MLU ) ,( MLU + Max( MUC,MUM ) ) ) ,CS ),( RCSe + CS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.11125446584975732}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( ( FirstVNF_Mem - BR ) ,AMS ) ) ),AMS ) - ( ( ACS + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) / Min( ARS ,( ( MRS + ( FirstVNF_Mem_Server - PN ) ) * ( ( FirstVNF_CPU_Server * ( CRS + Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ) + ( ( FirstVNF_RAM_Server - Const ) - CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( Min( ( RMSe / ( DS - Min( CS ,RRSe ) ) ) ,MLU ) - ( CS / CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - AMS ) / ( FirstVNF_RAM - BR ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / RRSe ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.38848464769316804}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8051313268970176}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.029794413971344247}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( AMS ,( Min( ARS ,( Max( ( FirstVNF_RAM_Server * BR ),FirstVNF_CPU ) * RRS ) ) + FirstVNF_Mem ) ) / Max( Min( ( ACS * PN ) ,PN ),Min( MRS ,( CRS * ( RRS * Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( DS + MUC ) + Min( Min( ( MLU * ( RCSe / ( MUR * MUC ) ) ) ,Min( MUM ,MUR ) ) ,Max( DS,DS ) ) ) ) / ( RRSe - ( ( ( RRSe * RCSe ) * ( ( MUR / Max( RMSe,MUM ) ) / RMSe ) ) - ( DS - ( RCSe * MUM ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6394126428028125}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( ( ( ( Min( ( MRS / Min( ACS ,FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) * FirstVNF_RAM ) * Min( ( FirstVNF_Mem + ( ( Const - FirstVNF_Mem ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ,( BR + FirstVNF_RAM ) ) ) ,( ARS + AMS ) ) * ( FirstVNF_CPU_Server + Max( Const,ACS ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5829867183050506}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS * AMS ) ) ) / Max( CRS,ARS ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.25393700787401574, "obj2": 0.6101284791183507}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( BR / ( Const + DDR ) ) / ( PN + FirstVNF_Mem_Server ) ) ) / ( ACS / CRS ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( Min( ACS ,BR ) / ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( FirstVNF_Mem / BR ) / ARS ) ) )", "choosing": "( ( CS + ( RMSe - ( RCSe * MUM ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.17519685039370078, "obj2": 0.6996810985934546}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) + RRSe ) ) / ( MLU / CS ) )", "obj1": 0.22244094488188976, "obj2": 0.6350066690891187}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_Mem ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe / Max( RRSe,MUR ) ) ,Min( ( MUR - DS ) ,MUR ) ) / ( MUC + DS ) )", "obj1": 0.15551181102362205, "obj2": 0.7501227781097828}, {"determining": "( ( ARS + CRS ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( MUC,( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6260678301049835}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "Max( ( ( Min( ( FirstVNF_Mem + ( AMS - DDR ) ) ,AMS ) * FirstVNF_RAM_Server ) / Max( Const,FirstVNF_RAM_Server ) ),( Min( Const ,Max( CRS,( MDR / BR ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) ) - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) )", "obj1": 0.23228346456692914, "obj2": 0.6237776628205662}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( FirstVNF_RAM / Max( MRS,MRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( DS - CS ) ) * ( RMSe - ( ( Max( DS,MUC ) - ( Min( MUR ,MLU ) / ( DS - CS ) ) ) / ( RCSe + MUM ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5976498545330919}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MRS,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( RRSe ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( Max( MUR,MUM ) + MUC ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7504675132606774}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( ( Max( ACS,MRS ) + ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,Max( RCSe,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) ) + RRSe ) ) / ( MUR / CS ) )", "obj1": 0.30118110236220474, "obj2": 0.5691365039007791}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( ACS * AMS ) / ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * MRS ) ) ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( ( ( ( MUC - RRSe ) * ( RCSe - MUC ) ) - ( Min( MUR ,RMSe ) / ( DS / DS ) ) ),( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6079343979936587}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( MRS - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.2204724409448819, "obj2": 0.6394126428028125}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) - ( Max( ( Max( ACS,AMS ) - Max( Min( CRS ,Const ),( FirstVNF_CPU_Server - ACS ) ) ),AMS ) + MRS ) )", "choosing": "Max( Min( MLU ,( ( DS / CS ) * RCSe ) ),( MLU + Min( ( ( RRSe - MLU ) - RMSe ) ,RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48852752247199216}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "( ( MUM / RRSe ) * ( RMSe - ( ( Max( DS,MUC ) - ( Min( MUR ,MLU ) / ( DS - CS ) ) ) / ( RCSe + MUM ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.004476046514712449}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - DDR ) - Min( ( MDR - ( RRS * RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RMSe ,Max( RRSe,DS ) ),( CS / ( RCSe / ( ( RRSe + ( Max( RCSe,RCSe ) + CS ) ) / Min( ( Max( RMSe,( RRSe - RCSe ) ) + ( ( MUM - MUC ) - MUR ) ) ,DS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS + DDR ) ) ) ) / MDR ) ) - FirstVNF_RAM ) - ( ARS - ARS ) )", "choosing": "Max( Max( DS,MUR ),Min( Min( Min( MLU ,Max( RRSe,Min( CS ,RMSe ) ) ) ,CS ) ,MLU ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ACS - AMS ) / ( ( FirstVNF_Mem_Server * Const ) / Min( RRS ,( FirstVNF_RAM - BR ) ) ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / Min( CS ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem / AMS ) ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( RCSe / Min( Max( ( DS * MLU ),MUR ) ,MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.027807369838058944}, {"determining": "( ( ARS + CRS ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( MUC,( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.23228346456692914, "obj2": 0.6237776628205662}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) + ( PN + Min( ARS ,FirstVNF_RAM ) ) ) + Min( ARS ,Const ) ) - ( ( ARS * MDR ) + MRS ) )", "choosing": "( ( ( RCSe + MUR ) + DS ) / ( ( MUM + Min( MUC ,( ( ( Max( DS,RRSe ) + Max( MLU,RRSe ) ) / DS ) + MLU ) ) ) + Min( ( MUM - ( DS + Max( MLU,( Max( RCSe,MUR ) * MLU ) ) ) ) ,( RCSe * Min( Min( DS ,( MUC / ( CS - DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}], "23": [{"determining": "( ( ACS - ( PN + BR ) ) / ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) / Min( RRS ,( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( Max( ( ( DS - Max( Max( MUM,( RRSe + MUC ) ),( MUM - RMSe ) ) ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( Min( ( MRS * FirstVNF_RAM_Server ) ,PN ) * CRS ) ) - ( RRS + ACS ) ) / ( ( MDR / BR ) + ( ( FirstVNF_RAM_Server + Max( MRS,( ( ( DDR + MDR ) + FirstVNF_Mem_Server ) + Const ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + MUC ),( MUR / MLU ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( ( ( MLU - CS ) - RCSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( RRSe ,Min( Min( MUC ,( MUC - MUR ) ) ,MUM ) ) - Max( ( Min( Max( MUC,MLU ) ,Max( MUC,MLU ) ) - ( ( DS + RCSe ) - Min( MUM ,CS ) ) ),RCSe ) ) / RMSe ) / RMSe ) * ( MUC - ( ( RRSe - ( ( CS / RRSe ) - MUC ) ) + Min( MUC ,DS ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.17855247122403076}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / Max( Min( Min( Min( MUM ,MLU ) ,( MLU + Max( MUC,MUM ) ) ) ,CS ),( RCSe + CS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.11125446584975732}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( ( FirstVNF_Mem - BR ) ,AMS ) ) ),AMS ) - ( ( ACS + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) / Min( ARS ,( ( MRS + ( FirstVNF_Mem_Server - PN ) ) * ( ( FirstVNF_CPU_Server * ( CRS + Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ) + ( ( FirstVNF_RAM_Server - Const ) - CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( Min( ( RMSe / ( DS - Min( CS ,RRSe ) ) ) ,MLU ) - ( CS / CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - AMS ) / ( FirstVNF_RAM - BR ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / RRSe ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.38848464769316804}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( Min( FirstVNF_Mem ,DDR ) - ( Max( AMS,FirstVNF_Mem ) - PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / ( CS * MUM ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.029794413971344247}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ACS ) + ( ( FirstVNF_RAM_Server * Max( MDR,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS / Min( CS ,CS ) ) ) ) ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4821573121148402}, {"determining": "( Min( ( ( ( Min( ( MRS / Min( ACS ,FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) * FirstVNF_RAM ) * Min( ( FirstVNF_Mem + ( ( Const - FirstVNF_Mem ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ,( BR + FirstVNF_RAM ) ) ) ,( ARS + AMS ) ) * ( FirstVNF_CPU_Server + Max( Const,ACS ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5829867183050506}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS * AMS ) ) ) / Max( CRS,ARS ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.25393700787401574, "obj2": 0.6101284791183507}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( Min( ACS ,BR ) / ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( FirstVNF_Mem / BR ) / ARS ) ) )", "choosing": "( ( CS + ( RMSe - ( RCSe * MUM ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.17519685039370078, "obj2": 0.6996810985934546}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ),Max( ( RRS - ACS ),FirstVNF_RAM_Server ) ) ) / MDR ) + ( Const / BR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( MLU - ( RMSe + CS ) ) - ( RCSe - ( MUR * DS ) ) ) ) * Max( Min( MUR ,( RRSe * CS ) ),( RRSe * ( ( CS - ( RCSe * ( Max( MUM,MLU ) * RCSe ) ) ) * Max( Max( ( ( MUR * RCSe ) - RCSe ),RCSe ),CS ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6351613564334222}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_Mem ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe / Max( RRSe,MUR ) ) ,Min( ( MUR - DS ) ,MUR ) ) / ( MUC + DS ) )", "obj1": 0.15551181102362205, "obj2": 0.7501227781097828}, {"determining": "( ( ARS + CRS ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( MUC,( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6260678301049835}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "Max( ( ( Min( ( FirstVNF_Mem + ( AMS - DDR ) ) ,AMS ) * FirstVNF_RAM_Server ) / Max( Const,FirstVNF_RAM_Server ) ),( Min( Const ,Max( CRS,( MDR / BR ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) ) - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) )", "obj1": 0.23228346456692914, "obj2": 0.6237776628205662}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) + RRSe ) ) / ( MLU / CS ) )", "obj1": 0.22244094488188976, "obj2": 0.6350066690891187}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MRS,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( RRSe ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( Max( MUR,MUM ) + MUC ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7504675132606774}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( BR / ( Const + DDR ) ) / ( PN + FirstVNF_Mem_Server ) ) ) / ( ACS / CRS ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Min( ( ( Const + ( FirstVNF_Mem_Server * ( ACS / BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + AMS ) ) ) ,FirstVNF_RAM_Server ) / ( MDR * FirstVNF_Mem ) )", "choosing": "( ( ( CS + MUR ) - ( CS * Max( ( RRSe - MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MLU ) ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.25984251968503935, "obj2": 0.6064685865175953}, {"determining": "( ( Max( ACS,MRS ) + ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,Max( RCSe,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) ) + RRSe ) ) / ( MUR / CS ) )", "obj1": 0.30118110236220474, "obj2": 0.5691365039007791}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( ACS * AMS ) / ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * MRS ) ) ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( ( ( ( MUC - RRSe ) * ( RCSe - MUC ) ) - ( Min( MUR ,RMSe ) / ( DS / DS ) ) ),( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6079343979936587}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) - ( Max( ( Max( ACS,AMS ) - Max( Min( CRS ,Const ),( FirstVNF_CPU_Server - ACS ) ) ),AMS ) + MRS ) )", "choosing": "Max( Min( MLU ,( ( DS / CS ) * RCSe ) ),( MLU + Min( ( ( RRSe - MLU ) - RMSe ) ,RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48852752247199216}, {"determining": "( ( ( FirstVNF_RAM + MDR ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,RRS ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_CPU ,RRS ) ) ) - Max( MRS,( FirstVNF_Mem / MDR ) ) ) ) )", "choosing": "( ( DS * MLU ) / Min( DS ,RCSe ) )", "obj1": 0.9763779527559056, "obj2": 0.027069408518884206}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( RRSe / ( ( ( ( MUM * RRSe ) + CS ) + MLU ) / Min( DS ,RRSe ) ) ) * ( RMSe - ( RCSe * MUM ) ) )", "obj1": 0.9921259842519685, "obj2": 0.00429977607171186}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) - DDR ) - Min( ( MDR - ( RRS * RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RMSe ,Max( RRSe,DS ) ),( CS / ( RCSe / ( ( RRSe + ( Max( RCSe,RCSe ) + CS ) ) / Min( ( Max( RMSe,( RRSe - RCSe ) ) + ( ( MUM - MUC ) - MUR ) ) ,DS ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.028105266061481525}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS + DDR ) ) ) ) / MDR ) ) - FirstVNF_RAM ) - ( ARS - ARS ) )", "choosing": "Max( Max( DS,MUR ),Min( Min( Min( MLU ,Max( RRSe,Min( CS ,RMSe ) ) ) ,CS ) ,MLU ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM * ( AMS / FirstVNF_RAM ) ) ) / ( RRS * FirstVNF_CPU ) ) / ( ( MDR / AMS ) - ACS ) )", "choosing": "( ( RMSe * MUC ) / Max( MUC,( Min( RMSe ,( ( MUR + ( DS * CS ) ) * ( ( CS / ( MLU - RRSe ) ) - Min( RCSe ,MUC ) ) ) ) - ( RCSe / RCSe ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ACS - AMS ) / ( ( FirstVNF_Mem_Server * Const ) / Min( RRS ,( FirstVNF_RAM - BR ) ) ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / Min( CS ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}], "24": [{"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + ARS ) / ( MDR - ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + ARS ) ) )", "choosing": "( Min( RCSe ,( RCSe - ( MUC - Min( MLU ,CS ) ) ) ) * ( ( RRSe + DS ) + ( ( MUC - Min( MLU ,CS ) ) - ( MLU - ( ( ( ( CS * CS ) / RRSe ) - Min( RRSe ,Max( CS,MUR ) ) ) + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( PN + BR ) ) / ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) / Min( RRS ,( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( Max( ( ( DS - Max( Max( MUM,( RRSe + MUC ) ),( MUM - RMSe ) ) ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( RRSe ,Min( Min( MUC ,( MUC - MUR ) ) ,MUM ) ) - Max( ( Min( Max( MUC,MLU ) ,Max( MUC,MLU ) ) - ( ( DS + RCSe ) - Min( MUM ,CS ) ) ),RCSe ) ) / RMSe ) / RMSe ) * ( MUC - ( ( RRSe - ( ( CS / RRSe ) - MUC ) ) + Min( MUC ,DS ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.17855247122403076}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,DS ) ),( RRSe / ( RCSe / Max( Min( Min( Min( MUM ,MLU ) ,( MLU + Max( MUC,MUM ) ) ) ,CS ),( RCSe + CS ) ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.11125446584975732}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( ( FirstVNF_Mem - BR ) ,AMS ) ) ),AMS ) - ( ( ACS + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) / Min( ARS ,( ( MRS + ( FirstVNF_Mem_Server - PN ) ) * ( ( FirstVNF_CPU_Server * ( CRS + Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ) + ( ( FirstVNF_RAM_Server - Const ) - CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( Min( ( RMSe / ( DS - Min( CS ,RRSe ) ) ) ,MLU ) - ( CS / CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - AMS ) / ( FirstVNF_RAM - BR ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / RRSe ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.38848464769316804}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ACS ) + ( ( FirstVNF_RAM_Server * Max( MDR,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS / Min( CS ,CS ) ) ) ) ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4821573121148402}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( ( ( ( Min( ( MRS / Min( ACS ,FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) * FirstVNF_RAM ) * Min( ( FirstVNF_Mem + ( ( Const - FirstVNF_Mem ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ,( BR + FirstVNF_RAM ) ) ) ,( ARS + AMS ) ) * ( FirstVNF_CPU_Server + Max( Const,ACS ) ) )", "choosing": "( ( ( ( RCSe - MLU ) + RCSe ) - ( Min( RCSe ,( Min( MUC ,MUC ) + ( ( RCSe / Max( DS,RMSe ) ) - RMSe ) ) ) / ( ( CS - ( ( RCSe - ( MLU - RCSe ) ) / ( MUM + ( RRSe + RCSe ) ) ) ) - MUC ) ) ) / ( MLU / ( ( DS - ( RCSe - ( MLU * RRSe ) ) ) / ( MLU - MUC ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5829867183050506}, {"determining": "( ( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM ) / Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( ( ( MLU / ( ( Max( RMSe,CS ) * Max( RCSe,RRSe ) ) - Min( CS ,Max( RRSe,MUR ) ) ) ) + MUR ) / ( Max( Max( ( MUR / CS ),( RCSe / ( MUM - RRSe ) ) ),( ( ( MUR * DS ) + MUR ) * Max( DS,MUR ) ) ) / CS ) ) + Min( Max( ( Min( MUR ,( Min( RMSe ,MUM ) / ( CS * MLU ) ) ) / MUR ),( Max( MLU,MLU ) / ( Max( Max( RMSe,RCSe ),Min( MUC ,CS ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Max( ( RRSe - RMSe ),( MUC - MUR ) ) - Max( MUR,MUC ) ) ) )", "obj1": 0.25, "obj2": 0.6085189339019119}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( Min( ACS ,BR ) / ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( FirstVNF_Mem / BR ) / ARS ) ) )", "choosing": "( ( CS + ( RMSe - ( RCSe * MUM ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.17519685039370078, "obj2": 0.6996810985934546}, {"determining": "Max( ( ( Min( ( FirstVNF_Mem + ( AMS - DDR ) ) ,AMS ) * FirstVNF_RAM_Server ) / Max( Const,FirstVNF_RAM_Server ) ),( Min( Const ,Max( CRS,( MDR / BR ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) ) - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) )", "obj1": 0.23228346456692914, "obj2": 0.6237776628205662}, {"determining": "( ( ACS - FirstVNF_Mem ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5895111204093898}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_Mem ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe / Max( RRSe,MUR ) ) ,Min( ( MUR - DS ) ,MUR ) ) / ( MUC + DS ) )", "obj1": 0.15551181102362205, "obj2": 0.7501227781097828}, {"determining": "( ( ARS + CRS ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( MUC,( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6260678301049835}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) + Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( ( MUM * RRSe ) + CS ) ,( RCSe + MUM ) ) * CS ) )", "obj1": 0.21456692913385828, "obj2": 0.6389670858031432}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ( ( Max( ACS,MRS ) + Max( CRS,( DDR + FirstVNF_Mem ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) + RRSe ) ) / ( MLU / CS ) )", "obj1": 0.22244094488188976, "obj2": 0.6350066690891187}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( Const + ( ( CRS + ACS ) / ( Max( FirstVNF_RAM,ACS ) + FirstVNF_CPU ) ) ) + ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + FirstVNF_CPU ) * ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( MLU * Max( RRSe,Max( RCSe,MUM ) ) ) / ( MUM - Max( Max( ( MUR / CS ),( MUM * MLU ) ),RMSe ) ) ) ,( ( Min( Min( MUM ,RMSe ) ,DS ) + RMSe ) / ( RRSe / Min( DS ,MUR ) ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.2618110236220472, "obj2": 0.6007329248026896}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( ACS * AMS ) / ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * MRS ) ) ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( ( ( ( MUC - RRSe ) * ( RCSe - MUC ) ) - ( Min( MUR ,RMSe ) / ( DS / DS ) ) ),( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6079343979936587}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MRS,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( RRSe ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( Max( MUR,MUM ) + MUC ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7504675132606774}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ),Max( ( RRS - ACS ),FirstVNF_RAM_Server ) ) ) / MDR ) + ( Const / BR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( MLU - ( RMSe + CS ) ) - ( RCSe - ( MUR * DS ) ) ) ) * Max( Min( MUR ,( RRSe * CS ) ),( RRSe * ( ( CS - ( RCSe * ( Max( MUM,MLU ) * RCSe ) ) ) * Max( Max( ( ( MUR * RCSe ) - RCSe ),RCSe ),CS ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6351613564334222}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( ( MUM - CS ) - CS ) ,( DS / DS ) )", "obj1": 0.2992125984251969, "obj2": 0.5726584383099946}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( BR / ( Const + DDR ) ) / ( PN + FirstVNF_Mem_Server ) ) ) / ( ACS / CRS ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( MRS - ACS ) ) ) ) ) / ( ARS / ( ( FirstVNF_RAM_Server * ( MDR * ARS ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + Min( ( DS / ( Max( RCSe,MUC ) - ( RCSe + MUM ) ) ) ,RRSe ) ) ) / Max( RRSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.6045795315514908}, {"determining": "( ( Max( ACS,MRS ) + ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) ) / ( ARS / Max( Min( Min( ARS ,MDR ) ,ACS ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( MUR,Max( RCSe,( ( ( MUR * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ) ) + RRSe ) ) / ( MUR / CS ) )", "obj1": 0.30118110236220474, "obj2": 0.5691365039007791}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) - ( Max( ( Max( ACS,AMS ) - Max( Min( CRS ,Const ),( FirstVNF_CPU_Server - ACS ) ) ),AMS ) + MRS ) )", "choosing": "Max( Min( MLU ,( ( DS / CS ) * RCSe ) ),( MLU + Min( ( ( RRSe - MLU ) - RMSe ) ,RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48852752247199216}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( RRSe / ( ( ( ( MUM * RRSe ) + CS ) + MLU ) / Min( DS ,RRSe ) ) ) * ( RMSe - ( RCSe * MUM ) ) )", "obj1": 0.9921259842519685, "obj2": 0.00429977607171186}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS + DDR ) ) ) ) / MDR ) ) - FirstVNF_RAM ) - ( ARS - ARS ) )", "choosing": "Max( Max( DS,MUR ),Min( Min( Min( MLU ,Max( RRSe,Min( CS ,RMSe ) ) ) ,CS ) ,MLU ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ACS - AMS ) / ( ( FirstVNF_Mem_Server * Const ) / Min( RRS ,( FirstVNF_RAM - BR ) ) ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / Min( CS ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}], "25": [{"determining": "( ( CRS / Const ) / Min( ( RRS / FirstVNF_RAM ) ,Min( ( DDR - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( Max( MLU,( ( DS * RCSe ) / RRSe ) ) ,RRSe ) ) / Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + ARS ) / ( MDR - ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + ARS ) ) )", "choosing": "( Min( RCSe ,( RCSe - ( MUC - Min( MLU ,CS ) ) ) ) * ( ( RRSe + DS ) + ( ( MUC - Min( MLU ,CS ) ) - ( MLU - ( ( ( ( CS * CS ) / RRSe ) - Min( RRSe ,Max( CS,MUR ) ) ) + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( ( FirstVNF_Mem - BR ) ,AMS ) ) ),AMS ) - ( ( ACS + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) / Min( ARS ,( ( MRS + ( FirstVNF_Mem_Server - PN ) ) * ( ( FirstVNF_CPU_Server * ( CRS + Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ) + ( ( FirstVNF_RAM_Server - Const ) - CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( Min( ( RMSe / ( DS - Min( CS ,RRSe ) ) ) ,MLU ) - ( CS / CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * Max( Max( PN,Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ),Max( PN,Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) ) / MDR ),( Const / BR ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / ( ( DS + Max( MUM,MUM ) ) * Max( ( ( DS - MUR ) * MUM ),( ( MUR + DS ) / ( ( DS + Max( MUM,MUM ) ) * Max( ( ( DS - MUR ) * MUM ),( DS / CS ) ) ) ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.47270174793086844}, {"determining": "( ( ACS - AMS ) / ( FirstVNF_RAM - BR ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / RRSe ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.38848464769316804}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ACS ) + ( ( FirstVNF_RAM_Server * Max( MDR,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS / Min( CS ,CS ) ) ) ) ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4821573121148402}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( ( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM ) / Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( ( ( MLU / ( ( Max( RMSe,CS ) * Max( RCSe,RRSe ) ) - Min( CS ,Max( RRSe,MUR ) ) ) ) + MUR ) / ( Max( Max( ( MUR / CS ),( RCSe / ( MUM - RRSe ) ) ),( ( ( MUR * DS ) + MUR ) * Max( DS,MUR ) ) ) / CS ) ) + Min( Max( ( Min( MUR ,( Min( RMSe ,MUM ) / ( CS * MLU ) ) ) / MUR ),( Max( MLU,MLU ) / ( Max( Max( RMSe,RCSe ),Min( MUC ,CS ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Max( ( RRSe - RMSe ),( MUC - MUR ) ) - Max( MUR,MUC ) ) ) )", "obj1": 0.25, "obj2": 0.6085189339019119}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( Min( ACS ,BR ) / ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( FirstVNF_Mem / BR ) / ARS ) ) )", "choosing": "( ( CS + ( RMSe - ( RCSe * MUM ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.17519685039370078, "obj2": 0.6996810985934546}, {"determining": "Max( ( ( Min( ( FirstVNF_Mem + ( AMS - DDR ) ) ,AMS ) * FirstVNF_RAM_Server ) / Max( Const,FirstVNF_RAM_Server ) ),( Min( Const ,Max( CRS,( MDR / BR ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) ) - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) )", "obj1": 0.23228346456692914, "obj2": 0.6237776628205662}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_Mem ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe / Max( RRSe,MUR ) ) ,Min( ( MUR - DS ) ,MUR ) ) / ( MUC + DS ) )", "obj1": 0.15551181102362205, "obj2": 0.7501227781097828}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( ( MDR + FirstVNF_RAM ) / ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( Min( MUR ,DS ) * MUM ) / ( Min( MLU ,MUC ) / ( MLU / CS ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47402250417620523}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( ARS + CRS ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( MUC,( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6260678301049835}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( MRS - ACS ) ) ) ) ) / ( ARS / ( ( FirstVNF_RAM_Server * ( MDR * ARS ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + Min( ( DS / ( Max( RCSe,MUC ) - ( RCSe + MUM ) ) ) ,RRSe ) ) ) / Max( RRSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.6045795315514908}, {"determining": "( ( ( ACS * AMS ) / ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * MRS ) ) ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( ( ( ( MUC - RRSe ) * ( RCSe - MUC ) ) - ( Min( MUR ,RMSe ) / ( DS / DS ) ) ),( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6079343979936587}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MRS,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( RRSe ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( Max( MUR,MUM ) + MUC ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7504675132606774}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) - ( Max( ( Max( ACS,AMS ) - Max( Min( CRS ,Const ),( FirstVNF_CPU_Server - ACS ) ) ),AMS ) + MRS ) )", "choosing": "Max( Min( MLU ,( ( DS / CS ) * RCSe ) ),( MLU + Min( ( ( RRSe - MLU ) - RMSe ) ,RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48852752247199216}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( RRSe / ( ( ( ( MUM * RRSe ) + CS ) + MLU ) / Min( DS ,RRSe ) ) ) * ( RMSe - ( RCSe * MUM ) ) )", "obj1": 0.9921259842519685, "obj2": 0.00429977607171186}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS + DDR ) ) ) ) / MDR ) ) - FirstVNF_RAM ) - ( ARS - ARS ) )", "choosing": "Max( Max( DS,MUR ),Min( Min( Min( MLU ,Max( RRSe,Min( CS ,RMSe ) ) ) ,CS ) ,MLU ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( BR / ( Const + DDR ) ) / ( PN + FirstVNF_Mem_Server ) ) ) / ( ACS / CRS ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ACS - AMS ) / ( ( FirstVNF_Mem_Server * Const ) / Min( RRS ,( FirstVNF_RAM - BR ) ) ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / Min( CS ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}, {"determining": "( ( ACS - ( PN + BR ) ) / ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) / Min( RRS ,( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( Max( ( ( DS - Max( Max( MUM,( RRSe + MUC ) ),( MUM - RMSe ) ) ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "( ( ( DDR / ( ACS * RRS ) ) + ARS ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_RAM_Server / ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( Min( ( Max( RMSe,CS ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / ( Min( ( ( RMSe + MLU ) / RCSe ) ,MUM ) - CS ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( RRSe + DS ) + ( ( RCSe - ( DS * ( RCSe - RRSe ) ) ) - ( Max( MUR,Min( MUM ,MUR ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) / Min( ( RRS / FirstVNF_RAM ) ,Min( ( DDR - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( Max( MLU,( ( DS * RCSe ) / RRSe ) ) ,RRSe ) ) / Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( ( FirstVNF_Mem - BR ) ,AMS ) ) ),AMS ) - ( ( ACS + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) / Min( ARS ,( ( MRS + ( FirstVNF_Mem_Server - PN ) ) * ( ( FirstVNF_CPU_Server * ( CRS + Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ) + ( ( FirstVNF_RAM_Server - Const ) - CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( Min( ( RMSe / ( DS - Min( CS ,RRSe ) ) ) ,MLU ) - ( CS / CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - AMS ) / ( FirstVNF_RAM - BR ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / RRSe ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.38848464769316804}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ACS ) + ( ( FirstVNF_RAM_Server * Max( MDR,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS / Min( CS ,CS ) ) ) ) ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4821573121148402}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( ( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM ) / Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( ( ( MLU / ( ( Max( RMSe,CS ) * Max( RCSe,RRSe ) ) - Min( CS ,Max( RRSe,MUR ) ) ) ) + MUR ) / ( Max( Max( ( MUR / CS ),( RCSe / ( MUM - RRSe ) ) ),( ( ( MUR * DS ) + MUR ) * Max( DS,MUR ) ) ) / CS ) ) + Min( Max( ( Min( MUR ,( Min( RMSe ,MUM ) / ( CS * MLU ) ) ) / MUR ),( Max( MLU,MLU ) / ( Max( Max( RMSe,RCSe ),Min( MUC ,CS ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Max( ( RRSe - RMSe ),( MUC - MUR ) ) - Max( MUR,MUC ) ) ) )", "obj1": 0.25, "obj2": 0.6085189339019119}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( Min( ACS ,BR ) / ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( FirstVNF_Mem / BR ) / ARS ) ) )", "choosing": "( ( CS + ( RMSe - ( RCSe * MUM ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.17519685039370078, "obj2": 0.6996810985934546}, {"determining": "Max( ( ( Min( ( FirstVNF_Mem + ( AMS - DDR ) ) ,AMS ) * FirstVNF_RAM_Server ) / Max( Const,FirstVNF_RAM_Server ) ),( Min( Const ,Max( CRS,( MDR / BR ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) ) - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) )", "obj1": 0.23228346456692914, "obj2": 0.6237776628205662}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_Mem ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe / Max( RRSe,MUR ) ) ,Min( ( MUR - DS ) ,MUR ) ) / ( MUC + DS ) )", "obj1": 0.15551181102362205, "obj2": 0.7501227781097828}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( ARS + CRS ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( MUC,( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6260678301049835}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( MRS - ACS ) ) ) ) ) / ( ARS / ( ( FirstVNF_RAM_Server * ( MDR * ARS ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + Min( ( DS / ( Max( RCSe,MUC ) - ( RCSe + MUM ) ) ) ,RRSe ) ) ) / Max( RRSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.6045795315514908}, {"determining": "( ( ( ACS * AMS ) / ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * MRS ) ) ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( ( ( ( MUC - RRSe ) * ( RCSe - MUC ) ) - ( Min( MUR ,RMSe ) / ( DS / DS ) ) ),( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6079343979936587}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MRS,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( RRSe ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( Max( MUR,MUM ) + MUC ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7504675132606774}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( BR / ( Const + DDR ) ) / ( PN + FirstVNF_Mem_Server ) ) ) / ( ACS / CRS ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) - ( Max( ( Max( ACS,AMS ) - Max( Min( CRS ,Const ),( FirstVNF_CPU_Server - ACS ) ) ),AMS ) + MRS ) )", "choosing": "Max( Min( MLU ,( ( DS / CS ) * RCSe ) ),( MLU + Min( ( ( RRSe - MLU ) - RMSe ) ,RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48852752247199216}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS + DDR ) ) ) ) / MDR ) ) - FirstVNF_RAM ) - ( ARS - ARS ) )", "choosing": "Max( Max( DS,MUR ),Min( Min( Min( MLU ,Max( RRSe,Min( CS ,RMSe ) ) ) ,CS ) ,MLU ) )", "obj1": 0.7834645669291339, "obj2": 0.0910972283950277}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ACS - AMS ) / ( ( FirstVNF_Mem_Server * Const ) / Min( RRS ,( FirstVNF_RAM - BR ) ) ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / Min( CS ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( Max( ARS,MRS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + RRS ) )", "choosing": "Max( Min( RRSe ,Max( ( MUR - ( ( RCSe + ( DS / MUC ) ) + MUM ) ),( Max( DS,RMSe ) + ( CS / MUR ) ) ) ),( RCSe * CS ) )", "obj1": 0.9960629921259843, "obj2": 0.0016379968934012634}], "27": [{"determining": "( Min( ( DDR / ( ACS * RRS ) ) ,ARS ) / ( DDR - ACS ) )", "choosing": "( Min( ( ( Min( ( ( RMSe + CS ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,Max( Max( MUC,MLU ),RCSe ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( RRSe + DS ) + ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( Max( MUR,Min( Max( DS,( RRSe * RCSe ) ) ,MUR ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / ( ACS * RRS ) ) + ARS ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_RAM_Server / ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( Min( ( Max( RMSe,CS ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / ( Min( ( ( RMSe + MLU ) / RCSe ) ,MUM ) - CS ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( RRSe + DS ) + ( ( RCSe - ( DS * ( RCSe - RRSe ) ) ) - ( Max( MUR,Min( MUM ,MUR ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( ( FirstVNF_Mem - BR ) ,AMS ) ) ),AMS ) - ( ( ACS + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) / Min( ARS ,( ( MRS + ( FirstVNF_Mem_Server - PN ) ) * ( ( FirstVNF_CPU_Server * ( CRS + Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ) + ( ( FirstVNF_RAM_Server - Const ) - CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( Min( ( RMSe / ( DS - Min( CS ,RRSe ) ) ) ,MLU ) - ( CS / CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - AMS ) / ( FirstVNF_RAM - BR ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / RRSe ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.38848464769316804}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ACS ) + ( ( FirstVNF_RAM_Server * Max( MDR,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS / Min( CS ,CS ) ) ) ) ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4821573121148402}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ARS / CRS ) / ( BR - ( ( PN * Min( ( Const / DDR ) ,ACS ) ) / DDR ) ) )", "choosing": "( ( ( RMSe - MUC ) - RMSe ) * ( Max( MUC,MUR ) / ( ( ( RCSe + Max( MUC,MUR ) ) / RMSe ) / ( RCSe / Min( ( RRSe - MUR ) ,MUM ) ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.022791328763783307}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( ( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM ) / Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( ( ( MLU / ( ( Max( RMSe,CS ) * Max( RCSe,RRSe ) ) - Min( CS ,Max( RRSe,MUR ) ) ) ) + MUR ) / ( Max( Max( ( MUR / CS ),( RCSe / ( MUM - RRSe ) ) ),( ( ( MUR * DS ) + MUR ) * Max( DS,MUR ) ) ) / CS ) ) + Min( Max( ( Min( MUR ,( Min( RMSe ,MUM ) / ( CS * MLU ) ) ) / MUR ),( Max( MLU,MLU ) / ( Max( Max( RMSe,RCSe ),Min( MUC ,CS ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Max( ( RRSe - RMSe ),( MUC - MUR ) ) - Max( MUR,MUC ) ) ) )", "obj1": 0.25, "obj2": 0.6085189339019119}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "Max( ( ( Min( ( FirstVNF_Mem + ( AMS - DDR ) ) ,AMS ) * FirstVNF_RAM_Server ) / Max( Const,FirstVNF_RAM_Server ) ),( Min( Const ,Max( CRS,( MDR / BR ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) ) - ( RCSe / RCSe ) ) * ( ( CS / ( MUC / MUC ) ) * RMSe ) )", "obj1": 0.23228346456692914, "obj2": 0.6237776628205662}, {"determining": "( ( ( MDR / PN ) / ( DDR * Min( FirstVNF_RAM ,DDR ) ) ) / Min( Min( Min( ( ( MRS * FirstVNF_RAM_Server ) / ( AMS * MRS ) ) ,FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,RRS ) ) ,AMS ) )", "choosing": "( ( RMSe + MUC ) / ( Max( Max( MUM,( MUM * ( MUR * RRSe ) ) ),( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,Min( Min( ( CS * DS ) ,MUR ) ,CS ) ) / Max( ( RCSe + CS ),RCSe ) ) + RRSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7478273289489227}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( ( ARS + CRS ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( MUC,( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6260678301049835}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MRS,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( RRSe ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( Max( MUR,MUM ) + MUC ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7504675132606774}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( MRS - ACS ) ) ) ) ) / ( ARS / ( ( FirstVNF_RAM_Server * ( MDR * ARS ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + Min( ( DS / ( Max( RCSe,MUC ) - ( RCSe + MUM ) ) ) ,RRSe ) ) ) / Max( RRSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.6045795315514908}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ( ACS * AMS ) / ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * MRS ) ) ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( ( ( ( MUC - RRSe ) * ( RCSe - MUC ) ) - ( Min( MUR ,RMSe ) / ( DS / DS ) ) ),( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6079343979936587}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) - ( Max( ( Max( ACS,AMS ) - Max( Min( CRS ,Const ),( FirstVNF_CPU_Server - ACS ) ) ),AMS ) + MRS ) )", "choosing": "Max( Min( MLU ,( ( DS / CS ) * RCSe ) ),( MLU + Min( ( ( RRSe - MLU ) - RMSe ) ,RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48852752247199216}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( BR / ( Const + DDR ) ) / ( PN + FirstVNF_Mem_Server ) ) ) / ( ACS / CRS ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( ACS - AMS ) / ( ( FirstVNF_Mem_Server * Const ) / Min( RRS ,( FirstVNF_RAM - BR ) ) ) )", "choosing": "( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( ( CS - MUM ) * ( DS / Min( CS ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.3852653066360653}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}], "28": [{"determining": "( Min( ( Max( ( MDR / FirstVNF_Mem_Server ),FirstVNF_Mem ) * ( ACS * RRS ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - ARS ) ) / Max( ACS,( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) - Max( Min( ( PN + ( ( PN * FirstVNF_RAM_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - ARS ) * MRS ) ),AMS ) ) ) )", "choosing": "( Min( ( ( Min( ( ( RMSe + CS ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( MUM - Max( MUR,Max( Max( Min( RCSe ,MUC ),( RRSe * RCSe ) ),MUR ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS * RRS ) ) ,ARS ) / ( DDR - ACS ) )", "choosing": "( Min( ( ( Min( ( ( RMSe + CS ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,Max( Max( MUC,MLU ),RCSe ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( RRSe + DS ) + ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( Max( MUR,Min( Max( DS,( RRSe * RCSe ) ) ,MUR ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Max( DDR,MDR ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6218610486288196}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ACS ) + ( ( FirstVNF_RAM_Server * Max( MDR,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS / Min( CS ,CS ) ) ) ) ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4821573121148402}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( ( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM ) / Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( ( ( MLU / ( ( Max( RMSe,CS ) * Max( RCSe,RRSe ) ) - Min( CS ,Max( RRSe,MUR ) ) ) ) + MUR ) / ( Max( Max( ( MUR / CS ),( RCSe / ( MUM - RRSe ) ) ),( ( ( MUR * DS ) + MUR ) * Max( DS,MUR ) ) ) / CS ) ) + Min( Max( ( Min( MUR ,( Min( RMSe ,MUM ) / ( CS * MLU ) ) ) / MUR ),( Max( MLU,MLU ) / ( Max( Max( RMSe,RCSe ),Min( MUC ,CS ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Max( ( RRSe - RMSe ),( MUC - MUR ) ) - Max( MUR,MUC ) ) ) )", "obj1": 0.25, "obj2": 0.6085189339019119}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( ( ( MDR / PN ) / ( DDR * Min( FirstVNF_RAM ,DDR ) ) ) / Min( Min( Min( ( ( MRS * FirstVNF_RAM_Server ) / ( AMS * MRS ) ) ,FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,RRS ) ) ,AMS ) )", "choosing": "( ( RMSe + MUC ) / ( Max( Max( MUM,( MUM * ( MUR * RRSe ) ) ),( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,Min( Min( ( CS * DS ) ,MUR ) ,CS ) ) / Max( ( RCSe + CS ),RCSe ) ) + RRSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7478273289489227}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MRS,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( RRSe ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( Max( MUR,MUM ) + MUC ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7504675132606774}, {"determining": "( Max( ( Max( ARS,PN ) / FirstVNF_RAM_Server ),PN ) / Min( Const ,( Max( ARS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,MUR ) / ( Min( MUM ,MUR ) / ( RRSe - ( ( Min( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) ,MUR ) / ( RRSe - DS ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7555618289556658}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( MRS - ACS ) ) ) ) ) / ( ARS / ( ( FirstVNF_RAM_Server * ( MDR * ARS ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + Min( ( DS / ( Max( RCSe,MUC ) - ( RCSe + MUM ) ) ) ,RRSe ) ) ) / Max( RRSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.6045795315514908}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ( FirstVNF_CPU + DDR ) + Max( ( ( MDR / Min( BR ,RRS ) ) + BR ),( FirstVNF_Mem + Max( DDR,FirstVNF_RAM_Server ) ) ) ) / ( Max( Min( AMS ,MDR ),( BR + BR ) ) / Max( ( BR - RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( Min( RMSe ,CS ) ,RRSe ) - MLU ) + MUC ) ) ) / ( Max( ( CS / RMSe ),Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MUR * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( ( ACS * AMS ) / ( Min( CRS ,ACS ) - ( FirstVNF_RAM_Server * MRS ) ) ) / Min( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,BR ) )", "choosing": "( ( ( MLU - Min( Max( ( ( ( MUC - RRSe ) * ( RCSe - MUC ) ) - ( Min( MUR ,RMSe ) / ( DS / DS ) ) ),( RCSe / RCSe ) ) ,MLU ) ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.2578740157480315, "obj2": 0.6079343979936587}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( BR / ( Const + DDR ) ) / ( PN + FirstVNF_Mem_Server ) ) ) / ( ACS / CRS ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) - ( Max( ( Max( ACS,AMS ) - Max( Min( CRS ,Const ),( FirstVNF_CPU_Server - ACS ) ) ),AMS ) + MRS ) )", "choosing": "Max( Min( MLU ,( ( DS / CS ) * RCSe ) ),( MLU + Min( ( ( RRSe - MLU ) - RMSe ) ,RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48852752247199216}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( ( Max( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * BR ) - FirstVNF_RAM ) / BR ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( MUR / ( Max( MUR,MLU ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( Max( RMSe,MUC ) / DS ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / MUR ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}, {"determining": "( ( ( DDR / ( ACS * RRS ) ) + ARS ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_RAM_Server / ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( Min( ( Max( RMSe,CS ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / ( Min( ( ( RMSe + MLU ) / RCSe ) ,MUM ) - CS ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( RRSe + DS ) + ( ( RCSe - ( DS * ( RCSe - RRSe ) ) ) - ( Max( MUR,Min( MUM ,MUR ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "29": [{"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / Max( Min( DS ,MUR ),( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( ( MDR / FirstVNF_Mem_Server ),FirstVNF_Mem ) * ( ACS * RRS ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - ARS ) ) / Max( ACS,( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) - Max( Min( ( PN + ( ( PN * FirstVNF_RAM_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - ARS ) * MRS ) ),AMS ) ) ) )", "choosing": "( Min( ( ( Min( ( ( RMSe + CS ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( MUM - Max( MUR,Max( Max( Min( RCSe ,MUC ),( RRSe * RCSe ) ),MUR ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM ) / Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( ( ( MLU / ( ( Max( RMSe,CS ) * Max( RCSe,RRSe ) ) - Min( CS ,Max( RRSe,MUR ) ) ) ) + MUR ) / ( Max( Max( ( MUR / CS ),( RCSe / ( MUM - RRSe ) ) ),( ( ( MUR * DS ) + MUR ) * Max( DS,MUR ) ) ) / CS ) ) + Min( Max( ( Min( MUR ,( Min( RMSe ,MUM ) / ( CS * MLU ) ) ) / MUR ),( Max( MLU,MLU ) / ( Max( Max( RMSe,RCSe ),Min( MUC ,CS ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Max( ( RRSe - RMSe ),( MUC - MUR ) ) - Max( MUR,MUC ) ) ) )", "obj1": 0.25, "obj2": 0.6085189339019119}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ACS ) + ( ( FirstVNF_RAM_Server * Max( MDR,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS / Min( CS ,CS ) ) ) ) ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4821573121148402}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( Max( DDR,MDR ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6218610486288196}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( MRS - ACS ) ) ) ) ) / ( ARS / ( ( FirstVNF_RAM_Server * ( MDR * ARS ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + Min( ( DS / ( Max( RCSe,MUC ) - ( RCSe + MUM ) ) ) ,RRSe ) ) ) / Max( RRSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.6045795315514908}, {"determining": "( Max( DDR,MDR ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6218610486288196}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_CPU ) ,CRS ) * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( ( Min( ( RMSe - MUR ) ,RCSe ) - MLU ) + RRSe ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6046385138066219}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( MRS / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( MLU * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.4074803149606299, "obj2": 0.48424995866236487}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( BR / ( Const + DDR ) ) / ( PN + FirstVNF_Mem_Server ) ) ) / ( ACS / CRS ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}], "30": [{"determining": "( ( Min( ( AMS + FirstVNF_CPU ) ,CRS ) * ( AMS + ( FirstVNF_Mem / ( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_RAM_Server / ACS ) ) ) - FirstVNF_CPU_Server ) ) ) ) / ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) - CRS ) )", "choosing": "( ( ( Min( ( ( RMSe + MLU ) / RCSe ) ,MUM ) - CS ) / RMSe ) * ( ( Min( ( RMSe - MUR ) ,RCSe ) - MLU ) / ( RMSe / Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / Max( Min( DS ,MUR ),( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM ) / Max( AMS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( ( ( MLU / ( ( Max( RMSe,CS ) * Max( RCSe,RRSe ) ) - Min( CS ,Max( RRSe,MUR ) ) ) ) + MUR ) / ( Max( Max( ( MUR / CS ),( RCSe / ( MUM - RRSe ) ) ),( ( ( MUR * DS ) + MUR ) * Max( DS,MUR ) ) ) / CS ) ) + Min( Max( ( Min( MUR ,( Min( RMSe ,MUM ) / ( CS * MLU ) ) ) / MUR ),( Max( MLU,MLU ) / ( Max( Max( RMSe,RCSe ),Min( MUC ,CS ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Max( ( RRSe - RMSe ),( MUC - MUR ) ) - Max( MUR,MUC ) ) ) )", "obj1": 0.25, "obj2": 0.6085189339019119}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ACS ) + ( ( FirstVNF_RAM_Server * Max( MDR,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS / Min( CS ,CS ) ) ) ) ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4821573121148402}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( MRS - ACS ) ) ) ) ) / ( ARS / ( ( FirstVNF_RAM_Server * ( MDR * ARS ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( Max( Max( RCSe,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + Min( ( DS / ( Max( RCSe,MUC ) - ( RCSe + MUM ) ) ) ,RRSe ) ) ) / Max( RRSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.6045795315514908}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_CPU ) ,CRS ) * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( ( Min( ( RMSe - MUR ) ,RCSe ) - MLU ) + RRSe ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6046385138066219}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( MRS / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( MLU * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.4074803149606299, "obj2": 0.48424995866236487}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( BR / ( Const + DDR ) ) / ( PN + FirstVNF_Mem_Server ) ) ) / ( ACS / CRS ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,AMS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( DS * DS ) ) / Min( DS ,RRSe ) )", "obj1": 0.9980314960629921, "obj2": 0.0007051568799962094}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}], "31": [{"determining": "( Min( ACS ,( ( CRS * ( Min( ( MRS * ( AMS / ARS ) ) ,PN ) * CRS ) ) - ( RRS + ACS ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * Max( RCSe,Max( ( RMSe + MUR ),( ( DS - RRSe ) * ( CS / Min( CS ,( MUC - RMSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS + FirstVNF_CPU ) ,CRS ) * ( AMS + ( FirstVNF_Mem / ( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_RAM_Server / ACS ) ) ) - FirstVNF_CPU_Server ) ) ) ) / ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) - CRS ) )", "choosing": "( ( ( Min( ( ( RMSe + MLU ) / RCSe ) ,MUM ) - CS ) / RMSe ) * ( ( Min( ( RMSe - MUR ) ,RCSe ) - MLU ) / ( RMSe / Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ACS ) + ( ( FirstVNF_RAM_Server * Max( MDR,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS / Min( CS ,CS ) ) ) ) ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4821573121148402}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,RRS ) ),( FirstVNF_CPU_Server - ( Const * RRS ) ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( FirstVNF_Mem * ( RRS / RRS ) ) / ( MRS * DDR ) )", "choosing": "Max( Max( ( RMSe / RMSe ),Min( RCSe ,RCSe ) ),( ( RCSe * ( MUC + MUM ) ) - MUM ) )", "obj1": 0.18110236220472442, "obj2": 0.6920167949263227}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( MRS / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( MLU * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.4074803149606299, "obj2": 0.48424995866236487}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( BR / ( Const + DDR ) ) / ( PN + FirstVNF_Mem_Server ) ) ) / ( ACS / CRS ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / Max( Min( DS ,MUR ),( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "32": [{"determining": "( Min( ACS ,( ( CRS * ( Min( ( MRS * ( AMS / ARS ) ) ,PN ) * CRS ) ) - ( RRS + ACS ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * Max( RCSe,Max( ( RMSe + MUR ),( ( DS - RRSe ) * ( CS / Min( CS ,( MUC - RMSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( CRS * ( Min( ( MRS * ( AMS / ARS ) ) ,PN ) * CRS ) ) - ( RRS + ACS ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * Max( RCSe,Max( ( RMSe + MUR ),( ( DS - RRSe ) * ( CS / Min( CS ,( MUC - RMSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),ARS ) / Min( ( ( AMS + Max( FirstVNF_RAM,BR ) ) + ( Const / PN ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( DS ,( RRSe - ( MUR + DS ) ) ) - Max( ( RMSe / ( MUR - MUM ) ),RMSe ) ) + RCSe ) - RCSe ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.17519685039370078, "obj2": 0.6902820047255211}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ACS ) + ( ( FirstVNF_RAM_Server * Max( MDR,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS + Max( RRSe,DS ) ) * Max( ( ( MLU * RMSe ) - MUC ),( RRSe * ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS / Min( CS ,CS ) ) ) ) ) ) / ( Max( ( ( DS - MUR ) - MUM ),RMSe ) * ( DS + RRSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4821573121148402}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( MRS / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( RMSe * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( MLU * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.4074803149606299, "obj2": 0.48424995866236487}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( BR / ( Const + DDR ) ) / ( PN + FirstVNF_Mem_Server ) ) ) / ( ACS / CRS ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( ( BR + ACS ) / ( ( BR + ACS ) / Max( BR,CRS ) ) )", "choosing": "( ( Max( Max( MUM,( DS - MUR ) ),RMSe ) * Min( RRSe ,RCSe ) ) / ( Max( Max( MUM,( DS - MUR ) ),RMSe ) * Min( RRSe ,RCSe ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) ) ) + DDR ) * ACS ) )", "choosing": "Max( ( ( Max( RCSe,( DS - CS ) ) * CS ) + Min( ( ( RCSe + Max( RCSe,( DS - CS ) ) ) + ( ( RRSe + Min( DS ,Min( MUC ,RRSe ) ) ) * CS ) ) ,MUR ) ),( ( Min( DS ,RMSe ) - RRSe ) * RCSe ) )", "obj1": 0.9803149606299213, "obj2": 0.010194394412750604}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}], "33": [{"determining": "( Min( ACS ,( ( CRS * ( Min( ( MRS * ( AMS / ARS ) ) ,PN ) * CRS ) ) - ( Min( FirstVNF_CPU ,MDR ) + CRS ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( CS + MUM ),( RCSe / MLU ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( MUM + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( CRS * ( Min( ( MRS * ( AMS / ARS ) ) ,PN ) * CRS ) ) - ( RRS + ACS ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * Max( RCSe,Max( ( RMSe + MUR ),( ( DS - RRSe ) * ( CS / Min( CS ,( MUC - RMSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( RRS + FirstVNF_CPU ) * ( ( ACS / ( PN - Max( Min( DDR ,AMS ),PN ) ) ) * ( FirstVNF_Mem_Server * Min( ( ( DDR + ARS ) * PN ) ,BR ) ) ) ) / ( Const + Const ) )", "choosing": "( ( DS + CS ) * ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( FirstVNF_RAM ,Min( MRS ,RRS ) ) / ( ( MRS / ( CRS / ARS ) ) + AMS ) )", "choosing": "( ( ( RRSe - DS ) / Min( MUM ,MUR ) ) / Max( ( RRSe / ( ( MUM * RCSe ) + ( MUM - MUR ) ) ),DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7372147472161441}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),ARS ) / Min( ( ( AMS + Max( FirstVNF_RAM,BR ) ) + ( Const / PN ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( DS ,( RRSe - ( MUR + DS ) ) ) - Max( ( RMSe / ( MUR - MUM ) ),RMSe ) ) + RCSe ) - RCSe ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.17519685039370078, "obj2": 0.6902820047255211}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Min( ( Const + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + ACS ) ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / ( ( CS - ( DS * ( ( ( MUM * RCSe ) - ( CS + DS ) ) / MUM ) ) ) / ( DS / RMSe ) ) ) ,( ( Max( ( RCSe + MUM ),( ( RMSe + Max( ( DS * DS ),MLU ) ) + MUR ) ) * RCSe ) - MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.47973237941008423}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "Max( ( MDR * ( Min( Max( ( MRS + FirstVNF_Mem_Server ),( CRS - FirstVNF_CPU ) ) ,ACS ) / CRS ) ),( CRS / ( FirstVNF_CPU / Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,ARS ) ) ) )", "choosing": "( ( Min( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) ,MUR ) - MUR ) * Min( ( ( ( MUC * ( MUR / DS ) ) - Min( MLU ,MUM ) ) * MUM ) ,Max( ( Min( DS ,( RRSe * ( ( DS / MUM ) + MUC ) ) ) * Min( ( DS - RCSe ) ,( ( ( DS * RRSe ) * MUR ) / ( Max( MUM,RRSe ) / DS ) ) ) ),( ( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) * ( Min( Max( MLU,RRSe ) ,( RRSe - RCSe ) ) / MLU ) ) + RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7053777533581933}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( Min( ( Const + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,MUC ) * ( RMSe / DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7962741767480824}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( ( BR + ACS ) / ( ( BR + ACS ) / Max( BR,CRS ) ) )", "choosing": "( ( Max( Max( MUM,( DS - MUR ) ),RMSe ) * Min( RRSe ,RCSe ) ) / ( Max( Max( MUM,( DS - MUR ) ),RMSe ) * Min( RRSe ,RCSe ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}], "34": [{"determining": "( Min( ACS ,( ( CRS * ( Min( ( MRS * ( AMS / ARS ) ) ,PN ) * CRS ) ) - ( Min( FirstVNF_CPU ,MDR ) + CRS ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * Max( RCSe,Max( ( RRSe + MUR ),( ( DS - RRSe ) * Max( CS,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( CRS * ( Min( ( MRS * ( AMS / ARS ) ) ,PN ) * CRS ) ) - ( Min( FirstVNF_CPU ,MDR ) + CRS ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( CS + MUM ),( RCSe / MLU ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( MUM + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( MRS - CRS ) / MRS ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( Min( ( MUM + Max( MUC,RMSe ) ) ,MLU ),( ( RMSe - ( RRSe * MLU ) ) / RCSe ) )", "obj1": 0.7440944881889764, "obj2": 0.19213100268280875}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( RRS + FirstVNF_CPU ) * ( ( ACS / ( PN - Max( Min( DDR ,AMS ),PN ) ) ) * ( FirstVNF_Mem_Server * Min( ( ( DDR + ARS ) * PN ) ,BR ) ) ) ) / ( Const + Const ) )", "choosing": "( ( DS + CS ) * ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( ( ( FirstVNF_RAM * Min( DDR ,ACS ) ) / RRS ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MUM ) ) - ( MUC * MUR ) ) * ( RMSe / DS ) )", "obj1": 0.15551181102362205, "obj2": 0.718251380517977}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS + ( ( ( RRSe + Min( RMSe ,CS ) ) / DS ) * Min( RCSe ,DS ) ) ) - ( RCSe * DS ) )", "obj1": 0.7263779527559056, "obj2": 0.19770001518272343}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),ARS ) / Min( ( ( AMS + Max( FirstVNF_RAM,BR ) ) + ( Const / PN ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( DS ,( RRSe - ( MUR + DS ) ) ) - Max( ( RMSe / ( MUR - MUM ) ),RMSe ) ) + RCSe ) - RCSe ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.17519685039370078, "obj2": 0.6902820047255211}, {"determining": "( ( Const + ( ( ( FirstVNF_CPU_Server - MRS ) + ACS ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / MLU ) ),( ( Min( Min( RMSe ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.12992125984251968, "obj2": 0.780309821442091}, {"determining": "( Min( ( Const + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + ACS ) ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / ( ( CS - ( DS * ( ( ( MUM * RCSe ) - ( CS + DS ) ) / MUM ) ) ) / ( DS / RMSe ) ) ) ,( ( Max( ( RCSe + MUM ),( ( RMSe + Max( ( DS * DS ),MLU ) ) + MUR ) ) * RCSe ) - MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.47973237941008423}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( Min( MUM ,MUR ),( MUC - RRSe ) ),Min( DS ,MLU ) ) ,( RRSe / ( RMSe * MLU ) ) ) / ( ( RRSe / CS ) - DS ) )", "obj1": 0.7381889763779528, "obj2": 0.19217965170210644}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "Max( ( MDR * ( Min( Max( ( MRS + FirstVNF_Mem_Server ),( CRS - FirstVNF_CPU ) ) ,ACS ) / CRS ) ),( CRS / ( FirstVNF_CPU / Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,ARS ) ) ) )", "choosing": "( ( Min( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) ,MUR ) - MUR ) * Min( ( ( ( MUC * ( MUR / DS ) ) - Min( MLU ,MUM ) ) * MUM ) ,Max( ( Min( DS ,( RRSe * ( ( DS / MUM ) + MUC ) ) ) * Min( ( DS - RCSe ) ,( ( ( DS * RRSe ) * MUR ) / ( Max( MUM,RRSe ) / DS ) ) ) ),( ( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) * ( Min( Max( MLU,RRSe ) ,( RRSe - RCSe ) ) / MLU ) ) + RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7053777533581933}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Min( FirstVNF_RAM ,( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( ( ( FirstVNF_RAM + CRS ) - CRS ) ,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe + MLU ) / Min( DS ,RRSe ) ) / Min( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * MUC ) ) ,RRSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7652434747877654}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( ( Const + ( Min( MDR ,FirstVNF_RAM_Server ) / CRS ) ) + ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS * ( Max( CS,( RMSe * Min( RMSe ,RRSe ) ) ) / MLU ) ),( ( Min( Min( DS ,MUM ) ,DS ) + RMSe ) / Min( Min( DS ,MUR ) ,RRSe ) ) ) + RRSe ) * Min( RMSe ,RMSe ) )", "obj1": 0.1279527559055118, "obj2": 0.7863627340003304}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( Min( ( Const + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,MUC ) * ( RMSe / DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7962741767480824}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( BR + ACS ) / ( ( BR + ACS ) / Max( BR,CRS ) ) )", "choosing": "( ( Max( Max( MUM,( DS - MUR ) ),RMSe ) * Min( RRSe ,RCSe ) ) / ( Max( Max( MUM,( DS - MUR ) ),RMSe ) * Min( RRSe ,RCSe ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}], "35": [{"determining": "( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( Max( AMS,BR ) ,RRS ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + ARS ) ) / Min( PN ,Min( Max( Max( AMS,ACS ),FirstVNF_Mem ) ,MDR ) ) ) ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( Max( AMS,BR ) ,RRS ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + ARS ) ) / Min( PN ,Min( Max( Max( AMS,ACS ),FirstVNF_Mem ) ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( DS * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,( Max( CS,( RCSe * DS ) ) + RCSe ) ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( ( CRS * ( Min( ( MRS * ( AMS / ARS ) ) ,PN ) * CRS ) ) - ( Min( FirstVNF_CPU ,MDR ) + CRS ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * Max( RCSe,Max( ( RRSe + MUR ),( ( DS - RRSe ) * Max( CS,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) / ( ( ( Max( FirstVNF_RAM_Server,( CRS + CRS ) ) * ARS ) - Min( FirstVNF_Mem_Server ,( AMS + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * RRS ) ) / RRS ) ) ) ) * ( FirstVNF_RAM_Server * ( ACS + ACS ) ) ) )", "choosing": "( ( Max( MUR,( DS * RCSe ) ) - ( MUC * DS ) ) / ( ( ( RCSe * ( Min( RMSe ,MLU ) * RCSe ) ) - ( ( ( RCSe * ( Min( RMSe ,MLU ) * RCSe ) ) - MLU ) - MUR ) ) - MUR ) )", "obj1": 0.7224409448818898, "obj2": 0.1899031107013533}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( RRS + FirstVNF_CPU ) * ( ( ACS / ( PN - Max( Min( DDR ,AMS ),PN ) ) ) * ( FirstVNF_Mem_Server * Min( ( ( DDR + ARS ) * PN ) ,BR ) ) ) ) / ( Const + Const ) )", "choosing": "( ( DS + CS ) * ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( ( FirstVNF_CPU * MDR ) * Max( Min( Min( ( ( FirstVNF_Mem_Server + Const ) / ARS ) ,MDR ) ,FirstVNF_RAM ),( ACS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( DS ,MUC ) + ( ( RCSe * Min( DS ,RMSe ) ) - RMSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7623498573209094}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ( ( ( Const * ACS ) - ARS ) * FirstVNF_CPU_Server ) / CRS ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( RMSe ,RRSe ) - MLU ) * ( RMSe / ( CS - RRSe ) ) ) ) ) / ( RMSe / ( CS - ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ) * ( ( MLU - ( Max( Min( ( MUC / ( MUR * MUC ) ) ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.718503937007874, "obj2": 0.21783426051501634}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( Min( ( ( FirstVNF_RAM * Min( DDR ,ACS ) ) / RRS ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MUM ) ) - ( MUC * MUR ) ) * ( RMSe / DS ) )", "obj1": 0.15551181102362205, "obj2": 0.718251380517977}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) * Min( RCSe ,MUM ) )", "obj1": 0.7204724409448819, "obj2": 0.20755993290089608}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( ( Const + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + ACS ) ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / ( ( CS - ( DS * ( ( ( MUM * RCSe ) - ( CS + DS ) ) / MUM ) ) ) / ( DS / RMSe ) ) ) ,( ( Max( ( RCSe + MUM ),( ( RMSe + Max( ( DS * DS ),MLU ) ) + MUR ) ) * RCSe ) - MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.47973237941008423}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "Max( ( MDR * ( Min( Max( ( MRS + FirstVNF_Mem_Server ),( CRS - FirstVNF_CPU ) ) ,ACS ) / CRS ) ),( CRS / ( FirstVNF_CPU / Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,ARS ) ) ) )", "choosing": "( ( Min( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) ,MUR ) - MUR ) * Min( ( ( ( MUC * ( MUR / DS ) ) - Min( MLU ,MUM ) ) * MUM ) ,Max( ( Min( DS ,( RRSe * ( ( DS / MUM ) + MUC ) ) ) * Min( ( DS - RCSe ) ,( ( ( DS * RRSe ) * MUR ) / ( Max( MUM,RRSe ) / DS ) ) ) ),( ( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) * ( Min( Max( MLU,RRSe ) ,( RRSe - RCSe ) ) / MLU ) ) + RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7053777533581933}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / FirstVNF_RAM ),Min( ( ( AMS + ( BR - ARS ) ) - FirstVNF_CPU ) ,Max( ( MRS + FirstVNF_Mem_Server ),( CRS - FirstVNF_CPU ) ) ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( Max( MUM,Max( MUC,( RCSe + CS ) ) ) + ( MUM + Max( Max( RRSe,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6894879591892494}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),ARS ) / Min( ( ( AMS + Max( FirstVNF_RAM,BR ) ) + ( Const / PN ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( DS ,( RRSe - ( MUR + DS ) ) ) - Max( ( RMSe / ( MUR - MUM ) ),RMSe ) ) + RCSe ) - RCSe ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.17519685039370078, "obj2": 0.6902820047255211}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( Min( ( Const + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,MUC ) * ( RMSe / DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7962741767480824}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - FirstVNF_CPU ) / Min( FirstVNF_RAM ,( Min( ( Max( Const,( PN + ( BR - CRS ) ) ) / Max( FirstVNF_CPU,RRS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( MUM - RRSe ) ,RRSe ) / ( Max( ( ( MUR / RMSe ) - MLU ),CS ) * DS ) ) ,Min( DS ,MUM ) ) ,RRSe ) / ( MUM - RMSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0061385149436628495}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( BR + ACS ) / ( ( BR + ACS ) / Max( BR,CRS ) ) )", "choosing": "( ( Max( Max( MUM,( DS - MUR ) ),RMSe ) * Min( RRSe ,RCSe ) ) / ( Max( Max( MUM,( DS - MUR ) ),RMSe ) * Min( RRSe ,RCSe ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}, {"determining": "( Min( ACS ,( ( CRS * ( Min( ( MRS * ( AMS / ARS ) ) ,PN ) * CRS ) ) - ( Min( FirstVNF_CPU ,MDR ) + CRS ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( CS + MUM ),( RCSe / MLU ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( MUM + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,( ( ( ( PN - ARS ) / FirstVNF_RAM ) * ( ( ARS + Min( FirstVNF_CPU ,PN ) ) - FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem,Min( ( ACS - DDR ) ,Max( Min( DDR ,AMS ),PN ) ) ) ) ) / ( FirstVNF_Mem_Server * CRS ) ) / Max( MRS,RRS ) )", "choosing": "( ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) * ( Max( CS,CS ) + ( RMSe - ( ( Max( RCSe,RCSe ) / ( ( DS - MUM ) / ( CS / RCSe ) ) ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,( ( ( ( PN - ARS ) / FirstVNF_RAM ) * ( ( ARS + Min( FirstVNF_CPU ,PN ) ) - FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem,Min( ( ACS - FirstVNF_Mem ) ,Max( Min( DDR ,AMS ),PN ) ) ) ) ) / ( FirstVNF_Mem_Server * CRS ) ) / Max( MRS,RRS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) * ( Max( CS,CS ) + ( RMSe - ( ( Max( RCSe,RCSe ) / ( ( DS - MUM ) / ( CS / RCSe ) ) ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,( ( ( ( PN - ARS ) / FirstVNF_RAM ) * ( ( ARS + Min( FirstVNF_CPU ,PN ) ) - FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem,Min( ( ACS - FirstVNF_Mem ) ,Max( Min( DDR ,AMS ),PN ) ) ) ) ) / ( FirstVNF_Mem_Server * CRS ) ) / Max( MRS,RRS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) * ( Max( CS,CS ) + ( RMSe - ( ( Max( RCSe,RCSe ) / ( ( DS - MUM ) / ( CS / RCSe ) ) ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "36": [{"determining": "( Min( ( ( ARS * RRS ) * Min( Min( FirstVNF_RAM ,MDR ) ,AMS ) ) ,ARS ) - Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( Max( AMS,BR ) ,RRS ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + ARS ) ) / Min( PN ,Min( Max( Max( AMS,ACS ),FirstVNF_Mem ) ,MDR ) ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( Min( ( RMSe / ( DS - Min( CS ,RRSe ) ) ) ,MLU ) - ( CS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( Max( AMS,BR ) ,RRS ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + ARS ) ) / Min( PN ,Min( Max( Max( AMS,ACS ),FirstVNF_Mem ) ,MDR ) ) ) ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( Max( AMS,BR ) ,RRS ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + ARS ) ) / Min( PN ,Min( Max( Max( AMS,ACS ),FirstVNF_Mem ) ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( DS * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,( Max( CS,( RCSe * DS ) ) + RCSe ) ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( Max( ACS,MRS ) - AMS ) / ( ARS - RRS ) )", "choosing": "( ( ( ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) / RMSe ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.7106299212598425, "obj2": 0.17893183190807543}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ARS,( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / MUR ) - RMSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + Max( Max( ( MLU / ( MUR + MLU ) ),RMSe ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29195379764632257}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( RRS + FirstVNF_CPU ) * ( ( ACS / ( PN - Max( Min( DDR ,AMS ),PN ) ) ) * ( FirstVNF_Mem_Server * Min( ( ( DDR + ARS ) * PN ) ,BR ) ) ) ) / ( Const + Const ) )", "choosing": "( ( DS + CS ) * ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( FirstVNF_CPU * MDR ) * Max( Min( Min( ( ( FirstVNF_Mem_Server + Const ) / ARS ) ,MDR ) ,FirstVNF_RAM ),( ACS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( DS ,MUC ) + ( ( RCSe * Min( DS ,RMSe ) ) - RMSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7623498573209094}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Min( ( ( FirstVNF_RAM * Min( DDR ,ACS ) ) / RRS ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MUM ) ) - ( MUC * MUR ) ) * ( RMSe / DS ) )", "obj1": 0.15551181102362205, "obj2": 0.718251380517977}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( Min( ( Const + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + ACS ) ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / ( ( CS - ( DS * ( ( ( MUM * RCSe ) - ( CS + DS ) ) / MUM ) ) ) / ( DS / RMSe ) ) ) ,( ( Max( ( RCSe + MUM ),( ( RMSe + Max( ( DS * DS ),MLU ) ) + MUR ) ) * RCSe ) - MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.47973237941008423}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ( CRS + Const ) - ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / DDR ) ) - ( Min( BR ,DDR ) + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( Min( DS ,MUC ) - ( MUC - DS ) ) / ( MUM + ( ( MLU / ( ( Max( Max( CS,MLU ),( RMSe * MLU ) ) - MUM ) + Min( MUR ,( CS - RRSe ) ) ) ) * ( MUM - ( RCSe + ( RMSe * ( Max( RMSe,DS ) - CS ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.018869360901491026}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "Max( ( MDR * ( Min( Max( ( MRS + FirstVNF_Mem_Server ),( CRS - FirstVNF_CPU ) ) ,ACS ) / CRS ) ),( CRS / ( FirstVNF_CPU / Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,ARS ) ) ) )", "choosing": "( ( Min( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) ,MUR ) - MUR ) * Min( ( ( ( MUC * ( MUR / DS ) ) - Min( MLU ,MUM ) ) * MUM ) ,Max( ( Min( DS ,( RRSe * ( ( DS / MUM ) + MUC ) ) ) * Min( ( DS - RCSe ) ,( ( ( DS * RRSe ) * MUR ) / ( Max( MUM,RRSe ) / DS ) ) ) ),( ( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) * ( Min( Max( MLU,RRSe ) ,( RRSe - RCSe ) ) / MLU ) ) + RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7053777533581933}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),ARS ) / Min( ( ( AMS + Max( FirstVNF_RAM,BR ) ) + ( Const / PN ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( DS ,( RRSe - ( MUR + DS ) ) ) - Max( ( RMSe / ( MUR - MUM ) ),RMSe ) ) + RCSe ) - RCSe ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.17519685039370078, "obj2": 0.6902820047255211}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( ( Const + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,MUC ) * ( RMSe / DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7962741767480824}, {"determining": "( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,BR ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( ( FirstVNF_RAM_Server / ( ( BR + PN ) * ARS ) ) / ( ( ( ARS + CRS ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS + DS ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) )", "obj1": 0.9901574803149606, "obj2": 0.005903417821286043}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / FirstVNF_RAM ),Min( ( ( AMS + ( BR - ARS ) ) - FirstVNF_CPU ) ,Max( ( MRS + FirstVNF_Mem_Server ),( CRS - FirstVNF_CPU ) ) ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( Max( MUM,Max( MUC,( RCSe + CS ) ) ) + ( MUM + Max( Max( RRSe,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6894879591892494}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( CS,Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * RMSe ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7001385123692162}, {"determining": "( ( CRS / ( PN * RRS ) ) / Max( RRS,MRS ) )", "choosing": "( ( ( ( DS * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( MUR * ( MLU / CS ) ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MLU * RCSe ),( ( ( Min( MLU ,( RCSe / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6878259896826224}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / CRS ) * Max( ( PN + FirstVNF_CPU_Server ),( Const + AMS ) ) ) ) + ( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),DDR ) / CRS ) - ARS ) ) )", "choosing": "( ( ( ( DS * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( MUR * ( MLU / CS ) ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MLU * RCSe ),( ( ( Min( MLU ,( RCSe / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6878259896826224}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),( FirstVNF_Mem + MRS ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.5, "obj2": 0.2930150748137491}, {"determining": "( Min( ( Const + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,MUC ) * ( RMSe / DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7962741767480824}, {"determining": "( Min( ACS ,( ( CRS * ( Min( ( MRS * ( AMS / ARS ) ) ,PN ) * CRS ) ) - ( Min( FirstVNF_CPU ,MDR ) + CRS ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) * Max( RCSe,Max( ( RRSe + MUR ),( ( DS - RRSe ) * Max( CS,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "37": [{"determining": "( Max( ACS,( Max( Min( ( Max( ( RRS / FirstVNF_RAM_Server ),( ARS * PN ) ) / ARS ) ,( MRS * Min( Min( AMS ,BR ) ,RRS ) ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR / ARS ) ) / Min( PN ,Min( Max( Min( AMS ,FirstVNF_RAM ),FirstVNF_Mem ) ,MDR ) ) ) ) ) / Min( ARS ,( ( MRS + ( PN - FirstVNF_Mem_Server ) ) * ( ARS * DDR ) ) ) )", "choosing": "( Min( ( ( RRSe + Max( Max( MUM,( RMSe * ( CS * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / Min( RCSe ,CS ) ) ) ) / ( RCSe / ( RCSe * MLU ) ) ) ,( RCSe - ( Max( Min( ( Max( MUC,DS ) / DS ) ,( DS + MUM ) ),MUM ) * RCSe ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR - RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ARS * RRS ) * Min( Min( FirstVNF_RAM ,MDR ) ,AMS ) ) ,ARS ) - Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( Max( AMS,BR ) ,RRS ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + ARS ) ) / Min( PN ,Min( Max( Max( AMS,ACS ),FirstVNF_Mem ) ,MDR ) ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( Min( ( RMSe / ( DS - Min( CS ,RRSe ) ) ) ,MLU ) - ( CS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( Max( ACS,MRS ) - AMS ) / ( ARS - RRS ) )", "choosing": "( ( ( ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) / RMSe ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.7106299212598425, "obj2": 0.17893183190807543}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ARS,( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / MUR ) - RMSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + Max( Max( ( MLU / ( MUR + MLU ) ),RMSe ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29195379764632257}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( RRS + FirstVNF_CPU ) * ( ( ACS / ( PN - Max( Min( DDR ,AMS ),PN ) ) ) * ( FirstVNF_Mem_Server * Min( ( ( DDR + ARS ) * PN ) ,BR ) ) ) ) / ( Const + Const ) )", "choosing": "( ( DS + CS ) * ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( FirstVNF_CPU * MDR ) * Max( Min( Min( ( ( FirstVNF_Mem_Server + Const ) / ARS ) ,MDR ) ,FirstVNF_RAM ),( ACS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( DS ,MUC ) + ( ( RCSe * Min( DS ,RMSe ) ) - RMSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7623498573209094}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( Min( ( ( FirstVNF_RAM * Min( DDR ,ACS ) ) / RRS ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MUM ) ) - ( MUC * MUR ) ) * ( RMSe / DS ) )", "obj1": 0.15551181102362205, "obj2": 0.718251380517977}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( Min( ( Const + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + ACS ) ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / ( ( CS - ( DS * ( ( ( MUM * RCSe ) - ( CS + DS ) ) / MUM ) ) ) / ( DS / RMSe ) ) ) ,( ( Max( ( RCSe + MUM ),( ( RMSe + Max( ( DS * DS ),MLU ) ) + MUR ) ) * RCSe ) - MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.47973237941008423}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ( CRS + Const ) - ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / DDR ) ) - ( Min( BR ,DDR ) + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( Min( DS ,MUC ) - ( MUC - DS ) ) / ( MUM + ( ( MLU / ( ( Max( Max( CS,MLU ),( RMSe * MLU ) ) - MUM ) + Min( MUR ,( CS - RRSe ) ) ) ) * ( MUM - ( RCSe + ( RMSe * ( Max( RMSe,DS ) - CS ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.018869360901491026}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + ( ARS / ACS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( DS - Min( ( MUR - RRSe ) ,DS ) ) ) ),Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02650639263768629}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "Max( ( MDR * ( Min( Max( ( MRS + FirstVNF_Mem_Server ),( CRS - FirstVNF_CPU ) ) ,ACS ) / CRS ) ),( CRS / ( FirstVNF_CPU / Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,ARS ) ) ) )", "choosing": "( ( Min( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) ,MUR ) - MUR ) * Min( ( ( ( MUC * ( MUR / DS ) ) - Min( MLU ,MUM ) ) * MUM ) ,Max( ( Min( DS ,( RRSe * ( ( DS / MUM ) + MUC ) ) ) * Min( ( DS - RCSe ) ,( ( ( DS * RRSe ) * MUR ) / ( Max( MUM,RRSe ) / DS ) ) ) ),( ( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) * ( Min( Max( MLU,RRSe ) ,( RRSe - RCSe ) ) / MLU ) ) + RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7053777533581933}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),ARS ) / Min( ( ( AMS + Max( FirstVNF_RAM,BR ) ) + ( Const / PN ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( DS ,( RRSe - ( MUR + DS ) ) ) - Max( ( RMSe / ( MUR - MUM ) ),RMSe ) ) + RCSe ) - RCSe ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.17519685039370078, "obj2": 0.6902820047255211}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) + RRS ) + FirstVNF_Mem_Server ) - ( ( ARS * MDR ) + MRS ) )", "choosing": "( ( ( RCSe + MUR ) + DS ) / ( CS + Min( ( MUM - ( DS + Max( ( RMSe / MUC ),( Max( RCSe,MUR ) * MLU ) ) ) ) ,( RCSe * Min( Min( DS ,( MUC / ( CS - DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5871294610729944}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ),( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( RRSe / RRSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5763655353318778}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( ( Const + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,MUC ) * ( RMSe / DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7962741767480824}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,BR ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( ( FirstVNF_RAM_Server / ( ( BR + PN ) * ARS ) ) / ( ( ( ARS + CRS ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS + DS ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) )", "obj1": 0.9901574803149606, "obj2": 0.005903417821286043}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( ACS,ARS ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( RCSe + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / FirstVNF_RAM ),Min( ( ( AMS + ( BR - ARS ) ) - FirstVNF_CPU ) ,Max( ( MRS + FirstVNF_Mem_Server ),( CRS - FirstVNF_CPU ) ) ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( Max( MUM,Max( MUC,( RCSe + CS ) ) ) + ( MUM + Max( Max( RRSe,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.18110236220472442, "obj2": 0.6894879591892494}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * ( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( Min( ( DS * MLU ) ,MLU ) - Min( ( MUR - RRSe ) ,DS ) ) ) ) / Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02650639263768629}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( CS,Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * RMSe ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7001385123692162}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / CRS ) * Max( ( PN + FirstVNF_CPU_Server ),( Const + AMS ) ) ) ) + ( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),DDR ) / CRS ) - ARS ) ) )", "choosing": "( ( ( ( DS * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( MUR * ( MLU / CS ) ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MLU * RCSe ),( ( ( Min( MLU ,( RCSe / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6878259896826224}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}], "38": [{"determining": "( Max( ACS,( Max( Min( ( Max( ( RRS / FirstVNF_RAM_Server ),( ARS * PN ) ) / ARS ) ,( MRS * Min( Min( AMS ,BR ) ,RRS ) ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR / ARS ) ) / Min( PN ,Min( Max( Min( AMS ,FirstVNF_RAM ),FirstVNF_Mem ) ,MDR ) ) ) ) ) / Min( ARS ,( ( MRS + ( PN - FirstVNF_Mem_Server ) ) * ( ARS * DDR ) ) ) )", "choosing": "( Min( ( ( RRSe + Max( Max( MUM,( RMSe * ( CS * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / Min( RCSe ,CS ) ) ) ) / ( RCSe / ( RCSe * MLU ) ) ) ,( RCSe - ( Max( Min( ( Max( MUC,DS ) / DS ) ,( DS + MUM ) ),MUM ) * RCSe ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR - RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( RRS / FirstVNF_RAM_Server ),( ARS * PN ) ) / ARS ) ,( MRS * Min( Min( AMS ,BR ) ,RRS ) ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR / ARS ) ) / Min( PN ,Min( Max( Min( AMS ,FirstVNF_RAM ),FirstVNF_Mem ) ,MDR ) ) ) ) ) / Min( ARS ,( ( MRS + ( PN - FirstVNF_Mem_Server ) ) * ( ARS * DDR ) ) ) )", "choosing": "( Min( ( ( RRSe + Max( Max( MUM,( RMSe * ( CS * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / Min( RCSe ,CS ) ) ) ) / ( RCSe / ( RCSe * MLU ) ) ) ,( RCSe - ( Max( Min( ( Max( MUC,DS ) / DS ) ,( DS + MUM ) ),MUM ) * RCSe ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR - RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( Max( ACS,MRS ) - AMS ) / ( ARS - RRS ) )", "choosing": "( ( ( ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) / RMSe ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.7106299212598425, "obj2": 0.17893183190807543}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ARS,( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / MUR ) - RMSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + Max( Max( ( MLU / ( MUR + MLU ) ),RMSe ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29195379764632257}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( RRS + FirstVNF_CPU ) * ( ( ACS / ( PN - Max( Min( DDR ,AMS ),PN ) ) ) * ( FirstVNF_Mem_Server * Min( ( ( DDR + ARS ) * PN ) ,BR ) ) ) ) / ( Const + Const ) )", "choosing": "( ( DS + CS ) * ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( FirstVNF_CPU * MDR ) * Max( Min( Min( ( ( FirstVNF_Mem_Server + Const ) / ARS ) ,MDR ) ,FirstVNF_RAM ),( ACS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( DS ,MUC ) + ( ( RCSe * Min( DS ,RMSe ) ) - RMSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7623498573209094}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( Min( ( ( FirstVNF_RAM * Min( DDR ,ACS ) ) / RRS ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MUM ) ) - ( MUC * MUR ) ) * ( RMSe / DS ) )", "obj1": 0.15551181102362205, "obj2": 0.718251380517977}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( Min( ( Const + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + ACS ) ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / ( ( CS - ( DS * ( ( ( MUM * RCSe ) - ( CS + DS ) ) / MUM ) ) ) / ( DS / RMSe ) ) ) ,( ( Max( ( RCSe + MUM ),( ( RMSe + Max( ( DS * DS ),MLU ) ) + MUR ) ) * RCSe ) - MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.47973237941008423}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ( CRS + Const ) - ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / DDR ) ) - ( Min( BR ,DDR ) + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( Min( DS ,MUC ) - ( MUC - DS ) ) / ( MUM + ( ( MLU / ( ( Max( Max( CS,MLU ),( RMSe * MLU ) ) - MUM ) + Min( MUR ,( CS - RRSe ) ) ) ) * ( MUM - ( RCSe + ( RMSe * ( Max( RMSe,DS ) - CS ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.018869360901491026}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * ( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( Min( ( DS * MLU ) ,MLU ) - Min( ( MUR - RRSe ) ,DS ) ) ) ) / Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02650639263768629}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "Max( ( MDR * ( Min( Max( ( MRS + FirstVNF_Mem_Server ),( CRS - FirstVNF_CPU ) ) ,ACS ) / CRS ) ),( CRS / ( FirstVNF_CPU / Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,ARS ) ) ) )", "choosing": "( ( Min( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) ,MUR ) - MUR ) * Min( ( ( ( MUC * ( MUR / DS ) ) - Min( MLU ,MUM ) ) * MUM ) ,Max( ( Min( DS ,( RRSe * ( ( DS / MUM ) + MUC ) ) ) * Min( ( DS - RCSe ) ,( ( ( DS * RRSe ) * MUR ) / ( Max( MUM,RRSe ) / DS ) ) ) ),( ( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) * ( Min( Max( MLU,RRSe ) ,( RRSe - RCSe ) ) / MLU ) ) + RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7053777533581933}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),ARS ) / Min( ( ( AMS + Max( FirstVNF_RAM,BR ) ) + ( Const / PN ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( DS ,( RRSe - ( MUR + DS ) ) ) - Max( ( RMSe / ( MUR - MUM ) ),RMSe ) ) + RCSe ) - RCSe ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.17519685039370078, "obj2": 0.6902820047255211}, {"determining": "( Min( ( Const + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,MUC ) * ( RMSe / DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7962741767480824}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) + RRS ) + FirstVNF_Mem_Server ) - ( ( ARS * MDR ) + MRS ) )", "choosing": "( ( ( RCSe + MUR ) + DS ) / ( CS + Min( ( MUM - ( DS + Max( ( RMSe / MUC ),( Max( RCSe,MUR ) * MLU ) ) ) ) ,( RCSe * Min( Min( DS ,( MUC / ( CS - DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5871294610729944}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( Min( ( Const * ACS ) ,( RRS * Const ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6873460310928774}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ),( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( RRSe / RRSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5763655353318778}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,BR ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( ( FirstVNF_RAM_Server / ( ( BR + PN ) * ARS ) ) / ( ( ( ARS + CRS ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS + DS ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) )", "obj1": 0.9901574803149606, "obj2": 0.005903417821286043}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + ( ARS / ACS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( DS - Min( ( MUR - RRSe ) ,DS ) ) ) ),Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.02650639263768629}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( ( ( CRS - ( ARS / FirstVNF_CPU_Server ) ) + FirstVNF_RAM ),( RRS * AMS ) ) ),CRS ) / PN ) / ( ( ( FirstVNF_Mem - MRS ) - ( AMS - Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server * MRS ) ) ,MRS ) ) ) + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + ( ( Min( Max( RCSe,MUC ) ,( MUM / Min( MLU ,MUC ) ) ) + CS ) * DS ) ) * ( RMSe / ( Min( Min( CS ,( MUM - Max( ( MUR / MUM ),MUM ) ) ) ,Max( MLU,DS ) ) - Max( MUR,( ( RMSe + Min( RMSe ,RCSe ) ) / RMSe ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6901846045461532}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( ACS,ARS ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( RCSe + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( CS,Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * RMSe ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7001385123692162}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( FirstVNF_Mem * Min( CRS ,MRS ) ) - ( ( Max( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ),FirstVNF_RAM_Server ) / PN ) / ( ( MRS - FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) ) )", "choosing": "Max( ( ( RCSe - ( DS + ( RMSe - MLU ) ) ) * Min( ( ( ( RCSe / Min( ( DS + MUC ) ,RMSe ) ) + RCSe ) - RCSe ) ,MUM ) ),Min( ( MUM + ( RMSe * MUM ) ) ,( CS - MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0016292267983941942}], "39": [{"determining": "( Max( ACS,( Max( Min( ( Max( ( RRS / FirstVNF_RAM_Server ),( ARS * PN ) ) / ARS ) ,( MRS * Min( Min( AMS ,BR ) ,RRS ) ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR / ARS ) ) / Min( PN ,Min( Max( Min( AMS ,FirstVNF_RAM ),FirstVNF_Mem ) ,MDR ) ) ) ) ) / Min( ARS ,( ( MRS + ( PN - FirstVNF_Mem_Server ) ) * ( ARS * DDR ) ) ) )", "choosing": "( Min( ( ( RRSe + Max( Max( MUM,( RMSe * ( CS * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / Min( RCSe ,CS ) ) ) ) / ( RCSe / ( RCSe * MLU ) ) ) ,( RCSe - ( Max( Min( ( Max( MUC,DS ) / DS ) ,( DS + MUM ) ),MUM ) * RCSe ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR - RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( RRS / FirstVNF_RAM_Server ),( ARS * PN ) ) / ARS ) ,( MRS * Min( Min( AMS ,BR ) ,RRS ) ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR / ARS ) ) / Min( PN ,Min( Max( Min( AMS ,FirstVNF_RAM ),FirstVNF_Mem ) ,MDR ) ) ) ) ) / Min( ARS ,( ( MRS + ( PN - FirstVNF_Mem_Server ) ) * ( ARS * DDR ) ) ) )", "choosing": "( Min( ( ( RRSe + Max( Max( MUM,( RMSe * ( CS * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / Min( RCSe ,CS ) ) ) ) / ( RCSe / ( RCSe * MLU ) ) ) ,( RCSe - ( Max( Min( ( Max( MUC,DS ) / DS ) ,( DS + MUM ) ),MUM ) * RCSe ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR - RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( Max( ACS,MRS ) - AMS ) / ( ARS - RRS ) )", "choosing": "( ( ( ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) / RMSe ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.7106299212598425, "obj2": 0.17893183190807543}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( Const + FirstVNF_CPU_Server ) * ( Max( Max( ARS,( ( ( CRS - Const ) + ( ( ARS + CRS ) * FirstVNF_RAM ) ) - ( Min( Min( FirstVNF_CPU ,BR ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ),( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM - DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + ( MLU / ( MUR + MLU ) ) )", "obj1": 0.5059055118110236, "obj2": 0.2902270427873874}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( RRS + FirstVNF_CPU ) * ( ( ACS / ( PN - Max( Min( DDR ,AMS ),PN ) ) ) * ( FirstVNF_Mem_Server * Min( ( ( DDR + ARS ) * PN ) ,BR ) ) ) ) / ( Const + Const ) )", "choosing": "( ( DS + CS ) * ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( FirstVNF_CPU * MDR ) * Max( Min( Min( ( ( FirstVNF_Mem_Server + Const ) / ARS ) ,MDR ) ,FirstVNF_RAM ),( ACS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( DS ,MUC ) + ( ( RCSe * Min( DS ,RMSe ) ) - RMSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7623498573209094}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( Min( ( ( FirstVNF_RAM * Min( DDR ,ACS ) ) / RRS ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MUM ) ) - ( MUC * MUR ) ) * ( RMSe / DS ) )", "obj1": 0.15551181102362205, "obj2": 0.718251380517977}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( Min( ( Const + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + ACS ) ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / ( ( CS - ( DS * ( ( ( MUM * RCSe ) - ( CS + DS ) ) / MUM ) ) ) / ( DS / RMSe ) ) ) ,( ( Max( ( RCSe + MUM ),( ( RMSe + Max( ( DS * DS ),MLU ) ) + MUR ) ) * RCSe ) - MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.47973237941008423}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( ( CRS + Const ) - ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / DDR ) ) - ( Min( BR ,DDR ) + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( Min( DS ,MUC ) - ( MUC - DS ) ) / ( MUM + ( ( MLU / ( ( Max( Max( CS,MLU ),( RMSe * MLU ) ) - MUM ) + Min( MUR ,( CS - RRSe ) ) ) ) * ( MUM - ( RCSe + ( RMSe * ( Max( RMSe,DS ) - CS ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.018869360901491026}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + ( ACS / ACS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( ( CS + MUR ) * Max( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( DS - Min( ( MUR - RRSe ) ,DS ) ) ) ),Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.024591197896544643}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "Max( ( MDR * ( Min( Max( ( MRS + FirstVNF_Mem_Server ),( CRS - FirstVNF_CPU ) ) ,ACS ) / CRS ) ),( CRS / ( FirstVNF_CPU / Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,ARS ) ) ) )", "choosing": "( ( Min( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) ,MUR ) - MUR ) * Min( ( ( ( MUC * ( MUR / DS ) ) - Min( MLU ,MUM ) ) * MUM ) ,Max( ( Min( DS ,( RRSe * ( ( DS / MUM ) + MUC ) ) ) * Min( ( DS - RCSe ) ,( ( ( DS * RRSe ) * MUR ) / ( Max( MUM,RRSe ) / DS ) ) ) ),( ( Max( ( RMSe / ( MLU - RRSe ) ),( ( MUC - MLU ) - ( MUM / RCSe ) ) ) * ( Min( Max( MLU,RRSe ) ,( RRSe - RCSe ) ) / MLU ) ) + RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7053777533581933}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ARS,( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / MUR ) - RMSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + Max( Max( ( MLU / ( MUR + MLU ) ),RMSe ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29195379764632257}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),ARS ) / Min( ( ( AMS + Max( FirstVNF_RAM,BR ) ) + ( Const / PN ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( DS ,( RRSe - ( MUR + DS ) ) ) - Max( ( RMSe / ( MUR - MUM ) ),RMSe ) ) + RCSe ) - RCSe ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.17519685039370078, "obj2": 0.6902820047255211}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) + RRS ) + FirstVNF_Mem_Server ) - ( ( ARS * MDR ) + MRS ) )", "choosing": "( ( ( RCSe + MUR ) + DS ) / ( CS + Min( ( MUM - ( DS + Max( ( RMSe / MUC ),( Max( RCSe,MUR ) * MLU ) ) ) ) ,( RCSe * Min( Min( DS ,( MUC / ( CS - DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5871294610729944}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( Min( ( Const * ACS ) ,( RRS * Const ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6873460310928774}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( ACS,ARS ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( RCSe + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ),( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( RRSe / RRSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5763655353318778}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7929262932618959}, {"determining": "( Min( ( Const + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,MUC ) * ( RMSe / DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7962741767480824}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,BR ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( ( FirstVNF_RAM_Server / ( ( BR + PN ) * ARS ) ) / ( ( ( ARS + CRS ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS + DS ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) )", "obj1": 0.9901574803149606, "obj2": 0.005903417821286043}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + ( ARS / ACS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( DS - Min( ( MUR - RRSe ) ,DS ) ) ) ),Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.027482005328193435}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( ( ( CRS - ( ARS / FirstVNF_CPU_Server ) ) + FirstVNF_RAM ),( RRS * AMS ) ) ),CRS ) / PN ) / ( ( ( FirstVNF_Mem - MRS ) - ( AMS - Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server * MRS ) ) ,MRS ) ) ) + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + ( ( Min( Max( RCSe,MUC ) ,( MUM / Min( MLU ,MUC ) ) ) + CS ) * DS ) ) * ( RMSe / ( Min( Min( CS ,( MUM - Max( ( MUR / MUM ),MUM ) ) ) ,Max( MLU,DS ) ) - Max( MUR,( ( RMSe + Min( RMSe ,RCSe ) ) / RMSe ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6901846045461532}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( CS,Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * RMSe ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7001385123692162}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}], "40": [{"determining": "( Max( ACS,( Max( Min( ( Max( ( RRS / FirstVNF_RAM_Server ),( ARS * PN ) ) / ARS ) ,( MRS * Min( Min( AMS ,BR ) ,AMS ) ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR / ARS ) ) - Min( PN ,Min( Max( Min( AMS ,FirstVNF_RAM ),FirstVNF_Mem ) ,MDR ) ) ) ) ) / Min( ARS ,( ( MRS + ( PN - FirstVNF_Mem_Server ) ) * ( Min( ( CRS / Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( ( DS + RRSe ) + ( ( MUR - ( ( MUC * ( Min( MUR ,MLU ) + Min( DS ,RMSe ) ) ) / RMSe ) ) - ( CS * ( MUC * ( RCSe - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( RRS / FirstVNF_RAM_Server ),( ARS * PN ) ) / ARS ) ,( MRS * Min( Min( AMS ,BR ) ,RRS ) ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR / ARS ) ) / Min( PN ,Min( Max( Min( AMS ,FirstVNF_RAM ),FirstVNF_Mem ) ,MDR ) ) ) ) ) / Min( ARS ,( ( MRS + ( PN - FirstVNF_Mem_Server ) ) * ( ARS * DDR ) ) ) )", "choosing": "( Min( ( ( RRSe + Max( Max( MUM,( RMSe * ( CS * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / Min( RCSe ,CS ) ) ) ) / ( RCSe / ( RCSe * MLU ) ) ) ,( RCSe - ( Max( Min( ( Max( MUC,DS ) / DS ) ,( DS + MUM ) ),MUM ) * RCSe ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR - RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( Max( ACS,MRS ) - AMS ) / ( ARS - RRS ) )", "choosing": "( ( ( ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) / RMSe ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.7106299212598425, "obj2": 0.17893183190807543}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( ( Max( FirstVNF_Mem,Const ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( Min( PN ,MDR ) / Max( MRS,FirstVNF_CPU ) ) ) + PN ) ) ) / CRS ) / Max( MRS,MRS ) )", "choosing": "( ( ( ( Min( MUC ,( Min( RRSe ,MLU ) * RCSe ) ) * MUR ) / Max( ( RCSe + ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.6771653543307087, "obj2": 0.24545288748344277}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( Const + FirstVNF_CPU_Server ) * ( Max( Max( ARS,( ( ( CRS - Const ) + ( ( ARS + CRS ) * FirstVNF_RAM ) ) - ( Min( Min( FirstVNF_CPU ,BR ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ),( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM - DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + ( MLU / ( MUR + MLU ) ) )", "obj1": 0.5059055118110236, "obj2": 0.2902270427873874}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( RRS + FirstVNF_CPU ) * ( ( ACS / ( PN - Max( Min( DDR ,AMS ),PN ) ) ) * ( FirstVNF_Mem_Server * Min( ( ( DDR + ARS ) * PN ) ,BR ) ) ) ) / ( Const + Const ) )", "choosing": "( ( DS + CS ) * ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( FirstVNF_CPU * MDR ) * Max( Min( Min( ( ( FirstVNF_Mem_Server + Const ) / ARS ) ,MDR ) ,FirstVNF_RAM ),( ACS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( DS ,MUC ) + ( ( RCSe * Min( DS ,RMSe ) ) - RMSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7623498573209094}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( Min( ( ( FirstVNF_RAM * Min( DDR ,ACS ) ) / RRS ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MUM ) ) - ( MUC * MUR ) ) * ( RMSe / DS ) )", "obj1": 0.15551181102362205, "obj2": 0.718251380517977}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( Min( ( Const + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + ACS ) ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / ( ( CS - ( DS * ( ( ( MUM * RCSe ) - ( CS + DS ) ) / MUM ) ) ) / ( DS / RMSe ) ) ) ,( ( Max( ( RCSe + MUM ),( ( RMSe + Max( ( DS * DS ),MLU ) ) + MUR ) ) * RCSe ) - MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.47973237941008423}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + ( ACS / ACS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( ( CS + MUR ) * Max( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( DS - Min( ( MUR - RRSe ) ,DS ) ) ) ),Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.024591197896544643}, {"determining": "( ( ( CRS + Const ) - ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / DDR ) ) - ( Min( BR ,DDR ) + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( Min( DS ,MUC ) - ( MUC - DS ) ) / ( MUM + ( ( MLU / ( ( Max( Max( CS,MLU ),( RMSe * MLU ) ) - MUM ) + Min( MUR ,( CS - RRSe ) ) ) ) * ( MUM - ( RCSe + ( RMSe * ( Max( RMSe,DS ) - CS ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.018869360901491026}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ( ( Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server + ACS ) ) ) + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( DS,RCSe ),Min( ( RRSe * MLU ) ,Max( MUM,CS ) ) ) / Max( Max( RMSe,CS ),MUM ) ) * ( RMSe / DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7918933812704029}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( Min( ( Const * ACS ) ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( MUM + Max( RRSe,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( ( DS / MUM ) + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7043069195400675}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + ( ARS / ACS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( DS - Min( ( MUR - RRSe ) ,DS ) ) ) ),Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.027482005328193435}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ARS,( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / MUR ) - RMSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + Max( Max( ( MLU / ( MUR + MLU ) ),RMSe ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29195379764632257}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),ARS ) / Min( ( ( AMS + Max( FirstVNF_RAM,BR ) ) + ( Const / PN ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( DS ,( RRSe - ( MUR + DS ) ) ) - Max( ( RMSe / ( MUR - MUM ) ),RMSe ) ) + RCSe ) - RCSe ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.17519685039370078, "obj2": 0.6902820047255211}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) + RRS ) + FirstVNF_Mem_Server ) - ( ( ARS * MDR ) + MRS ) )", "choosing": "( ( ( RCSe + MUR ) + DS ) / ( CS + Min( ( MUM - ( DS + Max( ( RMSe / MUC ),( Max( RCSe,MUR ) * MLU ) ) ) ) ,( RCSe * Min( Min( DS ,( MUC / ( CS - DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5871294610729944}, {"determining": "( Max( ACS,Min( ACS ,Max( ACS,ARS ) ) ) / Max( MRS,Max( Min( ARS ,( BR / Const ) ),( Min( CRS ,FirstVNF_CPU ) * DDR ) ) ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6986467514615428}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( Min( ( Const * ACS ) ,( RRS * Const ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6873460310928774}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ),( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( RRSe / RRSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5763655353318778}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,BR ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( ( FirstVNF_RAM_Server / ( ( BR + PN ) * ARS ) ) / ( ( ( ARS + CRS ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS + DS ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) )", "obj1": 0.9901574803149606, "obj2": 0.005903417821286043}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) / ( PN * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - DS ) / ( RRSe - DS ) )", "obj1": 0.16929133858267717, "obj2": 0.7022755971266649}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( ( ( CRS - ( ARS / FirstVNF_CPU_Server ) ) + FirstVNF_RAM ),( RRS * AMS ) ) ),CRS ) / PN ) / ( ( ( FirstVNF_Mem - MRS ) - ( AMS - Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server * MRS ) ) ,MRS ) ) ) + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + ( ( Min( Max( RCSe,MUC ) ,( MUM / Min( MLU ,MUC ) ) ) + CS ) * DS ) ) * ( RMSe / ( Min( Min( CS ,( MUM - Max( ( MUR / MUM ),MUM ) ) ) ,Max( MLU,DS ) ) - Max( MUR,( ( RMSe + Min( RMSe ,RCSe ) ) / RMSe ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6901846045461532}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( ACS,ARS ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( RCSe + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( CS,Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * RMSe ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7001385123692162}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}], "41": [{"determining": "( Max( ACS,( Max( Min( ( Max( ( RRS / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( Min( FirstVNF_Mem ,BR ) ,AMS ) ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR / ARS ) ) - Min( PN ,Min( Max( Min( AMS ,FirstVNF_RAM ),FirstVNF_Mem ) ,MDR ) ) ) ) ) / Min( ARS ,( ( MRS + ( PN - FirstVNF_Mem_Server ) ) * ( Min( ( CRS / Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( ( DS + ( Max( ( RMSe - ( Max( MUR,RRSe ) + RMSe ) ),MUR ) + ( CS - CS ) ) ) + ( ( MUR - ( ( MUC * ( Min( MUR ,MLU ) + Min( DS ,RMSe ) ) ) / RMSe ) ) - ( ( MUC * ( RCSe - MUR ) ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( RRS / FirstVNF_RAM_Server ),( ARS * PN ) ) / ARS ) ,( MRS * Min( Min( AMS ,BR ) ,AMS ) ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR / ARS ) ) - Min( PN ,Min( Max( Min( AMS ,FirstVNF_RAM ),FirstVNF_Mem ) ,MDR ) ) ) ) ) / Min( ARS ,( ( MRS + ( PN - FirstVNF_Mem_Server ) ) * ( Min( ( CRS / Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( ( DS + RRSe ) + ( ( MUR - ( ( MUC * ( Min( MUR ,MLU ) + Min( DS ,RMSe ) ) ) / RMSe ) ) - ( CS * ( MUC * ( RCSe - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( Max( ACS,MRS ) - AMS ) / ( ARS - RRS ) )", "choosing": "( ( ( ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) / RMSe ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.7106299212598425, "obj2": 0.17893183190807543}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( ( ( MRS - BR ) / Min( PN ,MRS ) ) + ( ( ( FirstVNF_Mem_Server + AMS ) + ( PN + Min( ARS ,FirstVNF_RAM ) ) ) * MDR ) ) + FirstVNF_CPU_Server ) * ( ( Max( ARS,( ( ( CRS - Const ) + PN ) - ( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( Max( MLU,( Max( RCSe,MUR ) * MLU ) ) / Min( ( ( MUM * DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUR ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 0.6653543307086615, "obj2": 0.24404932517992295}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( Const + FirstVNF_CPU_Server ) * ( Max( Max( ARS,( ( ( CRS - Const ) + ( ( ARS + CRS ) * FirstVNF_RAM ) ) - ( Min( Min( FirstVNF_CPU ,BR ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ),( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM - DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + ( MLU / ( MUR + MLU ) ) )", "obj1": 0.5059055118110236, "obj2": 0.2902270427873874}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_Mem - ( Max( ACS,MRS ) - AMS ) ) ) - Min( Min( ( ( FirstVNF_RAM - MRS ) + Min( ( Max( ( FirstVNF_RAM_Server + MRS ),FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR + ( ( MDR / RRS ) + BR ) ) ) ,( ( MDR - ( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( Max( RRSe,RRSe ) / ( ( MUM * ( RRSe + ( MLU * RCSe ) ) ) - RRSe ) ) ) - RRSe ) / ( MUR + DS ) )", "obj1": 0.6948818897637795, "obj2": 0.19874208162207185}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( RRS + FirstVNF_CPU ) * ( ( ACS / ( PN - Max( Min( DDR ,AMS ),PN ) ) ) * ( FirstVNF_Mem_Server * Min( ( ( DDR + ARS ) * PN ) ,BR ) ) ) ) / ( Const + Const ) )", "choosing": "( ( DS + CS ) * ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( FirstVNF_CPU * MDR ) * Max( Min( Min( ( ( FirstVNF_Mem_Server + Const ) / ARS ) ,MDR ) ,FirstVNF_RAM ),( ACS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( DS ,MUC ) + ( ( RCSe * Min( DS ,RMSe ) ) - RMSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7623498573209094}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( Min( ( ( FirstVNF_RAM * Min( DDR ,ACS ) ) / RRS ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MUM ) ) - ( MUC * MUR ) ) * ( RMSe / DS ) )", "obj1": 0.15551181102362205, "obj2": 0.718251380517977}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( Min( ( Const + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + ACS ) ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / ( ( CS - ( DS * ( ( ( MUM * RCSe ) - ( CS + DS ) ) / MUM ) ) ) / ( DS / RMSe ) ) ) ,( ( Max( ( RCSe + MUM ),( ( RMSe + Max( ( DS * DS ),MLU ) ) + MUR ) ) * RCSe ) - MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.47973237941008423}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + ( ACS / ACS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( ( CS + MUR ) * Max( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( DS - Min( ( MUR - RRSe ) ,DS ) ) ) ),Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.024591197896544643}, {"determining": "( ( ( CRS + Const ) - ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / DDR ) ) - ( Min( BR ,DDR ) + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( Min( DS ,MUC ) - ( MUC - DS ) ) / ( MUM + ( ( MLU / ( ( Max( Max( CS,MLU ),( RMSe * MLU ) ) - MUM ) + Min( MUR ,( CS - RRSe ) ) ) ) * ( MUM - ( RCSe + ( RMSe * ( Max( RMSe,DS ) - CS ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.018869360901491026}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ( ( Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server + ACS ) ) ) + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( DS,RCSe ),Min( ( RRSe * MLU ) ,Max( MUM,CS ) ) ) / Max( Max( RMSe,CS ),MUM ) ) * ( RMSe / DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7918933812704029}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( Min( ( Const * ACS ) ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( MUM + Max( RRSe,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + ( ARS / ACS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( DS - Min( ( MUR - RRSe ) ,DS ) ) ) ),Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.027482005328193435}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ARS,( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / MUR ) - RMSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + Max( Max( ( MLU / ( MUR + MLU ) ),RMSe ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29195379764632257}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) + RRS ) + FirstVNF_Mem_Server ) - ( ( ARS * MDR ) + MRS ) )", "choosing": "( ( ( RCSe + MUR ) + DS ) / ( CS + Min( ( MUM - ( DS + Max( ( RMSe / MUC ),( Max( RCSe,MUR ) * MLU ) ) ) ) ,( RCSe * Min( Min( DS ,( MUC / ( CS - DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5871294610729944}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( Min( ( Const * ACS ) ,( MDR * Const ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( RMSe * RRSe ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( MUM + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.1732283464566929, "obj2": 0.695218754255013}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( Min( ( Const * ACS ) ,( RRS * Const ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6873460310928774}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( ACS,ARS ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( RCSe + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ),( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( RRSe / RRSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5763655353318778}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),ARS ) / Min( ( ( AMS + Max( FirstVNF_RAM,BR ) ) + ( Const / PN ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( DS ,( RRSe - ( MUR + DS ) ) ) - Max( ( RMSe / ( MUR - MUM ) ),RMSe ) ) + RCSe ) - RCSe ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.17519685039370078, "obj2": 0.6902820047255211}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,BR ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( ( FirstVNF_RAM_Server / ( ( BR + PN ) * ARS ) ) / ( ( ( ARS + CRS ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS + DS ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) )", "obj1": 0.9901574803149606, "obj2": 0.005903417821286043}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ( Const * ACS ) ,( RRS * Const ) ),Max( Min( ( Const * ACS ) ,( RRS * Const ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,MUC ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( MUM + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7043069195400675}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( CS,Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * RMSe ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7001385123692162}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( ( ( CRS - ( ARS / FirstVNF_CPU_Server ) ) + FirstVNF_RAM ),( RRS * AMS ) ) ),CRS ) / PN ) / ( ( ( FirstVNF_Mem - MRS ) - ( AMS - Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server * MRS ) ) ,MRS ) ) ) + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + ( ( Min( Max( RCSe,MUC ) ,( MUM / Min( MLU ,MUC ) ) ) + CS ) * DS ) ) * ( RMSe / ( Min( Min( CS ,( MUM - Max( ( MUR / MUM ),MUM ) ) ) ,Max( MLU,DS ) ) - Max( MUR,( ( RMSe + Min( RMSe ,RCSe ) ) / RMSe ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6901846045461532}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( ( DS / MUM ) + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7043069195400675}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}], "42": [{"determining": "( ( Max( Min( ( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( Min( FirstVNF_Mem ,BR ) ,AMS ) ) ),AMS ) - ( ( ACS + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) / Min( ARS ,( ( MRS + ( FirstVNF_Mem_Server - PN ) ) * ( ( ( CRS + Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( Max( RMSe,( MUR + ( RCSe - Max( DS,MUC ) ) ) ) ,RCSe ) ) + ( ( RCSe - Max( DS,MUC ) ) - ( ( MUC * ( RCSe - MUR ) ) * CS ) ) ) * ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( Max( Min( ( Max( ( RRS / FirstVNF_RAM_Server ),( ARS * BR ) ) / ARS ) ,( MRS * Min( Min( FirstVNF_Mem ,BR ) ,AMS ) ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR / ARS ) ) - Min( PN ,Min( Max( Min( AMS ,FirstVNF_RAM ),FirstVNF_Mem ) ,MDR ) ) ) ) ) / Min( ARS ,( ( MRS + ( PN - FirstVNF_Mem_Server ) ) * ( Min( ( CRS / Max( ( FirstVNF_RAM_Server * CRS ),BR ) ) ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( ( DS + ( Max( ( RMSe - ( Max( MUR,RRSe ) + RMSe ) ),MUR ) + ( CS - CS ) ) ) + ( ( MUR - ( ( MUC * ( Min( MUR ,MLU ) + Min( DS ,RMSe ) ) ) / RMSe ) ) - ( ( MUC * ( RCSe - MUR ) ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( DDR - Min( Min( ( PN * AMS ) ,ACS ) ,FirstVNF_Mem_Server ) ) ) * Min( Const ,CRS ) )", "choosing": "( ( Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) - DS ) - Min( ( ( Max( ( MUC * DS ),( Max( CS,MLU ) / ( MUR * RRSe ) ) ) / MUC ) * MUR ) ,Max( ( DS / ( RMSe * MLU ) ),CS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8799177162216343}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( Max( Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ),Min( ( FirstVNF_RAM_Server + MDR ) ,ARS ) ) * PN ) ) )", "choosing": "( ( CS / MLU ) - ( CS * Min( ( MUM + MUC ) ,( MLU + MUM ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3965318641787667}, {"determining": "( ( Max( ACS,MRS ) - AMS ) / ( ARS - RRS ) )", "choosing": "( ( ( ( ( MUM * ( RRSe + ( MUC * RCSe ) ) ) - RRSe ) / RMSe ) / MLU ) * Min( ( RMSe - RRSe ) ,RRSe ) )", "obj1": 0.7106299212598425, "obj2": 0.17893183190807543}, {"determining": "( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_Mem ,DDR ) ) ,AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * Max( RCSe,( RCSe / MUR ) ) ) / Min( DS ,RRSe ) )", "obj1": 0.9035433070866141, "obj2": 0.04790301090548356}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07605652552338511}, {"determining": "( Min( Const ,( ARS - MDR ) ) - Max( MDR,RRS ) )", "choosing": "Max( Max( ( Min( RMSe ,RRSe ) * ( MLU - ( CS + ( MUR + Max( Max( MUR,MUR ),RMSe ) ) ) ) ),MLU ),( RRSe / RRSe ) )", "obj1": 0.5787401574803149, "obj2": 0.28465337649903777}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( ( ( ( MRS - BR ) / Min( PN ,MRS ) ) + ( ( ( FirstVNF_Mem_Server + AMS ) + ( PN + Min( ARS ,FirstVNF_RAM ) ) ) * MDR ) ) + FirstVNF_CPU_Server ) * ( ( Max( ARS,( ( ( CRS - Const ) + PN ) - ( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( Max( MLU,( Max( RCSe,MUR ) * MLU ) ) / Min( ( ( MUM * DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUR ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 0.6653543307086615, "obj2": 0.24404932517992295}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( FirstVNF_RAM + ACS ) - ( ( ( Min( FirstVNF_Mem ,PN ) / ( PN + FirstVNF_Mem_Server ) ) + DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,CS ) / ( ( CS / Max( MUC,MUC ) ) * Max( CS,( Max( MLU,MUM ) / Min( Min( RCSe ,RMSe ) ,( MUC / ( CS - MLU ) ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.4710258151898137}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( ACS / CRS ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8149559289310957}, {"determining": "( ( Const + FirstVNF_CPU_Server ) * ( Max( Max( ARS,( ( ( CRS - Const ) + ( ( ARS + CRS ) * FirstVNF_RAM ) ) - ( Min( Min( FirstVNF_CPU ,BR ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ),( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / Min( RMSe ,( RMSe + MUR ) ) ) - RMSe ) / Min( ( ( MUM - DS ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + ( MLU / ( MUR + MLU ) ) )", "obj1": 0.5059055118110236, "obj2": 0.2902270427873874}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4952002571544893}, {"determining": "( ( ( AMS - ( RRS * ( Max( FirstVNF_Mem,RRS ) * MRS ) ) ) + AMS ) / Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,( Min( ( Min( ( Min( AMS ,MRS ) / ( DDR * FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,RRS ) ) ,AMS ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( DS + ( MUC * MUR ) ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.8653582816168043}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) + ( Const + Const ) ) - ( ( CRS + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - ( ( DS * DS ) / ( Max( MLU,Max( RRSe,( Max( MUC,MLU ) / Max( MUM,MUM ) ) ) ) * ( ( Max( MUR,( MLU / RMSe ) ) * ( Max( MUC,MUC ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Max( RMSe,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5155245468080385}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),( ( DDR / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( MUM + MUC ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_Mem - ( Max( ACS,MRS ) - AMS ) ) ) - Min( Min( ( ( FirstVNF_RAM - MRS ) + Min( ( Max( ( FirstVNF_RAM_Server + MRS ),FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR + ( ( MDR / RRS ) + BR ) ) ) ,( ( MDR - ( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( Max( RRSe,RRSe ) / ( ( MUM * ( RRSe + ( MLU * RCSe ) ) ) - RRSe ) ) ) - RRSe ) / ( MUR + DS ) )", "obj1": 0.6948818897637795, "obj2": 0.19874208162207185}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( PN / FirstVNF_Mem ) + DDR ) ) / ( ACS / CRS ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUC ) / ( ( CS / Max( MUC,MUC ) ) / ( ( RCSe * ( Min( RCSe ,Max( Min( DS ,RMSe ),CS ) ) / MUR ) ) - DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.740977081207134}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server * PN ),Max( ARS,( RRS - ( ( Min( FirstVNF_CPU ,BR ) - ( FirstVNF_CPU * BR ) ) * ARS ) ) ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "Max( ( RRSe / Max( MLU,Max( MUM,( RMSe * ( ( ( MUC + DS ) + CS ) - CS ) ) ) ) ),( ( RRSe + RCSe ) / ( ( RCSe - RCSe ) - ( RMSe - ( Min( MLU ,( Max( MLU,MUM ) + MUR ) ) / ( MUC * MUR ) ) ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.347434823037107}, {"determining": "( ( ( ( ACS / RRS ) / DDR ) + ARS ) / ( ( Max( Min( FirstVNF_CPU_Server ,BR ),MRS ) + PN ) - MDR ) )", "choosing": "( Max( ( CS + MUM ),( MUR / MLU ) ) / ( MLU * ( Min( ( MUC - MUC ) ,( Max( ( MUR + DS ),MLU ) - RMSe ) ) * DS ) ) )", "obj1": 0.7539370078740157, "obj2": 0.102897902228512}, {"determining": "( ( ( RRS + FirstVNF_CPU ) * ( ( ACS / ( PN - Max( Min( DDR ,AMS ),PN ) ) ) * ( FirstVNF_Mem_Server * Min( ( ( DDR + ARS ) * PN ) ,BR ) ) ) ) / ( Const + Const ) )", "choosing": "( ( DS + CS ) * ( ( CS / ( ( ( Max( CS,DS ) - ( MUM - RMSe ) ) - MUR ) / MLU ) ) * MUR ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) + ( DDR * RRS ) ) * ( DDR / PN ) )", "choosing": "( ( Max( DS,RCSe ) / ( MLU * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.33070866141732286, "obj2": 0.539740732950939}, {"determining": "( ( FirstVNF_CPU * MDR ) * Max( Min( Min( ( ( FirstVNF_Mem_Server + Const ) / ARS ) ,MDR ) ,FirstVNF_RAM ),( ACS * PN ) ) )", "choosing": "( Max( Max( MUM,MUM ),Max( CS,Max( DS,MUR ) ) ) / ( Min( DS ,MUC ) + ( ( RCSe * Min( DS ,RMSe ) ) - RMSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7623498573209094}, {"determining": "( ( PN / MDR ) - ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) + MRS ) )", "choosing": "Max( Min( RRSe ,MLU ),Min( MLU ,Min( ( RCSe - DS ) ,RRSe ) ) )", "obj1": 0.7755905511811023, "obj2": 0.09399132267370966}, {"determining": "( ( ACS - ( AMS * FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU / ( Max( ( FirstVNF_Mem + MRS ),RRS ) * PN ) ) )", "choosing": "( ( RMSe / MUR ) - ( CS * Min( ( ( RMSe + ( RRSe / MUM ) ) * MUR ) ,( ( CS + MUR ) - ( RRSe / Max( ( MUC - Max( CS,RRSe ) ),( CS / RRSe ) ) ) ) ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5439388200490997}, {"determining": "( ( RRS + ( FirstVNF_CPU + Max( MDR,PN ) ) ) / ( CRS + ARS ) )", "choosing": "( ( ( ( ( ( Min( MUC ,( MLU + CS ) ) / ( ( MUC / RCSe ) * ( RCSe + MLU ) ) ) - DS ) - Min( MLU ,( MUC - Min( MUM ,MLU ) ) ) ) / Max( ( RCSe - ( ( Max( RMSe,CS ) - MUC ) / ( Max( MUR,MUR ) / MUR ) ) ),Max( ( Max( DS,MUM ) + ( MUR * ( RRSe + CS ) ) ),DS ) ) ) - MUR ) / ( MLU + MUC ) )", "obj1": 0.14173228346456693, "obj2": 0.7580405615861588}, {"determining": "( Min( ACS ,BR ) / ( ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),CRS ) * MDR ) + ( ( FirstVNF_RAM_Server * Max( MRS,Max( ACS,Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( ( CS * CS ) * ( DS + RRSe ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6503726390955953}, {"determining": "( ( CRS - ARS ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "( ( RMSe / ( RCSe / ( DS - RRSe ) ) ) * ( Min( CS ,RRSe ) / RMSe ) )", "obj1": 0.3858267716535433, "obj2": 0.4914896076535858}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6811023622047244, "obj2": 0.22908494113257835}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( RRS,FirstVNF_Mem ) ),CRS ) / FirstVNF_RAM ) / ( ( MDR - ( FirstVNF_CPU - AMS ) ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + Min( Max( ( Max( MUR,( ( RMSe + CS ) / RMSe ) ) / MUR ),( Max( MLU,( DS - Max( MUM,CS ) ) ) / ( Max( Min( MUC ,CS ),( RMSe / RCSe ) ) + ( MUM * RCSe ) ) ) ) ,DS ) ) * ( RMSe * ( Min( Min( RMSe ,( MUM - Max( ( RMSe / MUR ),MUM ) ) ) ,MUM ) - Max( MUR,( ( RMSe + CS ) / RMSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6830270005856832}, {"determining": "( Min( ( ( FirstVNF_RAM * Min( DDR ,ACS ) ) / RRS ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MUM ) ) - ( MUC * MUR ) ) * ( RMSe / DS ) )", "obj1": 0.15551181102362205, "obj2": 0.718251380517977}, {"determining": "( ( CRS / Min( Max( MRS,( ACS - MDR ) ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / Max( ARS,MRS ) )", "choosing": "( ( ( ( MUC * ( Max( ( MUR / DS ),RMSe ) - MLU ) ) / Max( ( MUR * ( RMSe + RCSe ) ),RMSe ) ) / ( ( MUC / RCSe ) * CS ) ) * Max( MLU,Max( ( MUM * Min( MUR ,( DS - DS ) ) ),( ( ( Min( MLU ,( CS / MUC ) ) - DS ) * Max( ( MLU / MUR ),RCSe ) ) + RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7890104549697126}, {"determining": "( Max( ARS,PN ) / Max( ( AMS * ( ( ARS * Min( RRS ,FirstVNF_Mem ) ) * MDR ) ),Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,MUR ) / ( RRSe - DS ) ) / ( CS * Max( ( RRSe / MUR ),( MLU - RCSe ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6102140261576743}, {"determining": "( ( Max( ACS,MRS ) + Max( CRS,( DDR + ( FirstVNF_Mem + ( BR - ACS ) ) ) ) ) / ( ARS / Max( Min( ( ( RRS + ( MDR - ARS ) ) - FirstVNF_CPU ) ,Min( ARS ,MDR ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( Max( Max( CS,( ( ( RCSe * MUM ) + Min( CS ,RRSe ) ) + Max( MLU,( RRSe - MUR ) ) ) ),MUR ) + RRSe ) ) / Max( RRSe,MLU ) )", "obj1": 0.20866141732283464, "obj2": 0.6426650749277019}, {"determining": "( Min( ( ( ARS * RRS ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ),( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM + ( RMSe * ( MUR * CS ) ) ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUM + ( RMSe * ( MUR * CS ) ) ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6208668635854235}, {"determining": "( ( Const + ( ( FirstVNF_Mem_Server * Min( ACS ,BR ) ) * Min( ACS ,BR ) ) ) + ( FirstVNF_CPU_Server - ( ARS + ( Const + CRS ) ) ) )", "choosing": "( ( RCSe + Max( RCSe,RMSe ) ) * ( ( RCSe + Max( RCSe,RMSe ) ) * Max( ( ( MUR + RCSe ) - ( CS * DS ) ),MUM ) ) )", "obj1": 0.937007874015748, "obj2": 0.030518483599777286}, {"determining": "( ( CRS - ( ( ( FirstVNF_RAM + CRS ) - CRS ) / Min( FirstVNF_RAM ,( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) / Min( FirstVNF_RAM ,( Min( ( PN / ( FirstVNF_CPU * FirstVNF_Mem ) ) ,AMS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * RRSe ) + ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) ) + MLU ) / Min( DS ,RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.023510646939528007}, {"determining": "( Min( ( Const + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + ACS ) ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / ( ( CS - ( DS * ( ( ( MUM * RCSe ) - ( CS + DS ) ) / MUM ) ) ) / ( DS / RMSe ) ) ) ,( ( Max( ( RCSe + MUM ),( ( RMSe + Max( ( DS * DS ),MLU ) ) + MUR ) ) * RCSe ) - MUC ) )", "obj1": 0.4074803149606299, "obj2": 0.47973237941008423}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + Min( ACS ,Max( FirstVNF_CPU,AMS ) ) ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( CS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8018306090490284}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS / ( MDR + ( CRS - Max( ( AMS / ARS ),Min( CRS ,ARS ) ) ) ) ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "Min( ( RRSe / ( ( ( ( Min( RMSe ,MUM ) - Max( RMSe,( MUR + RCSe ) ) ) * MUM ) - ( DS * ( ( ( MUM * RCSe ) - MLU ) / MUM ) ) ) / ( RMSe / ( CS - RRSe ) ) ) ) ,Min( DS ,MUM ) )", "obj1": 0.3090551181102362, "obj2": 0.5621708526465797}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + ( ACS / ACS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( ( CS + MUR ) * Max( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( DS - Min( ( MUR - RRSe ) ,DS ) ) ) ),Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.024591197896544643}, {"determining": "( ( ( CRS + Const ) - ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / DDR ) ) - ( Min( BR ,DDR ) + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( Min( DS ,MUC ) - ( MUC - DS ) ) / ( MUM + ( ( MLU / ( ( Max( Max( CS,MLU ),( RMSe * MLU ) ) - MUM ) + Min( MUR ,( CS - RRSe ) ) ) ) * ( MUM - ( RCSe + ( RMSe * ( Max( RMSe,DS ) - CS ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.018869360901491026}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) - Max( MRS,RRS ) )", "choosing": "Max( ( ( RRSe - ( MUC - Max( ( MUC / RMSe ),Min( CS ,Max( RMSe,MUR ) ) ) ) ) / ( MUR - RMSe ) ),( ( MUC + MUC ) / ( RRSe / CS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( Min( ACS ,BR ) / ( ( PN / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( RCSe + ( ( MLU + MUR ) + MUM ) ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,Max( ( MUM * RCSe ),Min( CS ,RRSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08378402185740398}, {"determining": "( Min( ACS ,BR ) / ( ( MDR / BR ) + ( ( ( ( DDR / ( ARS * MDR ) ) / BR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( ( DS - MLU ) - MUM ),RMSe ) * ( ( Min( MUM ,( MUC * CS ) ) - Min( RCSe ,MUM ) ) + RRSe ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( Min( Min( RRS ,( ( Max( DDR,MRS ) / CRS ) + DDR ) ) ,BR ) / ( ( ARS - BR ) + Min( ( ARS - Min( Const ,ARS ) ) ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( Max( ( FirstVNF_CPU - DDR ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU + MUR ) / ( Min( ( RMSe * MUM ) ,( ( MLU / Min( Max( MUR,Min( DS ,MUM ) ) ,MUM ) ) + MUM ) ) * CS ) )", "obj1": 0.22244094488188976, "obj2": 0.630600559134093}, {"determining": "( ( Const + Min( Max( Const,ARS ) ,( ( DDR * PN ) * BR ) ) ) / ( Const + Min( Max( Const,ARS ) ,( ( DDR * PN ) * BR ) ) ) )", "choosing": "( ( DS - CS ) * ( Min( ( ( RMSe + MLU ) / DS ) ,RRSe ) + ( Max( ( MUR + RMSe ),MLU ) - RRSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.6034034293593196}, {"determining": "( Min( FirstVNF_CPU ,PN ) / Min( ( ARS - BR ) ,Min( Max( ( FirstVNF_Mem / FirstVNF_RAM ),( FirstVNF_Mem_Server / Max( ACS,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM / RMSe ) / Min( DS ,CS ) )", "obj1": 0.08267716535433071, "obj2": 0.8769315350247647}, {"determining": "( Min( ( ( Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server + ACS ) ) ) + Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) * ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( DS,RCSe ),Min( ( RRSe * MLU ) ,Max( MUM,CS ) ) ) / Max( Max( RMSe,CS ),MUM ) ) * ( RMSe / DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7918933812704029}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_RAM_Server - PN ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + Min( MUC ,RRSe ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.27165354330708663, "obj2": 0.5812049221077432}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( Max( DS,RCSe ) / ( ( MUM + ( ( RMSe + ( CS * ( DS * RMSe ) ) ) - ( Max( RRSe,( RCSe / RCSe ) ) / ( RRSe * MUC ) ) ) ) * MUR ) ) / ( ( MUM * RCSe ) + ( CS / DS ) ) )", "obj1": 0.7913385826771654, "obj2": 0.07841874677346623}, {"determining": "( Max( AMS,AMS ) - PN )", "choosing": "( ( ( MUM - CS ) * CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3051181102362205, "obj2": 0.5675446606046431}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / Const ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * Max( DS,Max( ( MUM / RCSe ),( ( ( Max( RRSe,CS ) + MLU ) * Min( RRSe ,CS ) ) * RCSe ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6322280662809903}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_Mem_Server - RRS ) ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( RRSe,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5776169720695062}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( Min( Max( ARS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,ARS ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM * ARS ) ),( BR / Const ) ) / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + DS ) / Max( DS,( RMSe * ( Max( ( ( DS - CS ) + RRSe ),Min( RRSe ,( CS * RMSe ) ) ) / MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.567756182145257}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( Min( ( Const * ACS ) ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( MUM + Max( RRSe,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( PN / MDR ) - ( Max( ( ( FirstVNF_RAM_Server * AMS ) - ACS ),AMS ) + MRS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07979021204631304}, {"determining": "( ( FirstVNF_Mem * ( ( BR / FirstVNF_Mem ) + DDR ) ) - ( Min( Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / BR ),FirstVNF_RAM_Server ) ,PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - CS ) * ( RCSe - ( RMSe / ( Min( MLU ,( MLU / RCSe ) ) / DS ) ) ) ),( ( Max( RCSe,( DS - CS ) ) * CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RMSe / DS ) + ( ( MUR / RMSe ) - Min( MUC ,MUM ) ) ) ) ) / MUR ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7971465674474059}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / ( RRS / BR ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6850393700787402, "obj2": 0.2236263671145667}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + ( ARS / ACS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( ( Max( MLU,Max( Max( ( MUM / MLU ),DS ),( MUR / MUM ) ) ) / ( DS + ( DS - Min( ( MUR - RRSe ) ,DS ) ) ) ),Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * MUC ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.027482005328193435}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( ARS,( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( ( MUM / MUR ) - RMSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + Max( Max( ( MLU / ( MUR + MLU ) ),RMSe ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29195379764632257}, {"determining": "( ( RRS - RRS ) * ( FirstVNF_RAM_Server + ( ( ( BR / ACS ) - FirstVNF_CPU_Server ) * PN ) ) )", "choosing": "( Min( ( MUC / MUM ) ,RMSe ) - ( ( ( ( ( MUR * ( MUM / Min( RMSe ,MUM ) ) ) - DS ) + DS ) / ( MUM - ( CS + RRSe ) ) ) / MUR ) )", "obj1": 0.2933070866141732, "obj2": 0.5730902809362445}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) + RRS ) + FirstVNF_Mem_Server ) - ( ( ARS * MDR ) + MRS ) )", "choosing": "( ( ( RCSe + MUR ) + DS ) / ( CS + Min( ( MUM - ( DS + Max( ( RMSe / MUC ),( Max( RCSe,MUR ) * MLU ) ) ) ) ,( RCSe * Min( Min( DS ,( MUC / ( CS - DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5871294610729944}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( Min( ( Const * ACS ) ,( MDR * Const ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( RMSe * RRSe ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( MUM + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.1732283464566929, "obj2": 0.695218754255013}, {"determining": "( ( ( ( FirstVNF_Mem_Server / CRS ) + Max( BR,FirstVNF_Mem ) ) - CRS ) / Max( BR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) / Min( Max( ( MUC + ( MLU - ( ( RCSe * MUM ) + MUR ) ) ),MUR ) ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7153299409324655}, {"determining": "( Max( ( RRS + FirstVNF_CPU ),Min( ( ACS / Min( ( ( FirstVNF_Mem * Max( BR,PN ) ) + FirstVNF_RAM_Server ) ,Const ) ) ,( FirstVNF_Mem_Server * CRS ) ) ) / Max( PN,ARS ) )", "choosing": "( ( ( MUC * ( ( RRSe * MUR ) + CS ) ) - RRSe ) * ( ( ( ( ( ( ( RCSe / RCSe ) - RMSe ) - MUR ) / MLU ) / CS ) * RRSe ) * ( Max( CS,CS ) + ( RMSe - ( Max( Max( RCSe,RCSe ),( ( DS - MUM ) / ( CS / RMSe ) ) ) * RMSe ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6043655880309016}, {"determining": "( ( ( ( ( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) * PN ) - DDR ) + MRS ) / ( ARS / Max( Min( BR ,RRS ),( ACS * Const ) ) ) )", "choosing": "( ( ( CS - ( DS * ( ( Min( MUC ,RRSe ) - MLU ) + MUC ) ) ) / ( Min( ( CS / RMSe ) ,Min( MUR ,RMSe ) ) / ( RMSe - DS ) ) ) * ( MLU * DS ) )", "obj1": 0.9783464566929134, "obj2": 0.010376862823519616}, {"determining": "( ( Min( ( ( RRS / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,DDR ) + ARS ) - ( RRS * ACS ) )", "choosing": "( ( ( MUM + MUR ) + DS ) / Min( ( RCSe + Max( MUM,MUR ) ) ,Min( ( ( ( RRSe * ( ( RRSe * CS ) - RRSe ) ) / Max( ( ( MUC - MLU ) - RMSe ),( MUC + DS ) ) ) - DS ) ,MUR ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5929382190635041}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( Min( ( Const * ACS ) ,( RRS * Const ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6873460310928774}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ACS ,Const ),Max( ACS,ARS ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( RCSe + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) * ( Max( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ),( FirstVNF_CPU_Server * PN ) ) - ( FirstVNF_Mem_Server + ( DDR * RRS ) ) ) )", "choosing": "( ( ( RRSe / RRSe ) / Min( ( ( MUM - RRSe ) + ( MLU * ( CS + ( MUR - ( RMSe / MUC ) ) ) ) ) ,RCSe ) ) + ( ( DS + DS ) - ( MLU - RMSe ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5763655353318778}, {"determining": "( ( Min( ACS ,( Max( DDR,Const ) - ( PN + DDR ) ) ) / ( FirstVNF_Mem_Server / CRS ) ) / Max( PN,RRS ) )", "choosing": "( ( RMSe * Min( Max( MUC,MUM ) ,( RCSe * MUC ) ) ) * ( ( MLU - ( Max( Min( ( ( MUR * MLU ) / MUC ) ,MUR ),DS ) / ( Max( RMSe,( MLU * RCSe ) ) / ( Min( MUM ,Min( RCSe ,MUR ) ) - MUR ) ) ) ) / Max( ( RMSe / MUC ),DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.006502587120321918}, {"determining": "( ( ACS * ACS ) / ( Const + Min( Max( ( FirstVNF_CPU_Server - Max( Min( ( BR / MDR ) ,Max( PN,FirstVNF_RAM ) ),BR ) ),( MDR / FirstVNF_RAM ) ) ,( BR * ( DDR * PN ) ) ) ) )", "choosing": "( ( MUM * ( RRSe / RCSe ) ) * ( MUC * MUM ) )", "obj1": 0.3956692913385827, "obj2": 0.4914102136703161}, {"determining": "( Min( ACS ,BR ) / ( ( ( FirstVNF_RAM_Server * Max( ( Min( PN ,ACS ) - Min( PN ,ACS ) ),Min( ACS ,Max( FirstVNF_Mem,ACS ) ) ) ) / MDR ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RCSe + ( ( MLU + MUR ) + MUM ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.265748031496063, "obj2": 0.5891807139972542}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),ARS ) / Min( ( ( AMS + Max( FirstVNF_RAM,BR ) ) + ( Const / PN ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( DS ,( RRSe - ( MUR + DS ) ) ) - Max( ( RMSe / ( MUR - MUM ) ),RMSe ) ) + RCSe ) - RCSe ) - RMSe ) * ( Min( CS ,MUR ) / RMSe ) )", "obj1": 0.17519685039370078, "obj2": 0.6902820047255211}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,PN ) - ( Const + ( BR + FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * ( ( ACS * ( ( CRS - FirstVNF_Mem_Server ) - RRS ) ) - ACS ) ) + DDR ) * ACS ) )", "choosing": "( ( MUR / MUR ) / ( CS - Min( ( DS * DS ) ,( Max( MLU,Max( RRSe,( Max( MUC,MUM ) / Max( MUC,MLU ) ) ) ) * ( ( Max( MUR,( RMSe / MLU ) ) * ( Max( MUC,CS ) * MUM ) ) + Max( Max( ( RCSe + MUM ),Min( RMSe ,MLU ) ),Max( RCSe,MUM ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.577404784813028}, {"determining": "( Max( ARS,( ( FirstVNF_RAM_Server + PN ) - ( Min( Min( FirstVNF_CPU ,BR ) ,( FirstVNF_CPU * BR ) ) * ARS ) ) ) - ( ( FirstVNF_RAM_Server / ( ( BR + PN ) * ARS ) ) / ( ( ( ARS + CRS ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS + DS ),Max( CS,Min( ( MUM - MUC ) ,MUM ) ) )", "obj1": 0.9901574803149606, "obj2": 0.005903417821286043}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,( CS - ( ( MUR * RCSe ) - Max( MUR,MLU ) ) ) ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( ( DS / MUM ) + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7043069195400675}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( MRS + DDR ) + Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,MRS ) ) )", "choosing": "( Min( RRSe ,CS ) / ( RRSe * Max( CS,Max( CS,( ( MLU * DS ) - ( ( DS - RRSe ) + ( ( MUM * RMSe ) - ( RRSe - DS ) ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7001385123692162}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * ( Const / ( Max( ( FirstVNF_Mem + MRS ),( ARS + FirstVNF_Mem_Server ) ) * PN ) ) )", "choosing": "( ( CS / MUR ) - ( CS * Min( ( CS + MUM ) ,( Min( ( RCSe * DS ) ,MLU ) + ( DS + ( MUR / Min( MUR ,( MLU / RRSe ) ) ) ) ) ) ) )", "obj1": 0.5866141732283464, "obj2": 0.2466646611193992}, {"determining": "( ( Max( Const,ACS ) * ( ( PN / FirstVNF_Mem ) + DDR ) ) - ( ( Max( Max( Const,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / PN ) - ( Const + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( DS ,RMSe ),CS ) * ( MUR / ( Max( MLU,MUR ) * ( MUM + RCSe ) ) ) ),( Max( Max( RCSe,( DS - CS ) ),CS ) + ( Max( Max( Max( MUM,MUC ),( RMSe + RRSe ) ),Max( RCSe,( ( RCSe * Min( RMSe ,DS ) ) * ( Min( MUC ,MUM ) - ( MUR / RMSe ) ) ) ) ) / ( MUR + ( ( RCSe - Min( ( MUC / RMSe ) ,( DS * DS ) ) ) + ( MLU + ( Max( MUR,RMSe ) - MLU ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.009858842013883462}, {"determining": "( Min( ( Min( FirstVNF_CPU ,AMS ) * ( ACS * RRS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Const ) * MRS ) ),AMS ) - ( ( PN - FirstVNF_CPU ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( ( Min( DS ,MUR ) * ( MLU - RRSe ) ) / RRSe ) ,( MUM + ( ( MUR * CS ) * ( MUR * CS ) ) ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MLU ,MUM ) ) ) ) * ( ( ( RCSe - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.48652385814551735}, {"determining": "( ( AMS * ( Min( ARS ,( Max( Min( Min( CRS ,AMS ) ,CRS ),BR ) * RRS ) ) + BR ) ) / Max( Min( MRS ,ACS ),Min( ARS ,PN ) ) )", "choosing": "( ( RRSe / ( ( MUM / MUC ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.21653543307086615, "obj2": 0.632039202767113}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( Max( ( Min( ( ( ( RRSe - MLU ) * Min( MUC ,CS ) ) + MLU ) ,( MUR + MLU ) ) / CS ),RMSe ) / ( Min( RRSe ,MUM ) - DS ) ) * ( RMSe + Min( Max( MUR,( MLU * CS ) ) ,DS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4913091493500588}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( ( ( CRS - ( ARS / FirstVNF_CPU_Server ) ) + FirstVNF_RAM ),( RRS * AMS ) ) ),CRS ) / PN ) / ( ( ( FirstVNF_Mem - MRS ) - ( AMS - Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server * MRS ) ) ,MRS ) ) ) + Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RRSe + MUM ) * ( MUR - RMSe ) ) + ( ( Min( Max( RCSe,MUC ) ,( MUM / Min( MLU ,MUC ) ) ) + CS ) * DS ) ) * ( RMSe / ( Min( Min( CS ,( MUM - Max( ( MUR / MUM ),MUM ) ) ) ,Max( MLU,DS ) ) - Max( MUR,( ( RMSe + Min( RMSe ,RCSe ) ) / RMSe ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6901846045461532}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Max( ( ( DDR - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),DDR ) - ( Max( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,RRS ) ) + AMS ),MDR ) * MDR ) )", "choosing": "Max( Min( Max( ( Min( MUR ,( MUM / CS ) ) - ( RMSe * RCSe ) ),MUC ) ,Min( RMSe ,DS ) ),( Min( MUM ,MUR ) / ( RRSe - DS ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22082294181521123}, {"determining": "( ( ( ( MDR - BR ) * FirstVNF_CPU_Server ) / CRS ) / ( CRS - ARS ) )", "choosing": "( ( ( ( RRSe / ( CS - RCSe ) ) / ( ( DS * ( ( ( DS + MUR ) * Max( MUM,RMSe ) ) - ( Min( RMSe ,MUM ) - MLU ) ) ) - DS ) ) * ( RMSe + ( DS + Max( MUR,( Min( MLU ,RMSe ) + ( CS - ( MLU * MUM ) ) ) ) ) ) ) * ( ( MLU - ( Max( Min( DS ,MUR ),DS ) / Min( ( Min( ( MUC / DS ) ,MLU ) - Min( Max( CS,RCSe ) ,Max( MLU,RCSe ) ) ) ,( MUC + ( MUM * MUR ) ) ) ) ) / RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.0019709203597923232}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}, {"determining": "( Min( ACS ,BR ) / ( Min( ( PN / Min( FirstVNF_CPU ,ARS ) ) ,AMS ) + ( ( BR / FirstVNF_Mem ) - ARS ) ) )", "choosing": "( ( RRSe + ( ( MUM * RRSe ) + ( MUM + MLU ) ) ) / Min( ( Min( MUC ,RRSe ) * RRSe ) ,CS ) )", "obj1": 0.9921259842519685, "obj2": 0.003437384503035676}, {"determining": "( Min( Min( RRS ,( ( Max( FirstVNF_CPU,RRS ) / CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,BR ) / Min( FirstVNF_RAM_Server ,MRS ) )", "choosing": "( ( RMSe + ( Min( Min( MUM ,Max( CS,MUR ) ) ,Max( ( RCSe + CS ),RMSe ) ) * MUM ) ) / ( Min( ( RMSe * MUM ) ,( MUM + RCSe ) ) * CS ) )", "obj1": 0.2618110236220472, "obj2": 0.597650045387825}, {"determining": "( Min( ( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ) * Min( FirstVNF_CPU ,AMS ) ) ,ARS ) / Max( ACS,( Max( Min( ( PN - ( ( PN * FirstVNF_CPU_Server ) - ( PN - FirstVNF_CPU ) ) ) ,( Min( RRS ,Max( AMS,BR ) ) * MRS ) ),AMS ) - ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_CPU ) ) / Min( PN ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( DS + RRSe ),( ( Min( MUC ,MUR ) * ( RRSe * CS ) ) / RRSe ) ) + RMSe ) / Max( RCSe,( RCSe * MLU ) ) ) ,( RCSe - ( MUC - Min( MUM ,MLU ) ) ) ) * ( ( ( MUR - ( ( MUC * MUR ) / RCSe ) ) - ( CS * ( MUC * ( MUR / RMSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006712413989081544}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * DS ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7987532172356188}, {"determining": "( ( ( MDR / BR ) + ( BR / ( ARS + ACS ) ) ) / Min( ACS ,Max( FirstVNF_CPU,( MDR / BR ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( RMSe,( ( DS - MLU ) - MUM ) ) * ( ( Min( MUM ,( Min( ( DS * RMSe ) ,MUR ) * CS ) ) - ( RCSe / DS ) ) + RRSe ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8005124817966002}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,Max( ACS,ARS ) ) ) / ( ( BR / MDR ) + ( ( FirstVNF_RAM_Server + Max( Min( ( Const * ACS ) ,( RRS * Const ) ),Max( Min( ( Const * ACS ) ,( RRS * Const ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) * DDR ) ) ) ) / MDR ) ) )", "choosing": "( Max( ( CS + ( MUM + CS ) ),( ( RCSe / Min( DS ,MUC ) ) / RCSe ) ) / ( MLU * ( DS * Min( ( MUC - MUC ) ,Min( ( ( MUM + Max( MUC,RRSe ) ) / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7043069195400675}, {"determining": "Max( ( FirstVNF_CPU - Const ),Min( RRS ,( MRS + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe / CS ) + ( MUR + DS ) ),( ( MUM + CS ) / ( CS - DS ) ) ),( ( ( MLU + RRSe ) / ( RMSe + MUR ) ) - Max( ( MLU + MUM ),Max( MUR,DS ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.48584263476354017}]}