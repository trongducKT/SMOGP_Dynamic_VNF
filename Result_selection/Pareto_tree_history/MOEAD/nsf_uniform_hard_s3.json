{"1": [{"determining": "( ( BR * MDR ) - ( BR - Const ) )", "choosing": "( ( DS / CS ) * ( MUR / MUM ) )", "obj1": 0.7222222222222222, "obj2": 0.2448682258136885}, {"determining": "( ( ( ( AMS - FirstVNF_Mem_Server ) / ( ACS - FirstVNF_CPU ) ) * Max( Min( AMS ,PN ),( FirstVNF_RAM_Server / BR ) ) ) / ( ( ( MDR * RRS ) * ( FirstVNF_Mem_Server - MDR ) ) + Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( MUR,( CS + RCSe ) ) * MLU ),( ( MLU - RMSe ) + RMSe ) )", "obj1": 0.7432950191570882, "obj2": 0.2739106068759271}, {"determining": "( Min( PN ,MRS ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.685823754789272, "obj2": 0.27843470718339847}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( Const - CRS ) )", "choosing": "Min( ( MUC * Max( ( Max( CS,MUM ) / MUM ),MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.23302432630833608}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.7452107279693486, "obj2": 0.27635853423571544}, {"determining": "( Min( Min( ACS ,FirstVNF_Mem_Server ) ,DDR ) + ( DDR * PN ) )", "choosing": "( ( RMSe * Max( Max( ( RRSe / Min( RMSe ,Max( CS,Max( MUM,MUR ) ) ) ),( Max( MUC,Max( MUR,( MUM - MUM ) ) ) * MUR ) ),RCSe ) ) + ( CS - RCSe ) )", "obj1": 0.6590038314176245, "obj2": 0.256530641328156}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MRS ) ,( BR - Const ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7337164750957854, "obj2": 0.23033996625342193}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 0.7030651340996169, "obj2": 0.27716408841699164}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem - MRS ) )", "choosing": "( ( RCSe * RMSe ) - ( DS / MUM ) )", "obj1": 0.6264367816091954, "obj2": 0.29347303683352793}, {"determining": "Min( ( RRS + MRS ) ,( AMS * FirstVNF_RAM ) )", "choosing": "Max( ( MUM + RMSe ),( CS + MUM ) )", "obj1": 0.7241379310344828, "obj2": 0.29499178253952163}, {"determining": "Max( ( RRS + DDR ),Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( CS ,RRSe ) ,Min( RRSe ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.29160913330494753}, {"determining": "Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( ACS / FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RCSe ) * ( DS + DS ) )", "obj1": 0.6954022988505747, "obj2": 0.2700986033174198}, {"determining": "Max( ( BR / FirstVNF_CPU ),( ARS - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 0.764367816091954, "obj2": 0.2694121625521488}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( DS,RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.710727969348659, "obj2": 0.26984149285530457}, {"determining": "( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Max( MLU,DS ) - ( RCSe + RMSe ) )", "obj1": 0.6704980842911877, "obj2": 0.2778765014954053}, {"determining": "( ( CRS / FirstVNF_RAM ) + ( BR / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.270450552440729}, {"determining": "( Max( CRS,MRS ) * Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Min( ( RCSe + DS ) ,Max( RCSe,RRSe ) )", "obj1": 0.7222222222222222, "obj2": 0.27170144869190416}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / ( FirstVNF_RAM_Server / CRS ) )", "choosing": "( ( MUM - ( RCSe + RCSe ) ) * ( DS + RRSe ) )", "obj1": 0.7701149425287356, "obj2": 0.19959713018475092}, {"determining": "( ( CRS - ACS ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) * MRS ) )", "choosing": "Max( ( RMSe / RMSe ),Max( ( ( CS * RCSe ) - ( RMSe + RRSe ) ),MUM ) )", "obj1": 0.7509578544061303, "obj2": 0.2672018738196844}, {"determining": "Max( Max( ARS,RRS ),( ACS * Const ) )", "choosing": "( ( MUC - MLU ) - Min( MUC ,RRSe ) )", "obj1": 0.6800766283524904, "obj2": 0.27624424159677635}, {"determining": "Max( ( FirstVNF_Mem + Const ),( MRS - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUC ) + ( MUM - CS ) )", "obj1": 0.6743295019157088, "obj2": 0.28851848900150806}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RCSe - MUM ) + ( MUC + MUM ) )", "obj1": 0.7088122605363985, "obj2": 0.2809846617461921}, {"determining": "Max( ( ACS + FirstVNF_Mem ),( FirstVNF_Mem / Const ) )", "choosing": "( ( RRSe + RRSe ) + ( MLU / RCSe ) )", "obj1": 0.6992337164750958, "obj2": 0.27950752665043876}, {"determining": "Min( Min( ( ARS / CRS ) ,FirstVNF_RAM ) ,( DDR + AMS ) )", "choosing": "( Min( DS ,MLU ) / ( Max( ( ( RMSe * RMSe ) - RRSe ),DS ) / MUM ) )", "obj1": 0.6819923371647509, "obj2": 0.2653123208487538}, {"determining": "Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),Min( MRS ,FirstVNF_CPU ) )", "choosing": "( ( RMSe + CS ) - ( RRSe + DS ) )", "obj1": 0.6877394636015326, "obj2": 0.2870765121635668}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Min( Min( Min( RRS ,ARS ) ,CRS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR * DS ) / Min( ( MUC + RCSe ) ,RCSe ) )", "obj1": 0.7183908045977011, "obj2": 0.25864543521555855}, {"determining": "Max( Max( BR,MRS ),( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( MLU * MUR ) * ( RCSe * CS ) )", "obj1": 0.7145593869731801, "obj2": 0.2659630721215308}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) * Min( BR ,Const ) )", "choosing": "( Max( RMSe,CS ) + ( CS * RCSe ) )", "obj1": 0.7203065134099617, "obj2": 0.26790026871574185}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ( MRS * PN ) )", "choosing": "Min( ( RMSe + MUM ) ,( MUC + MUR ) )", "obj1": 0.6915708812260536, "obj2": 0.27665609158094484}, {"determining": "Max( ( FirstVNF_RAM * AMS ),( Const + ( MDR - BR ) ) )", "choosing": "( ( ( MUM * CS ) * MUR ) + ( MUM - Min( MUC ,DS ) ) )", "obj1": 0.7126436781609196, "obj2": 0.31946826290139724}, {"determining": "( ( BR / FirstVNF_Mem_Server ) / ( ACS + FirstVNF_CPU ) )", "choosing": "( Max( MLU,( RMSe * DS ) ) + ( ( CS * MUM ) * ( MUC / RMSe ) ) )", "obj1": 0.7164750957854407, "obj2": 0.2755989422433458}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + AMS ) * ( MDR + Const ) ) ,( ( CRS + FirstVNF_CPU ) - ( BR - DDR ) ) )", "choosing": "( Min( CS ,MUM ) * Max( RCSe,Min( RCSe ,CS ) ) )", "obj1": 0.6896551724137931, "obj2": 0.2828089772889351}, {"determining": "( ( ARS + CRS ) * Max( AMS,CRS ) )", "choosing": "( ( RMSe + RRSe ) / ( Max( RMSe,DS ) * MUC ) )", "obj1": 0.6513409961685823, "obj2": 0.26220317698544754}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( ( FirstVNF_Mem - CRS ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / FirstVNF_Mem ) )", "choosing": "( ( Min( CS ,RMSe ) / ( MUM - MUR ) ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) )", "obj1": 0.6915708812260536, "obj2": 0.2715558955657839}, {"determining": "( Max( CRS,Const ) + Min( BR ,( DDR - PN ) ) )", "choosing": "Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / MUR ) )", "obj1": 0.6934865900383141, "obj2": 0.2702828078914539}, {"determining": "( Max( ( ACS / Const ),( Const / ( MDR / ARS ) ) ) / ( DDR * RRS ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) * ( MUM + CS ) )", "obj1": 0.6379310344827587, "obj2": 0.2664010690046052}, {"determining": "Max( ( Min( AMS ,FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ),( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUC / MUR ),DS ) * Min( CS ,MUC ) )", "obj1": 0.6781609195402298, "obj2": 0.2752914432141155}, {"determining": "( ( ( ACS + FirstVNF_Mem ) * ( CRS + DDR ) ) * ( ( RRS * DDR ) - ( RRS * CRS ) ) )", "choosing": "( ( Max( MUC,MUR ) + Min( RMSe ,RMSe ) ) / Max( ( RRSe - MUR ),Min( CS ,MUC ) ) )", "obj1": 0.7203065134099617, "obj2": 0.26185806284057844}, {"determining": "Max( ( ACS / Const ),Min( ( PN / ACS ) ,( FirstVNF_Mem * Const ) ) )", "choosing": "( ( MUM * ( DS * MUM ) ) - ( MUR * MUC ) )", "obj1": 0.7088122605363985, "obj2": 0.2758117292133342}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8295019157088123, "obj2": 0.1500414141990453}, {"determining": "Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( ( RRS + ARS ) + ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( ( Min( RMSe ,MLU ) + CS ),Min( ( MUR - RCSe ) ,MLU ) )", "obj1": 0.7088122605363985, "obj2": 0.2907938263881918}, {"determining": "( ( ( AMS * ARS ) + FirstVNF_Mem_Server ) + Max( CRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) )", "choosing": "Max( ( DS * RRSe ),( MUC * ( RCSe + RRSe ) ) )", "obj1": 0.7318007662835249, "obj2": 0.29105998222294427}, {"determining": "( ( AMS / ( BR / RRS ) ) * ( ( MDR * MRS ) - MRS ) )", "choosing": "( ( Max( RCSe,MUM ) + ( DS / MUM ) ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) )", "obj1": 0.9961685823754789, "obj2": 0.004468309931554462}, {"determining": "( Max( ( ARS + MDR ),Max( MRS,PN ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) / Max( ACS,AMS ) ) )", "choosing": "( ( RCSe + RCSe ) - ( MUC + ( RRSe + RMSe ) ) )", "obj1": 0.7049808429118773, "obj2": 0.2861429692518543}, {"determining": "Min( ( Max( ACS,FirstVNF_CPU_Server ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ,Min( Min( AMS ,ACS ) ,Min( MDR ,BR ) ) )", "choosing": "( ( MUR * MUC ) + Min( MLU ,Min( MUR ,MUM ) ) )", "obj1": 0.6992337164750958, "obj2": 0.2631946527120061}, {"determining": "Min( ( ( BR + AMS ) + ( PN + CRS ) ) ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server + Min( PN ,Const ) ) - ARS ) ) / ( MDR - PN ) ) )", "choosing": "Max( ( MUR + MLU ),( ( MUC / MUR ) / RRSe ) )", "obj1": 0.7203065134099617, "obj2": 0.27160850948295423}, {"determining": "( ( Min( DDR ,Min( ARS ,PN ) ) * ACS ) * ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) )", "obj1": 0.7452107279693486, "obj2": 0.24705598049364716}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) - ( ( FirstVNF_RAM - PN ) - ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( ( RMSe / MLU ) ,( CS / MUC ) ) * ( ( RRSe * RRSe ) - ( MUC / MLU ) ) )", "obj1": 0.7413793103448276, "obj2": 0.28270921859840525}, {"determining": "Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),( CRS / AMS ) )", "choosing": "Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) )", "obj1": 0.6762452107279694, "obj2": 0.2954848006952597}, {"determining": "Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),Min( CRS ,FirstVNF_Mem_Server ) ),( MRS / DDR ) )", "choosing": "Min( ( ( Max( CS,DS ) * RRSe ) / ( MUC * RCSe ) ) ,( Min( MUC ,RRSe ) - ( MUC * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.28678853494324535}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + RRS ) + Max( FirstVNF_Mem_Server,MRS ) ) / Max( ( DDR / FirstVNF_RAM ),( MRS / AMS ) ) )", "choosing": "Max( ( RRSe / ( RMSe * MUM ) ),Min( ( MLU + MUC ) ,DS ) )", "obj1": 0.7183908045977011, "obj2": 0.2733193021221382}, {"determining": "( ( ( FirstVNF_Mem + DDR ) / ( CRS - FirstVNF_Mem_Server ) ) * ( CRS * FirstVNF_Mem_Server ) )", "choosing": "Max( ( RRSe + RRSe ),( ( RRSe / ( ( Min( ( MUC * DS ) ,( CS - MUC ) ) * ( RRSe + RRSe ) ) / CS ) ) / MUM ) )", "obj1": 0.632183908045977, "obj2": 0.269042026443927}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / ACS ) ) - ( ( AMS + FirstVNF_RAM ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( CS ,MUM ) * RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.24644539684258282}, {"determining": "Min( ( ( MRS * PN ) / ( Const + FirstVNF_RAM ) ) ,( Min( MDR ,FirstVNF_RAM ) + ( DDR + FirstVNF_RAM ) ) )", "choosing": "( ( MUR * CS ) * ( MUM / MLU ) )", "obj1": 0.6839080459770115, "obj2": 0.2893643315441349}, {"determining": "( Max( Const,RRS ) * Max( ARS,FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,Max( RMSe,MUC ) ) + ( MUR * ( MLU / MUM ) ) )", "obj1": 0.7279693486590039, "obj2": 0.26943832880878804}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR - ARS ) ,( Max( FirstVNF_RAM_Server,( ACS - ( ARS * MDR ) ) ) / Const ) ) )", "choosing": "( Min( MLU ,MUM ) / ( ( RCSe - ( MUR * MUC ) ) - Max( CS,( MUM * CS ) ) ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / MRS ) + DDR ) / ( FirstVNF_CPU_Server / MDR ) )", "choosing": "( ( ( RCSe + RCSe ) - Max( RCSe,MUM ) ) * ( Min( RMSe ,MLU ) - ( RMSe * DS ) ) )", "obj1": 0.6187739463601533, "obj2": 0.27378960229480764}, {"determining": "( Max( FirstVNF_Mem,Const ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ARS ) ) * DDR ) )", "choosing": "( Min( DS ,MUR ) - ( CS + MUC ) )", "obj1": 0.7030651340996169, "obj2": 0.2707235146825245}, {"determining": "Max( ( FirstVNF_RAM / Max( AMS,( ( PN * MRS ) * FirstVNF_RAM ) ) ),( ACS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * MUC ) - ( RRSe - RRSe ) ) + Min( MUM ,MUR ) ) + ( Min( ( RCSe + RRSe ) ,( RCSe / RCSe ) ) / ( ( MUC / RCSe ) - ( RMSe + DS ) ) ) )", "obj1": 0.6781609195402298, "obj2": 0.29401044608107885}, {"determining": "( ( Max( ( MRS * FirstVNF_RAM ),( PN * FirstVNF_Mem_Server ) ) * Min( ( CRS * FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,AMS ) ) ) / Min( Max( ( ACS * DDR ),( BR / MDR ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - Max( DDR,AMS ) ) ) )", "choosing": "Min( ( ( ( CS / RRSe ) * Max( MUC,MUM ) ) + Min( ( MUC * MUR ) ,Max( MUC,RMSe ) ) ) ,( Min( ( MUR * CS ) ,( MLU / RRSe ) ) + ( Min( DS ,MUR ) * ( RMSe * MUM ) ) ) )", "obj1": 0.6685823754789272, "obj2": 0.2836552562745462}, {"determining": "( ( ( ( Const + ACS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU * RRS ) * ( Const - FirstVNF_Mem ) ) ) * Min( Max( ( MDR * BR ),( FirstVNF_RAM * FirstVNF_CPU ) ) ,( Max( CRS,ACS ) * ( AMS + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Min( ( DS * Max( RCSe,MLU ) ) ,Max( ( DS / ( RMSe + ( MLU * Max( MUC,( CS + MUC ) ) ) ) ),RRSe ) ),Max( Min( ( MUC / CS ) ,( MUC - CS ) ),RCSe ) )", "obj1": 0.7011494252873564, "obj2": 0.27327113037287254}, {"determining": "Min( ( AMS * FirstVNF_CPU ) ,Max( ( RRS / RRS ),FirstVNF_Mem ) )", "choosing": "Max( Max( DS,RRSe ),( Min( Max( RRSe,MUM ) ,( RMSe / MUR ) ) - ( ( MUR - DS ) + Max( RMSe,CS ) ) ) )", "obj1": 0.6513409961685823, "obj2": 0.2949429033095829}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * Min( ( Max( PN,AMS ) + FirstVNF_Mem ) ,Min( Max( FirstVNF_Mem_Server,PN ) ,Const ) ) )", "choosing": "( Min( Min( Max( RRSe,RMSe ) ,( MUM - MUR ) ) ,( ( DS / MUM ) - ( RCSe / RCSe ) ) ) + ( ( ( MLU / RMSe ) - Min( RCSe ,RMSe ) ) - ( Max( CS,MLU ) + ( RRSe * MUR ) ) ) )", "obj1": 0.7088122605363985, "obj2": 0.26930418116107524}, {"determining": "( Max( ( PN / ( MDR * Const ) ),( PN * AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "( Max( Min( ( RMSe * MUR ) ,( DS * RRSe ) ),Max( Min( DS ,MUM ),( CS + RCSe ) ) ) / Max( Min( Min( RRSe ,RMSe ) ,( MUC / MUM ) ),Max( ( MUC + MLU ),( RCSe + RCSe ) ) ) )", "obj1": 0.7088122605363985, "obj2": 0.2838613954529463}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) ,( Max( DDR,RRS ) + ( BR / MDR ) ) ) / ( Min( ( MRS * FirstVNF_Mem_Server ) ,( PN / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( CRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( MUM ,( Max( MLU,RMSe ) + ( MUC + DS ) ) ) ,( MUR * ( ( DS / RMSe ) / DS ) ) )", "obj1": 0.7432950191570882, "obj2": 0.2592809328280047}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( AMS + FirstVNF_RAM ) + Max( Max( RRS,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MLU ) ) - ( Min( CS ,( MUC + ( ( RMSe - ( MUC / RRSe ) ) + MUM ) ) ) * CS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( Max( Const,Max( AMS,MRS ) ) / Max( ( CRS - Const ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) / ( Max( Min( MDR ,FirstVNF_RAM_Server ),( AMS + BR ) ) + Min( ( FirstVNF_CPU - BR ) ,Min( DDR ,DDR ) ) ) )", "choosing": "Min( ( ( Max( MUM,RRSe ) - Min( ( MLU + Min( CS ,Min( ( MUR + CS ) ,MLU ) ) ) ,DS ) ) / Min( ( RMSe * RRSe ) ,( DS - RRSe ) ) ) ,( ( Min( DS ,MLU ) / ( RCSe * DS ) ) - Max( Max( MLU,MUM ),Min( MUM ,MLU ) ) ) )", "obj1": 0.7835249042145593, "obj2": 0.25437250157220426}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( ACS / FirstVNF_RAM ) )", "choosing": "( Max( DS,MUM ) - Max( MUR,( ( DS / MUM ) - ( MUR / MLU ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.28518571080876043}, {"determining": "( ( Max( Min( FirstVNF_Mem ,Const ),Min( MDR ,ACS ) ) - ( ( CRS * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - AMS ) ) ) * Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem / BR ) ) ,Max( ( MDR / AMS ),Max( RRS,MDR ) ) ) )", "choosing": "( ( DS / DS ) - ( Max( ( CS + MUC ),DS ) - CS ) )", "obj1": 0.7452107279693486, "obj2": 0.26201023858037387}, {"determining": "Min( ( ( Min( BR ,FirstVNF_Mem ) / Max( MRS,DDR ) ) * ( ( FirstVNF_CPU_Server + RRS ) - ( RRS * FirstVNF_Mem ) ) ) ,( ( ( BR - RRS ) + ( AMS - BR ) ) / BR ) )", "choosing": "( Max( ( MLU - MUC ),( DS - MLU ) ) * Max( RCSe,DS ) )", "obj1": 0.6800766283524904, "obj2": 0.30057451082098247}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( ARS - ARS ) / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + CS ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007946336171085765}, {"determining": "( ( ( ( FirstVNF_RAM / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( ARS / BR ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( DDR ,RRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( ( RMSe / RRSe ),Min( RCSe ,DS ) )", "obj1": 0.685823754789272, "obj2": 0.27148499761660394}, {"determining": "( ( Min( ( CRS - FirstVNF_Mem_Server ) ,Min( MDR ,ACS ) ) / ( ( FirstVNF_Mem * MRS ) - Min( DDR ,PN ) ) ) / ( Max( ( BR + FirstVNF_RAM ),Max( RRS,FirstVNF_CPU ) ) + ( Max( MRS,ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / Max( ( MLU / RCSe ),( MUM * MUC ) ) ) * ( MUM / RRSe ) )", "obj1": 0.7126436781609196, "obj2": 0.26203648673099905}, {"determining": "Min( ( MDR + Max( FirstVNF_Mem_Server,ARS ) ) ,( ( FirstVNF_RAM_Server / Const ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + DS ) * MLU ) - RCSe ) / Min( RMSe ,( RMSe / RCSe ) ) )", "obj1": 0.7260536398467433, "obj2": 0.26586077097647054}, {"determining": "( ( ( ( DDR + RRS ) + ACS ) - FirstVNF_RAM_Server ) + Max( Max( FirstVNF_CPU,CRS ),PN ) )", "choosing": "Max( ( Min( ( CS + RMSe ) ,( MUR / MUC ) ) * ( ( MLU - RRSe ) - Min( RMSe ,MUC ) ) ),( Min( ( MLU - DS ) ,Min( CS ,MUM ) ) + ( ( RCSe + RCSe ) / ( RCSe * RRSe ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.2532745143539823}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7471264367816092, "obj2": 0.2225425525066572}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( ( RRSe / MUM ) - Min( RMSe ,MUR ) ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6475095785440613, "obj2": 0.26360211453781895}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + ( ACS / PN ) ) - FirstVNF_Mem ) - ( ( ( Const + AMS ) - BR ) + ( ( DDR * AMS ) - BR ) ) )", "choosing": "Max( ( ( ( MUC / RMSe ) - ( DS / DS ) ) + ( ( RRSe + MLU ) - ( CS - MUM ) ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.2747815231031861}, {"determining": "Max( ( Min( BR ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) - ( Max( DDR,FirstVNF_RAM ) + ( PN - MRS ) ) ),( FirstVNF_Mem * FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( Max( MLU,( ( ( ( MUC - DS ) + MLU ) / ( DS - RRSe ) ) - Max( Min( MLU ,Max( RRSe,DS ) ),( CS + MUR ) ) ) ) / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) )", "obj1": 0.7279693486590039, "obj2": 0.27054954323107355}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( ( Min( FirstVNF_CPU_Server ,BR ) * FirstVNF_CPU ) + RRS ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) - Max( Min( DS ,( RCSe * RCSe ) ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * MLU ) )", "obj1": 0.8390804597701149, "obj2": 0.17072720229867464}, {"determining": "Max( ( ( ( CRS / CRS ) / Min( FirstVNF_RAM_Server ,MDR ) ) * Max( ( PN + FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) ),Min( ( ( RRS * Const ) - Max( Const,AMS ) ) ,( ( AMS - FirstVNF_Mem_Server ) - ( Const * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( CS ,RRSe ) / ( RRSe / RCSe ) ) + ( Max( DS,MUM ) * Min( MUR ,CS ) ) ) * ( ( ( DS + DS ) / Min( MLU ,MLU ) ) * ( ( MUM - RCSe ) - Max( RCSe,DS ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.2592235547328501}, {"determining": "( ( RRS / ( MRS - FirstVNF_Mem_Server ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "Max( Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MLU,CS ) ) ),Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( ( MUM + CS ) * RCSe ),Max( MUR,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "Max( ( ACS * DDR ),( ( CRS - ( CRS / MRS ) ) / AMS ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RCSe ) ) + ( ( RMSe * MUC ) - ( MUM + MUR ) ) ) + ( ( ( RRSe / CS ) / Min( MLU ,MUC ) ) - ( ( RMSe * DS ) - ( MLU + RCSe ) ) ) )", "obj1": 0.7183908045977011, "obj2": 0.2740012508477164}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 0.6915708812260536, "obj2": 0.29926857411924196}, {"determining": "( ( ARS - MRS ) / ( BR / Min( BR ,Min( CRS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe + RRSe ) + ( RRSe - Min( MUM ,( RCSe * MUM ) ) ) )", "obj1": 0.7432950191570882, "obj2": 0.2732444354305209}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM ) * ( DDR + FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MUR ,CS ),MLU ) / ( DS / ( RCSe - Max( RRSe,MLU ) ) ) )", "obj1": 0.7394636015325671, "obj2": 0.2833723322998084}], "2": [{"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8371647509578544, "obj2": 0.1374773822811479}, {"determining": "( ( BR / Max( ( ACS / Const ),Min( ( PN / ACS ) ,( FirstVNF_Mem * Const ) ) ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * ( MUM * ( DS * MUM ) ) ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9118773946360154, "obj2": 0.06713527188651833}, {"determining": "( FirstVNF_CPU - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( ( RCSe + RMSe ) - MUR ) * ( MUM / MUR ) )", "obj1": 0.9444444444444444, "obj2": 0.05343493499824159}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "( Min( PN ,MRS ) + ( FirstVNF_CPU / ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) ) )", "choosing": "( ( MUR - Min( MUR ,RRSe ) ) - Min( RRSe ,DS ) )", "obj1": 0.6973180076628352, "obj2": 0.24539157680540327}, {"determining": "( Max( ( ARS + MDR ),Max( MRS,PN ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) / Max( ACS,AMS ) ) )", "choosing": "( ( Max( RCSe,MUM ) + ( DS / MUM ) ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) )", "obj1": 0.6513409961685823, "obj2": 0.24709247008948038}, {"determining": "Min( ( ( BR + AMS ) + ( PN + CRS ) ) ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server + Min( PN ,Const ) ) - ARS ) ) / ( MDR - PN ) ) )", "choosing": "Max( ( MUR + MLU ),( ( MUC / MUR ) / RRSe ) )", "obj1": 0.7931034482758621, "obj2": 0.1793623548293099}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( Max( ( ACS / Const ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( RRS * DDR ) )", "choosing": "( ( Min( CS ,RMSe ) / ( MUM - MUR ) ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) )", "obj1": 0.60727969348659, "obj2": 0.27157725884771655}, {"determining": "( ( CRS - ( CRS / MRS ) ) + ( Max( Max( RRS,FirstVNF_CPU_Server ),( ACS + FirstVNF_Mem ) ) / Min( ( FirstVNF_RAM_Server + MRS ) ,Max( BR,ARS ) ) ) )", "choosing": "Max( ( Min( ( ( RMSe * MUC ) - ( MUM + MUR ) ) ,MUC ) * MLU ),( ( MUM * RCSe ) * ( ( MUC + DS ) / ( DS / RMSe ) ) ) )", "obj1": 0.7490421455938697, "obj2": 0.20305644044058133}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( RMSe ,MLU ) + CS ),Min( ( MUR - RCSe ) ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.1682280244675256}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5881226053639846, "obj2": 0.30056870691011667}, {"determining": "( ( ( ( BR / FirstVNF_Mem_Server ) - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + MUM ),RCSe ) )", "obj1": 0.9291187739463601, "obj2": 0.06609282823946619}, {"determining": "Min( Max( FirstVNF_Mem_Server,MRS ) ,( BR - Const ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7337164750957854, "obj2": 0.23033996625342193}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8295019157088123, "obj2": 0.1500414141990453}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8180076628352491, "obj2": 0.1578459044508687}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7471264367816092, "obj2": 0.2225425525066572}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / ( FirstVNF_RAM_Server / CRS ) )", "choosing": "( ( MUM - ( RCSe + RCSe ) ) * ( DS + RRSe ) )", "obj1": 0.7701149425287356, "obj2": 0.19959713018475092}, {"determining": "( ( PN * MDR ) - ( BR - Const ) )", "choosing": "( ( DS / CS ) * CS )", "obj1": 0.7068965517241379, "obj2": 0.23282328097822008}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5881226053639846, "obj2": 0.30056870691011667}, {"determining": "( ( ( FirstVNF_CPU_Server - CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( FirstVNF_Mem - MRS ) )", "choosing": "Max( ( ( MUM - MUR ) * ( DS / RRSe ) ),Max( CS,MUM ) )", "obj1": 0.7816091954022989, "obj2": 0.18769640933322876}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.710727969348659, "obj2": 0.23056958769046973}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( CRS / FirstVNF_RAM ) + ( ( FirstVNF_CPU_Server - CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( RRSe / ( CS - RRSe ) )", "obj1": 0.7720306513409961, "obj2": 0.19446127781202485}, {"determining": "( ACS / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "( CS * ( DS / RRSe ) )", "obj1": 0.7777777777777778, "obj2": 0.19086206856059773}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( AMS + FirstVNF_RAM ) + Max( Max( RRS,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MLU ) ) - ( Min( CS ,( MUC + ( ( RMSe - ( MUC / RRSe ) ) + MUM ) ) ) * CS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( ( ( Const * MRS ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MLU + MUC ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7471264367816092, "obj2": 0.2225425525066572}, {"determining": "( ( RRS / ( MRS - FirstVNF_Mem_Server ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "Max( Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MLU,CS ) ) ),Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( ( MUM + CS ) * RCSe ),Max( MUR,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR - ARS ) ,( Max( FirstVNF_RAM_Server,( ACS - ( ARS * MDR ) ) ) / Const ) ) )", "choosing": "( Min( MLU ,MUM ) / ( ( RCSe - ( MUR * MUC ) ) - Max( CS,( MUM * CS ) ) ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( FirstVNF_Mem * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.710727969348659, "obj2": 0.23056958769046973}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR + AMS ) ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),( Max( DS,RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( ( Const * BR ) - ( FirstVNF_Mem / ACS ) ) ) )", "choosing": "( ( ( MUC - MUR ) * ( MUM / MUR ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( Max( MLU,DS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RCSe - MUM ) + ( MUC + MUM ) ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( RCSe - MUM ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( BR + MRS ) )", "choosing": "( ( RCSe - MUM ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( RMSe * DS ) ) + ( ( CS * MUM ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,Min( ARS ,PN ) ) * ACS ) - ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR + AMS ) + ( PN + CRS ) ) ,( ( FirstVNF_CPU_Server / ( ( Min( PN ,FirstVNF_CPU ) + Min( PN ,Const ) ) - ARS ) ) / ( MDR - PN ) ) )", "choosing": "Max( ( MUR + MLU ),( ( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) ) * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( ( PN / ( MDR * Const ) ) ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( Min( Min( RRSe ,RMSe ) ,( MUC / MUM ) ),CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( Max( Min( ( RMSe * MUR ) ,( DS * RRSe ) ),Max( Min( DS ,MUM ),( CS + RCSe ) ) ) / Max( Min( Min( RRSe ,RMSe ) ,( MUC / MUM ) ),Max( ( MUC + MLU ),( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),( MDR - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( ACS ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( Max( RMSe,CS ) * ( RCSe / DS ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( CS + MUM ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( Max( ( MUC * DS ),( RCSe - RMSe ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MLU + MUC ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,FirstVNF_RAM ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( ( RRSe / MUM ) - Min( RMSe ,MUR ) ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( ( ( CRS / CRS ) / Min( FirstVNF_RAM_Server ,MDR ) ) * Max( ( PN + FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( ( ( ( Min( CS ,RRSe ) / ( RRSe / RCSe ) ) + ( Max( DS,MUM ) * Min( MUR ,CS ) ) ) * ( ( ( DS + DS ) / Min( MLU ,MLU ) ) * ( ( MUM - RCSe ) - Max( RCSe,DS ) ) ) ),RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( RMSe / RMSe ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.553639846743295, "obj2": 0.32350254918374705}, {"determining": "( FirstVNF_CPU - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( ( RCSe + RMSe ) - MUR ) * ( MUM / MUR ) )", "obj1": 0.9444444444444444, "obj2": 0.05343493499824159}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - ( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( ( RRSe / MUM ) - Min( RMSe ,MUR ) ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,( CS - RRSe ) ),( CS * MLU ) ) ) )", "obj1": 0.7739463601532567, "obj2": 0.16492069814522242}, {"determining": "( ( Min( ( AMS / MDR ) ,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Const ) ) ) + ( Max( ( ACS + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / MRS ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - ( Max( CRS,CRS ) * DDR ) )", "choosing": "( Min( RRSe ,RCSe ) - ( ( MUR / MUC ) * MLU ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( Max( ARS,ACS ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( RMSe / RMSe ) * ( MUM / MUR ) )", "obj1": 0.867816091954023, "obj2": 0.11794331377443673}, {"determining": "( ( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) / ( PN / BR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) + ( ( RMSe * RRSe ) + MUC ) )", "obj1": 0.7068965517241379, "obj2": 0.19089379842924442}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "( Min( BR ,BR ) - ( Min( Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) ,( Max( DDR,RRS ) + ( BR / MDR ) ) ) / ( Min( ( MRS * FirstVNF_Mem_Server ) ,( PN / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( CS + RMSe ) - ( MUM + RRSe ) ),MUR )", "obj1": 0.8084291187739464, "obj2": 0.13969181462216376}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8371647509578544, "obj2": 0.1374773822811479}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,MUC ) )", "obj1": 0.7011494252873564, "obj2": 0.2093981666773097}, {"determining": "( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) + ( CS - RCSe ) )", "obj1": 0.5766283524904214, "obj2": 0.30092834114932643}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "( Max( ( ARS + MDR ),Max( MRS,PN ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) / Max( ACS,AMS ) ) )", "choosing": "( ( Max( RCSe,MUM ) + ( DS / MUM ) ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) )", "obj1": 0.6513409961685823, "obj2": 0.24709247008948038}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) ) + Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( Max( DS,MLU ) + ( MUM + MUC ) ) + ( DS + RRSe ) )", "obj1": 0.6973180076628352, "obj2": 0.22730582884738348}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) ) ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( ( ( ( MUM * RCSe ) + ( CS - RCSe ) ) * RCSe ) + ( CS - RCSe ) )", "obj1": 0.603448275862069, "obj2": 0.27052040311339387}, {"determining": "( Max( ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( RRS * DDR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) * ( ( RMSe / RCSe ) / ( MUC - RRSe ) ) )", "obj1": 0.6187739463601533, "obj2": 0.26251276380332533}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ) ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM * RCSe ) + ( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) - RCSe ) )", "obj1": 0.5862068965517241, "obj2": 0.292977199539881}, {"determining": "( ( Min( ( MRS * FirstVNF_Mem_Server ) ,( PN / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( CRS - FirstVNF_CPU_Server ) ) ) * ( ( AMS + FirstVNF_RAM ) + Max( Max( RRS,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,Max( MLU,RMSe ) ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MLU ) ) - ( Min( CS ,( MUC + ( ( RMSe - ( MUC / RRSe ) ) + MUM ) ) ) * CS ) ) )", "obj1": 0.6800766283524904, "obj2": 0.24523991715507196}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUR - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,DS ) )", "obj1": 0.6934865900383141, "obj2": 0.23949848900377332}, {"determining": "( ( CRS / CRS ) / Min( ( ( Const / Const ) + CRS ) ,( Min( MRS ,Const ) * ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_Mem / AMS ) + FirstVNF_CPU ) / PN ),FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUR * MUR ) * Max( RCSe,( ( CS / RRSe ) - ( RCSe * ( ( Max( RCSe,RMSe ) / ( Min( RRSe ,MLU ) + MUR ) ) + Min( RMSe ,( RRSe - Max( MUM,CS ) ) ) ) ) ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - ( BR - Const ) )", "choosing": "( ( DS / CS ) * ( ( ( MUR - CS ) - Min( RRSe ,DS ) ) / MUM ) )", "obj1": 0.6877394636015326, "obj2": 0.24194629513035595}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( RRS / ( MRS - FirstVNF_Mem_Server ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "Max( Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MLU,CS ) ) ),Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( ( MUM + CS ) * RCSe ),Max( MUR,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "( Min( Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) ,( Max( DDR,RRS ) + ( BR / MDR ) ) ) / ( Min( ( MRS * FirstVNF_Mem_Server ) ,( PN / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( CRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MLU ) ) - ( Min( CS ,( MUC + ( ( RMSe - ( MUC / RRSe ) ) + MUM ) ) ) * CS ) ) )", "obj1": 0.6800766283524904, "obj2": 0.24523991715507196}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( AMS + FirstVNF_RAM ) + Max( Max( RRS,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MLU ) ) - ( Min( CS ,( MUC + ( ( RMSe - ( MUC / RRSe ) ) + MUM ) ) ) * CS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR + AMS ) ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),( Max( DS,RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( ( Const * BR ) - ( FirstVNF_Mem / ACS ) ) ) )", "choosing": "( ( ( MUC - MUR ) * ( MUM / MUR ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( Max( MLU,DS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RCSe - MUM ) + ( MUC + MUM ) ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( RCSe - MUM ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( BR + MRS ) )", "choosing": "( ( RCSe - MUM ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( RMSe * DS ) ) + ( ( CS * MUM ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,Min( ARS ,PN ) ) * ACS ) - ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR + AMS ) + ( PN + CRS ) ) ,( ( FirstVNF_CPU_Server / ( ( Min( PN ,FirstVNF_CPU ) + Min( PN ,Const ) ) - ARS ) ) / ( MDR - PN ) ) )", "choosing": "Max( ( MUR + MLU ),( ( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) ) * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( ( PN / ( MDR * Const ) ) ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( Min( Min( RRSe ,RMSe ) ,( MUC / MUM ) ),CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( Max( Min( ( RMSe * MUR ) ,( DS * RRSe ) ),Max( Min( DS ,MUM ),( CS + RCSe ) ) ) / Max( Min( Min( RRSe ,RMSe ) ,( MUC / MUM ) ),Max( ( MUC + MLU ),( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),( MDR - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( ACS ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( Max( RMSe,CS ) * ( RCSe / DS ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( CS + MUM ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( Max( ( MUC * DS ),( RCSe - RMSe ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MLU + MUC ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,FirstVNF_RAM ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( ( RRSe / MUM ) - Min( RMSe ,MUR ) ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( ( ( CRS / CRS ) / Min( FirstVNF_RAM_Server ,MDR ) ) * Max( ( PN + FirstVNF_RAM_Server ),( FirstVNF_CPU / BR ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( ( ( ( Min( CS ,RRSe ) / ( RRSe / RCSe ) ) + ( Max( DS,MUM ) * Min( MUR ,CS ) ) ) * ( ( ( DS + DS ) / Min( MLU ,MLU ) ) * ( ( MUM - RCSe ) - Max( RCSe,DS ) ) ) ),RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - Const ) * FirstVNF_CPU ) - Max( ( ( CRS * Const ) - FirstVNF_CPU_Server ),Min( ( BR - Max( FirstVNF_RAM,( DDR - Max( FirstVNF_RAM_Server,( Const / ARS ) ) ) ) ) ,( ( ACS * CRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe / CS ) - Max( ( Max( Max( RCSe,DS ),RMSe ) * MUM ),MLU ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Min( DDR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) - Max( MRS,DDR ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( RMSe / RMSe ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.553639846743295, "obj2": 0.32350254918374705}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( ( MUR - CS ) - Min( RRSe ,DS ) ) - CS ) - Min( RRSe ,DS ) )", "obj1": 0.946360153256705, "obj2": 0.021994834449160904}, {"determining": "( Max( ARS,ACS ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( RMSe / RMSe ) * ( MUM / MUR ) )", "obj1": 0.867816091954023, "obj2": 0.11794331377443673}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.052129227272833506}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) - Min( ( DDR + CRS ) ,FirstVNF_RAM ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7701149425287356, "obj2": 0.1567560586927707}, {"determining": "( ( ARS * AMS ) + ( FirstVNF_Mem / ( Min( FirstVNF_RAM_Server ,ACS ) - Min( ( DDR + CRS ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( RCSe - RMSe ) )", "obj1": 0.7471264367816092, "obj2": 0.17906111354887144}, {"determining": "( Min( BR ,BR ) - ( Min( Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) ,( Max( DDR,RRS ) + ( BR / MDR ) ) ) / ( Min( ( MRS * FirstVNF_Mem_Server ) ,( PN / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( CS + RMSe ) - ( MUM + RRSe ) ),MUR )", "obj1": 0.8084291187739464, "obj2": 0.13969181462216376}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8371647509578544, "obj2": 0.1374773822811479}, {"determining": "( ( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) / ( PN / BR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) + ( ( RMSe * RRSe ) + MUC ) )", "obj1": 0.7068965517241379, "obj2": 0.19089379842924442}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) + ( CS - RCSe ) )", "obj1": 0.5766283524904214, "obj2": 0.30092834114932643}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "( Max( ( Max( CRS,Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( BR ,Const ) ) ) - Max( MRS,DDR ) ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,DS ) - Max( RRSe,MLU ) )", "obj1": 0.6896551724137931, "obj2": 0.20919768279379936}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - ( Max( ( RRSe * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - Min( RRSe ,DS ) )", "obj1": 0.6762452107279694, "obj2": 0.22801050777653697}, {"determining": "( ARS - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) * Max( RCSe,MUM ) )", "obj1": 0.657088122605364, "obj2": 0.23896051850737776}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7049808429118773, "obj2": 0.200177406523409}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / ( MUM - MUR ) ) - MUR ) ) )", "obj1": 0.5977011494252874, "obj2": 0.266656646649149}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) )", "obj1": 0.6800766283524904, "obj2": 0.22098114053900958}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( Const + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( MUM - MUR ) - MUR ) ) )", "obj1": 0.6091954022988506, "obj2": 0.259810234789221}, {"determining": "( ( ( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( Max( Max( ARS,RRS ),( ACS * Const ) ) ,Const ) ) ) / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( MUC - ( Min( RMSe ,Min( MUC ,RMSe ) ) + Min( MUC ,RRSe ) ) ) - Min( MUC ,RRSe ) )", "obj1": 0.6513409961685823, "obj2": 0.24417113317860814}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ) ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM * RCSe ) + ( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) - RCSe ) )", "obj1": 0.5862068965517241, "obj2": 0.292977199539881}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,CS ) )", "obj1": 0.9885057471264368, "obj2": 0.004057260685920938}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / RRSe ) - MUR ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( CRS / CRS ) / Min( ( ( Const / Const ) + CRS ) ,( Min( MRS ,Const ) * ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_Mem / AMS ) + FirstVNF_CPU ) / PN ),FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUR * MUR ) * Max( RCSe,( ( CS / RRSe ) - ( RCSe * ( ( Max( RCSe,RMSe ) / ( Min( RRSe ,MLU ) + MUR ) ) + Min( RMSe ,( RRSe - Max( MUM,CS ) ) ) ) ) ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( AMS + FirstVNF_RAM ) + Max( Max( RRS,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MLU ) ) - ( Min( CS ,( MUC + ( ( RMSe - ( MUC / RRSe ) ) + MUM ) ) ) * CS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( RRS / ( MRS - FirstVNF_Mem_Server ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "Max( Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MLU,CS ) ) ),Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( ( MUM + CS ) * RCSe ),Max( MUR,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( ( Min( ( AMS / MDR ) ,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Const ) ) ) + ( Max( ( ACS + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / MRS ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - ( Max( CRS,CRS ) * DDR ) )", "choosing": "( Min( RRSe ,RCSe ) - ( ( MUR / MUC ) * MLU ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR + AMS ) ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),( Max( DS,RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( ( Const * BR ) - ( FirstVNF_Mem / ACS ) ) ) )", "choosing": "( ( ( MUC - MUR ) * ( MUM / MUR ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( Max( MLU,DS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RCSe - MUM ) + ( MUC + MUM ) ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( RCSe - MUM ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( BR + MRS ) )", "choosing": "( ( RCSe - MUM ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( RMSe * DS ) ) + ( ( CS * MUM ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,Min( ARS ,PN ) ) * ACS ) - ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR + AMS ) + ( PN + CRS ) ) ,( ( FirstVNF_CPU_Server / ( ( Min( PN ,FirstVNF_CPU ) + Min( PN ,Const ) ) - ARS ) ) / ( MDR - PN ) ) )", "choosing": "Max( ( MUR + MLU ),( ( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) ) * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( ( PN / ( MDR * Const ) ) ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( Min( Min( RRSe ,RMSe ) ,( MUC / MUM ) ),CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( Max( Min( ( RMSe * MUR ) ,( DS * RRSe ) ),Max( Min( DS ,MUM ),( CS + RCSe ) ) ) / Max( Min( Min( RRSe ,RMSe ) ,( MUC / MUM ) ),Max( ( MUC + MLU ),( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),( MDR - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( ACS ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( Max( RMSe,CS ) * ( RCSe / DS ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( CS + MUM ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( Max( ( MUC * DS ),( RCSe - RMSe ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MLU + MUC ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( RRS ,ARS ) / Min( FirstVNF_RAM ,Const ) ) - ( ( BR + ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUC + MLU ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( ( MLU + MLU ) * DS ),( CS + MUM ) ) / Max( ( RMSe - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( MRS - PN ) + ( ( MRS - PN ) / FirstVNF_Mem ) )", "choosing": "( ( MUC * RRSe ) + ( CS - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) - Max( MRS,DDR ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( RMSe / RMSe ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.553639846743295, "obj2": 0.32350254918374705}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( ( MUR - CS ) - Min( RRSe ,DS ) ) - CS ) - Min( RRSe ,DS ) )", "obj1": 0.946360153256705, "obj2": 0.021994834449160904}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8371647509578544, "obj2": 0.1374773822811479}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) - Min( ( DDR + CRS ) ,FirstVNF_RAM ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7701149425287356, "obj2": 0.1567560586927707}, {"determining": "( ( Max( Const,Max( RRS,( FirstVNF_RAM_Server * AMS ) ) ) / ( BR / PN ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUR - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,( MUM / RMSe ) ) )", "obj1": 0.7413793103448276, "obj2": 0.17324918518635124}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( Max( ( DDR * Const ),Max( ARS,Const ) ),Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - ( ( MUC - CS ) - Min( RRSe ,DS ) ) ) - Min( RRSe ,DS ) )", "obj1": 0.8486590038314177, "obj2": 0.0761189176253489}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( MUR / MUM ),( RMSe * RRSe ) )", "obj1": 0.9099616858237548, "obj2": 0.04809317185940314}, {"determining": "( Min( BR ,BR ) - ( Min( Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) ,( Max( DDR,RRS ) + ( BR / MDR ) ) ) / ( Min( ( MRS * FirstVNF_Mem_Server ) ,( PN / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( CS + RMSe ) - ( MUM + RRSe ) ),MUR )", "obj1": 0.8084291187739464, "obj2": 0.13969181462216376}, {"determining": "( ( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) / ( PN / BR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) + ( ( RMSe * RRSe ) + MUC ) )", "obj1": 0.7068965517241379, "obj2": 0.19089379842924442}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) + ( CS - RCSe ) )", "obj1": 0.5766283524904214, "obj2": 0.30092834114932643}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "( Max( ( Max( CRS,Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( BR ,Const ) ) ) - Max( MRS,DDR ) ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,DS ) - Max( RRSe,MLU ) )", "obj1": 0.6896551724137931, "obj2": 0.20919768279379936}, {"determining": "( Max( CRS,( Max( Max( Max( ARS,Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( Min( RRSe ,DS ) - Min( RRSe ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.0733186858109197}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) )", "obj1": 0.6800766283524904, "obj2": 0.22098114053900958}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7049808429118773, "obj2": 0.200177406523409}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / ( MUM - MUR ) ) - MUR ) ) )", "obj1": 0.5977011494252874, "obj2": 0.266656646649149}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( Const + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( MUM - MUR ) - MUR ) ) )", "obj1": 0.6091954022988506, "obj2": 0.259810234789221}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) * ( MUM + CS ) )", "obj1": 0.8888888888888888, "obj2": 0.04935919638701028}, {"determining": "( Max( Max( Const,FirstVNF_CPU ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Max( RMSe,( MUC + RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6666666666666666, "obj2": 0.2334230620412091}, {"determining": "( Max( Max( Const,Const ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,Max( ( RMSe / RMSe ),RCSe ) ) - Max( RRSe,MLU ) )", "obj1": 0.6685823754789272, "obj2": 0.22487218299575687}, {"determining": "( ARS - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) * Max( RCSe,MUM ) )", "obj1": 0.657088122605364, "obj2": 0.23896051850737776}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ) ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM * RCSe ) + ( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) - RCSe ) )", "obj1": 0.5862068965517241, "obj2": 0.292977199539881}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( ( CS / MUM ) / ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) )", "obj1": 0.6475095785440613, "obj2": 0.24785133238181842}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( ( ( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( Max( Max( ARS,RRS ),( ACS * Const ) ) ,Const ) ) ) / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( MUC - ( Min( RMSe ,Min( MUC ,RMSe ) ) + Min( MUC ,RRSe ) ) ) - Min( MUC ,RRSe ) )", "obj1": 0.6513409961685823, "obj2": 0.24417113317860814}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( Max( CRS,( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,CS ) )", "obj1": 0.9885057471264368, "obj2": 0.004057260685920938}, {"determining": "( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,Max( RRSe,( ( CS / RRSe ) - MUR ) ) ) )", "obj1": 0.5881226053639846, "obj2": 0.28937668852747833}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( AMS + FirstVNF_RAM ) + Max( Max( RRS,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MLU ) ) - ( Min( CS ,( MUC + ( ( RMSe - ( MUC / RRSe ) ) + MUM ) ) ) * CS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / RRSe ) - MUR ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "( ( RRS / ( MRS - FirstVNF_Mem_Server ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "Max( Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MLU,CS ) ) ),Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( ( MUM + CS ) * RCSe ),Max( MUR,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "( Max( CRS,( Max( Max( ( DDR * ( DDR * RRS ) ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - ( Max( ( MLU / CS ),( MUR + DS ) ) * ( MUM + CS ) ) )", "obj1": 0.8754789272030651, "obj2": 0.052842329451221685}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / RRSe ) - MUR ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.052129227272833506}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR + AMS ) ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),( Max( DS,RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( ( Const * BR ) - ( FirstVNF_Mem / ACS ) ) ) )", "choosing": "( ( ( MUC - MUR ) * ( MUM / MUR ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( Max( MLU,DS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RCSe - MUM ) + ( MUC + MUM ) ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( RCSe - MUM ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( BR + MRS ) )", "choosing": "( ( RCSe - MUM ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( RMSe * DS ) ) + ( ( CS * MUM ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,Min( ARS ,PN ) ) * ACS ) - ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR + AMS ) + ( PN + CRS ) ) ,( ( FirstVNF_CPU_Server / ( ( Min( PN ,FirstVNF_CPU ) + Min( PN ,Const ) ) - ARS ) ) / ( MDR - PN ) ) )", "choosing": "Max( ( MUR + MLU ),( ( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) ) * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( ( PN / ( MDR * Const ) ) ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( Min( Min( RRSe ,RMSe ) ,( MUC / MUM ) ),CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( Max( Min( ( RMSe * MUR ) ,( DS * RRSe ) ),Max( Min( DS ,MUM ),( CS + RCSe ) ) ) / Max( Min( Min( RRSe ,RMSe ) ,( MUC / MUM ) ),Max( ( MUC + MLU ),( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),( MDR - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( ACS ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( Max( RMSe,CS ) * ( RCSe / DS ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( CS + MUM ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( Max( ( MUC * DS ),( RCSe - RMSe ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( MRS - PN ) + ( MRS - PN ) )", "choosing": "( RRSe + ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( ( MRS - PN ) / FirstVNF_Mem ) )", "choosing": "( ( MUC * RRSe ) + ( CS - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( RMSe / RMSe ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.553639846743295, "obj2": 0.32350254918374705}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( BR ,Const ) ) ) - Max( ( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ARS ) ),DDR ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),CS ) * ( RCSe - MUC ) ) ) - Min( RRSe ,DS ) )", "obj1": 0.8218390804597702, "obj2": 0.1157244504055324}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) - Min( ( DDR + CRS ) ,FirstVNF_RAM ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7701149425287356, "obj2": 0.1567560586927707}, {"determining": "( ( Max( Const,Max( RRS,( FirstVNF_RAM_Server * AMS ) ) ) / ( BR / PN ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUR - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,( MUM / RMSe ) ) )", "obj1": 0.7413793103448276, "obj2": 0.17324918518635124}, {"determining": "( Min( BR ,BR ) - ( Min( Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) ,( Max( DDR,RRS ) + ( BR / MDR ) ) ) / ( Min( ( MRS * FirstVNF_Mem_Server ) ,( PN / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( CS + RMSe ) - ( MUM + RRSe ) ),MUR )", "obj1": 0.8084291187739464, "obj2": 0.13969181462216376}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( MUR / MUM ),( RMSe * RRSe ) )", "obj1": 0.9099616858237548, "obj2": 0.04809317185940314}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( Max( ( DDR * Const ),Max( ARS,Const ) ),Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - ( ( MUC - CS ) - Min( RRSe ,DS ) ) ) - Min( RRSe ,DS ) )", "obj1": 0.8486590038314177, "obj2": 0.0761189176253489}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( ( MUR - CS ) - Min( RRSe ,DS ) ) - CS ) - Min( RRSe ,DS ) )", "obj1": 0.946360153256705, "obj2": 0.021994834449160904}, {"determining": "( ( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) / ( PN / BR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) + ( ( RMSe * RRSe ) + MUC ) )", "obj1": 0.7068965517241379, "obj2": 0.19089379842924442}, {"determining": "( Max( ( Max( CRS,Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( BR ,Const ) ) ) - Max( MRS,DDR ) ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,DS ) - Max( RRSe,MLU ) )", "obj1": 0.6896551724137931, "obj2": 0.20919768279379936}, {"determining": "( Max( CRS,( Max( Max( Max( ARS,Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( Min( RRSe ,DS ) - Min( RRSe ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.0733186858109197}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( Max( MRS,DDR ),Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( ( ( MUC - CS ) - Min( RRSe ,DS ) ) ,DS ) )", "obj1": 0.9597701149425287, "obj2": 0.01877710136967889}, {"determining": "( ( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUC - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.005672235714827963}, {"determining": "( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) + ( CS - RCSe ) )", "obj1": 0.5766283524904214, "obj2": 0.30092834114932643}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) )", "obj1": 0.6800766283524904, "obj2": 0.22098114053900958}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7049808429118773, "obj2": 0.200177406523409}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / ( MUM - MUR ) ) - MUR ) ) )", "obj1": 0.5977011494252874, "obj2": 0.266656646649149}, {"determining": "Max( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ),Max( ARS,ACS ) )", "choosing": "Min( Max( RCSe,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) ,Max( RCSe,( MUR / DS ) ) )", "obj1": 0.5708812260536399, "obj2": 0.3151497224729142}, {"determining": "( ARS - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) * Max( RCSe,MUM ) )", "obj1": 0.657088122605364, "obj2": 0.23896051850737776}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( Const + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( MUM - MUR ) - MUR ) ) )", "obj1": 0.6091954022988506, "obj2": 0.259810234789221}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( DS ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.048313215774018044}, {"determining": "( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,CS ) - ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) )", "obj1": 0.6666666666666666, "obj2": 0.2305353548048092}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,Max( MRS,DDR ) ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ) ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM * RCSe ) + ( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) - RCSe ) )", "obj1": 0.5862068965517241, "obj2": 0.292977199539881}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( DDR ,Const ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - Min( RRSe ,Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) ) )", "obj1": 0.6475095785440613, "obj2": 0.24297575055106638}, {"determining": "( Max( Max( Const,Const ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,Max( ( RMSe / RMSe ),RCSe ) ) - Max( RRSe,MLU ) )", "obj1": 0.6685823754789272, "obj2": 0.22487218299575687}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - Max( PN,DDR ) )", "choosing": "( ( MUR - CS ) - ( ( MUR - CS ) - Min( RRSe ,DS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.01972800262764237}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,CS ) )", "obj1": 0.9885057471264368, "obj2": 0.004057260685920938}, {"determining": "( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,Max( RRSe,( ( CS / RRSe ) - MUR ) ) ) )", "obj1": 0.5881226053639846, "obj2": 0.28937668852747833}, {"determining": "( BR + ( Min( MDR ,( BR + FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - Min( ( ( ( MUM / ( MUR * DS ) ) / ( MLU + CS ) ) / ( MLU + CS ) ) ,( CS - DS ) ) ) )", "obj1": 0.5919540229885057, "obj2": 0.28368917254984266}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( AMS + FirstVNF_RAM ) + Max( Max( RRS,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MLU ) ) - ( Min( CS ,( MUC + ( ( RMSe - ( MUC / RRSe ) ) + MUM ) ) ) * CS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( RRS / ( MRS - FirstVNF_Mem_Server ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "Max( Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MLU,CS ) ) ),Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( ( MUM + CS ) * RCSe ),Max( MUR,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "Max( FirstVNF_CPU,Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( Min( MUR ,CS ),( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( Max( CRS,( Max( Max( ( DDR * ( DDR * RRS ) ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - ( Max( ( MLU / CS ),( MUR + DS ) ) * ( MUM + CS ) ) )", "obj1": 0.8754789272030651, "obj2": 0.052842329451221685}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.052129227272833506}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / RRSe ) - MUR ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / RRSe ) - MUR ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( ( Min( DDR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) - Max( MRS,DDR ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR + AMS ) ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),( Max( DS,RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( ( Const * BR ) - ( FirstVNF_Mem / ACS ) ) ) )", "choosing": "( ( ( MUC - MUR ) * ( MUM / MUR ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( Max( MLU,DS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RCSe - MUM ) + ( MUC + MUM ) ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( RCSe - MUM ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( BR + MRS ) )", "choosing": "( ( RCSe - MUM ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( RMSe * DS ) ) + ( ( CS * MUM ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,Min( ARS ,PN ) ) * ACS ) - ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR + AMS ) + ( PN + CRS ) ) ,( ( FirstVNF_CPU_Server / ( ( Min( PN ,FirstVNF_CPU ) + Min( PN ,Const ) ) - ARS ) ) / ( MDR - PN ) ) )", "choosing": "Max( ( MUR + MLU ),( ( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) ) * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( ( PN / ( MDR * Const ) ) ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( Min( Min( RRSe ,RMSe ) ,( MUC / MUM ) ),CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( Max( Min( ( RMSe * MUR ) ,( DS * RRSe ) ),Max( Min( DS ,MUM ),( CS + RCSe ) ) ) / Max( Min( Min( RRSe ,RMSe ) ,( MUC / MUM ) ),Max( ( MUC + MLU ),( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( CRS / Min( ( RRS - DDR ) ,DDR ) ) + ( Min( Min( ( AMS + DDR ) ,CRS ) ,MRS ) / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - ( ( ( Max( MUC,MLU ) - Min( ( MUR - DS ) ,( MLU / DS ) ) ) + ( ( ( ( RMSe + RMSe ) / RMSe ) + ( ( MUC / MUM ) / ( RMSe + DS ) ) ) + ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) ) ) + Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( MRS - PN ) )", "choosing": "( RRSe + ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( RMSe / RMSe ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.553639846743295, "obj2": 0.32350254918374705}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) - Min( ( DDR + CRS ) ,FirstVNF_RAM ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7701149425287356, "obj2": 0.1567560586927707}, {"determining": "( ( Max( Const,Max( RRS,( FirstVNF_RAM_Server * AMS ) ) ) / ( BR / PN ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUR - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,( MUM / RMSe ) ) )", "obj1": 0.7413793103448276, "obj2": 0.17324918518635124}, {"determining": "( Min( BR ,BR ) - ( Min( Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) ,( Max( DDR,RRS ) + ( BR / MDR ) ) ) / ( Min( ( MRS * FirstVNF_Mem_Server ) ,( PN / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( CS + RMSe ) - ( MUM + RRSe ) ),MUR )", "obj1": 0.8084291187739464, "obj2": 0.13969181462216376}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( MUR / MUM ),( RMSe * RRSe ) )", "obj1": 0.9099616858237548, "obj2": 0.04809317185940314}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( Max( ( DDR * Const ),Max( ARS,Const ) ),Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - ( ( MUC - CS ) - Min( RRSe ,DS ) ) ) - Min( RRSe ,DS ) )", "obj1": 0.8486590038314177, "obj2": 0.0761189176253489}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( ( MUR - CS ) - Min( RRSe ,DS ) ) - CS ) - Min( RRSe ,DS ) )", "obj1": 0.946360153256705, "obj2": 0.021994834449160904}, {"determining": "( ( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) / ( PN / BR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) + ( ( RMSe * RRSe ) + MUC ) )", "obj1": 0.7068965517241379, "obj2": 0.19089379842924442}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( BR ,Const ) ) ) - Max( ( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ARS ) ),DDR ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),CS ) * ( RCSe - MUC ) ) ) - Min( RRSe ,DS ) )", "obj1": 0.8218390804597702, "obj2": 0.1157244504055324}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( BR ,Const ) ) ) - ( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( ( CS / MUM ),MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - Min( RRSe ,DS ) )", "obj1": 0.8218390804597702, "obj2": 0.1157244504055324}, {"determining": "( Max( ( Max( CRS,Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( BR ,Const ) ) ) - Max( MRS,DDR ) ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,DS ) - Max( RRSe,MLU ) )", "obj1": 0.6896551724137931, "obj2": 0.20919768279379936}, {"determining": "( Max( CRS,( Max( Max( Max( ARS,Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( Min( RRSe ,DS ) - Min( RRSe ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.0733186858109197}, {"determining": "( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) + ( CS - RCSe ) )", "obj1": 0.5766283524904214, "obj2": 0.30092834114932643}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ),DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,CS ) )", "obj1": 0.8697318007662835, "obj2": 0.05770310500522091}, {"determining": "Min( ( Min( Min( ( MDR * Min( FirstVNF_RAM ,PN ) ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( PN / ( MRS + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / Min( MLU ,MUM ) )", "obj1": 0.9770114942528736, "obj2": 0.015534799664181604}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) )", "obj1": 0.6800766283524904, "obj2": 0.22098114053900958}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7049808429118773, "obj2": 0.200177406523409}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( MDR * Min( FirstVNF_RAM ,PN ) ) )", "choosing": "( ( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / DS ) / Min( MLU ,MUM ) )", "obj1": 0.5957854406130269, "obj2": 0.2661076217303132}, {"determining": "Max( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ),Max( ARS,ACS ) )", "choosing": "Min( Max( RCSe,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) ,Max( RCSe,( MUR / DS ) ) )", "obj1": 0.5708812260536399, "obj2": 0.3151497224729142}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( Const + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( MUM - MUR ) - MUR ) ) )", "obj1": 0.6091954022988506, "obj2": 0.259810234789221}, {"determining": "( ARS - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) * Max( RCSe,MUM ) )", "obj1": 0.657088122605364, "obj2": 0.23896051850737776}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( DS ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.048313215774018044}, {"determining": "( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,CS ) - ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) )", "obj1": 0.6666666666666666, "obj2": 0.2305353548048092}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ) ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM * RCSe ) + ( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) - RCSe ) )", "obj1": 0.5862068965517241, "obj2": 0.292977199539881}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( DDR ,Const ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - Min( RRSe ,Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) ) )", "obj1": 0.6475095785440613, "obj2": 0.24297575055106638}, {"determining": "( Max( Max( Const,Const ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,Max( ( RMSe / RMSe ),RCSe ) ) - Max( RRSe,MLU ) )", "obj1": 0.6685823754789272, "obj2": 0.22487218299575687}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( Max( MRS,DDR ),Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( ( ( MUC - CS ) - Min( RRSe ,DS ) ) ,DS ) )", "obj1": 0.9597701149425287, "obj2": 0.01877710136967889}, {"determining": "( ( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUC - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.005672235714827963}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - Max( PN,DDR ) )", "choosing": "( ( MUR - CS ) - ( ( MUR - CS ) - Min( RRSe ,DS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.01972800262764237}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( Max( CRS,( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,CS ) )", "obj1": 0.9885057471264368, "obj2": 0.004057260685920938}, {"determining": "( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,Max( RRSe,( ( CS / RRSe ) - MUR ) ) ) )", "obj1": 0.5881226053639846, "obj2": 0.28937668852747833}, {"determining": "( BR + ( Min( MDR ,( BR + FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - Min( ( ( ( MUM / ( MUR * DS ) ) / ( MLU + CS ) ) / ( MLU + CS ) ) ,( CS - DS ) ) ) )", "obj1": 0.5919540229885057, "obj2": 0.28368917254984266}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( AMS + FirstVNF_RAM ) + Max( Max( RRS,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MLU ) ) - ( Min( CS ,( MUC + ( ( RMSe - ( MUC / RRSe ) ) + MUM ) ) ) * CS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( RRS / ( MRS - FirstVNF_Mem_Server ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "Max( Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MLU,CS ) ) ),Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( ( MUM + CS ) * RCSe ),Max( MUR,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "( Max( CRS,( Max( Max( ( DDR * ( DDR * RRS ) ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - ( Max( ( MLU / CS ),( MUR + DS ) ) * ( MUM + CS ) ) )", "obj1": 0.8754789272030651, "obj2": 0.052842329451221685}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.052129227272833506}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / RRSe ) - MUR ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / RRSe ) - MUR ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,Max( MRS,DDR ) ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( ( MRS - PN ) + ( ( MRS - PN ) / FirstVNF_Mem ) )", "choosing": "( ( MUC * RRSe ) + ( CS - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) - Max( MRS,DDR ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR + AMS ) ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),( Max( DS,RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( ( Const * BR ) - ( FirstVNF_Mem / ACS ) ) ) )", "choosing": "( ( ( MUC - MUR ) * ( MUM / MUR ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( Max( MLU,DS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RCSe - MUM ) + ( MUC + MUM ) ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( RCSe - MUM ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( BR + MRS ) )", "choosing": "( ( RCSe - MUM ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( RMSe * DS ) ) + ( ( CS * MUM ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,Min( ARS ,PN ) ) * ACS ) - ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR + AMS ) + ( PN + CRS ) ) ,( ( FirstVNF_CPU_Server / ( ( Min( PN ,FirstVNF_CPU ) + Min( PN ,Const ) ) - ARS ) ) / ( MDR - PN ) ) )", "choosing": "Max( ( MUR + MLU ),( ( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) ) * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "Min( ( ( DS + CS ) + RMSe ) ,Min( ( Min( ( MLU + RCSe ) ,( MUR + CS ) ) / DS ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( MRS - AMS ) + Min( Min( ( AMS + DDR ) ,CRS ) ,( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) + ( CS - ( Min( DS ,( Max( RCSe,( MUR / ( DS / MLU ) ) ) - Min( MUC ,RMSe ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( ( RRS - DDR ) ,DDR ) ) + ( Min( Min( ( AMS + DDR ) ,CRS ) ,MRS ) / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - ( ( ( Max( MUC,MLU ) - Min( ( MUR - DS ) ,( MLU / DS ) ) ) + ( ( ( ( RMSe + RMSe ) / RMSe ) + ( ( MUC / MUM ) / ( RMSe + DS ) ) ) + ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) ) ) + Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( RMSe / RMSe ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.553639846743295, "obj2": 0.32350254918374705}, {"determining": "( ( CRS + ( Max( ( ACS + ( FirstVNF_Mem_Server + ( ARS * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( ( MUC / RRSe ) + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.7222222222222222, "obj2": 0.16752871571205108}, {"determining": "( Max( Max( Const,Max( RRS,AMS ) ),Max( Const,Max( RRS,AMS ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( Min( MUR ,( ( Min( ( DS - ( MUM / CS ) ) ,DS ) / ( MUR * ( MUC / MUC ) ) ) / RRSe ) ) - Max( RRSe,MLU ) ) - Max( RRSe,MLU ) )", "obj1": 0.7681992337164751, "obj2": 0.1442735925766967}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( MUR / MUM ),( RMSe * RRSe ) )", "obj1": 0.9099616858237548, "obj2": 0.04809317185940314}, {"determining": "( Min( BR ,BR ) - ( Min( Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) ,( Max( DDR,RRS ) + ( BR / MDR ) ) ) / ( Min( ( MRS * FirstVNF_Mem_Server ) ,( PN / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( CS + RMSe ) - ( MUM + RRSe ) ),MUR )", "obj1": 0.8084291187739464, "obj2": 0.13969181462216376}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( ( MUR - CS ) - Min( RRSe ,DS ) ) - CS ) - Min( RRSe ,DS ) )", "obj1": 0.946360153256705, "obj2": 0.021994834449160904}, {"determining": "( ( CRS + ( Max( ( ACS + ( CRS + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,Min( RRSe ,RCSe ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.8390804597701149, "obj2": 0.0786117249352898}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( BR ,Const ) ) ) - Max( ( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ARS ) ),DDR ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),CS ) * ( RCSe - MUC ) ) ) - Min( RRSe ,DS ) )", "obj1": 0.8218390804597702, "obj2": 0.1157244504055324}, {"determining": "( ( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) / ( PN / BR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) + ( ( RMSe * RRSe ) + MUC ) )", "obj1": 0.7068965517241379, "obj2": 0.19089379842924442}, {"determining": "( Max( ( Max( CRS,Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( BR ,Const ) ) ) - Max( MRS,DDR ) ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,DS ) - Max( RRSe,MLU ) )", "obj1": 0.6896551724137931, "obj2": 0.20919768279379936}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( BR ,Const ) ) ) - ( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( ( CS / MUM ),MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - Min( RRSe ,DS ) )", "obj1": 0.8218390804597702, "obj2": 0.1157244504055324}, {"determining": "( Max( CRS,( Max( Max( Max( ARS,Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( Min( RRSe ,DS ) - Min( RRSe ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.0733186858109197}, {"determining": "( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) + ( CS - RCSe ) )", "obj1": 0.5766283524904214, "obj2": 0.30092834114932643}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ),DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,CS ) )", "obj1": 0.8697318007662835, "obj2": 0.05770310500522091}, {"determining": "Min( ( Min( Min( ( MDR * Min( FirstVNF_RAM ,PN ) ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( PN / ( MRS + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / Min( MLU ,MUM ) )", "obj1": 0.9770114942528736, "obj2": 0.015534799664181604}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) )", "obj1": 0.6800766283524904, "obj2": 0.22098114053900958}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7049808429118773, "obj2": 0.200177406523409}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( MDR * Min( FirstVNF_RAM ,PN ) ) )", "choosing": "( ( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / DS ) / Min( MLU ,MUM ) )", "obj1": 0.5957854406130269, "obj2": 0.2661076217303132}, {"determining": "Max( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ),Max( ARS,ACS ) )", "choosing": "Min( Max( RCSe,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) ,Max( RCSe,( MUR / DS ) ) )", "obj1": 0.5708812260536399, "obj2": 0.3151497224729142}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( Const + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( MUM - MUR ) - MUR ) ) )", "obj1": 0.6091954022988506, "obj2": 0.259810234789221}, {"determining": "( ARS - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) * Max( RCSe,MUM ) )", "obj1": 0.657088122605364, "obj2": 0.23896051850737776}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( DS ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.048313215774018044}, {"determining": "( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,CS ) - ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) )", "obj1": 0.6666666666666666, "obj2": 0.2305353548048092}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ) ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM * RCSe ) + ( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) - RCSe ) )", "obj1": 0.5862068965517241, "obj2": 0.292977199539881}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( DDR ,Const ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - Min( RRSe ,Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) ) )", "obj1": 0.6475095785440613, "obj2": 0.24297575055106638}, {"determining": "( Max( Max( Const,Const ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,Max( ( RMSe / RMSe ),RCSe ) ) - Max( RRSe,MLU ) )", "obj1": 0.6685823754789272, "obj2": 0.22487218299575687}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( Max( MRS,DDR ),Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( ( ( MUC - CS ) - Min( RRSe ,DS ) ) ,DS ) )", "obj1": 0.9597701149425287, "obj2": 0.01877710136967889}, {"determining": "( ( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUC - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.005672235714827963}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( Max( ( DDR * Const ),Max( ARS,Const ) ),Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - ( ( MUC - CS ) - Min( RRSe ,DS ) ) ) - Min( RRSe ,DS ) )", "obj1": 0.8486590038314177, "obj2": 0.0761189176253489}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - Max( PN,DDR ) )", "choosing": "( ( MUR - CS ) - ( ( MUR - CS ) - Min( RRSe ,DS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.01972800262764237}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( Max( CRS,( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,CS ) )", "obj1": 0.9885057471264368, "obj2": 0.004057260685920938}, {"determining": "( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,Max( RRSe,( ( CS / RRSe ) - MUR ) ) ) )", "obj1": 0.5881226053639846, "obj2": 0.28937668852747833}, {"determining": "( BR + ( Min( MDR ,( BR + FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - Min( ( ( ( MUM / ( MUR * DS ) ) / ( MLU + CS ) ) / ( MLU + CS ) ) ,( CS - DS ) ) ) )", "obj1": 0.5919540229885057, "obj2": 0.28368917254984266}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( AMS + FirstVNF_RAM ) + Max( Max( RRS,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MLU ) ) - ( Min( CS ,( MUC + ( ( RMSe - ( MUC / RRSe ) ) + MUM ) ) ) * CS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( Max( CRS,( Max( Max( ( DDR * ( DDR * RRS ) ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - ( Max( ( MLU / CS ),( MUR + DS ) ) * ( MUM + CS ) ) )", "obj1": 0.8754789272030651, "obj2": 0.052842329451221685}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.052129227272833506}, {"determining": "( ( RRS / ( MRS - FirstVNF_Mem_Server ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "Max( Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MLU,CS ) ) ),Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( ( MUM + CS ) * RCSe ),Max( MUR,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,Max( MRS,DDR ) ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / RRSe ) - MUR ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( DS,MUC ),Min( ( CS / RCSe ) ,RMSe ) ) - Max( ( DS - MUR ),DS ) ) - ( DS / MUM ) )", "obj1": 0.9980842911877394, "obj2": 0.0015419852797961635}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / RRSe ) - MUR ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( ( MRS - PN ) + ( MRS - PN ) )", "choosing": "( RRSe + ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( ( MRS - PN ) / FirstVNF_Mem ) )", "choosing": "( ( MUC * RRSe ) + ( CS - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) - Max( MRS,DDR ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR + AMS ) ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),( Max( DS,RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( ( Const * BR ) - ( FirstVNF_Mem / ACS ) ) ) )", "choosing": "( ( ( MUC - MUR ) * ( MUM / MUR ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( Max( MLU,DS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RCSe - MUM ) + ( MUC + MUM ) ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( RCSe - MUM ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( BR + MRS ) )", "choosing": "( ( RCSe - MUM ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( RMSe * DS ) ) + ( ( CS * MUM ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,Min( ARS ,PN ) ) * ACS ) - ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR + AMS ) + ( PN + CRS ) ) ,( ( FirstVNF_CPU_Server / ( ( Min( PN ,FirstVNF_CPU ) + Min( PN ,Const ) ) - ARS ) ) / ( MDR - PN ) ) )", "choosing": "Max( ( MUR + MLU ),( ( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( MRS - AMS ) + Min( Min( ( AMS + DDR ) ,CRS ) ,( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) + ( CS - ( Min( DS ,( Max( RCSe,( MUR / ( DS / MLU ) ) ) - Min( MUC ,RMSe ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + Min( Min( ( AMS + DDR ) ,CRS ) ,( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) + ( CS - ( Min( DS ,( Max( RCSe,( MUR / ( DS / MLU ) ) ) - Min( MUC ,RMSe ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( RMSe / RMSe ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.553639846743295, "obj2": 0.32350254918374705}, {"determining": "( Max( Max( Const,Max( RRS,AMS ) ),Max( Const,Max( RRS,AMS ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( Min( MUR ,( ( Min( ( DS - ( MUM / CS ) ) ,DS ) / ( MUR * ( MUC / MUC ) ) ) / RRSe ) ) - Max( RRSe,MLU ) ) - Max( RRSe,MLU ) )", "obj1": 0.7681992337164751, "obj2": 0.1442735925766967}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / Min( PN ,MDR ) ) )", "choosing": "( ( ( MUM / Min( CS ,RCSe ) ) / CS ) - Min( MUR ,( MUR + Min( MUM ,DS ) ) ) )", "obj1": 0.8065134099616859, "obj2": 0.10470744916588587}, {"determining": "( ( CRS + ( Max( ( ACS + ( FirstVNF_Mem_Server + ( ARS * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( ( MUC / RRSe ) + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.7222222222222222, "obj2": 0.16752871571205108}, {"determining": "( ( CRS + ( ( FirstVNF_Mem_Server + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( ( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) ) ,RCSe ) )", "obj1": 0.9003831417624522, "obj2": 0.041866701797381674}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( ( MUR - CS ) - Min( RRSe ,DS ) ) - CS ) - Min( RRSe ,DS ) )", "obj1": 0.946360153256705, "obj2": 0.021994834449160904}, {"determining": "( ( CRS + ( Max( ( ACS + ( CRS + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,Min( RRSe ,RCSe ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.8390804597701149, "obj2": 0.0786117249352898}, {"determining": "( ( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) / ( PN / BR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) + ( ( RMSe * RRSe ) + MUC ) )", "obj1": 0.7068965517241379, "obj2": 0.19089379842924442}, {"determining": "( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) + ( CS - RCSe ) )", "obj1": 0.5766283524904214, "obj2": 0.30092834114932643}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7049808429118773, "obj2": 0.200177406523409}, {"determining": "Min( ( Min( Min( ( MDR * Min( FirstVNF_RAM ,PN ) ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( PN / ( MRS + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / Min( MLU ,MUM ) )", "obj1": 0.9770114942528736, "obj2": 0.015534799664181604}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( MDR * Min( FirstVNF_RAM ,PN ) ) )", "choosing": "( ( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / DS ) / Min( MLU ,MUM ) )", "obj1": 0.5957854406130269, "obj2": 0.2661076217303132}, {"determining": "( ( CRS + ( Max( ( FirstVNF_Mem_Server + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + ( MUM - DS ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.8582375478927203, "obj2": 0.06468334147042586}, {"determining": "Max( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ),Max( ARS,ACS ) )", "choosing": "Min( Max( RCSe,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) ,Max( RCSe,( MUR / DS ) ) )", "obj1": 0.5708812260536399, "obj2": 0.3151497224729142}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( Const + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( MUM - MUR ) - MUR ) ) )", "obj1": 0.6091954022988506, "obj2": 0.259810234789221}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - Const ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MUM / ( DS + CS ) ) )", "obj1": 0.6877394636015326, "obj2": 0.2091221773090201}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - Const ) ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.6532567049808429, "obj2": 0.23100472646908182}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( DDR ,Const ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - Min( RRSe ,Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) ) )", "obj1": 0.6475095785440613, "obj2": 0.24297575055106638}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_RAM ),CRS ) - Max( MRS,( MDR - ( FirstVNF_Mem_Server * MRS ) ) ) ) - ( FirstVNF_CPU * MDR ) )", "choosing": "( Min( RMSe ,MUM ) - ( Min( ( MUM - ( MUM / ( MUM + ( MUM / RRSe ) ) ) ) ,MLU ) - MUC ) )", "obj1": 0.6704980842911877, "obj2": 0.21269263226586835}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( DS ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.048313215774018044}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "( Max( Max( Const,Const ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,Max( ( RMSe / RMSe ),RCSe ) ) - Max( RRSe,MLU ) )", "obj1": 0.6685823754789272, "obj2": 0.22487218299575687}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ) ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM * RCSe ) + ( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) - RCSe ) )", "obj1": 0.5862068965517241, "obj2": 0.292977199539881}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ),DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,CS ) )", "obj1": 0.8697318007662835, "obj2": 0.05770310500522091}, {"determining": "( Max( CRS,( Max( Max( Max( ARS,Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( Min( RRSe ,DS ) - Min( RRSe ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.0733186858109197}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( Max( MRS,DDR ),Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( ( ( MUC - CS ) - Min( RRSe ,DS ) ) ,DS ) )", "obj1": 0.9597701149425287, "obj2": 0.01877710136967889}, {"determining": "( ( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUC - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.005672235714827963}, {"determining": "( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,CS ) - ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) )", "obj1": 0.6666666666666666, "obj2": 0.2305353548048092}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_RAM ),CRS ) - Max( MRS,( MDR - ( FirstVNF_Mem_Server * MRS ) ) ) ) - ( FirstVNF_CPU * MDR ) )", "choosing": "( Min( RMSe ,MUM ) - ( Min( ( MUM / ( MUM + ( MUM / RRSe ) ) ) ,MLU ) - MUC ) )", "obj1": 0.6839080459770115, "obj2": 0.21146921814602193}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( Max( ( DDR * Const ),Max( ARS,Const ) ),Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - ( ( MUC - CS ) - Min( RRSe ,DS ) ) ) - Min( RRSe ,DS ) )", "obj1": 0.8486590038314177, "obj2": 0.0761189176253489}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - Max( PN,DDR ) )", "choosing": "( ( MUR - CS ) - ( ( MUR - CS ) - Min( RRSe ,DS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.01972800262764237}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( Max( CRS,( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,CS ) )", "obj1": 0.9885057471264368, "obj2": 0.004057260685920938}, {"determining": "( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,Max( RRSe,( ( CS / RRSe ) - MUR ) ) ) )", "obj1": 0.5881226053639846, "obj2": 0.28937668852747833}, {"determining": "( BR + ( Min( MDR ,( BR + FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - Min( ( ( ( MUM / ( MUR * DS ) ) / ( MLU + CS ) ) / ( MLU + CS ) ) ,( CS - DS ) ) ) )", "obj1": 0.5919540229885057, "obj2": 0.28368917254984266}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( AMS + FirstVNF_RAM ) + Max( Max( RRS,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MLU ) ) - ( Min( CS ,( MUC + ( ( RMSe - ( MUC / RRSe ) ) + MUM ) ) ) * CS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( Max( CRS,( Max( Max( ( DDR * ( DDR * RRS ) ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - ( Max( ( MLU / CS ),( MUR + DS ) ) * ( MUM + CS ) ) )", "obj1": 0.8754789272030651, "obj2": 0.052842329451221685}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.052129227272833506}, {"determining": "( ( RRS / ( MRS - FirstVNF_Mem_Server ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "Max( Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MLU,CS ) ) ),Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( ( MUM + CS ) * RCSe ),Max( MUR,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / RRSe ) - MUR ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( DS,MUC ),Min( ( CS / RCSe ) ,RMSe ) ) - Max( ( DS - MUR ),DS ) ) - ( DS / MUM ) )", "obj1": 0.9980842911877394, "obj2": 0.0015419852797961635}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( CS / RRSe ) - MUR ) ) )", "obj1": 0.5900383141762452, "obj2": 0.28611083569834056}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,Max( MRS,DDR ) ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( ( CRS / Min( ( RRS - DDR ) ,DDR ) ) + ( Min( Min( ( AMS + DDR ) ,CRS ) ,MRS ) / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - ( ( ( Max( MUC,MLU ) - Min( ( MUR - DS ) ,( MLU / DS ) ) ) + ( ( ( ( RMSe + RMSe ) / RMSe ) + ( ( MUC / MUM ) / ( RMSe + DS ) ) ) + ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) ) ) + Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( MRS - PN ) )", "choosing": "( RRSe + ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( ( MRS - PN ) / FirstVNF_Mem ) )", "choosing": "( ( MUC * RRSe ) + ( CS - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) - Max( MRS,DDR ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR + AMS ) ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),( Max( DS,RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( ( Const * BR ) - ( FirstVNF_Mem / ACS ) ) ) )", "choosing": "( ( ( MUC - MUR ) * ( MUM / MUR ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( Max( MLU,DS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RCSe - MUM ) + ( MUC + MUM ) ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( RCSe - MUM ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( BR + MRS ) )", "choosing": "( ( RCSe - MUM ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( RMSe * DS ) ) + ( ( CS * MUM ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,Min( ARS ,PN ) ) * ACS ) - ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( Max( MRS,DDR ) - Max( ( FirstVNF_CPU_Server - Min( MRS ,ARS ) ),Min( ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( ( PN + ( FirstVNF_RAM - ACS ) ) - BR ) ) ) )", "choosing": "( ( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( MLU * Min( ( ( CS - MUR ) + MUM ) ,MUM ) ) ) ) + MUR ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + Min( Min( ( AMS + DDR ) ,CRS ) ,( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) + ( CS - ( Min( DS ,( Max( RCSe,( MUR / ( DS / MLU ) ) ) - Min( MUC ,RMSe ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( RMSe / RMSe ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.553639846743295, "obj2": 0.32350254918374705}, {"determining": "( Max( Max( Const,Max( RRS,AMS ) ),Max( Const,Max( RRS,AMS ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( Min( MUR ,( ( Min( ( DS - ( MUM / CS ) ) ,DS ) / ( MUR * ( MUC / MUC ) ) ) / RRSe ) ) - Max( RRSe,MLU ) ) - Max( RRSe,MLU ) )", "obj1": 0.7681992337164751, "obj2": 0.1442735925766967}, {"determining": "( ( CRS + ( Max( ( ACS + ( FirstVNF_Mem_Server + ( ARS * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( ( MUC / RRSe ) + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.7222222222222222, "obj2": 0.16752871571205108}, {"determining": "( ( CRS + ( ( FirstVNF_Mem_Server + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( ( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) ) ,RCSe ) )", "obj1": 0.9003831417624522, "obj2": 0.041866701797381674}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( ( MUR - CS ) - Min( RRSe ,DS ) ) - CS ) - Min( RRSe ,DS ) )", "obj1": 0.946360153256705, "obj2": 0.021994834449160904}, {"determining": "( ( CRS - ( ( RRS * FirstVNF_Mem ) / PN ) ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( Min( MLU ,( MUC - MUR ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8218390804597702, "obj2": 0.09092732238246307}, {"determining": "( ( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) / ( PN / BR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) + ( ( RMSe * RRSe ) + MUC ) )", "obj1": 0.7068965517241379, "obj2": 0.19089379842924442}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( ( MUM / Min( MUR ,RCSe ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8065134099616859, "obj2": 0.10470744916588587}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7049808429118773, "obj2": 0.200177406523409}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - Const ) ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.2080454729944964}, {"determining": "Min( ( Min( Min( ( MDR * Min( FirstVNF_RAM ,PN ) ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( PN / ( MRS + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / Min( MLU ,MUM ) )", "obj1": 0.9770114942528736, "obj2": 0.015534799664181604}, {"determining": "( ( CRS + ( Max( ( ACS + ( CRS + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,Min( RRSe ,RCSe ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.8390804597701149, "obj2": 0.0786117249352898}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( MDR * Min( FirstVNF_RAM ,PN ) ) )", "choosing": "( ( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / DS ) / Min( MLU ,MUM ) )", "obj1": 0.5957854406130269, "obj2": 0.2661076217303132}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - Const ) ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.6532567049808429, "obj2": 0.23100472646908182}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) / CRS ) )", "choosing": "( ( ( RRSe - MUM ) / CS ) - ( MUM / ( Min( ( MUR * MUM ) ,RMSe ) * RRSe ) ) )", "obj1": 0.9501915708812261, "obj2": 0.01759371663857721}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / Min( PN ,MDR ) ) )", "choosing": "( ( ( MUM / Min( CS ,RCSe ) ) / CS ) - Min( MUR ,( MUR + Min( MUM ,DS ) ) ) )", "obj1": 0.8065134099616859, "obj2": 0.10470744916588587}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_RAM ),CRS ) - Max( MRS,( MDR - ( FirstVNF_Mem_Server * MRS ) ) ) ) - ( FirstVNF_CPU * MDR ) )", "choosing": "( Min( RMSe ,MUM ) - ( Min( ( MUM - ( MUM / ( MUM + ( MUM / RRSe ) ) ) ) ,MLU ) - MUC ) )", "obj1": 0.6704980842911877, "obj2": 0.21269263226586835}, {"determining": "( ( CRS + ( Max( ( FirstVNF_Mem_Server + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + ( MUM - DS ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.8582375478927203, "obj2": 0.06468334147042586}, {"determining": "Max( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ),Max( ARS,ACS ) )", "choosing": "Min( Max( RCSe,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) ,Max( RCSe,( MUR / DS ) ) )", "obj1": 0.5708812260536399, "obj2": 0.3151497224729142}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( Const + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( MUM - MUR ) - MUR ) ) )", "obj1": 0.6091954022988506, "obj2": 0.259810234789221}, {"determining": "( ACS - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( ( MUM / Min( MUR ,( MUM / Min( MUR ,RCSe ) ) ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8084291187739464, "obj2": 0.1042651392247671}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( DDR ,Const ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - Min( RRSe ,Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) ) )", "obj1": 0.6475095785440613, "obj2": 0.24297575055106638}, {"determining": "( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) + ( CS - RCSe ) )", "obj1": 0.5766283524904214, "obj2": 0.30092834114932643}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( DS ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.048313215774018044}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ),DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,CS ) )", "obj1": 0.8697318007662835, "obj2": 0.05770310500522091}, {"determining": "( Max( CRS,( Max( Max( Max( ARS,Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( Min( RRSe ,DS ) - Min( RRSe ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.0733186858109197}, {"determining": "( ( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUC - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.005672235714827963}, {"determining": "( Min( FirstVNF_RAM_Server ,PN ) - ( Max( ARS,FirstVNF_CPU ) / ( CRS - Const ) ) )", "choosing": "( Max( DS,RCSe ) - Min( RCSe ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.22373098252203158}, {"determining": "( Max( MRS,DDR ) - Max( ( ( CRS * Const ) - FirstVNF_CPU_Server ),Min( ( ( Const / FirstVNF_CPU_Server ) / FirstVNF_RAM ) ,( Max( FirstVNF_RAM,Min( ARS ,Const ) ) - BR ) ) ) )", "choosing": "( ( ( ( ( MUC * RMSe ) / RCSe ) * ( CS - ( MLU * Min( MUM ,Min( ( RMSe + MLU ) ,MUM ) ) ) ) ) - MUR ) - Min( RRSe ,( RRSe + ( RCSe + MUM ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2558812191940479}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,Max( RRSe,( ( CS / RRSe ) - MUR ) ) ) )", "obj1": 0.5881226053639846, "obj2": 0.28937668852747833}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( Min( ( MUR + ( Min( MUM ,( Min( MLU ,( MUC - MUR ) ) - CS ) ) / RCSe ) ) ,RCSe ) - Min( DS ,RRSe ) )", "obj1": 0.8467432950191571, "obj2": 0.07588282107958562}, {"determining": "( Max( MRS,DDR ) - ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( MLU * Min( ( ( MUR - MUR ) + MUM ) ,MUM ) ) ) ) + MUR ) - Min( RRSe ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2972830092147214}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ) ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUM * RCSe ) + ( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) - RCSe ) )", "obj1": 0.5862068965517241, "obj2": 0.292977199539881}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,Max( ( ( ( FirstVNF_Mem / AMS ) + FirstVNF_CPU ) / PN ),FirstVNF_Mem ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( RCSe * ( Max( ( MLU / DS ),Min( MUR ,Max( MUM,RRSe ) ) ) + Min( RMSe ,( RRSe - Max( MUM,CS ) ) ) ) ) / DS ) ) )", "obj1": 0.5900383141762452, "obj2": 0.280419502906369}, {"determining": "( Min( FirstVNF_RAM_Server ,PN ) - ( Max( ARS,FirstVNF_CPU ) / ( CRS - Const ) ) )", "choosing": "( Max( DS,RCSe ) - Min( RCSe ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.22373098252203158}, {"determining": "( Max( MRS,DDR ) - Max( Max( ( ( MRS / ARS ) - FirstVNF_CPU_Server ),( Const - FirstVNF_Mem_Server ) ),( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( ( Max( ( CS - CS ),MUM ) * ( Min( Max( RCSe,RMSe ) ,MUC ) + Min( RRSe ,DS ) ) ),RCSe ) * ( CS - ( MLU + Min( RRSe ,Min( ( RMSe + MLU ) ,MUM ) ) ) ) ) - MUR ) - Min( RRSe ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.25492448036550747}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,CS ) )", "obj1": 0.9885057471264368, "obj2": 0.004057260685920938}, {"determining": "( ( BR - ( ( Max( DDR,BR ) - CRS ) - BR ) ) * Min( MRS ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( ( ( Max( ( RMSe / MUM ),( MUR - Min( MUR ,RMSe ) ) ) + ( MUR * MUM ) ) - Min( RRSe ,MUC ) ) * DS ) )", "obj1": 0.9961685823754789, "obj2": 0.0015803906617178972}, {"determining": "( Max( CRS,( Max( Max( ( DDR * ( DDR * RRS ) ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - ( Max( ( MLU / CS ),( MUR + DS ) ) * ( MUM + CS ) ) )", "obj1": 0.8754789272030651, "obj2": 0.052842329451221685}, {"determining": "( Max( Max( Const,Max( FirstVNF_RAM,AMS ) ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,CS ) - ( Min( MUM ,RRSe ) * Max( MUR,MUR ) ) )", "obj1": 0.6398467432950191, "obj2": 0.24779294918406983}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.052129227272833506}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,Max( MRS,DDR ) ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( DS,MUC ),Min( ( CS / RCSe ) ,RMSe ) ) - Max( ( DS - MUR ),DS ) ) - ( DS / MUM ) )", "obj1": 0.9980842911877394, "obj2": 0.0015419852797961635}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( MRS - AMS ) + Min( Min( ( AMS + DDR ) ,CRS ) ,( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) + ( CS - ( Min( DS ,( Max( RCSe,( MUR / ( DS / MLU ) ) ) - Min( MUC ,RMSe ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( ( RRS - DDR ) ,DDR ) ) + ( Min( Min( ( AMS + DDR ) ,CRS ) ,MRS ) / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - ( ( ( Max( MUC,MLU ) - Min( ( MUR - DS ) ,( MLU / DS ) ) ) + ( ( ( ( RMSe + RMSe ) / RMSe ) + ( ( MUC / MUM ) / ( RMSe + DS ) ) ) + ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) ) ) + Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( MRS - PN ) )", "choosing": "( RRSe + ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( ( MRS - PN ) / FirstVNF_Mem ) )", "choosing": "( ( MUC * RRSe ) + ( CS - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) - Max( MRS,DDR ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR + AMS ) ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),( Max( DS,RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( ( Const * BR ) - ( FirstVNF_Mem / ACS ) ) ) )", "choosing": "( ( ( MUC - MUR ) * ( MUM / MUR ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( Max( MLU,DS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RCSe - MUM ) + ( MUC + MUM ) ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( RCSe - MUM ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( BR + MRS ) )", "choosing": "( ( RCSe - MUM ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( RMSe * DS ) ) + ( ( CS * MUM ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,Min( ARS ,PN ) ) * ACS ) - ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( ( Max( MLU,DS ) - MUC ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Max( FirstVNF_Mem,Const ) ) - ( ( CRS - ( FirstVNF_RAM * ( Min( ( MDR + ( ARS * FirstVNF_RAM ) ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) ) - Min( MRS ,( FirstVNF_Mem - Const ) ) ) )", "choosing": "( Min( ( ( MUR - Min( CS ,RRSe ) ) - Min( ( MUR - RCSe ) ,Max( ( MUM - Max( ( RMSe - MUM ),MUM ) ),MLU ) ) ) ,DS ) - ( RRSe / ( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( Max( MRS,DDR ) - Max( ( FirstVNF_CPU_Server - Min( MRS ,ARS ) ),Min( ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( ( PN + ( FirstVNF_RAM - ACS ) ) - BR ) ) ) )", "choosing": "( Min( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( ( Max( ( MUC - RCSe ),( RMSe + RCSe ) ) / ( Max( MUM,RCSe ) - CS ) ) * MLU ) ) ) ,MUR ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,DDR ) - Max( ( FirstVNF_CPU_Server - Min( MRS ,ARS ) ),Min( ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( ( PN + ( FirstVNF_RAM - ACS ) ) - BR ) ) ) )", "choosing": "( ( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( MLU * Min( ( ( CS - MUR ) + MUM ) ,MUM ) ) ) ) + MUR ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( RMSe / RMSe ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.553639846743295, "obj2": 0.32350254918374705}, {"determining": "( Max( Max( Const,Max( RRS,AMS ) ),Max( Const,Max( RRS,AMS ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( Min( MUR ,( ( Min( ( DS - ( MUM / CS ) ) ,DS ) / ( MUR * ( MUC / MUC ) ) ) / RRSe ) ) - Max( RRSe,MLU ) ) - Max( RRSe,MLU ) )", "obj1": 0.7681992337164751, "obj2": 0.1442735925766967}, {"determining": "( ( CRS + ( Max( ( ACS + ( FirstVNF_Mem_Server + ( ARS * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( ( MUC / RRSe ) + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.7222222222222222, "obj2": 0.16752871571205108}, {"determining": "( ( CRS + ( ( FirstVNF_Mem_Server + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( ( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) ) ,RCSe ) )", "obj1": 0.9003831417624522, "obj2": 0.041866701797381674}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,Min( FirstVNF_RAM ,CRS ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / ( MLU - ( MUM * CS ) ) ) - Min( MUR ,( Min( RMSe ,MUM ) * RRSe ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02309760159294534}, {"determining": "( ( CRS - ( ( RRS * FirstVNF_Mem ) / PN ) ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( Min( MLU ,( MUC - MUR ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8218390804597702, "obj2": 0.09092732238246307}, {"determining": "( ( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) / ( PN / BR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) + ( ( RMSe * RRSe ) + MUC ) )", "obj1": 0.7068965517241379, "obj2": 0.19089379842924442}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / Min( PN ,MDR ) ) )", "choosing": "( ( ( MUM / Min( CS ,RCSe ) ) / CS ) - Min( MUR ,( MUR + Min( MUM ,DS ) ) ) )", "obj1": 0.8065134099616859, "obj2": 0.10470744916588587}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7049808429118773, "obj2": 0.200177406523409}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - Const ) ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.2080454729944964}, {"determining": "( ( CRS + ( Max( ( ACS + ( CRS + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,Min( RRSe ,RCSe ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.8390804597701149, "obj2": 0.0786117249352898}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( MDR * Min( FirstVNF_RAM ,PN ) ) )", "choosing": "( ( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / DS ) / Min( MLU ,MUM ) )", "obj1": 0.5957854406130269, "obj2": 0.2661076217303132}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - Const ) ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.6532567049808429, "obj2": 0.23100472646908182}, {"determining": "Min( ( Min( Min( ( MDR * Min( FirstVNF_RAM ,PN ) ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( PN / ( MRS + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / Min( MLU ,MUM ) )", "obj1": 0.9770114942528736, "obj2": 0.015534799664181604}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( ( MUM / Min( MUR ,RCSe ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8065134099616859, "obj2": 0.10470744916588587}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_RAM ),CRS ) - Max( MRS,( MDR - ( FirstVNF_Mem_Server * MRS ) ) ) ) - ( FirstVNF_CPU * MDR ) )", "choosing": "( Min( RMSe ,MUM ) - ( Min( ( MUM - ( MUM / ( MUM + ( MUM / RRSe ) ) ) ) ,MLU ) - MUC ) )", "obj1": 0.6704980842911877, "obj2": 0.21269263226586835}, {"determining": "( ( CRS + ( Max( ( FirstVNF_Mem_Server + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + ( MUM - DS ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.8582375478927203, "obj2": 0.06468334147042586}, {"determining": "Max( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ),Max( ARS,ACS ) )", "choosing": "Min( Max( RCSe,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) ,Max( RCSe,( MUR / DS ) ) )", "obj1": 0.5708812260536399, "obj2": 0.3151497224729142}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / Min( ( Const + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,( ( MUM - MUR ) - MUR ) ) )", "obj1": 0.6091954022988506, "obj2": 0.259810234789221}, {"determining": "( ACS - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( ( MUM / Min( MUR ,( MUM / Min( MUR ,RCSe ) ) ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8084291187739464, "obj2": 0.1042651392247671}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( DDR ,Const ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - Min( RRSe ,Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) ) )", "obj1": 0.6475095785440613, "obj2": 0.24297575055106638}, {"determining": "( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) + ( CS - RCSe ) )", "obj1": 0.5766283524904214, "obj2": 0.30092834114932643}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( DS ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.048313215774018044}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,( Min( RMSe ,MUM ) * RRSe ) ) )", "obj1": 0.9501915708812261, "obj2": 0.01759371663857721}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ),DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,CS ) )", "obj1": 0.8697318007662835, "obj2": 0.05770310500522091}, {"determining": "( Max( CRS,( Max( Max( Max( ARS,Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( Min( RRSe ,DS ) - Min( RRSe ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.0733186858109197}, {"determining": "( Min( FirstVNF_RAM_Server ,PN ) - ( Max( ARS,FirstVNF_CPU ) / ( CRS - Const ) ) )", "choosing": "( Max( DS,RCSe ) - Min( RCSe ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.22373098252203158}, {"determining": "( Max( MRS,DDR ) - ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( MLU * Min( ( ( MUR - MUR ) + MUM ) ,MUM ) ) ) ) + MUR ) - Min( RRSe ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2972830092147214}, {"determining": "( Max( MRS,DDR ) - Max( ( ( CRS * Const ) - FirstVNF_CPU_Server ),Min( ( ( Const / FirstVNF_CPU_Server ) / FirstVNF_RAM ) ,( Max( FirstVNF_RAM,Min( ARS ,Const ) ) - BR ) ) ) )", "choosing": "( ( ( ( ( MUC * RMSe ) / RCSe ) * ( CS - ( MLU * Min( MUM ,Min( ( RMSe + MLU ) ,MUM ) ) ) ) ) - MUR ) - Min( RRSe ,( RRSe + ( RCSe + MUM ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2558812191940479}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - ( Max( ( Max( MRS,( FirstVNF_RAM - RRS ) ) - Max( CRS,FirstVNF_RAM ) ),( FirstVNF_CPU_Server + MDR ) ) - ( ( CRS - ( ( Min( ( MDR + RRS ) ,Min( ACS ,PN ) ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + Min( MRS ,( PN - Const ) ) ) ) )", "choosing": "( ( ( MUR - CS ) - ( Min( Max( ( RCSe - ( MLU / MLU ) ),MUM ) ,RRSe ) - MUC ) ) - Min( ( ( MUR - CS ) - Min( RRSe ,DS ) ) ,DS ) )", "obj1": 0.9808429118773946, "obj2": 0.011207819275837666}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( Min( ( MUR + ( Min( MUM ,( Min( MLU ,( MUC - MUR ) ) - CS ) ) / RCSe ) ) ,RCSe ) - Min( DS ,RRSe ) )", "obj1": 0.8467432950191571, "obj2": 0.07588282107958562}, {"determining": "( ( ( Max( DDR,( Max( CRS,FirstVNF_CPU ) * ( MDR - ( RRS * PN ) ) ) ) * FirstVNF_RAM ) + DDR ) - Max( ( Min( MRS ,ARS ) - FirstVNF_CPU_Server ),Min( ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,( Max( FirstVNF_RAM,( ARS + Const ) ) - BR ) ) ) )", "choosing": "( ( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( MLU * Min( ( ( CS - MUR ) + MUM ) ,MUM ) ) ) ) + MUR ) - Min( RRSe ,DS ) )", "obj1": 0.5862068965517241, "obj2": 0.2913132151681397}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,Max( ( ( ( FirstVNF_Mem / AMS ) + FirstVNF_CPU ) / PN ),FirstVNF_Mem ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( RCSe * ( Max( ( MLU / DS ),Min( MUR ,Max( MUM,RRSe ) ) ) + Min( RMSe ,( RRSe - Max( MUM,CS ) ) ) ) ) / DS ) ) )", "obj1": 0.5900383141762452, "obj2": 0.280419502906369}, {"determining": "( Min( FirstVNF_RAM_Server ,PN ) - ( Max( ARS,FirstVNF_CPU ) / ( CRS - Const ) ) )", "choosing": "( Max( DS,RCSe ) - Min( RCSe ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.22373098252203158}, {"determining": "( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,Max( RRSe,( ( CS / RRSe ) - MUR ) ) ) )", "obj1": 0.5881226053639846, "obj2": 0.28937668852747833}, {"determining": "( Max( MRS,DDR ) - Max( Max( ( ( MRS / ARS ) - FirstVNF_CPU_Server ),( Const - FirstVNF_Mem_Server ) ),( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( ( Max( ( CS - CS ),MUM ) * ( Min( Max( RCSe,RMSe ) ,MUC ) + Min( RRSe ,DS ) ) ),RCSe ) * ( CS - ( MLU + Min( RRSe ,Min( ( RMSe + MLU ) ,MUM ) ) ) ) ) - MUR ) - Min( RRSe ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.25492448036550747}, {"determining": "( ( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUC - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.005672235714827963}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,CS ) )", "obj1": 0.9885057471264368, "obj2": 0.004057260685920938}, {"determining": "( ( BR - ( ( Max( DDR,BR ) - CRS ) - BR ) ) * Min( MRS ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( ( ( Max( ( RMSe / MUM ),( MUR - Min( MUR ,RMSe ) ) ) + ( MUR * MUM ) ) - Min( RRSe ,MUC ) ) * DS ) )", "obj1": 0.9961685823754789, "obj2": 0.0015803906617178972}, {"determining": "( Min( PN ,( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,( DS + CS ) ) )", "obj1": 0.946360153256705, "obj2": 0.020058725963968314}, {"determining": "( Max( CRS,( Max( Max( ( DDR * ( DDR * RRS ) ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - ( Max( ( MLU / CS ),( MUR + DS ) ) * ( MUM + CS ) ) )", "obj1": 0.8754789272030651, "obj2": 0.052842329451221685}, {"determining": "( Max( Max( Const,Max( FirstVNF_RAM,AMS ) ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,CS ) - ( Min( MUM ,RRSe ) * Max( MUR,MUR ) ) )", "obj1": 0.6398467432950191, "obj2": 0.24779294918406983}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.052129227272833506}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "Max( ( RCSe * Max( ( MLU - ( MUM * CS ) ),MLU ) ),( RMSe / ( ( ( ( ( Max( MUM,RRSe ) * Max( DS,MUM ) ) / DS ) - ( MUR + MUM ) ) / RMSe ) - ( MUC / ( MUC + MLU ) ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.022562878295075042}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,( Min( RMSe ,MUM ) * RRSe ) ) )", "obj1": 0.9482758620689655, "obj2": 0.018485948432444138}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( DS,MUC ),Min( ( CS / RCSe ) ,RMSe ) ) - Max( ( DS - MUR ),DS ) ) - ( DS / MUM ) )", "obj1": 0.9980842911877394, "obj2": 0.0015419852797961635}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) / CRS ) )", "choosing": "( ( ( RRSe - MUM ) / CS ) - ( MUM / ( Min( ( MUR * MUM ) ,RMSe ) * RRSe ) ) )", "obj1": 0.9501915708812261, "obj2": 0.01759371663857721}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,Max( MRS,DDR ) ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( MRS - AMS ) + Min( Min( ( AMS + DDR ) ,CRS ) ,( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) + ( CS - ( Min( DS ,( Max( RCSe,( MUR / ( DS / MLU ) ) ) - Min( MUC ,RMSe ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + Min( Min( ( AMS + DDR ) ,CRS ) ,( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) + ( CS - ( Min( DS ,( Max( RCSe,( MUR / ( DS / MLU ) ) ) - Min( MUC ,RMSe ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( ( RRS - DDR ) ,DDR ) ) + ( Min( Min( ( AMS + DDR ) ,CRS ) ,MRS ) / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - ( ( ( Max( MUC,MLU ) - Min( ( MUR - DS ) ,( MLU / DS ) ) ) + ( ( ( ( RMSe + RMSe ) / RMSe ) + ( ( MUC / MUM ) / ( RMSe + DS ) ) ) + ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) ) ) + Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( MRS - PN ) )", "choosing": "( RRSe + ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( ( MRS - PN ) / FirstVNF_Mem ) )", "choosing": "( ( MUC * RRSe ) + ( CS - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) - Max( MRS,DDR ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR + AMS ) ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),( Max( DS,RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( ( Const * BR ) - ( FirstVNF_Mem / ACS ) ) ) )", "choosing": "( ( ( MUC - MUR ) * ( MUM / MUR ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( Max( MLU,DS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RCSe - MUM ) + ( MUC + MUM ) ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( RCSe - MUM ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( BR + MRS ) )", "choosing": "( ( RCSe - MUM ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( Max( MRS,DDR ) - Max( ( FirstVNF_CPU_Server - Min( MRS ,ARS ) ),Min( ( ( Const / ( ( ACS + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( ( PN + ( FirstVNF_RAM - ACS ) ) - BR ) ) ) )", "choosing": "( Min( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( ( Max( ( MUC - RCSe ),( RMSe + RCSe ) ) / ( Max( MUM,RCSe ) - CS ) ) * MLU ) ) ) ,MUR ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,DDR ) - Max( ( FirstVNF_CPU_Server - Min( MRS ,ARS ) ),Min( ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( ( PN + ( FirstVNF_RAM - ACS ) ) - BR ) ) ) )", "choosing": "( Min( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( ( Max( ( MUC - RCSe ),( RMSe + RCSe ) ) / ( Max( MUM,RCSe ) - CS ) ) * MLU ) ) ) ,MUR ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( RMSe / RMSe ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.553639846743295, "obj2": 0.32350254918374705}, {"determining": "( Max( Max( Const,Max( RRS,AMS ) ),Max( Const,Max( RRS,AMS ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( Min( MUR ,( ( Min( ( DS - ( MUM / CS ) ) ,DS ) / ( MUR * ( MUC / MUC ) ) ) / RRSe ) ) - Max( RRSe,MLU ) ) - Max( RRSe,MLU ) )", "obj1": 0.7681992337164751, "obj2": 0.1442735925766967}, {"determining": "( ( CRS + ( Max( ( ACS + ( FirstVNF_Mem_Server + ( ARS * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( ( MUC / RRSe ) + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.7222222222222222, "obj2": 0.16752871571205108}, {"determining": "( ( CRS + ( ( FirstVNF_Mem_Server + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( ( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) ) ,RCSe ) )", "obj1": 0.9003831417624522, "obj2": 0.041866701797381674}, {"determining": "( Max( ARS,( ACS + ( DDR * ( FirstVNF_Mem + PN ) ) ) ) - ( Max( FirstVNF_Mem,( ( FirstVNF_Mem + DDR ) / ACS ) ) * DDR ) )", "choosing": "( Min( ( ( MUR / RCSe ) * Min( RMSe ,Max( ( DS - Min( ( MUC * DS ) ,( CS - MUC ) ) ),CS ) ) ) ,CS ) * Max( MUM,RCSe ) )", "obj1": 0.7605363984674329, "obj2": 0.16449729103577}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( ( CRS * AMS ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - ( MUR / ( Min( Min( ( MUR * MUM ) ,RMSe ) ,RMSe ) * RRSe ) ) )", "obj1": 0.9329501915708812, "obj2": 0.027070999065267862}, {"determining": "( ( CRS - ( ( RRS * FirstVNF_Mem ) / PN ) ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( Min( MLU ,( MUC - MUR ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8218390804597702, "obj2": 0.09092732238246307}, {"determining": "( ( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) / ( PN / BR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) + ( ( RMSe * RRSe ) + MUC ) )", "obj1": 0.7068965517241379, "obj2": 0.19089379842924442}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( ( MUM / Min( MUR ,RCSe ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8065134099616859, "obj2": 0.10470744916588587}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7049808429118773, "obj2": 0.200177406523409}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - Const ) ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.2080454729944964}, {"determining": "( ( CRS + ( Max( ( ACS + ( CRS + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,Min( RRSe ,RCSe ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.8390804597701149, "obj2": 0.0786117249352898}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - Const ) ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.6532567049808429, "obj2": 0.23100472646908182}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / Min( PN ,MDR ) ) )", "choosing": "( ( ( MUM / Min( CS ,RCSe ) ) / CS ) - Min( MUR ,( MUR + Min( MUM ,DS ) ) ) )", "obj1": 0.8065134099616859, "obj2": 0.10470744916588587}, {"determining": "( ( CRS + ( Max( ( FirstVNF_Mem_Server + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + ( MUM - DS ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.8582375478927203, "obj2": 0.06468334147042586}, {"determining": "Max( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ),Max( ARS,ACS ) )", "choosing": "Min( Max( RCSe,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) ,Max( RCSe,( MUR / DS ) ) )", "obj1": 0.5708812260536399, "obj2": 0.3151497224729142}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( MDR * Min( FirstVNF_RAM ,PN ) ) )", "choosing": "( ( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / DS ) / Min( MLU ,MUM ) )", "obj1": 0.5957854406130269, "obj2": 0.2661076217303132}, {"determining": "( Max( MRS,DDR ) - Max( ( ( CRS * Const ) - FirstVNF_CPU_Server ),( Const / ( Max( ( Max( ACS,RRS ) + FirstVNF_RAM_Server ),RRS ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( MUC * RMSe ) / RCSe ) * ( Min( MUM ,Min( ( RMSe + MLU ) ,RRSe ) ) - ( MLU * Min( MUM ,Min( ( RMSe + MLU ) ,RRSe ) ) ) ) ) - MUR ) - Min( RRSe ,DS ) )", "obj1": 0.603448275862069, "obj2": 0.2592765534545841}, {"determining": "( ACS - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( ( MUM / Min( MUR ,( MUM / Min( MUR ,RCSe ) ) ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8084291187739464, "obj2": 0.1042651392247671}, {"determining": "( Max( Max( FirstVNF_RAM,AMS ),Min( ( DDR + Max( FirstVNF_RAM,AMS ) ) ,Min( DDR ,Const ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - ( Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - Min( RRSe ,Max( ( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) * Min( Min( Min( RRSe ,MUM ) ,Max( MUR,MUR ) ) ,( RCSe * ( MUM - DS ) ) ) ),RCSe ) ) )", "obj1": 0.6475095785440613, "obj2": 0.24297575055106638}, {"determining": "( Min( MRS ,( FirstVNF_Mem - Const ) ) - ( ( CRS - ( ( Min( ( MDR + RRS ) ,FirstVNF_RAM ) - ( DDR / FirstVNF_Mem ) ) * FirstVNF_RAM ) ) - Min( MRS ,( FirstVNF_Mem - Const ) ) ) )", "choosing": "( Min( ( ( MUR - Min( CS ,RRSe ) ) - Min( ( Max( DS,MLU ) + ( Min( MUM ,DS ) + MUC ) ) ,RRSe ) ) ,DS ) - ( RRSe - ( MLU + CS ) ) )", "obj1": 0.9770114942528736, "obj2": 0.015532514737869095}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / Min( PN ,( Max( ARS,FirstVNF_CPU ) / ( CRS - Const ) ) ) ) )", "choosing": "( ( ( MUM / Min( CS ,RCSe ) ) / CS ) - Min( MUR ,( MUR + Min( Max( DS,RCSe ) ,DS ) ) ) )", "obj1": 0.6609195402298851, "obj2": 0.22097105921553348}, {"determining": "( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) + ( CS - RCSe ) )", "obj1": 0.5766283524904214, "obj2": 0.30092834114932643}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( DS ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.048313215774018044}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( FirstVNF_Mem * ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,BR ) - RRS ) * PN ) ) ) / PN ) )", "choosing": "( ( MLU - CS ) * Min( RRSe ,( ( DS + MUC ) - ( RCSe - Max( ( MUM + ( MUM - ( CS - MUM ) ) ),RRSe ) ) ) ) )", "obj1": 0.9540229885057471, "obj2": 0.016376451032143986}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ),DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,CS ) )", "obj1": 0.8697318007662835, "obj2": 0.05770310500522091}, {"determining": "( Max( MRS,DDR ) - Max( ( ( CRS * Const ) - FirstVNF_CPU_Server ),Min( ( ( Const / FirstVNF_CPU_Server ) / FirstVNF_RAM ) ,( Max( FirstVNF_RAM,Min( ARS ,Const ) ) - BR ) ) ) )", "choosing": "( ( ( ( ( MUC * RMSe ) / RCSe ) * ( CS - ( MLU * Min( MUM ,Min( ( RMSe + MLU ) ,MUM ) ) ) ) ) - MUR ) - Min( RRSe ,( RRSe + ( RCSe + MUM ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2558812191940479}, {"determining": "( Max( CRS,( Max( Max( Max( ARS,Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( Min( RRSe ,DS ) - Min( RRSe ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.0733186858109197}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_RAM ),CRS ) - Max( MRS,( MDR - ( FirstVNF_Mem_Server * MRS ) ) ) ) - ( FirstVNF_CPU * MDR ) )", "choosing": "( Min( RMSe ,MUM ) - ( Min( ( MUM - ( MUM / ( MUM + ( MUM / RRSe ) ) ) ) ,MLU ) - MUC ) )", "obj1": 0.6704980842911877, "obj2": 0.21269263226586835}, {"determining": "( Max( MRS,DDR ) - ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( MLU * Min( ( ( MUR - MUR ) + MUM ) ,MUM ) ) ) ) + MUR ) - Min( RRSe ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2972830092147214}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( Max( ( ACS + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / MRS ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) - ( Max( ARS,FirstVNF_CPU ) / ( CRS - Const ) ) )", "choosing": "( Max( DS,RCSe ) - ( Min( RRSe ,RCSe ) - ( ( MUR / MUC ) * MLU ) ) )", "obj1": 0.6647509578544061, "obj2": 0.21531338471321518}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( Min( ( MUR + ( Min( MUM ,( Min( MLU ,( MUC - MUR ) ) - CS ) ) / RCSe ) ) ,RCSe ) - Min( DS ,RRSe ) )", "obj1": 0.8467432950191571, "obj2": 0.07588282107958562}, {"determining": "( ( ( Max( DDR,( Max( CRS,FirstVNF_CPU ) * ( MDR - ( RRS * PN ) ) ) ) * FirstVNF_RAM ) + DDR ) - Max( ( Min( MRS ,ARS ) - FirstVNF_CPU_Server ),Min( ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,( Max( FirstVNF_RAM,( ARS + Const ) ) - BR ) ) ) )", "choosing": "( ( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( MLU * Min( ( ( CS - MUR ) + MUM ) ,MUM ) ) ) ) + MUR ) - Min( RRSe ,DS ) )", "obj1": 0.5862068965517241, "obj2": 0.2913132151681397}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,Max( ( ( ( FirstVNF_Mem / AMS ) + FirstVNF_CPU ) / PN ),FirstVNF_Mem ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( RCSe * ( Max( ( MLU / DS ),Min( MUR ,Max( MUM,RRSe ) ) ) + Min( RMSe ,( RRSe - Max( MUM,CS ) ) ) ) ) / DS ) ) )", "obj1": 0.5900383141762452, "obj2": 0.280419502906369}, {"determining": "( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) / Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) )", "choosing": "( ( MUM - MUR ) * Max( RRSe,Max( RRSe,( ( CS / RRSe ) - MUR ) ) ) )", "obj1": 0.5881226053639846, "obj2": 0.28937668852747833}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,Min( FirstVNF_RAM ,CRS ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / ( MLU - ( MUM * CS ) ) ) - Min( MUR ,( Min( RMSe ,MUM ) * RRSe ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02309760159294534}, {"determining": "( Max( MRS,DDR ) - Max( Max( ( ( MRS / ARS ) - FirstVNF_CPU_Server ),( Const - FirstVNF_Mem_Server ) ),( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( ( Max( ( CS - CS ),MUM ) * ( Min( Max( RCSe,RMSe ) ,MUC ) + Min( RRSe ,DS ) ) ),RCSe ) * ( CS - ( MLU + Min( RRSe ,Min( ( RMSe + MLU ) ,MUM ) ) ) ) ) - MUR ) - Min( RRSe ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.25492448036550747}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - ( Max( ( Max( MRS,( FirstVNF_RAM - RRS ) ) - Max( CRS,FirstVNF_RAM ) ),( FirstVNF_CPU_Server + MDR ) ) - ( ( CRS - ( ( Min( ( MDR + RRS ) ,Min( ACS ,PN ) ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + Min( MRS ,( PN - Const ) ) ) ) )", "choosing": "( ( ( MUR - CS ) - ( Min( Max( ( RCSe - ( MLU / MLU ) ),MUM ) ,RRSe ) - MUC ) ) - Min( ( ( MUR - CS ) - Min( RRSe ,DS ) ) ,DS ) )", "obj1": 0.9808429118773946, "obj2": 0.011207819275837666}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,CS ) )", "obj1": 0.9885057471264368, "obj2": 0.004057260685920938}, {"determining": "( ( BR - ( ( Max( DDR,BR ) - CRS ) - BR ) ) * Min( MRS ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( ( ( Max( ( RMSe / MUM ),( MUR - Min( MUR ,RMSe ) ) ) + ( MUR * MUM ) ) - Min( RRSe ,MUC ) ) * DS ) )", "obj1": 0.9961685823754789, "obj2": 0.0015803906617178972}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( FirstVNF_Mem * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * PN ) ) ) / ( CRS - ( ( Min( ( MDR + RRS ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR - Min( CS ,RRSe ) ) - Min( RRSe ,RRSe ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.9827586206896551, "obj2": 0.00886558394703068}, {"determining": "( Min( PN ,( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,( DS + CS ) ) )", "obj1": 0.946360153256705, "obj2": 0.020058725963968314}, {"determining": "( ( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUC - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.005672235714827963}, {"determining": "( Max( CRS,( Max( Max( ( DDR * ( DDR * RRS ) ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - ( Max( ( MLU / CS ),( MUR + DS ) ) * ( MUM + CS ) ) )", "obj1": 0.8754789272030651, "obj2": 0.052842329451221685}, {"determining": "( Max( Max( Const,Max( FirstVNF_RAM,AMS ) ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,CS ) - ( Min( MUM ,RRSe ) * Max( MUR,MUR ) ) )", "obj1": 0.6398467432950191, "obj2": 0.24779294918406983}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.052129227272833506}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,Max( MRS,DDR ) ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "Max( ( RCSe * Max( ( MLU - ( MUM * CS ) ),MLU ) ),( RMSe / ( ( ( ( ( Max( MUM,RRSe ) * Max( DS,MUM ) ) / DS ) - ( MUR + MUM ) ) / RMSe ) - ( MUC / ( MUC + MLU ) ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.022562878295075042}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,( Min( RMSe ,MUM ) * RRSe ) ) )", "obj1": 0.9482758620689655, "obj2": 0.018485948432444138}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( DS,MUC ),Min( ( CS / RCSe ) ,RMSe ) ) - Max( ( DS - MUR ),DS ) ) - ( DS / MUM ) )", "obj1": 0.9980842911877394, "obj2": 0.0015419852797961635}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,( Min( RMSe ,MUM ) * RRSe ) ) )", "obj1": 0.9501915708812261, "obj2": 0.01759371663857721}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,( Min( RMSe ,MUM ) * RRSe ) ) )", "obj1": 0.9501915708812261, "obj2": 0.01759371663857721}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( Max( MRS,DDR ) - Max( ( FirstVNF_CPU_Server - Min( MRS ,ARS ) ),Min( ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( ( PN + ( FirstVNF_RAM - ACS ) ) - BR ) ) ) )", "choosing": "( ( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( MLU * Min( ( ( CS - MUR ) + MUM ) ,MUM ) ) ) ) + MUR ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + Min( Min( ( AMS + DDR ) ,CRS ) ,( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) + ( CS - ( Min( DS ,( Max( RCSe,( MUR / ( DS / MLU ) ) ) - Min( MUC ,RMSe ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + Min( Min( ( AMS + DDR ) ,CRS ) ,( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) + ( CS - ( Min( DS ,( Max( RCSe,( MUR / ( DS / MLU ) ) ) - Min( MUC ,RMSe ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( ( RRS - DDR ) ,DDR ) ) + ( Min( Min( ( AMS + DDR ) ,CRS ) ,MRS ) / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - ( ( ( Max( MUC,MLU ) - Min( ( MUR - DS ) ,( MLU / DS ) ) ) + ( ( ( ( RMSe + RMSe ) / RMSe ) + ( ( MUC / MUM ) / ( RMSe + DS ) ) ) + ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) ) ) + Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( MRS - PN ) )", "choosing": "( RRSe + ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( ( MRS - PN ) / FirstVNF_Mem ) )", "choosing": "( ( MUC * RRSe ) + ( CS - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) - Max( MRS,DDR ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "( ( CS + RMSe ) - ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR + AMS ) ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),( Max( DS,RMSe ) * Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( Max( MRS,DDR ) - Max( ( FirstVNF_CPU_Server - Min( MRS ,ARS ) ),Min( ( ( Const / ( ( ACS + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( ( PN + ( FirstVNF_RAM - ACS ) ) - BR ) ) ) )", "choosing": "( ( ( Max( Min( RMSe ,( RMSe * MLU ) ),RCSe ) * ( CS - ( MLU * Min( ( ( CS - MUR ) + RRSe ) ,MUM ) ) ) ) + MUR ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,DDR ) - Max( ( FirstVNF_CPU_Server - Min( MRS ,ARS ) ),Min( ( ( Const / ( ( ACS + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( ( PN + ( FirstVNF_RAM - ACS ) ) - BR ) ) ) )", "choosing": "( Min( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( ( Max( ( MUC - RCSe ),( RMSe + RCSe ) ) / ( Max( MUM,RCSe ) - CS ) ) * MLU ) ) ) ,MUR ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( MUR,( ( ( Max( ( MUC / ( CS + RMSe ) ),( ( CS / RRSe ) - MUR ) ) * ( RMSe / RMSe ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.553639846743295, "obj2": 0.32350254918374705}, {"determining": "( Max( Max( Const,Max( RRS,AMS ) ),Max( Const,Max( RRS,AMS ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( Min( MUR ,( ( Min( ( DS - ( MUM / CS ) ) ,DS ) / ( MUR * ( MUC / MUC ) ) ) / RRSe ) ) - Max( RRSe,MLU ) ) - Max( RRSe,MLU ) )", "obj1": 0.7681992337164751, "obj2": 0.1442735925766967}, {"determining": "( ( CRS + ( Max( ( ACS + ( FirstVNF_Mem_Server + ( ARS * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( ( MUC / RRSe ) + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.7222222222222222, "obj2": 0.16752871571205108}, {"determining": "( Max( AMS,Min( Min( Min( ( ( ( RRS / FirstVNF_Mem_Server ) - AMS ) + AMS ) ,MRS ) ,FirstVNF_CPU ) ,( Max( AMS,FirstVNF_RAM ) + DDR ) ) ) - ( MRS + DDR ) )", "choosing": "( ( MUR - ( Max( ( Max( MUR,Max( RCSe,DS ) ) * Min( ( Min( MUM ,RRSe ) * Max( MUM,MUR ) ) ,( RMSe * RRSe ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - ( RRSe + MUC ) )", "obj1": 0.7490421455938697, "obj2": 0.15677633599789437}, {"determining": "( ( CRS - ( ( RRS * FirstVNF_Mem ) / PN ) ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( Min( MLU ,( MUC - MUR ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8218390804597702, "obj2": 0.09092732238246307}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / Min( PN ,MDR ) ) )", "choosing": "( ( ( MUM / Min( CS ,RCSe ) ) / CS ) - Min( MUR ,( MUR + Min( MUM ,DS ) ) ) )", "obj1": 0.8065134099616859, "obj2": 0.10470744916588587}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( ( CRS * ( ( ACS - ( RRS + MRS ) ) - ( Max( AMS,MDR ) * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - ( MUR / ( Min( ( CS * MUM ) ,RMSe ) * RRSe ) ) )", "obj1": 0.9080459770114943, "obj2": 0.038410041291041044}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7049808429118773, "obj2": 0.200177406523409}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - Const ) ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.2080454729944964}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( ( CRS * AMS ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - ( MUR / ( Min( Min( ( MUR * MUM ) ,RMSe ) ,RMSe ) * RRSe ) ) )", "obj1": 0.9329501915708812, "obj2": 0.027070999065267862}, {"determining": "( Min( ( AMS / MDR ) ,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Const ) ) ) - ( Max( CRS,( FirstVNF_Mem * ( CRS * PN ) ) ) / PN ) )", "choosing": "( ( MLU - CS ) * Min( RRSe ,( ( Min( RRSe ,( ( DS + RRSe ) - RRSe ) ) + MUC ) - RRSe ) ) )", "obj1": 0.710727969348659, "obj2": 0.1876569612809467}, {"determining": "( ( CRS + ( Max( ( ACS + ( CRS + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,Min( RRSe ,RCSe ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.8390804597701149, "obj2": 0.0786117249352898}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - Const ) ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.6532567049808429, "obj2": 0.23100472646908182}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( ( MUM / Min( MUR ,RCSe ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8065134099616859, "obj2": 0.10470744916588587}, {"determining": "( ( CRS + ( Max( ( FirstVNF_Mem_Server + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + ( MUM - DS ) ) ) ) ) - Min( RRSe ,RCSe ) )", "obj1": 0.8582375478927203, "obj2": 0.06468334147042586}, {"determining": "( ( CRS + ( ( FirstVNF_Mem_Server + ( Max( FirstVNF_RAM_Server,Const ) * ( AMS - ARS ) ) ) - Max( DDR,MRS ) ) ) - Max( Max( CRS,CRS ),DDR ) )", "choosing": "( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( ( ( Max( MLU,( MUM - DS ) ) + ( DS + ( MLU - ( CS + MUM ) ) ) ) - Min( RRSe ,RCSe ) ) ,RCSe ) )", "obj1": 0.9003831417624522, "obj2": 0.041866701797381674}, {"determining": "Max( Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( ( FirstVNF_Mem / ACS ) ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) ),Max( ARS,ACS ) )", "choosing": "Min( Max( RCSe,( ( ( Max( RRSe,( MUR - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) ,Max( RCSe,( MUR / DS ) ) )", "obj1": 0.5708812260536399, "obj2": 0.3151497224729142}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( MDR * Min( FirstVNF_RAM ,PN ) ) )", "choosing": "( ( ( CS + ( Min( Max( ( CS - DS ),MUR ) ,MUC ) - Min( CS ,MUM ) ) ) / DS ) / Min( MLU ,MUM ) )", "obj1": 0.5957854406130269, "obj2": 0.2661076217303132}, {"determining": "( Max( MRS,DDR ) - Max( ( ( CRS * Const ) - FirstVNF_CPU_Server ),( Const / ( Max( ( Max( ACS,RRS ) + FirstVNF_RAM_Server ),RRS ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( MUC * RMSe ) / RCSe ) * ( Min( MUM ,Min( ( RMSe + MLU ) ,RRSe ) ) - ( MLU * Min( MUM ,Min( ( RMSe + MLU ) ,RRSe ) ) ) ) ) - MUR ) - Min( RRSe ,DS ) )", "obj1": 0.603448275862069, "obj2": 0.2592765534545841}, {"determining": "( Max( MRS,DDR ) - Max( ( ( CRS * Const ) - FirstVNF_CPU_Server ),( Const / ( Max( ( ( CRS * Const ) - FirstVNF_CPU_Server ),RRS ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe - MUR ) - Min( RRSe ,DS ) )", "obj1": 0.5862068965517241, "obj2": 0.28865869282783685}, {"determining": "( ACS - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( ( ( MUM / Min( MUR ,( MUM / Min( MUR ,RCSe ) ) ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.8084291187739464, "obj2": 0.1042651392247671}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "( ( MUR - ( Max( ( Max( MLU,Max( DS,RCSe ) ) * Min( ( Min( MUM ,RRSe ) * Max( MUR,MUR ) ) ,( RCSe * ( DS - DS ) ) ) ),RCSe ) * ( RCSe - MUC ) ) ) - Min( RRSe ,MUC ) )", "obj1": 0.6455938697318008, "obj2": 0.24293411019624722}, {"determining": "( Min( MRS ,( FirstVNF_Mem - Const ) ) - ( ( CRS - ( ( Min( ( MDR + RRS ) ,FirstVNF_RAM ) - ( DDR / FirstVNF_Mem ) ) * FirstVNF_RAM ) ) - Min( MRS ,( FirstVNF_Mem - Const ) ) ) )", "choosing": "( Min( ( ( MUR - Min( CS ,RRSe ) ) - Min( ( Max( DS,MLU ) + ( Min( MUM ,DS ) + MUC ) ) ,RRSe ) ) ,DS ) - ( RRSe - ( MLU + CS ) ) )", "obj1": 0.9770114942528736, "obj2": 0.015532514737869095}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / Min( PN ,( Max( ARS,FirstVNF_CPU ) / ( CRS - Const ) ) ) ) )", "choosing": "( ( ( MUM / Min( CS ,RCSe ) ) / CS ) - Min( MUR ,( MUR + Min( Max( DS,RCSe ) ,DS ) ) ) )", "obj1": 0.6609195402298851, "obj2": 0.22097105921553348}, {"determining": "( ( FirstVNF_RAM / CRS ) + Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) + ( CS - RCSe ) )", "obj1": 0.5766283524904214, "obj2": 0.30092834114932643}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( DS ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.048313215774018044}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( FirstVNF_Mem * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * PN ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * PN ) ) ) / PN ) )", "choosing": "( ( ( ( ( DS / CS ) - Min( MUR ,MUR ) ) / ( DS + CS ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.9540229885057471, "obj2": 0.016356841651932966}, {"determining": "Max( ( DDR * Min( ( FirstVNF_RAM_Server / MRS ) ,Min( MRS ,Const ) ) ),Max( ARS,ACS ) )", "choosing": "( Min( MUR ,CS ) * Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5651340996168582, "obj2": 0.32035344505890184}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ),DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,CS ) )", "obj1": 0.8697318007662835, "obj2": 0.05770310500522091}, {"determining": "( Max( MRS,DDR ) - Max( ( ( CRS * Const ) - FirstVNF_CPU_Server ),Min( ( ( Const / FirstVNF_CPU_Server ) / FirstVNF_RAM ) ,( Max( FirstVNF_RAM,Min( ARS ,Const ) ) - BR ) ) ) )", "choosing": "( ( ( ( ( MUC * RMSe ) / RCSe ) * ( CS - ( MLU * Min( MUM ,Min( ( RMSe + MLU ) ,MUM ) ) ) ) ) - MUR ) - Min( RRSe ,( RRSe + ( RCSe + MUM ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2558812191940479}, {"determining": "( Max( CRS,( Max( Max( Max( ARS,Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( Min( RRSe ,DS ) - Min( RRSe ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.0733186858109197}, {"determining": "( Max( MRS,DDR ) - ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( MLU * Min( ( ( MUR - MUR ) + MUM ) ,MUM ) ) ) ) + MUR ) - Min( RRSe ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2972830092147214}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_RAM ),CRS ) - Max( MRS,( MDR - ( FirstVNF_Mem_Server * MRS ) ) ) ) - ( FirstVNF_CPU * MDR ) )", "choosing": "( Min( RMSe ,MUM ) - ( Min( ( MUM - ( MUM / ( MUM + ( MUM / RRSe ) ) ) ) ,MLU ) - MUC ) )", "obj1": 0.6704980842911877, "obj2": 0.21269263226586835}, {"determining": "( ( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) / ( PN / BR ) )", "choosing": "( Max( ( MLU / CS ),( MUR + DS ) ) + ( ( RMSe * RRSe ) + MUC ) )", "obj1": 0.7068965517241379, "obj2": 0.19089379842924442}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,( FirstVNF_RAM_Server / MRS ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "( ( Max( ( ACS + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / MRS ) ),FirstVNF_RAM ) - Max( DDR,MRS ) ) - ( Max( ARS,FirstVNF_CPU ) / ( CRS - Const ) ) )", "choosing": "( Max( DS,RCSe ) - ( Min( RRSe ,RCSe ) - ( ( MUR / MUC ) * MLU ) ) )", "obj1": 0.6647509578544061, "obj2": 0.21531338471321518}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( PN / ( CRS - ( ( DDR * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) )", "choosing": "( Min( ( MUR + ( Min( MUM ,( Min( MLU ,( MUC - MUR ) ) - CS ) ) / RCSe ) ) ,RCSe ) - Min( DS ,RRSe ) )", "obj1": 0.8467432950191571, "obj2": 0.07588282107958562}, {"determining": "Max( Min( ( ( Const / ACS ) + FirstVNF_RAM ) ,Min( Min( MRS ,Const ) ,Max( ( ( ( FirstVNF_Mem / AMS ) + FirstVNF_CPU ) / PN ),FirstVNF_Mem ) ) ),Max( ARS,ACS ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( RCSe * ( Max( ( MLU / DS ),Min( MUR ,Max( MUM,RRSe ) ) ) + Min( RMSe ,( RRSe - Max( MUM,CS ) ) ) ) ) / DS ) ) )", "obj1": 0.5900383141762452, "obj2": 0.280419502906369}, {"determining": "( Max( MRS,DDR ) - Max( ( ( MRS / ARS ) - FirstVNF_CPU_Server ),( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC * ( DS / RRSe ) ) / RCSe ) * ( CS - ( MLU * Min( MUM ,Min( ( RMSe + CS ) ,MUM ) ) ) ) ) - MUR ) - Min( RRSe ,DS ) )", "obj1": 0.6283524904214559, "obj2": 0.2518568106014078}, {"determining": "( Max( MRS,DDR ) - Max( Max( ( ( MRS / ARS ) - FirstVNF_CPU_Server ),( Const - FirstVNF_Mem_Server ) ),( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( ( Max( ( CS - CS ),MUM ) * ( Min( Max( RCSe,RMSe ) ,MUC ) + Min( RRSe ,DS ) ) ),RCSe ) * ( CS - ( MLU + Min( RRSe ,Min( ( RMSe + MLU ) ,MUM ) ) ) ) ) - MUR ) - Min( RRSe ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.25492448036550747}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( Max( CRS,( ( BR * ARS ) * FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * PN ) ) ) / PN ) )", "choosing": "( ( ( ( ( ( ( CS / MUR ) / ( DS + CS ) ) / CS ) - Min( MUR ,MUR ) ) / ( DS + CS ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.9406130268199234, "obj2": 0.024770777044025454}, {"determining": "( ( Max( CRS,FirstVNF_RAM ) - Max( MRS,DDR ) ) - ( Max( ( Max( MRS,( FirstVNF_RAM - RRS ) ) - Max( CRS,FirstVNF_RAM ) ),( FirstVNF_CPU_Server + MDR ) ) - ( ( CRS - ( ( Min( ( MDR + RRS ) ,Min( ACS ,PN ) ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + Min( MRS ,( PN - Const ) ) ) ) )", "choosing": "( ( ( MUR - CS ) - ( Min( Max( ( RCSe - ( MLU / MLU ) ),MUM ) ,RRSe ) - MUC ) ) - Min( ( ( MUR - CS ) - Min( RRSe ,DS ) ) ,DS ) )", "obj1": 0.9808429118773946, "obj2": 0.011207819275837666}, {"determining": "( Max( CRS,( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,CS ) )", "obj1": 0.9885057471264368, "obj2": 0.004057260685920938}, {"determining": "( ( BR - ( ( Max( DDR,BR ) - CRS ) - BR ) ) * Min( MRS ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( ( ( Max( ( RMSe / MUM ),( MUR - Min( MUR ,RMSe ) ) ) + ( MUR * MUM ) ) - Min( RRSe ,MUC ) ) * DS ) )", "obj1": 0.9961685823754789, "obj2": 0.0015803906617178972}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( FirstVNF_Mem * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * PN ) ) ) / ( CRS - ( ( Min( ( MDR + RRS ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR - Min( CS ,RRSe ) ) - Min( RRSe ,RRSe ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.9827586206896551, "obj2": 0.00886558394703068}, {"determining": "( ( Max( FirstVNF_RAM,( ARS + Const ) ) - BR ) - Max( ( Min( MRS ,ARS ) - FirstVNF_CPU_Server ),Min( ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,( Max( FirstVNF_RAM,( ARS + Const ) ) - BR ) ) ) )", "choosing": "( Min( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( ( Max( ( MUC - RCSe ),( RMSe + RCSe ) ) / ( Max( MUM,RCSe ) - CS ) ) * MLU ) ) ) ,MUR ) - MUM )", "obj1": 0.632183908045977, "obj2": 0.2480595720898274}, {"determining": "( ( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) ) - Max( MRS,DDR ) )", "choosing": "( ( ( MUC - CS ) - Min( RRSe ,DS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.005672235714827963}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,Min( FirstVNF_RAM ,CRS ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / ( MLU - ( MUM * CS ) ) ) - Min( MUR ,( Min( RMSe ,MUM ) * RRSe ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02309760159294534}, {"determining": "( Max( CRS,( Max( Max( ( DDR * ( DDR * RRS ) ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - ( Max( ( MLU / CS ),( MUR + DS ) ) * ( MUM + CS ) ) )", "obj1": 0.8754789272030651, "obj2": 0.052842329451221685}, {"determining": "( Max( Max( Const,Max( FirstVNF_RAM,AMS ) ),FirstVNF_RAM ) - Max( MRS,DDR ) )", "choosing": "( Min( MUR ,CS ) - ( Min( MUM ,RRSe ) * Max( MUR,MUR ) ) )", "obj1": 0.6398467432950191, "obj2": 0.24779294918406983}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.052129227272833506}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( ( BR - FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * PN ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * PN ) ) ) / PN ) )", "choosing": "( ( ( ( ( ( MUM / DS ) / CS ) - Min( MUR ,MUR ) ) / ( DS + CS ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.9444444444444444, "obj2": 0.020814885956975154}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,( Min( RMSe ,MUM ) * RRSe ) ) )", "obj1": 0.9482758620689655, "obj2": 0.018485948432444138}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( Min( PN ,( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,( DS + CS ) ) )", "obj1": 0.946360153256705, "obj2": 0.020058725963968314}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * Max( AMS,CRS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RMSe + RRSe ),RCSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004885215731802212}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( DS,MUC ),Min( ( CS / RCSe ) ,RMSe ) ) - Max( ( DS - MUR ),DS ) ) - ( DS / MUM ) )", "obj1": 0.9980842911877394, "obj2": 0.0015419852797961635}, {"determining": "Max( ( BR + MDR ),( DDR + AMS ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( FirstVNF_Mem * ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * PN ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * PN ) ) ) / PN ) )", "choosing": "( ( ( ( ( ( MUM / ( DS + CS ) ) / CS ) - ( MUM / ( DS + CS ) ) ) / ( DS + CS ) ) / CS ) - Min( MUR ,MUR ) )", "obj1": 0.9501915708812261, "obj2": 0.01759371663857721}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,Max( MRS,DDR ) ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUC - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.054613065795258174}, {"determining": "( Max( CRS,FirstVNF_RAM ) - Max( MRS,( MDR - MRS ) ) )", "choosing": "( Min( MUR ,CS ) * Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 0.6417624521072797, "obj2": 0.24751443087510297}, {"determining": "( Max( CRS,( Max( Max( ( DDR * Const ),Max( ARS,Const ) ),FirstVNF_RAM ) - Max( MRS,DDR ) ) ) - Max( MRS,DDR ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04972517816222517}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) - ( Max( CRS,( ( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) ) - ( PN * PN ) ) ) / PN ) )", "choosing": "( ( ( MUM / ( DS + CS ) ) / CS ) - Min( MUR ,( Min( RMSe ,MUM ) * RRSe ) ) )", "obj1": 0.9501915708812261, "obj2": 0.01759371663857721}, {"determining": "( ( CRS / CRS ) / Min( ( ( Const / Const ) + CRS ) ,( Min( MRS ,Const ) * ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_Mem / AMS ) + FirstVNF_CPU ) / PN ),FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( RCSe,( ( ( Max( RRSe,( ( CS / RRSe ) - MUR ) ) * ( MUM * ( RCSe * RCSe ) ) ) + ( ( Min( RMSe ,Min( MUC ,RMSe ) ) + Max( ( RMSe / RMSe ),RCSe ) ) - RRSe ) ) / DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2793022827868688}, {"determining": "Max( ( BR + MDR ),( Min( BR ,BR ) - ( MDR - MRS ) ) )", "choosing": "( Max( Max( MLU,MLU ),RMSe ) * Max( RMSe,MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24799151661887853}, {"determining": "( Max( MRS,DDR ) - Max( ( FirstVNF_CPU_Server - Min( MRS ,ARS ) ),Min( ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( ( PN + ( FirstVNF_RAM - ACS ) ) - BR ) ) ) )", "choosing": "( Min( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( ( Max( ( MUC - RCSe ),( RMSe + RCSe ) ) / ( Max( MUM,RCSe ) - CS ) ) * MLU ) ) ) ,MUR ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,DDR ) - Max( ( FirstVNF_CPU_Server - Min( MRS ,ARS ) ),Min( ( ( Const / ( Max( ACS,MRS ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( ( PN + ( FirstVNF_RAM - ACS ) ) - BR ) ) ) )", "choosing": "( ( ( Max( Min( RMSe ,DS ),RCSe ) * ( CS - ( MLU * Min( ( ( CS - MUR ) + MUM ) ,MUM ) ) ) ) + MUR ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + Min( Min( ( AMS + DDR ) ,CRS ) ,( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) + ( CS - ( Min( DS ,( Max( RCSe,( MUR / ( DS / MLU ) ) ) - Min( MUC ,RMSe ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + Min( Min( ( AMS + DDR ) ,CRS ) ,( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) + ( CS - ( Min( DS ,( Max( RCSe,( MUR / ( DS / MLU ) ) ) - Min( MUC ,RMSe ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( ( RRS - DDR ) ,DDR ) ) + ( Min( Min( ( AMS + DDR ) ,CRS ) ,MRS ) / AMS ) )", "choosing": "( ( CS / MUM ) / ( CS - ( ( ( Max( MUC,MLU ) - Min( ( MUR - DS ) ,( MLU / DS ) ) ) + ( ( ( ( RMSe + RMSe ) / RMSe ) + ( ( MUC / MUM ) / ( RMSe + DS ) ) ) + ( MUR * ( MUM - Min( MUR ,RRSe ) ) ) ) ) + Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( MRS - PN ) )", "choosing": "( RRSe + ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) + ( ( MRS - PN ) / FirstVNF_Mem ) )", "choosing": "( ( MUC * RRSe ) + ( CS - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) * ( CRS * FirstVNF_Mem_Server ) ) - Max( MRS,DDR ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,MLU ),Max( ( MUM - RMSe ),( MLU + RRSe ) ) ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,BR ) ) / Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU * MRS ) ) ) + ( ARS - ( DDR + ( FirstVNF_CPU / BR ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUM - RCSe ) * ( ( MUC + DS ) / ( MUM * Min( ( DS + ( Min( DS ,DS ) * Min( RMSe ,CS ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( CRS - ( ( ARS - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) ) - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( Max( MLU,RRSe ) * Max( Min( DS ,RRSe ),MUR ) ) ) / RCSe ),( ( DS - MUM ) * Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( BR / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( ( RCSe - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_RAM_Server - ARS ) ) - ( RRS + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( Min( RMSe ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * DDR ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) )", "choosing": "( Min( ( RCSe - ( RRSe - ( MUM * MUC ) ) ) ,MUC ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( MRS * Const ) * FirstVNF_Mem_Server ) ) * CRS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUM / RCSe ) - ( Max( ( Max( MLU,MUM ) + ( ( RMSe - Max( DS,RMSe ) ) / CS ) ),( MUR - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM_Server ,DDR ) * Max( FirstVNF_RAM_Server,Max( Max( ( ( ARS / FirstVNF_CPU ) - FirstVNF_CPU_Server ),PN ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( ( ( Min( Max( MUC,MUR ) ,MUM ) - Max( CS,Max( MLU,RCSe ) ) ) - MUC ) * Max( ( RCSe + MUC ),( MUR + MUR ) ) ),( DS / ( RRSe * RRSe ) ) ) ,RMSe ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU ) - Min( FirstVNF_CPU ,MDR ) ) / Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server * CRS ) ) )", "choosing": "( Max( ( CS / MUM ),( DS * MUC ) ) + ( ( MUC * RRSe ) - ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,( PN + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( MUC - RCSe ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Min( Max( MRS,( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM ) ) ) ,ARS ) ) + FirstVNF_Mem ) / ( BR / CRS ) )", "choosing": "( ( Max( RMSe,( MUR + ( MUC + Min( MUR ,( ( MUM / MLU ) - RMSe ) ) ) ) ) + RMSe ) * ( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,MRS ) - ( BR + MRS ) ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUC + ( RMSe * ( RMSe / Min( Min( MUC ,Min( MLU ,( MUC * DS ) ) ) ,( MUC + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MUR ) + Max( CS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}]}