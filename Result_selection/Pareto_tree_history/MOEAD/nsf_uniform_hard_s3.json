{"1": [{"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,AMS ) )", "choosing": "( Min( MLU ,CS ) * ( MUM + CS ) )", "obj1": 0.7490421455938697, "obj2": 0.2687763847345296}, {"determining": "Max( ( ( Max( MRS,DDR ) * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_Mem_Server * AMS ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),Min( Max( Max( DDR,ARS ),( RRS / ARS ) ) ,Min( Min( BR ,MDR ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) )", "choosing": "( ( MUC / ( CS * ( MUR + MLU ) ) ) - ( MUM + RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.25781552188321905}, {"determining": "Max( Min( FirstVNF_CPU_Server ,BR ),( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / MUC ) / ( MUR / MUR ) )", "obj1": 0.7203065134099617, "obj2": 0.26215563933783537}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ,( FirstVNF_CPU - PN ) )", "choosing": "( ( MLU * MUR ) + ( MUM * CS ) )", "obj1": 0.7337164750957854, "obj2": 0.2676201524982399}, {"determining": "Max( ( AMS * DDR ),( ARS - MDR ) )", "choosing": "( ( MUC + RRSe ) + ( MUM * MUC ) )", "obj1": 0.7260536398467433, "obj2": 0.30176634407907815}, {"determining": "Max( ( MRS * FirstVNF_RAM_Server ),( Const - Const ) )", "choosing": "( ( MUR * RMSe ) + Max( MUR,RMSe ) )", "obj1": 0.7222222222222222, "obj2": 0.293901218763523}, {"determining": "( ( DDR / FirstVNF_CPU ) * Max( DDR,Const ) )", "choosing": "Min( Max( MUC,DS ) ,Max( DS,MUR ) )", "obj1": 0.6743295019157088, "obj2": 0.2829198794443946}, {"determining": "( Max( BR,FirstVNF_Mem ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,MUC ) ,Min( RRSe ,MLU ) )", "obj1": 0.7318007662835249, "obj2": 0.2909126414745988}, {"determining": "( ( BR + AMS ) + Min( DDR ,PN ) )", "choosing": "( ( CS / DS ) * Max( MUM,MUC ) )", "obj1": 0.6934865900383141, "obj2": 0.26231842334449784}, {"determining": "( Max( MDR,AMS ) + Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "Max( ( MUC + RRSe ),Max( CS,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.25587852728156624}, {"determining": "( ( ACS / FirstVNF_Mem ) * ( DDR - BR ) )", "choosing": "Min( ( MUR - RRSe ) ,( RCSe + RCSe ) )", "obj1": 0.6896551724137931, "obj2": 0.28822871157809876}, {"determining": "Min( ( PN + BR ) ,Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,RRSe ) / ( CS * MLU ) )", "obj1": 0.7030651340996169, "obj2": 0.2633356068217049}, {"determining": "Max( ( ARS / FirstVNF_Mem ),( RRS - BR ) )", "choosing": "( ( RCSe * MUC ) / ( RMSe / MUC ) )", "obj1": 0.6915708812260536, "obj2": 0.27995348162310624}, {"determining": "( ( FirstVNF_CPU + MRS ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( CS + MUC ) + ( MUC / MUM ) )", "obj1": 0.7413793103448276, "obj2": 0.2487732562732855}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.6590038314176245, "obj2": 0.294952295708733}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( ( RRSe * MLU ) * ( RMSe * MUM ) )", "obj1": 0.6494252873563219, "obj2": 0.30392805328873246}, {"determining": "( ( FirstVNF_CPU - ARS ) + Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( MUM / RMSe ) - ( MUR / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) + ( MDR + CRS ) )", "choosing": "Min( Max( MLU,RRSe ) ,( DS / RMSe ) )", "obj1": 0.6954022988505747, "obj2": 0.2688159599668349}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * Min( ( MDR + CRS ) ,( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( ( RRSe * CS ) + ( MLU / MLU ) ) * ( ( RCSe + CS ) + ( MUC - RRSe ) ) )", "obj1": 0.6647509578544061, "obj2": 0.25935301361824653}, {"determining": "Max( ( DDR * FirstVNF_Mem_Server ),Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe / DS ) ,( MUR + DS ) ) - Min( MUC ,MUC ) )", "obj1": 0.7183908045977011, "obj2": 0.27477234068582257}, {"determining": "( ( ( RRS / BR ) - ( ACS / FirstVNF_Mem_Server ) ) - ( ( Const + MDR ) + ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe + RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / CRS ) ) - ( Max( PN,Const ) - ( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RCSe + CS ) / ( CS - CS ) ) ,( ( RMSe * RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( Min( AMS ,ACS ) - CRS ) )", "choosing": "( ( CS + RMSe ) * ( Min( MUC ,RCSe ) * ( RCSe + RMSe ) ) )", "obj1": 0.6609195402298851, "obj2": 0.2831982165665919}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( FirstVNF_RAM - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUM ) + CS ) ,( MLU / MUR ) )", "obj1": 0.6877394636015326, "obj2": 0.2674042999485684}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.6475095785440613, "obj2": 0.2727607273836433}, {"determining": "( Max( AMS,Min( FirstVNF_RAM ,AMS ) ) / ( MDR - FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,RRSe ) / ( MUC * RCSe ) ) + ( ( MUM + MLU ) + Max( MUR,CS ) ) )", "obj1": 0.8735632183908046, "obj2": 0.13209567237258327}, {"determining": "( Min( ( PN / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) * ( Max( FirstVNF_RAM,ARS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,RRSe ) * ( Min( MUM ,MUC ) + MLU ) )", "obj1": 0.6992337164750958, "obj2": 0.26525026112938355}, {"determining": "Min( Min( ( PN / Const ) ,Max( MDR,FirstVNF_CPU ) ) ,Max( ( CRS * DDR ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MUC ) - ( MUC * ( MLU + MUM ) ) )", "obj1": 0.6628352490421456, "obj2": 0.28644828290398705}, {"determining": "Min( ( ( MDR / RRS ) / ( FirstVNF_CPU * AMS ) ) ,( ( AMS * DDR ) / ( ACS * PN ) ) )", "choosing": "Max( Min( Max( RMSe,RRSe ) ,Min( RCSe ,CS ) ),( ( MUC / MUR ) * ( DS + RRSe ) ) )", "obj1": 0.7030651340996169, "obj2": 0.26026281014123476}, {"determining": "( ( ( AMS + MRS ) - ( ARS * ACS ) ) + ( Min( AMS ,DDR ) / Max( ARS,Const ) ) )", "choosing": "( ( Max( DS,MUR ) * ( RMSe * MLU ) ) * ( Max( DS,MUR ) * ( RRSe * RRSe ) ) )", "obj1": 0.7088122605363985, "obj2": 0.25346767904012313}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( Max( ACS,CRS ),( AMS - MDR ) ) )", "choosing": "( ( ( RRSe - CS ) - ( MLU - MLU ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 0.8160919540229885, "obj2": 0.1648122349647583}, {"determining": "( Min( Min( FirstVNF_Mem ,RRS ) ,Max( AMS,FirstVNF_RAM ) ) + Min( ( PN / ACS ) ,( DDR * ARS ) ) )", "choosing": "( ( ( MUC * MUC ) / MUC ) + ( ( CS - MUC ) / MUM ) )", "obj1": 0.685823754789272, "obj2": 0.2638259624673487}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) + Max( ( BR + MDR ),ARS ) )", "choosing": "( Min( DS ,RRSe ) * Min( MLU ,( MLU * RCSe ) ) )", "obj1": 0.7164750957854407, "obj2": 0.2676054803398573}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_RAM_Server ) * ( ARS * CRS ) )", "choosing": "( ( ( Max( MUM,RCSe ) * Min( MUR ,DS ) ) - ( ( RCSe + MUC ) + ( DS - RCSe ) ) ) + ( Max( ( RCSe * MUM ),( RRSe * MUR ) ) * Max( Min( RRSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 0.6954022988505747, "obj2": 0.28088387197664605}, {"determining": "Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( FirstVNF_Mem + FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + MUR ) * ( DS + RRSe ) ) * ( ( RRSe - DS ) - ( RCSe / MUM ) ) ) / ( Max( Min( MUR ,DS ),( DS + RCSe ) ) * ( ( RRSe / RMSe ) - Max( DS,CS ) ) ) )", "obj1": 0.7088122605363985, "obj2": 0.2875941999486721}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_RAM / ARS ) + FirstVNF_RAM_Server ) - CRS ) )", "choosing": "Max( Max( ( ( RCSe - MUR ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( Min( RMSe ,CS ) + ( MUC * MLU ) ) ) )", "obj1": 0.8007662835249042, "obj2": 0.20311427967578483}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Const ) + ( RRS - FirstVNF_RAM_Server ) ),( ( DDR + MRS ) * ( ACS + RRS ) ) ) + ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),Min( ACS ,ARS ) ) * ( Max( Const,FirstVNF_RAM ) * Max( RRS,PN ) ) ) )", "choosing": "Min( Max( ( ( RCSe * MUM ) - ( RRSe - RCSe ) ),( ( RMSe / RCSe ) - Min( RRSe ,CS ) ) ) ,( Max( Max( MLU,MLU ),Min( MLU ,MUC ) ) - ( ( MLU + MLU ) - Min( MLU ,MUM ) ) ) )", "obj1": 0.6436781609195402, "obj2": 0.26322126731945955}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8697318007662835, "obj2": 0.10968481745511574}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) )", "choosing": "( ( ( Min( RMSe ,MLU ) * ( RRSe * MUM ) ) / ( Min( RMSe ,RRSe ) * ( MLU / MUM ) ) ) / Max( ( ( DS * RMSe ) * ( MUC - RCSe ) ),( ( DS + CS ) - ( MUR / RMSe ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.2906020223748932}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( MDR - RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + Min( MUM ,MUC ) ) - DS ) - Max( ( MUR - CS ),RCSe ) )", "obj1": 0.6819923371647509, "obj2": 0.2936168319718451}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS / DDR ) - ( CRS * MDR ) ) + Max( ( FirstVNF_RAM_Server / AMS ),Max( AMS,BR ) ) ) / ( ( Max( ACS,MRS ) + Max( MDR,FirstVNF_CPU ) ) / ( ( MRS / MDR ) - ( AMS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUR + ( MUC - RMSe ) ) ,( ( ( MUC + MUM ) / Max( DS,MUM ) ) * CS ) )", "obj1": 0.7413793103448276, "obj2": 0.2751760762285626}, {"determining": "Max( ( AMS - MDR ),( PN + CRS ) )", "choosing": "Max( ( ( ( MUM + RCSe ) * ( MUR * MUM ) ) * Max( ( MUR - CS ),( RCSe / RRSe ) ) ),Max( ( ( MLU + MLU ) / Min( CS ,MUC ) ),( Max( RCSe,RMSe ) - ( RRSe + RCSe ) ) ) )", "obj1": 0.7298850574712644, "obj2": 0.2652979372629843}, {"determining": "Max( Max( ( FirstVNF_RAM * MRS ),( ( FirstVNF_RAM + BR ) * FirstVNF_RAM_Server ) ),Max( ( FirstVNF_CPU * AMS ),BR ) )", "choosing": "Max( ( Max( ( CS / RCSe ),Max( CS,MLU ) ) / ( ( RMSe + MLU ) * ( RCSe * MUR ) ) ),( ( Min( MUM ,DS ) + Max( MUC,MLU ) ) / Max( ( CS - DS ),( CS * CS ) ) ) )", "obj1": 0.7567049808429118, "obj2": 0.2582617383460305}, {"determining": "Min( ( Min( ( AMS - AMS ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,BR ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * Max( ( AMS + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "Min( ( Max( Max( DS,RRSe ),Max( RMSe,MLU ) ) + ( ( RCSe * RCSe ) / ( MLU + CS ) ) ) ,Min( Min( ( CS + MUR ) ,( RMSe - MUR ) ) ,Min( Min( RCSe ,RRSe ) ,Min( RRSe ,CS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.2787025954137907}, {"determining": "( Min( ( ( MDR / MDR ) * ( FirstVNF_RAM / AMS ) ) ,( Min( CRS ,ARS ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) + Max( ( ( ARS + DDR ) + Min( PN ,BR ) ),( ( AMS - ACS ) - Max( RRS,CRS ) ) ) )", "choosing": "( Max( Max( ( RRSe - RCSe ),Max( MUC,RRSe ) ),( Min( DS ,RRSe ) * ( RCSe + MLU ) ) ) / Min( ( Max( CS,RMSe ) / Max( RRSe,MUC ) ) ,( ( RRSe * MUC ) + ( RCSe / CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.28249726587773777}], "2": [{"determining": "Min( ( Min( ( AMS - ( Min( ( ( MDR / MDR ) * ( FirstVNF_RAM / AMS ) ) ,( Min( CRS ,ARS ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) + Max( ( ( ARS + DDR ) + Min( PN ,BR ) ),( ( AMS - ACS ) - Max( RRS,CRS ) ) ) ) ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,BR ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * Max( ( AMS + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "Min( ( Max( Max( DS,RRSe ),Max( RMSe,MLU ) ) + ( ( MUR * RCSe ) / ( RRSe - RCSe ) ) ) ,Min( Min( ( CS + MUR ) ,( RMSe - MUR ) ) ,Min( Min( RCSe ,RRSe ) ,Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ARS ) + Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( MUM / RMSe ) - ( MUR / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + BR )", "choosing": "( ( DS + RMSe ) - Max( ( RCSe - RRSe ),CS ) )", "obj1": 0.5900383141762452, "obj2": 0.29349468867995543}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_RAM / ARS ) + FirstVNF_RAM_Server ) - CRS ) )", "choosing": "Max( Max( ( ( RCSe - MUR ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( Min( RMSe ,CS ) + ( MUC * MLU ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.10252443494102616}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * ( ( FirstVNF_CPU_Server + MRS ) + ( CRS * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR - ( RMSe * MUM ) ) - ( RMSe / RRSe ) )", "obj1": 0.9712643678160919, "obj2": 0.034176800487621534}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( Max( ACS,CRS ),( AMS - MDR ) ) )", "choosing": "( ( ( RRSe - CS ) - ( MLU - MLU ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 0.7739463601532567, "obj2": 0.20104658833803715}, {"determining": "( ( ( AMS + MRS ) - ( ARS * ACS ) ) + ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) )", "choosing": "( ( Max( DS,MUR ) * ( RMSe * MLU ) ) * ( Max( DS,MUR ) * ( ( ( RRSe - CS ) - ( MLU - MLU ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) ) ) )", "obj1": 0.7490421455938697, "obj2": 0.22855093645651997}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( Max( ACS,CRS ),( AMS - MDR ) ) )", "choosing": "( ( Max( DS,MUR ) * ( RMSe * MLU ) ) * ( Max( DS,MUR ) * ( RRSe * RRSe ) ) )", "obj1": 0.7605363984674329, "obj2": 0.20255841065866523}, {"determining": "( Min( Min( FirstVNF_Mem ,RRS ) ,Max( AMS,FirstVNF_RAM ) ) + BR )", "choosing": "( ( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) ) + ( ( CS - MUC ) / MUM ) )", "obj1": 0.657088122605364, "obj2": 0.25327655241470814}, {"determining": "( ( BR - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "Max( ( CS - ( Min( DS ,MUC ) / Min( RRSe ,MLU ) ) ),( MUC + DS ) )", "obj1": 0.6379310344827587, "obj2": 0.2674341512906391}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Const ) + ( RRS - FirstVNF_RAM_Server ) ),( ( DDR + MRS ) * ( ACS + RRS ) ) ) + ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),Min( ACS ,ARS ) ) * ( Max( Const,FirstVNF_RAM ) * Max( RRS,PN ) ) ) )", "choosing": "Min( Max( ( ( RCSe * MUM ) - ( RRSe - RCSe ) ),( ( RMSe / RCSe ) - Min( RRSe ,CS ) ) ) ,( Max( Max( MLU,MLU ),Min( MLU ,MUC ) ) - ( ( MLU + MLU ) - Min( MLU ,MUM ) ) ) )", "obj1": 0.6436781609195402, "obj2": 0.26322126731945955}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( ( ( RRS / BR ) - ( ACS / FirstVNF_Mem_Server ) ) - ( ( Const + MDR ) + ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe + RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / CRS ) ) - ( Max( PN,Const ) - ( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RCSe + CS ) / ( CS - CS ) ) ,( ( RMSe * RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ARS / RRS ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS * RRSe ) ) / ( CS * ( RCSe + MUC ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe + ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( DS + ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUC * MLU ) * ( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( CRS,FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( Max( MLU,RRSe ) ,( MUC / RMSe ) ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe * CS ) + ( MLU / MLU ) ) * Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( ( MUC * RCSe ) * MUM ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( RMSe * MUM ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) * Max( Max( ACS,CRS ),( AMS - MDR ) ) )", "choosing": "( ( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR * ARS ) ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( ( ( CS - MUC ) / MUM ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( ( RRSe * DS ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUM,RCSe ) * Min( MUR ,DS ) ) - ( ( RCSe + MUC ) + ( DS - RCSe ) ) ) + ( Max( ( RCSe * MUM ),( RRSe * MUR ) ) * Max( Min( RRSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Max( ( DDR + MRS ),( ACS + RRS ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( Max( ( ( RCSe * MUM ) + ( RRSe - RCSe ) ),Max( ( RMSe - RCSe ),Min( RRSe ,CS ) ) ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( ( RCSe * MUM ) + ( RRSe - RCSe ) ),Max( ( RMSe - RCSe ),Min( RRSe ,CS ) ) ) ,( Max( ( MLU * MLU ),Min( MLU ,MUC ) ) - ( ( MLU * MLU ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * ( MLU / MUM ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( MDR / RRS ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,( ( MUM + Min( MUM ,MUC ) ) - DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( ( MUM + Min( MUM ,MUC ) ) - DS ) - Max( ( MUR - CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + ( ( MDR - RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( ( MUM + Min( MUM ,MUC ) ) - DS ) - Max( ( MUR - CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * MDR ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,( MUC + MUM ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( AMS - ( Min( ( ( MDR / MDR ) * ( FirstVNF_RAM / AMS ) ) ,( Min( CRS ,ARS ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) + Max( ( ( ARS + DDR ) + Min( PN ,BR ) ),( ( AMS - ACS ) - Max( RRS,CRS ) ) ) ) ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,BR ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * Max( ( AMS + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "Min( ( Max( Max( DS,RRSe ),Max( RMSe,MLU ) ) + ( ( MUR * RCSe ) / ( RRSe - RCSe ) ) ) ,Min( Min( ( CS + MUR ) ,( RMSe - MUR ) ) ,Min( Min( RCSe ,RRSe ) ,Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( Min( ( RMSe / RRSe ) ,DS ) ,DS ) )", "obj1": 0.5823754789272031, "obj2": 0.29592191401302176}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "Min( ( DDR - ( MDR - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( RMSe * MLU ) )", "obj1": 0.7145593869731801, "obj2": 0.19463389141118856}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_RAM / ARS ) + FirstVNF_RAM_Server ) - CRS ) )", "choosing": "Max( Max( ( ( RCSe - MUR ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( Min( RMSe ,CS ) + ( MUC * MLU ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.10252443494102616}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * ( ( FirstVNF_CPU_Server + MRS ) + ( CRS * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR - ( RMSe * MUM ) ) - ( RMSe / RRSe ) )", "obj1": 0.9712643678160919, "obj2": 0.034176800487621534}, {"determining": "( ( FirstVNF_Mem_Server - ( PN / RRS ) ) * ( MDR + PN ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS * RRSe ) ) / ( CS * ( RCSe + MUC ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe + ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.06480879205800959}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Min( Min( FirstVNF_Mem ,RRS ) ,Max( AMS,FirstVNF_RAM ) ) + BR )", "choosing": "( ( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) ) + ( ( CS - MUC ) / MUM ) )", "obj1": 0.657088122605364, "obj2": 0.25327655241470814}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) + Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "Max( ( MUC - Min( Min( MLU ,MUC ) ,( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) ) ) ),( RMSe + MUR ) )", "obj1": 0.6340996168582376, "obj2": 0.2690928391835685}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.6379310344827587, "obj2": 0.257762246276543}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + BR )", "choosing": "( ( DS + RMSe ) - Max( ( RCSe - RRSe ),CS ) )", "obj1": 0.5900383141762452, "obj2": 0.29349468867995543}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.5900383141762452, "obj2": 0.29349468867995543}, {"determining": "( ( FirstVNF_CPU - ARS ) + Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( MUM / RMSe ) - ( MUR / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / BR ) - ( ACS / FirstVNF_Mem_Server ) ) - ( ( Const + MDR ) + ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe + RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / CRS ) ) - ( Max( PN,Const ) - ( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RCSe + CS ) / ( CS - CS ) ) ,( ( RMSe * RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ARS / RRS ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS * RRSe ) ) / ( CS * ( RCSe + MUC ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe + ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( DS + ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUC * MLU ) * ( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( CRS,FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( Max( MLU,RRSe ) ,( MUC / RMSe ) ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe * CS ) + ( MLU / MLU ) ) * Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( ( MUC * RCSe ) * MUM ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( RMSe * MUM ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) * Max( Max( ACS,CRS ),( AMS - MDR ) ) )", "choosing": "( ( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR * ARS ) ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( ( ( CS - MUC ) / MUM ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( ( RRSe * DS ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUM,RCSe ) * Min( MUR ,DS ) ) - ( ( RCSe + MUC ) + ( DS - RCSe ) ) ) + ( Max( ( RCSe * MUM ),( RRSe * MUR ) ) * Max( Min( RRSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Max( ( DDR + MRS ),( ACS + RRS ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( Max( ( ( RCSe * MUM ) + ( RRSe - RCSe ) ),Max( ( RMSe - RCSe ),Min( RRSe ,CS ) ) ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( ( RCSe * MUM ) + ( RRSe - RCSe ) ),Max( ( RMSe - RCSe ),Min( RRSe ,CS ) ) ) ,( Max( ( MLU * MLU ),Min( MLU ,MUC ) ) - ( ( MLU * MLU ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * ( MLU / MUM ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( MDR / RRS ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,( ( MUM + Min( MUM ,MUC ) ) - DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( ( MUM + Min( MUM ,MUC ) ) - DS ) - Max( ( MUR - CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + ( ( MDR - RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( ( MUM + Min( MUM ,MUC ) ) - DS ) - Max( ( MUR - CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * MDR ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,( MUC + MUM ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( FirstVNF_RAM - ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( Min( AMS ,ACS ) - CRS ) ) ) + MRS ) )", "choosing": "Min( ( Max( DS,MUM ) + CS ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MLU * MUR ) ) * ( MUM + CS ) )", "obj1": 0.7758620689655172, "obj2": 0.18100424359568054}, {"determining": "( ( FirstVNF_Mem_Server - ( PN / RRS ) ) * ( MDR + PN ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS * RRSe ) ) / ( CS * ( RCSe + MUC ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe + ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.06480879205800959}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * ( ( FirstVNF_CPU_Server + MRS ) + ( CRS * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR - ( RMSe * MUM ) ) - ( RMSe / RRSe ) )", "obj1": 0.9712643678160919, "obj2": 0.034176800487621534}, {"determining": "Min( ( DDR - ( MDR - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( RMSe * MLU ) )", "obj1": 0.7145593869731801, "obj2": 0.19463389141118856}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server + BR ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe / ( ( ( MLU * MUR ) + ( MUM * CS ) ) + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7011494252873564, "obj2": 0.22849721077802332}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,( PN / RRS ) ) )", "choosing": "( ( RCSe + RRSe ) * ( MUM + CS ) )", "obj1": 0.8716475095785441, "obj2": 0.10511473655750302}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,( PN / RRS ) ) )", "choosing": "( Min( MLU ,( MLU * MUR ) ) * ( MUM + CS ) )", "obj1": 0.8754789272030651, "obj2": 0.09972308008448483}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( Min( Min( FirstVNF_Mem ,RRS ) ,Max( AMS,FirstVNF_RAM ) ) + BR )", "choosing": "( ( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) ) + ( ( CS - MUC ) / MUM ) )", "obj1": 0.657088122605364, "obj2": 0.25327655241470814}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( DS / RRSe ) ,DS ) )", "obj1": 0.5823754789272031, "obj2": 0.29245461606743356}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.6379310344827587, "obj2": 0.257762246276543}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + DDR )", "choosing": "( ( DS * DS ) - Min( ( ( DS * DS ) / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.28310877675882967}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( DS * DS ) ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.2588991055857674}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + Max( ( Const * PN ),DDR ) )", "choosing": "( ( DS * DS ) - Min( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ) ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.28383505763386374}, {"determining": "( Min( Min( DDR ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5881226053639846, "obj2": 0.2908417622636174}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - ( DS * DS ) )", "obj1": 0.6245210727969349, "obj2": 0.2588991055857674}, {"determining": "Min( ( Min( ( AMS - ( Min( ( ( MDR / MDR ) * ( FirstVNF_RAM / AMS ) ) ,( Min( CRS ,ARS ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) + Max( ( ( ARS + DDR ) + Min( PN ,BR ) ),( ( AMS - ACS ) - Max( RRS,CRS ) ) ) ) ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,BR ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * Max( ( AMS + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "Min( ( Max( Max( DS,RRSe ),Max( RMSe,MLU ) ) + ( ( MUR * RCSe ) / ( RRSe - RCSe ) ) ) ,Min( Min( ( CS + MUR ) ,( RMSe - MUR ) ) ,Min( Min( RCSe ,RRSe ) ,Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ARS ) + Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( MUM / RMSe ) - ( MUR / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / BR ) - ( ACS / FirstVNF_Mem_Server ) ) - ( ( Const + MDR ) + ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe + RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / CRS ) ) - ( Max( PN,Const ) - ( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RCSe + CS ) / ( CS - CS ) ) ,( ( RMSe * RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ARS / RRS ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS * RRSe ) ) / ( CS * ( RCSe + MUC ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe + ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( DS + ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUC * MLU ) * ( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( CRS,FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( Max( MLU,RRSe ) ,( MUC / RMSe ) ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe * CS ) + ( MLU / MLU ) ) * Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( ( MUC * RCSe ) * MUM ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( RMSe * MUM ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) * Max( Max( ACS,CRS ),( AMS - MDR ) ) )", "choosing": "( ( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR * ARS ) ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( ( ( CS - MUC ) / MUM ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - CRS ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( ( RRSe * DS ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUM,RCSe ) * Min( MUR ,DS ) ) - ( ( RCSe + MUC ) + ( DS - RCSe ) ) ) + ( Max( ( RCSe * MUM ),( RRSe * MUR ) ) * Max( Min( RRSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Max( ( DDR + MRS ),( ACS + RRS ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( Max( ( ( RCSe * MUM ) + ( RRSe - RCSe ) ),Max( ( RMSe - RCSe ),Min( RRSe ,CS ) ) ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( ( RCSe * MUM ) + ( RRSe - RCSe ) ),Max( ( RMSe - RCSe ),Min( RRSe ,CS ) ) ) ,( Max( ( MLU * MLU ),Min( MLU ,MUC ) ) - ( ( MLU * MLU ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * ( MLU / MUM ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( Min( ( Max( Min( Max( ( ( CRS * BR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ),( ( BR / FirstVNF_CPU ) + Min( CRS ,FirstVNF_Mem ) ) ) ,( ( ( RRS - BR ) * ( MRS * FirstVNF_RAM ) ) - Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( RRS,MDR ) ) ) ),( ( Min( ( Const / ARS ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Max( Min( CRS ,MRS ),( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem * AMS ) ,( PN + ARS ) ),( Min( FirstVNF_Mem ,AMS ) + ( MRS * Const ) ) ) ) ) * ( ( Min( ( ( MRS + MDR ) / ( FirstVNF_Mem * ACS ) ) ,( ( ACS / FirstVNF_CPU ) * ( MRS * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem + ARS ) + ( AMS * AMS ) ) * ( ( ARS + AMS ) * ( AMS * FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( DDR / PN ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( MRS * CRS ) ,( FirstVNF_RAM_Server + ACS ) ) ) - Min( Min( Max( ACS,CRS ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_CPU ) * ( FirstVNF_Mem / CRS ) ) ) ) ) ) ,Max( ( ( Min( Max( ( FirstVNF_CPU_Server / MRS ),( FirstVNF_Mem_Server / Const ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / DDR ) ) * Min( ( CRS * ARS ) ,Min( Const ,FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_Mem_Server - Const ),Max( FirstVNF_CPU_Server,MDR ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - ( MRS / FirstVNF_Mem_Server ) ) ) - ( ( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - AMS ) ) - ( ( RRS - Const ) - ( FirstVNF_Mem_Server * PN ) ) ) ) ),( ( ( Min( ( FirstVNF_CPU / BR ) ,( ARS - CRS ) ) / ( ( FirstVNF_CPU_Server * Const ) + Min( PN ,MRS ) ) ) + ( ( ( AMS - MDR ) - ( BR + MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( CRS * PN ) ) ) ) * ( ( ( Max( MDR,RRS ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( MDR - RRS ) ) ) * ( ( Max( ACS,FirstVNF_Mem_Server ) * ( PN * ARS ) ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( PN ,ACS ) ) ) ) ) ) ) ,( ( ( Max( ( Min( Max( MDR,FirstVNF_RAM_Server ) ,( Const + BR ) ) * ( Max( AMS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + AMS ) ) ),( ( Min( BR ,Const ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) - ( Min( MRS ,ARS ) - ( BR + CRS ) ) ) ) * ( Min( ( ( PN * RRS ) * Min( CRS ,DDR ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ( AMS + ARS ) + Min( BR ,ARS ) ) + ( ( BR * FirstVNF_Mem_Server ) / Max( DDR,RRS ) ) ) ) ) + ( ( Max( ( ( DDR + AMS ) + ( MRS + PN ) ),( ( AMS * BR ) + ( CRS * PN ) ) ) - ( ( ( ACS * BR ) * ( PN / ACS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( Min( Const ,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,PN ) ) ),( Max( ( ACS - FirstVNF_RAM_Server ),Max( ARS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( ARS - FirstVNF_RAM ) ) ) ) ) ) / Max( ( ( ( Min( ( ACS - AMS ) ,( Const + BR ) ) + ( Max( AMS,FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * Min( ( Min( BR ,Const ) / ( FirstVNF_RAM_Server - ARS ) ) ,Max( ( MRS + RRS ),( FirstVNF_CPU - DDR ) ) ) ) - ( Max( ( ( AMS * Const ) + ( FirstVNF_CPU_Server - CRS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( MRS * FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_CPU * FirstVNF_CPU ) ) - ( ( ACS - FirstVNF_RAM_Server ) / ( AMS * FirstVNF_Mem_Server ) ) ) ) ),Min( ( ( ( ( ACS * ARS ) + ( PN + MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - ( FirstVNF_RAM / MRS ) ) ) * ( Max( Max( MRS,BR ),( BR + Const ) ) * ( ( DDR + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( AMS * ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) * Max( ( RRS + DDR ),( FirstVNF_Mem / ARS ) ) ) * ( ( Min( FirstVNF_Mem_Server ,ARS ) + Max( FirstVNF_Mem,AMS ) ) * ( ( CRS * FirstVNF_Mem ) * ( FirstVNF_CPU - DDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( Min( Max( ( ( DS * MLU ) * ( CS + RRSe ) ),Min( ( RRSe - CS ) ,( MUM - DS ) ) ) ,Max( ( ( MLU + CS ) + Min( RRSe ,DS ) ),Min( Max( DS,MUC ) ,Min( MUR ,RMSe ) ) ) ) + Max( ( ( Max( MLU,MUM ) * ( CS + CS ) ) + ( Min( DS ,MUC ) - ( RCSe + RMSe ) ) ),( ( Max( MUR,MUR ) * Max( RRSe,CS ) ) - Max( ( MUR * MUR ),Min( RCSe ,RMSe ) ) ) ) ),( ( ( ( ( MLU - MUM ) - ( MLU + DS ) ) - ( Max( RRSe,RRSe ) * ( MUC * DS ) ) ) - Max( Max( Max( CS,MUR ),Max( MUC,RRSe ) ),Max( ( MLU + MLU ),( MUC * RCSe ) ) ) ) * Min( Max( Min( ( MUR + MUC ) ,( MUR - DS ) ),Max( ( MUM / MUM ),( RMSe - DS ) ) ) ,Min( ( Max( CS,RCSe ) + ( RRSe / RRSe ) ) ,( Min( CS ,RMSe ) - ( MUR + RCSe ) ) ) ) ) ) - Max( ( ( Max( ( Max( RCSe,MUR ) * Max( DS,RMSe ) ),Max( ( MUC / RRSe ),( DS - RMSe ) ) ) * Max( ( Max( RMSe,MLU ) * ( DS / RCSe ) ),( ( RMSe + MUC ) + ( RMSe - MLU ) ) ) ) / Min( Min( ( ( DS * MUM ) * ( RCSe * DS ) ) ,( Min( MUC ,CS ) / ( MUR / RRSe ) ) ) ,( Min( Min( CS ,MUC ) ,( RMSe * CS ) ) - ( ( MUM + MLU ) + ( MUR + MUM ) ) ) ) ),Min( ( ( ( ( CS / MLU ) * ( MUM - RCSe ) ) * ( ( MUR - RCSe ) + ( RCSe - RMSe ) ) ) - ( Min( ( MUC - CS ) ,( CS + RRSe ) ) * Max( Min( CS ,RMSe ),( MUR - MUC ) ) ) ) ,Max( ( Max( ( DS / DS ),Min( RCSe ,MUM ) ) * ( Min( CS ,RCSe ) - ( RCSe + MUR ) ) ),Max( ( Max( CS,MUM ) * ( DS - MUC ) ),Max( Min( MUM ,DS ),( DS - MUR ) ) ) ) ) ) ) + ( Min( ( ( Min( ( ( RCSe / MLU ) - Min( CS ,MLU ) ) ,( Max( RCSe,MLU ) + ( RCSe - MUC ) ) ) * ( ( ( MUM + CS ) * Min( DS ,MLU ) ) - Min( Max( MUM,CS ) ,Min( MLU ,DS ) ) ) ) * ( Min( ( ( CS / RRSe ) * Max( RCSe,MUR ) ) ,( ( MUC + MUC ) - ( MUC + RMSe ) ) ) * ( Max( ( DS / MUC ),( RCSe - RMSe ) ) * ( ( CS * CS ) + ( CS + MUC ) ) ) ) ) ,( Max( Min( ( ( MUR * MUR ) / Min( RMSe ,MLU ) ) ,Min( ( MUM - CS ) ,( MUR - MUR ) ) ),( Min( ( DS + MUR ) ,Min( MUR ,RMSe ) ) * ( Max( MUR,MUR ) + Max( RRSe,RRSe ) ) ) ) + Min( Max( Max( Min( MLU ,DS ),( MUC / DS ) ),Min( ( RCSe + MLU ) ,( MLU + DS ) ) ) ,( Min( Max( MLU,MLU ) ,( MUC * DS ) ) * ( Min( MUM ,MUC ) * Min( MLU ,MLU ) ) ) ) ) ) + ( Max( ( Min( ( Max( MUR,RMSe ) * Max( MUR,DS ) ) ,( ( CS - RRSe ) * Max( RCSe,MLU ) ) ) / ( ( Max( MLU,RMSe ) / ( MUR + CS ) ) * ( Max( MLU,CS ) - ( CS * CS ) ) ) ),( ( ( Min( MLU ,MUR ) - ( DS / RMSe ) ) - ( ( RRSe + RCSe ) + ( MUM + DS ) ) ) + ( ( Max( MUM,RRSe ) - Min( RCSe ,RMSe ) ) / Max( ( MUM * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( Min( ( RMSe * MUR ) ,( MUR * CS ) ) - ( ( RCSe + MUM ) / ( DS + CS ) ) ) / ( Max( ( MUR / RMSe ),( MUM + MUC ) ) / ( Min( RMSe ,MUC ) * ( MUM / MUC ) ) ) ) + Max( Min( ( Max( MUM,MUC ) + ( DS * RMSe ) ) ,( ( MUM / CS ) * Min( MLU ,CS ) ) ),( Max( Max( MUC,MUR ),( MLU - RCSe ) ) * Max( ( MUC + RRSe ),Max( CS,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( FirstVNF_RAM - ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( Min( AMS ,ACS ) - CRS ) ) ) + MRS ) )", "choosing": "Min( ( Max( DS,MUM ) + CS ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MLU * MUR ) ) * ( MUM + CS ) )", "obj1": 0.7758620689655172, "obj2": 0.18100424359568054}, {"determining": "( ( FirstVNF_Mem_Server - ( PN / RRS ) ) * ( MDR + PN ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS * RRSe ) ) / ( CS * ( RCSe + MUC ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe + ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.06480879205800959}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ARS,FirstVNF_Mem ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MLU * ( Min( MLU ,RRSe ) * ( MUM + CS ) ) ) ) * ( MUM + CS ) )", "obj1": 0.9616858237547893, "obj2": 0.030726561240129787}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server + BR ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe / ( ( ( MLU * MUR ) + ( MUM * CS ) ) + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7011494252873564, "obj2": 0.22849721077802332}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,( PN / RRS ) ) )", "choosing": "( ( RCSe + RRSe ) * ( MUM + CS ) )", "obj1": 0.8716475095785441, "obj2": 0.10511473655750302}, {"determining": "Min( ( DDR - ( MDR - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( RMSe * MLU ) )", "obj1": 0.7145593869731801, "obj2": 0.19463389141118856}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( Max( ( ( ( Min( ( ( RRS + ARS ) * ( PN - RRS ) ) ,( ( BR + MRS ) - ( FirstVNF_CPU / ACS ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + ( MDR - ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,ACS ) ) ) ) / ( ( ( ( MRS * FirstVNF_CPU_Server ) / ( ARS + FirstVNF_Mem ) ) * ( ( ACS / CRS ) * ( BR - FirstVNF_CPU ) ) ) - ( ( ( MDR + MDR ) / Min( FirstVNF_RAM ,PN ) ) * Max( Max( MDR,Const ),( ARS + CRS ) ) ) ) ) - ( ( ( ( Min( PN ,ARS ) * ( BR - AMS ) ) * ( ( ACS + FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) + ( ( Min( MRS ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( RRS,FirstVNF_RAM_Server ) - ( Const + MDR ) ) ) ) / ( Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - ACS ) ),( ( AMS * DDR ) * Max( FirstVNF_Mem_Server,CRS ) ) ) + Min( Max( Max( ARS,MDR ),( ACS + Const ) ) ,Min( ( FirstVNF_RAM_Server / Const ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) ),( ( ( Max( ( Min( FirstVNF_RAM ,ACS ) / Max( FirstVNF_RAM,DDR ) ),Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( BR ,FirstVNF_Mem ) ) ) + Min( ( ( DDR - MDR ) * ( FirstVNF_Mem + ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( Const + FirstVNF_RAM_Server ) ) ) ) * Max( Min( ( ( AMS + MDR ) / Min( FirstVNF_Mem_Server ,BR ) ) ,( ( FirstVNF_Mem_Server - PN ) / Max( Const,MDR ) ) ),( ( ( Const / PN ) * ( MDR - Const ) ) * ( Min( PN ,PN ) - ( ARS + FirstVNF_Mem ) ) ) ) ) + ( ( Min( ( ( Const / FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( ( DDR * ACS ) + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( ARS + CRS ) ) + ( ( ACS / MDR ) - Max( ACS,PN ) ) ) ) / Min( ( Min( Max( FirstVNF_RAM_Server,DDR ) ,( AMS + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem / MDR ) / ( MRS + Const ) ) ) ,( ( ( MRS * CRS ) + Max( AMS,ARS ) ) / ( Max( AMS,PN ) - ( Const / BR ) ) ) ) ) ) ) * ( ( ( Min( Max( ( ( RRS + BR ) - Max( FirstVNF_CPU_Server,MDR ) ),Max( ( ACS * FirstVNF_Mem ),Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( ( ARS + FirstVNF_RAM_Server ) + Max( ARS,AMS ) ) ,( ( DDR * ARS ) * ( FirstVNF_CPU - DDR ) ) ) ) + Min( ( ( Max( FirstVNF_CPU,BR ) * ( BR + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server / MRS ) - ( MRS + MRS ) ) ) ,Max( Max( Max( MDR,PN ),Max( DDR,BR ) ),Min( ( RRS * AMS ) ,( DDR * BR ) ) ) ) ) + Min( ( Min( Min( ( MDR + DDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ,( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( ( ( RRS * FirstVNF_RAM_Server ) - ( AMS / CRS ) ) - Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,Min( RRS ,MDR ) ) ) ) ,( ( ( ( FirstVNF_CPU * RRS ) - ( ACS * FirstVNF_CPU ) ) + Min( ( PN / FirstVNF_CPU_Server ) ,( FirstVNF_Mem - ACS ) ) ) - Min( ( ( FirstVNF_Mem_Server * CRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ,Min( ( RRS + BR ) ,( PN - FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( Max( ( ( ( RRS - FirstVNF_RAM ) / ( FirstVNF_Mem_Server - CRS ) ) / ( ( MRS * FirstVNF_RAM ) * Max( AMS,FirstVNF_RAM_Server ) ) ),( Min( ( DDR - BR ) ,( RRS + FirstVNF_RAM ) ) * ( ( ACS + Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) ) ) + Max( Min( ( Min( Const ,MRS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU * ARS ) / ( MDR / FirstVNF_Mem ) ) ),Min( ( ( AMS - BR ) * ( ACS * FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) ) ,( ( ( Min( ( Const - DDR ) ,( FirstVNF_Mem - ACS ) ) + Max( ( MRS / MRS ),Min( Const ,MDR ) ) ) + Max( ( ( CRS / FirstVNF_RAM ) - ( Const * RRS ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( RRS / CRS ) ) ) ) + Min( ( ( ( FirstVNF_CPU_Server / MRS ) + Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + MDR ) - ( FirstVNF_Mem_Server - DDR ) ) ) ,( ( Max( MDR,AMS ) + Min( MDR ,MRS ) ) - ( ( AMS / PN ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( CS * RMSe ) ) * ( ( RCSe + ( Max( RMSe,( RCSe - ( DS / DS ) ) ) / RCSe ) ) + ( MUR + CS ) ) ) / ( RRSe - ( RMSe - MUC ) ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / FirstVNF_RAM_Server ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( ( MUM + CS ) * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7490421455938697, "obj2": 0.19266123518756162}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,( ( FirstVNF_RAM_Server + BR ) - Max( ARS,( PN / RRS ) ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.89272030651341, "obj2": 0.0818429459790308}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( DS / RRSe ) ,DS ) )", "obj1": 0.5823754789272031, "obj2": 0.29245461606743356}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( Min( Min( FirstVNF_Mem ,RRS ) ,Max( AMS,FirstVNF_RAM ) ) + BR )", "choosing": "( ( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) ) + ( ( CS - MUC ) / MUM ) )", "obj1": 0.657088122605364, "obj2": 0.25327655241470814}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,( PN / RRS ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.8812260536398467, "obj2": 0.08865984435452956}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + DDR )", "choosing": "( ( DS * DS ) - Min( ( ( DS * DS ) / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.28310877675882967}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - ( RMSe / RRSe ) )", "obj1": 0.632183908045977, "obj2": 0.25416055322026787}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( DS * DS ) ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.2588991055857674}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,( PN / RRS ) ) )", "choosing": "( Min( MLU ,( MLU * MUR ) ) * ( MUM + CS ) )", "obj1": 0.8754789272030651, "obj2": 0.09972308008448483}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - ( DS * DS ) )", "obj1": 0.6245210727969349, "obj2": 0.2588991055857674}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) + Max( BR,DDR ) )", "choosing": "( ( DS * DS ) - RMSe )", "obj1": 0.6283524904214559, "obj2": 0.2575644522885506}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,( PN / RRS ) ) )", "choosing": "( Min( MLU ,( MLU * MUR ) ) * ( MUM + CS ) )", "obj1": 0.8754789272030651, "obj2": 0.09972308008448483}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( AMS - ( Min( ( ( MDR / MDR ) * ( FirstVNF_RAM / AMS ) ) ,( Min( CRS ,ARS ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) + Max( ( ( ARS + DDR ) + Min( PN ,BR ) ),( ( AMS - ACS ) - Max( RRS,CRS ) ) ) ) ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,BR ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * Max( ( AMS + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "Min( ( Max( Max( DS,RRSe ),Max( RMSe,MLU ) ) + ( ( MUR * RCSe ) / ( RRSe - RCSe ) ) ) ,Min( Min( ( CS + MUR ) ,( RMSe - MUR ) ) ,Min( Min( RCSe ,RRSe ) ,Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ARS ) + Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( MUM / RMSe ) - ( MUR / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / BR ) - ( ACS / FirstVNF_Mem_Server ) ) - ( ( Const + MDR ) + ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe + RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / CRS ) ) - ( Max( PN,Const ) - ( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RCSe + CS ) / ( CS - CS ) ) ,( ( RMSe * RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ARS / RRS ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS * RRSe ) ) / ( CS * ( RCSe + MUC ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe + ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( DS + ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUC * MLU ) * ( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( CRS,FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( Max( MLU,RRSe ) ,( MUC / RMSe ) ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe * CS ) + ( MLU / MLU ) ) * Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( ( MUC * RCSe ) * MUM ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( RMSe * MUM ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) * Max( Max( ACS,CRS ),( AMS - MDR ) ) )", "choosing": "( ( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR * ARS ) ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( ( ( CS - MUC ) / MUM ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( RRS - ( ( Const * PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( Min( Max( ( ( CRS * BR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ),( ( BR / FirstVNF_CPU ) + Min( CRS ,FirstVNF_Mem ) ) ) ,( ( ( RRS - BR ) * ( MRS * FirstVNF_RAM ) ) - Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( RRS,MDR ) ) ) ),( ( Min( ( Const / ARS ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Max( Min( CRS ,MRS ),( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem * AMS ) ,( PN + ARS ) ),( Min( FirstVNF_Mem ,AMS ) + ( MRS * Const ) ) ) ) ) * ( ( Min( ( ( MRS + MDR ) / ( FirstVNF_Mem * ACS ) ) ,( ( ACS / FirstVNF_CPU ) * ( MRS * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem + ARS ) + ( AMS * AMS ) ) * ( ( ARS + AMS ) * ( AMS * FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( DDR / PN ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( MRS * CRS ) ,( FirstVNF_RAM_Server + ACS ) ) ) - Min( Min( Max( ACS,CRS ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_CPU ) * ( FirstVNF_Mem / CRS ) ) ) ) ) ) ,Max( ( ( Min( Max( ( FirstVNF_CPU_Server / MRS ),( FirstVNF_Mem_Server / Const ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / DDR ) ) * Min( ( CRS * ARS ) ,Min( Const ,FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_Mem_Server - Const ),Max( FirstVNF_CPU_Server,MDR ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - ( MRS / FirstVNF_Mem_Server ) ) ) - ( ( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - AMS ) ) - ( ( RRS - Const ) - ( FirstVNF_Mem_Server * PN ) ) ) ) ),( ( ( Min( ( FirstVNF_CPU / BR ) ,( ARS - CRS ) ) / ( ( FirstVNF_CPU_Server * Const ) + Min( PN ,MRS ) ) ) + ( ( ( AMS - MDR ) - ( BR + MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( CRS * PN ) ) ) ) * ( ( ( Max( MDR,RRS ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( MDR - RRS ) ) ) * ( ( Max( ACS,FirstVNF_Mem_Server ) * ( PN * ARS ) ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( PN ,ACS ) ) ) ) ) ) ) ,( ( ( Max( ( Min( Max( MDR,FirstVNF_RAM_Server ) ,( Const + BR ) ) * ( Max( AMS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + AMS ) ) ),( ( Min( BR ,Const ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) - ( Min( MRS ,ARS ) - ( BR + CRS ) ) ) ) * ( Min( ( ( PN * RRS ) * Min( CRS ,DDR ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ( AMS + ARS ) + Min( BR ,ARS ) ) + ( ( BR * FirstVNF_Mem_Server ) / Max( DDR,RRS ) ) ) ) ) + ( ( Max( ( ( DDR + AMS ) + ( MRS + PN ) ),( ( AMS * BR ) + ( CRS * PN ) ) ) - ( ( ( ACS * BR ) * ( PN / ACS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( Min( Const ,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,PN ) ) ),( Max( ( ACS - FirstVNF_RAM_Server ),Max( ARS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( ARS - FirstVNF_RAM ) ) ) ) ) ) / Max( ( ( ( Min( ( ACS - AMS ) ,( Const + BR ) ) + ( Max( AMS,FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * Min( ( Min( BR ,Const ) / ( FirstVNF_RAM_Server - ARS ) ) ,Max( ( MRS + RRS ),( FirstVNF_CPU - DDR ) ) ) ) - ( Max( ( ( AMS * Const ) + ( FirstVNF_CPU_Server - CRS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( MRS * FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_CPU * FirstVNF_CPU ) ) - ( ( ACS - FirstVNF_RAM_Server ) / ( AMS * FirstVNF_Mem_Server ) ) ) ) ),Min( ( ( ( ( ACS * ARS ) + ( PN + MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - ( FirstVNF_RAM / MRS ) ) ) * ( Max( Max( MRS,BR ),( BR + Const ) ) * ( ( DDR + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( AMS * ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) * Max( ( RRS + DDR ),( FirstVNF_Mem / ARS ) ) ) * ( ( Min( FirstVNF_Mem_Server ,ARS ) + Max( FirstVNF_Mem,AMS ) ) * ( ( CRS * FirstVNF_Mem ) * ( FirstVNF_CPU - DDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( Min( Max( ( ( DS * MLU ) * ( CS + RRSe ) ),Min( ( RRSe - CS ) ,( MUM - DS ) ) ) ,Max( ( ( MLU + CS ) + Min( RRSe ,DS ) ),Min( Max( DS,MUC ) ,Min( MUR ,RMSe ) ) ) ) + Max( ( ( Max( MLU,MUM ) * ( CS + CS ) ) + ( Min( DS ,MUC ) - ( RCSe + RMSe ) ) ),( ( Max( MUR,MUR ) * Max( RRSe,CS ) ) - Max( ( MUR * MUR ),Min( RCSe ,RMSe ) ) ) ) ),( ( ( ( ( MLU - MUM ) - ( MLU + DS ) ) - ( Max( RRSe,RRSe ) * ( MUC * DS ) ) ) - Max( Max( Max( CS,MUR ),Max( MUC,RRSe ) ),Max( ( MLU + MLU ),( MUC * RCSe ) ) ) ) * Min( Max( Min( ( MUR + MUC ) ,( MUR - DS ) ),Max( ( MUM / MUM ),( RMSe - DS ) ) ) ,Min( ( Max( CS,RCSe ) + ( RRSe / RRSe ) ) ,( Min( CS ,RMSe ) - ( MUR + RCSe ) ) ) ) ) ) - Max( ( ( Max( ( Max( RCSe,MUR ) * Max( DS,RMSe ) ),Max( ( MUC / RRSe ),( DS - RMSe ) ) ) * Max( ( Max( RMSe,MLU ) * ( DS / RCSe ) ),( ( RMSe + MUC ) + ( RMSe - MLU ) ) ) ) / Min( Min( ( ( DS * MUM ) * ( RCSe * DS ) ) ,( Min( MUC ,CS ) / ( MUR / RRSe ) ) ) ,( Min( Min( CS ,MUC ) ,( RMSe * CS ) ) - ( ( MUM + MLU ) + ( MUR + MUM ) ) ) ) ),Min( ( ( ( ( CS / MLU ) * ( MUM - RCSe ) ) * ( ( MUR - RCSe ) + ( RCSe - RMSe ) ) ) - ( Min( ( MUC - CS ) ,( CS + RRSe ) ) * Max( Min( CS ,RMSe ),( MUR - MUC ) ) ) ) ,Max( ( Max( ( DS / DS ),Min( RCSe ,MUM ) ) * ( Min( CS ,RCSe ) - ( RCSe + MUR ) ) ),Max( ( Max( CS,MUM ) * ( DS - MUC ) ),Max( Min( MUM ,DS ),( DS - MUR ) ) ) ) ) ) ) + ( Min( ( ( Min( ( ( RCSe / MLU ) - Min( CS ,MLU ) ) ,( Max( RCSe,MLU ) + ( RCSe - MUC ) ) ) * ( ( ( MUM + CS ) * Min( DS ,MLU ) ) - Min( Max( MUM,CS ) ,Min( MLU ,DS ) ) ) ) * ( Min( ( ( CS / RRSe ) * Max( RCSe,MUR ) ) ,( ( MUC + MUC ) - ( MUC + RMSe ) ) ) * ( Max( ( DS / MUC ),( RCSe - RMSe ) ) * ( ( CS * CS ) + ( CS + MUC ) ) ) ) ) ,( Max( Min( ( ( MUR * MUR ) / Min( RMSe ,MLU ) ) ,Min( ( MUM - CS ) ,( MUR - MUR ) ) ),( Min( ( DS + MUR ) ,Min( MUR ,RMSe ) ) * ( Max( MUR,MUR ) + Max( RRSe,RRSe ) ) ) ) + Min( Max( Max( Min( MLU ,DS ),( MUC / DS ) ),Min( ( RCSe + MLU ) ,( MLU + DS ) ) ) ,( Min( Max( MLU,MLU ) ,( MUC * DS ) ) * ( Min( MUM ,MUC ) * Min( MLU ,MLU ) ) ) ) ) ) + ( Max( ( Min( ( Max( MUR,RMSe ) * Max( MUR,DS ) ) ,( ( CS - RRSe ) * Max( RCSe,MLU ) ) ) / ( ( Max( MLU,RMSe ) / ( MUR + CS ) ) * ( Max( MLU,CS ) - ( CS * CS ) ) ) ),( ( ( Min( MLU ,MUR ) - ( DS / RMSe ) ) - ( ( RRSe + RCSe ) + ( MUM + DS ) ) ) + ( ( Max( MUM,RRSe ) - Min( RCSe ,RMSe ) ) / Max( ( MUM * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( Min( ( RMSe * MUR ) ,( MUR * CS ) ) - ( ( RCSe + MUM ) / ( DS + CS ) ) ) / ( Max( ( MUR / RMSe ),( MUM + MUC ) ) / ( Min( RMSe ,MUC ) * ( MUM / MUC ) ) ) ) + Max( Min( ( Max( MUM,MUC ) + ( DS * RMSe ) ) ,( ( MUM / CS ) * Min( MLU ,CS ) ) ),( Max( Max( MUC,MUR ),( MLU - RCSe ) ) * Max( ( MUC + RRSe ),Max( CS,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "Min( ( DDR - ( MDR - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( RMSe * MLU ) )", "obj1": 0.7145593869731801, "obj2": 0.19463389141118856}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server + BR ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe / ( ( ( MLU * MUR ) + ( MUM * CS ) ) + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7011494252873564, "obj2": 0.22849721077802332}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,( ( FirstVNF_RAM_Server + BR ) - Max( ARS,( PN / RRS ) ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.89272030651341, "obj2": 0.0818429459790308}, {"determining": "( ( FirstVNF_Mem_Server - ( PN / RRS ) ) * ( MDR + PN ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS * RRSe ) ) / ( CS * ( RCSe + MUC ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe + ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.06480879205800959}, {"determining": "( Max( ( ( ( Min( ( ( RRS + ARS ) * ( PN - RRS ) ) ,( ( BR + MRS ) - ( FirstVNF_CPU / ACS ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + ( MDR - ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,ACS ) ) ) ) / ( ( ( ( MRS * FirstVNF_CPU_Server ) / ( ARS + FirstVNF_Mem ) ) * ( ( ACS / CRS ) * ( BR - FirstVNF_CPU ) ) ) - ( ( ( MDR + MDR ) / Min( FirstVNF_RAM ,PN ) ) * Max( Max( MDR,Const ),( ARS + CRS ) ) ) ) ) - ( ( ( ( Min( PN ,ARS ) * ( BR - AMS ) ) * ( ( ACS + FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) + ( ( Min( MRS ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( RRS,FirstVNF_RAM_Server ) - ( Const + MDR ) ) ) ) / ( Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - ACS ) ),( ( AMS * DDR ) * Max( FirstVNF_Mem_Server,CRS ) ) ) + Min( Max( Max( ARS,MDR ),( ACS + Const ) ) ,Min( ( FirstVNF_RAM_Server / Const ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) ),( ( ( Max( ( Min( FirstVNF_RAM ,ACS ) / Max( FirstVNF_RAM,DDR ) ),Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( BR ,FirstVNF_Mem ) ) ) + Min( ( ( DDR - MDR ) * ( FirstVNF_Mem + ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( Const + FirstVNF_RAM_Server ) ) ) ) * Max( Min( ( ( AMS + MDR ) / Min( FirstVNF_Mem_Server ,BR ) ) ,( ( FirstVNF_Mem_Server - PN ) / Max( Const,MDR ) ) ),( ( ( Const / PN ) * ( MDR - Const ) ) * ( Min( PN ,PN ) - ( ARS + FirstVNF_Mem ) ) ) ) ) + ( ( Min( ( ( Const / FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( ( DDR * ACS ) + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( ARS + CRS ) ) + ( ( ACS / MDR ) - Max( ACS,PN ) ) ) ) / Min( ( Min( Max( FirstVNF_RAM_Server,DDR ) ,( AMS + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem / MDR ) / ( MRS + Const ) ) ) ,( ( ( MRS * CRS ) + Max( AMS,ARS ) ) / ( Max( AMS,PN ) - ( Const / BR ) ) ) ) ) ) ) * ( ( ( Min( Max( ( ( RRS + BR ) - Max( FirstVNF_CPU_Server,MDR ) ),Max( ( ACS * FirstVNF_Mem ),Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( ( ARS + FirstVNF_RAM_Server ) + Max( ARS,AMS ) ) ,( ( DDR * ARS ) * ( FirstVNF_CPU - DDR ) ) ) ) + Min( ( ( Max( FirstVNF_CPU,BR ) * ( BR + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server / MRS ) - ( MRS + MRS ) ) ) ,Max( Max( Max( MDR,PN ),Max( DDR,BR ) ),Min( ( RRS * AMS ) ,( DDR * BR ) ) ) ) ) + Min( ( Min( Min( ( MDR + DDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ,( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( ( ( RRS * FirstVNF_RAM_Server ) - ( AMS / CRS ) ) - Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,Min( RRS ,MDR ) ) ) ) ,( ( ( ( FirstVNF_CPU * RRS ) - ( ACS * FirstVNF_CPU ) ) + Min( ( PN / FirstVNF_CPU_Server ) ,( FirstVNF_Mem - ACS ) ) ) - Min( ( ( FirstVNF_Mem_Server * CRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ,Min( ( RRS + BR ) ,( PN - FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( Max( ( ( ( RRS - FirstVNF_RAM ) / ( FirstVNF_Mem_Server - CRS ) ) / ( ( MRS * FirstVNF_RAM ) * Max( AMS,FirstVNF_RAM_Server ) ) ),( Min( ( DDR - BR ) ,( RRS + FirstVNF_RAM ) ) * ( ( ACS + Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) ) ) + Max( Min( ( Min( Const ,MRS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU * ARS ) / ( MDR / FirstVNF_Mem ) ) ),Min( ( ( AMS - BR ) * ( ACS * FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) ) ,( ( ( Min( ( Const - DDR ) ,( FirstVNF_Mem - ACS ) ) + Max( ( MRS / MRS ),Min( Const ,MDR ) ) ) + Max( ( ( CRS / FirstVNF_RAM ) - ( Const * RRS ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( RRS / CRS ) ) ) ) + Min( ( ( ( FirstVNF_CPU_Server / MRS ) + Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + MDR ) - ( FirstVNF_Mem_Server - DDR ) ) ) ,( ( Max( MDR,AMS ) + Min( MDR ,MRS ) ) - ( ( AMS / PN ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( CS * RMSe ) ) * ( ( RCSe + ( Max( RMSe,( RCSe - ( DS / DS ) ) ) / RCSe ) ) + ( MUR + CS ) ) ) / ( RRSe - ( RMSe - MUC ) ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "( ( MDR + PN ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.9655172413793104, "obj2": 0.03029677747428741}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) / RRSe ) ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.24811812698800761}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( ( FirstVNF_RAM_Server + ARS ) - Max( ARS,Max( ( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( RCSe + RMSe ) )", "obj1": 0.9080459770114943, "obj2": 0.07772277927059178}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + Max( BR,DDR ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.30049422041388174}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - ( RMSe / RRSe ) )", "obj1": 0.632183908045977, "obj2": 0.25416055322026787}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ARS,FirstVNF_Mem ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MLU * ( Min( MLU ,RRSe ) * ( MUM + CS ) ) ) ) * ( MUM + CS ) )", "obj1": 0.9616858237547893, "obj2": 0.030726561240129787}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( DS / RRSe ) ,DS ) )", "obj1": 0.5823754789272031, "obj2": 0.29245461606743356}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( DS * DS ) ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.2588991055857674}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - ( DS * DS ) )", "obj1": 0.6245210727969349, "obj2": 0.2588991055857674}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) + Max( BR,DDR ) )", "choosing": "( ( DS * DS ) - RMSe )", "obj1": 0.6283524904214559, "obj2": 0.2575644522885506}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( RMSe * ( MUC * RCSe ) ) + RRSe ) )", "obj1": 0.6264367816091954, "obj2": 0.2585830287793749}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( FirstVNF_RAM - ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( Min( AMS ,ACS ) - CRS ) ) ) + MRS ) )", "choosing": "Min( ( Max( DS,MUM ) + CS ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( AMS - ( Min( ( ( MDR / MDR ) * ( FirstVNF_RAM / AMS ) ) ,( Min( CRS ,ARS ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) + Max( ( ( ARS + DDR ) + Min( PN ,BR ) ),( ( AMS - ACS ) - Max( RRS,CRS ) ) ) ) ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,BR ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * Max( ( AMS + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "Min( ( Max( Max( DS,RRSe ),Max( RMSe,MLU ) ) + ( ( MUR * RCSe ) / ( RRSe - RCSe ) ) ) ,Min( Min( ( CS + MUR ) ,( RMSe - MUR ) ) ,Min( Min( RCSe ,RRSe ) ,Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ARS ) + Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( MUM / RMSe ) - ( MUR / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / BR ) - ( ACS / FirstVNF_Mem_Server ) ) - ( ( Const + MDR ) + ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe + RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / CRS ) ) - ( Max( PN,Const ) - ( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RCSe + CS ) / ( CS - CS ) ) ,( ( RMSe * RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ARS / RRS ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS * RRSe ) ) / ( CS * ( RCSe + MUC ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe + ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( DS + ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUC * MLU ) * ( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( CRS,FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( Max( MLU,RRSe ) ,( MUC / RMSe ) ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe * CS ) + ( MLU / MLU ) ) * Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( ( MUC * RCSe ) * MUM ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( RMSe * MUM ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) * Max( Max( ACS,CRS ),( AMS - MDR ) ) )", "choosing": "( ( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( RRS / RRS ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( ( Const * PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,( ( FirstVNF_RAM_Server + BR ) - Max( ARS,( PN / RRS ) ) ) ) )", "choosing": "( ( MLU * MUR ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.89272030651341, "obj2": 0.0818429459790308}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / ( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + PN ) ) ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( ( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ,RRSe ) )", "obj1": 0.7126436781609196, "obj2": 0.1856318117991454}, {"determining": "( Max( ( ( ( Min( ( ( RRS + ARS ) * ( PN - RRS ) ) ,( ( BR + MRS ) - ( FirstVNF_CPU / ACS ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + ( MDR - ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,ACS ) ) ) ) / ( ( ( ( MRS * FirstVNF_CPU_Server ) / ( ARS + FirstVNF_Mem ) ) * ( ( ACS / CRS ) * ( BR - FirstVNF_CPU ) ) ) - ( ( ( MDR + MDR ) / Min( FirstVNF_RAM ,PN ) ) * Max( Max( MDR,Const ),( ARS + CRS ) ) ) ) ) - ( ( ( ( Min( PN ,ARS ) * ( BR - AMS ) ) * ( ( ACS + FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) + ( ( Min( MRS ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( RRS,FirstVNF_RAM_Server ) - ( Const + MDR ) ) ) ) / ( Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - ACS ) ),( ( AMS * DDR ) * Max( FirstVNF_Mem_Server,CRS ) ) ) + Min( Max( Max( ARS,MDR ),( ACS + Const ) ) ,Min( ( FirstVNF_RAM_Server / Const ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) ),( ( ( Max( ( Min( FirstVNF_RAM ,ACS ) / Max( FirstVNF_RAM,DDR ) ),Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( BR ,FirstVNF_Mem ) ) ) + Min( ( ( DDR - MDR ) * ( FirstVNF_Mem + ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( Const + FirstVNF_RAM_Server ) ) ) ) * Max( Min( ( ( AMS + MDR ) / Min( FirstVNF_Mem_Server ,BR ) ) ,( ( FirstVNF_Mem_Server - PN ) / Max( Const,MDR ) ) ),( ( ( Const / PN ) * ( MDR - Const ) ) * ( Min( PN ,PN ) - ( ARS + FirstVNF_Mem ) ) ) ) ) + ( ( Min( ( ( Const / FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( ( DDR * ACS ) + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( ARS + CRS ) ) + ( ( ACS / MDR ) - Max( ACS,PN ) ) ) ) / Min( ( Min( Max( FirstVNF_RAM_Server,DDR ) ,( AMS + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem / MDR ) / ( MRS + Const ) ) ) ,( ( ( MRS * CRS ) + Max( AMS,ARS ) ) / ( Max( AMS,PN ) - ( Const / BR ) ) ) ) ) ) ) * ( ( ( Min( Max( ( ( RRS + BR ) - Max( FirstVNF_CPU_Server,MDR ) ),Max( ( ACS * FirstVNF_Mem ),Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( ( ARS + FirstVNF_RAM_Server ) + Max( ARS,AMS ) ) ,( ( DDR * ARS ) * ( FirstVNF_CPU - DDR ) ) ) ) + Min( ( ( Max( FirstVNF_CPU,BR ) * ( BR + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server / MRS ) - ( MRS + MRS ) ) ) ,Max( Max( Max( MDR,PN ),Max( DDR,BR ) ),Min( ( RRS * AMS ) ,( DDR * BR ) ) ) ) ) + Min( ( Min( Min( ( MDR + DDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ,( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( ( ( RRS * FirstVNF_RAM_Server ) - ( AMS / CRS ) ) - Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,Min( RRS ,MDR ) ) ) ) ,( ( ( ( FirstVNF_CPU * RRS ) - ( ACS * FirstVNF_CPU ) ) + Min( ( PN / FirstVNF_CPU_Server ) ,( FirstVNF_Mem - ACS ) ) ) - Min( ( ( FirstVNF_Mem_Server * CRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ,Min( ( RRS + BR ) ,( PN - FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( Max( ( ( ( RRS - FirstVNF_RAM ) / ( FirstVNF_Mem_Server - CRS ) ) / ( ( MRS * FirstVNF_RAM ) * Max( AMS,FirstVNF_RAM_Server ) ) ),( Min( ( DDR - BR ) ,( RRS + FirstVNF_RAM ) ) * ( ( ACS + Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) ) ) + Max( Min( ( Min( Const ,MRS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU * ARS ) / ( MDR / FirstVNF_Mem ) ) ),Min( ( ( AMS - BR ) * ( ACS * FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) ) ,( ( ( Min( ( Const - DDR ) ,( FirstVNF_Mem - ACS ) ) + Max( ( MRS / MRS ),Min( Const ,MDR ) ) ) + Max( ( ( CRS / FirstVNF_RAM ) - ( Const * RRS ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( RRS / CRS ) ) ) ) + Min( ( ( ( FirstVNF_CPU_Server / MRS ) + Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + MDR ) - ( FirstVNF_Mem_Server - DDR ) ) ) ,( ( Max( MDR,AMS ) + Min( MDR ,MRS ) ) - ( ( AMS / PN ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( CS * RMSe ) ) * ( ( RCSe + ( Max( RMSe,( RCSe - ( DS / DS ) ) ) / RCSe ) ) + ( MUR + CS ) ) ) / ( RRSe - ( RMSe - MUC ) ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( MDR + PN ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.9655172413793104, "obj2": 0.03029677747428741}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) / RRSe ) ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.24811812698800761}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.7145593869731801, "obj2": 0.17684418756161702}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ARS,FirstVNF_Mem ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MLU * ( Min( MLU ,RRSe ) * ( MUM + CS ) ) ) ) * ( MUM + CS ) )", "obj1": 0.9616858237547893, "obj2": 0.030726561240129787}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Min( FirstVNF_RAM_Server ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( ( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) * RCSe ) ,RCSe ) )", "obj1": 0.6226053639846744, "obj2": 0.26135276558217946}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + Max( DDR,DDR ) )", "choosing": "( ( DS * DS ) - ( RMSe / RRSe ) )", "obj1": 0.632183908045977, "obj2": 0.25416055322026787}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( Min( AMS ,( MRS * RRS ) ) - ( MDR / DDR ) )", "choosing": "( ( RMSe * Min( RMSe ,MUC ) ) * ( RMSe - RMSe ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - ( RMSe / RRSe ) )", "obj1": 0.632183908045977, "obj2": 0.25416055322026787}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) + Max( BR,DDR ) )", "choosing": "( ( DS * DS ) - RMSe )", "obj1": 0.6283524904214559, "obj2": 0.2575644522885506}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( RMSe * ( MUC * RCSe ) ) + RRSe ) )", "obj1": 0.6264367816091954, "obj2": 0.2585830287793749}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - ( DS * DS ) )", "obj1": 0.6245210727969349, "obj2": 0.2588991055857674}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( DS * DS ) ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.2588991055857674}, {"determining": "Min( Min( ( Max( Min( Max( ( ( CRS * BR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ),( ( BR / FirstVNF_CPU ) + Min( CRS ,FirstVNF_Mem ) ) ) ,( ( ( RRS - BR ) * ( MRS * FirstVNF_RAM ) ) - Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( RRS,MDR ) ) ) ),( ( Min( ( Const / ARS ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Max( Min( CRS ,MRS ),( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem * AMS ) ,( PN + ARS ) ),( Min( FirstVNF_Mem ,AMS ) + ( MRS * Const ) ) ) ) ) * ( ( Min( ( ( MRS + MDR ) / ( FirstVNF_Mem * ACS ) ) ,( ( ACS / FirstVNF_CPU ) * ( MRS * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem + ARS ) + ( AMS * AMS ) ) * ( ( ARS + AMS ) * ( AMS * FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( DDR / PN ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( MRS * CRS ) ,( FirstVNF_RAM_Server + ACS ) ) ) - Min( Min( Max( ACS,CRS ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_CPU ) * ( FirstVNF_Mem / CRS ) ) ) ) ) ) ,Max( ( ( Min( Max( ( FirstVNF_CPU_Server / MRS ),( FirstVNF_Mem_Server / Const ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / DDR ) ) * Min( ( CRS * ARS ) ,Min( Const ,FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_Mem_Server - Const ),Max( FirstVNF_CPU_Server,MDR ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - ( MRS / FirstVNF_Mem_Server ) ) ) - ( ( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - AMS ) ) - ( ( RRS - Const ) - ( FirstVNF_Mem_Server * PN ) ) ) ) ),( ( ( Min( ( FirstVNF_CPU / BR ) ,( ARS - CRS ) ) / ( ( FirstVNF_CPU_Server * Const ) + Min( PN ,MRS ) ) ) + ( ( ( AMS - MDR ) - ( BR + MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( CRS * PN ) ) ) ) * ( ( ( Max( MDR,RRS ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( MDR - RRS ) ) ) * ( ( Max( ACS,FirstVNF_Mem_Server ) * ( PN * ARS ) ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( PN ,ACS ) ) ) ) ) ) ) ,( ( ( Max( ( Min( Max( MDR,FirstVNF_RAM_Server ) ,( Const + BR ) ) * ( Max( AMS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + AMS ) ) ),( ( Min( BR ,Const ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) - ( Min( MRS ,ARS ) - ( BR + CRS ) ) ) ) * ( Min( ( ( PN * RRS ) * Min( CRS ,DDR ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ( AMS + ARS ) + Min( BR ,ARS ) ) + ( ( BR * FirstVNF_Mem_Server ) / Max( DDR,RRS ) ) ) ) ) + ( ( Max( ( ( DDR + AMS ) + ( MRS + PN ) ),( ( AMS * BR ) + ( CRS * PN ) ) ) - ( ( ( ACS * BR ) * ( PN / ACS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( Min( Const ,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,PN ) ) ),( Max( ( ACS - FirstVNF_RAM_Server ),Max( ARS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( ARS - FirstVNF_RAM ) ) ) ) ) ) / Max( ( ( ( Min( ( ACS - AMS ) ,( Const + BR ) ) + ( Max( AMS,FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * Min( ( Min( BR ,Const ) / ( FirstVNF_RAM_Server - ARS ) ) ,Max( ( MRS + RRS ),( FirstVNF_CPU - DDR ) ) ) ) - ( Max( ( ( AMS * Const ) + ( FirstVNF_CPU_Server - CRS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( MRS * FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_CPU * FirstVNF_CPU ) ) - ( ( ACS - FirstVNF_RAM_Server ) / ( AMS * FirstVNF_Mem_Server ) ) ) ) ),Min( ( ( ( ( ACS * ARS ) + ( PN + MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - ( FirstVNF_RAM / MRS ) ) ) * ( Max( Max( MRS,BR ),( BR + Const ) ) * ( ( DDR + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( AMS * ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) * Max( ( RRS + DDR ),( FirstVNF_Mem / ARS ) ) ) * ( ( Min( FirstVNF_Mem_Server ,ARS ) + Max( FirstVNF_Mem,AMS ) ) * ( ( CRS * FirstVNF_Mem ) * ( FirstVNF_CPU - DDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( Min( Max( ( ( DS * MLU ) * ( CS + RRSe ) ),Min( ( RRSe - CS ) ,( MUM - DS ) ) ) ,Max( ( ( MLU + CS ) + Min( RRSe ,DS ) ),Min( Max( DS,MUC ) ,Min( MUR ,RMSe ) ) ) ) + Max( ( ( Max( MLU,MUM ) * ( CS + CS ) ) + ( Min( DS ,MUC ) - ( RCSe + RMSe ) ) ),( ( Max( MUR,MUR ) * Max( RRSe,CS ) ) - Max( ( MUR * MUR ),Min( RCSe ,RMSe ) ) ) ) ),( ( ( ( ( MLU - MUM ) - ( MLU + DS ) ) - ( Max( RRSe,RRSe ) * ( MUC * DS ) ) ) - Max( Max( Max( CS,MUR ),Max( MUC,RRSe ) ),Max( ( MLU + MLU ),( MUC * RCSe ) ) ) ) * Min( Max( Min( ( MUR + MUC ) ,( MUR - DS ) ),Max( ( MUM / MUM ),( RMSe - DS ) ) ) ,Min( ( Max( CS,RCSe ) + ( RRSe / RRSe ) ) ,( Min( CS ,RMSe ) - ( MUR + RCSe ) ) ) ) ) ) - Max( ( ( Max( ( Max( RCSe,MUR ) * Max( DS,RMSe ) ),Max( ( MUC / RRSe ),( DS - RMSe ) ) ) * Max( ( Max( RMSe,MLU ) * ( DS / RCSe ) ),( ( RMSe + MUC ) + ( RMSe - MLU ) ) ) ) / Min( Min( ( ( DS * MUM ) * ( RCSe * DS ) ) ,( Min( MUC ,CS ) / ( MUR / RRSe ) ) ) ,( Min( Min( CS ,MUC ) ,( RMSe * CS ) ) - ( ( MUM + MLU ) + ( MUR + MUM ) ) ) ) ),Min( ( ( ( ( CS / MLU ) * ( MUM - RCSe ) ) * ( ( MUR - RCSe ) + ( RCSe - RMSe ) ) ) - ( Min( ( MUC - CS ) ,( CS + RRSe ) ) * Max( Min( CS ,RMSe ),( MUR - MUC ) ) ) ) ,Max( ( Max( ( DS / DS ),Min( RCSe ,MUM ) ) * ( Min( CS ,RCSe ) - ( RCSe + MUR ) ) ),Max( ( Max( CS,MUM ) * ( DS - MUC ) ),Max( Min( MUM ,DS ),( DS - MUR ) ) ) ) ) ) ) + ( Min( ( ( Min( ( ( RCSe / MLU ) - Min( CS ,MLU ) ) ,( Max( RCSe,MLU ) + ( RCSe - MUC ) ) ) * ( ( ( MUM + CS ) * Min( DS ,MLU ) ) - Min( Max( MUM,CS ) ,Min( MLU ,DS ) ) ) ) * ( Min( ( ( CS / RRSe ) * Max( RCSe,MUR ) ) ,( ( MUC + MUC ) - ( MUC + RMSe ) ) ) * ( Max( ( DS / MUC ),( RCSe - RMSe ) ) * ( ( CS * CS ) + ( CS + MUC ) ) ) ) ) ,( Max( Min( ( ( MUR * MUR ) / Min( RMSe ,MLU ) ) ,Min( ( MUM - CS ) ,( MUR - MUR ) ) ),( Min( ( DS + MUR ) ,Min( MUR ,RMSe ) ) * ( Max( MUR,MUR ) + Max( RRSe,RRSe ) ) ) ) + Min( Max( Max( Min( MLU ,DS ),( MUC / DS ) ),Min( ( RCSe + MLU ) ,( MLU + DS ) ) ) ,( Min( Max( MLU,MLU ) ,( MUC * DS ) ) * ( Min( MUM ,MUC ) * Min( MLU ,MLU ) ) ) ) ) ) + ( Max( ( Min( ( Max( MUR,RMSe ) * Max( MUR,DS ) ) ,( ( CS - RRSe ) * Max( RCSe,MLU ) ) ) / ( ( Max( MLU,RMSe ) / ( MUR + CS ) ) * ( Max( MLU,CS ) - ( CS * CS ) ) ) ),( ( ( Min( MLU ,MUR ) - ( DS / RMSe ) ) - ( ( RRSe + RCSe ) + ( MUM + DS ) ) ) + ( ( Max( MUM,RRSe ) - Min( RCSe ,RMSe ) ) / Max( ( MUM * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( Min( ( RMSe * MUR ) ,( MUR * CS ) ) - ( ( RCSe + MUM ) / ( DS + CS ) ) ) / ( Max( ( MUR / RMSe ),( MUM + MUC ) ) / ( Min( RMSe ,MUC ) * ( MUM / MUC ) ) ) ) + Max( Min( ( Max( MUM,MUC ) + ( DS * RMSe ) ) ,( ( MUM / CS ) * Min( MLU ,CS ) ) ),( Max( Max( MUC,MUR ),( MLU - RCSe ) ) * Max( ( MUC + RRSe ),Max( CS,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( FirstVNF_RAM - ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( Min( AMS ,ACS ) - CRS ) ) ) + MRS ) )", "choosing": "Min( ( Max( DS,MUM ) + CS ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( AMS - ( Min( ( ( MDR / MDR ) * ( FirstVNF_RAM / AMS ) ) ,( Min( CRS ,ARS ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) + Max( ( ( ARS + DDR ) + Min( PN ,BR ) ),( ( AMS - ACS ) - Max( RRS,CRS ) ) ) ) ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,BR ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * Max( ( AMS + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "Min( ( Max( Max( DS,RRSe ),Max( RMSe,MLU ) ) + ( ( MUR * RCSe ) / ( RRSe - RCSe ) ) ) ,Min( Min( ( CS + MUR ) ,( RMSe - MUR ) ) ,Min( Min( RCSe ,RRSe ) ,Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ARS ) + Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( MUM / RMSe ) - ( MUR / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / BR ) - ( ACS / FirstVNF_Mem_Server ) ) - ( ( Const + MDR ) + ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe + RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / CRS ) ) - ( Max( PN,Const ) - ( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RCSe + CS ) / ( CS - CS ) ) ,( ( RMSe * RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ARS / RRS ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS * RRSe ) ) / ( CS * ( RCSe + MUC ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe + ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( DS + ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUC * MLU ) * ( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( CRS,FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( Max( MLU,RRSe ) ,( MUC / RMSe ) ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe * CS ) + ( MLU / MLU ) ) * Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( ( MUC * RCSe ) * MUM ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( RRS / RRS ) - ( Min( Const ,PN ) - ( RRS - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - Min( DS ,MUM ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / RRS ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( MLU - ( MLU * MUC ) ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( Max( Min( ( ( ( ( ARS * AMS ) * ( FirstVNF_CPU_Server * MDR ) ) + ( ( AMS * FirstVNF_RAM_Server ) * ( MRS + CRS ) ) ) * ( Max( ( BR + RRS ),Max( FirstVNF_Mem,DDR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( FirstVNF_CPU,RRS ) ) ) ) ,( Max( ( ( FirstVNF_Mem_Server - PN ) * ( RRS + ACS ) ),( ( ACS + CRS ) / ( PN * BR ) ) ) / ( ( ( MRS + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,BR ) ) ) ) ),( ( ( ( ( MDR * AMS ) - Min( FirstVNF_RAM_Server ,BR ) ) + ( ( FirstVNF_RAM + CRS ) + Min( MDR ,AMS ) ) ) + Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( PN + RRS ) ),Max( ( PN / MDR ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) * ( Max( ( Min( ACS ,FirstVNF_RAM ) + ( FirstVNF_Mem + ACS ) ),( ( MRS / FirstVNF_RAM_Server ) + ( FirstVNF_RAM - MDR ) ) ) / ( Max( ( MDR / RRS ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / ( Const + PN ) ) ) ) ) ) / ( Min( ( ( Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS * RRS ) ) + Max( ( PN * FirstVNF_Mem_Server ),( MRS - FirstVNF_Mem ) ) ) + ( Min( ( MDR * PN ) ,( BR - DDR ) ) + ( Min( ACS ,BR ) - ( FirstVNF_RAM_Server + PN ) ) ) ) ,Min( ( ( ( FirstVNF_Mem_Server * BR ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( ( FirstVNF_RAM / AMS ),Min( DDR ,FirstVNF_RAM_Server ) ) ) ,( ( ( MRS * MDR ) + ( FirstVNF_CPU * CRS ) ) - ( ( ARS / DDR ) * Min( FirstVNF_Mem_Server ,ARS ) ) ) ) ) - ( ( ( Min( Min( PN ,PN ) ,Max( FirstVNF_CPU,BR ) ) * Max( Min( FirstVNF_RAM_Server ,RRS ),Min( PN ,CRS ) ) ) + Max( ( ( PN + Const ) * Min( ARS ,CRS ) ),Max( Min( BR ,FirstVNF_RAM_Server ),( FirstVNF_RAM * CRS ) ) ) ) - ( Max( Min( ( DDR + FirstVNF_Mem ) ,( DDR * ACS ) ),( Min( MRS ,ACS ) * ( DDR + FirstVNF_CPU_Server ) ) ) + Max( ( Min( CRS ,DDR ) - Min( CRS ,AMS ) ),( ( FirstVNF_CPU + PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) ) ) ) ) + ( Min( Max( ( ( ( ( Const - Const ) * ( Const + FirstVNF_RAM ) ) - ( ( RRS + AMS ) + ( DDR * FirstVNF_Mem ) ) ) / Max( Min( Max( ACS,DDR ) ,( ACS + MDR ) ),Min( ( FirstVNF_RAM_Server / BR ) ,( DDR + FirstVNF_Mem_Server ) ) ) ),( ( ( ( ACS + FirstVNF_CPU ) / ( DDR - ARS ) ) - Min( ( FirstVNF_Mem / PN ) ,( DDR - FirstVNF_Mem ) ) ) * ( ( ( MRS / RRS ) * ( BR * DDR ) ) - ( Min( CRS ,ACS ) * ( FirstVNF_RAM_Server + MRS ) ) ) ) ) ,Max( Min( ( Min( Min( RRS ,MRS ) ,( FirstVNF_RAM_Server - MDR ) ) / ( ( RRS - FirstVNF_Mem ) * ( DDR - FirstVNF_CPU ) ) ) ,( ( Min( AMS ,Const ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( BR,CRS ) ,Max( PN,FirstVNF_CPU ) ) ) ),( Min( Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,CRS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( MRS + ARS ) ) ) + ( ( ( FirstVNF_Mem + DDR ) - Max( Const,FirstVNF_Mem ) ) / ( Max( ACS,FirstVNF_Mem_Server ) - ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) / ( ( ( ( ( Max( PN,PN ) * ( FirstVNF_Mem + ARS ) ) / ( ( CRS + MRS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU / ARS ) / ( RRS * CRS ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),( CRS - PN ) ) ) ) - ( ( Min( ( FirstVNF_Mem - Const ) ,( RRS * CRS ) ) - Min( Min( AMS ,FirstVNF_CPU_Server ) ,( ACS / FirstVNF_CPU ) ) ) / Max( ( ( MDR + AMS ) + ( ARS * FirstVNF_CPU_Server ) ),( ( ACS / RRS ) - ( MRS * MRS ) ) ) ) ) / ( Max( ( ( ( RRS * FirstVNF_CPU ) - ( AMS - FirstVNF_Mem ) ) * ( Min( BR ,CRS ) * Max( FirstVNF_CPU,BR ) ) ),( Max( ( FirstVNF_CPU_Server + DDR ),( BR * FirstVNF_Mem ) ) / ( ( BR - MRS ) - ( RRS + RRS ) ) ) ) / ( Max( ( Min( RRS ,FirstVNF_RAM ) - ( ACS - FirstVNF_CPU ) ),( ( FirstVNF_Mem - BR ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) + ( Max( Min( ACS ,MDR ),( FirstVNF_CPU_Server - MDR ) ) * ( ( AMS * CRS ) - ( FirstVNF_RAM_Server - MDR ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( Min( ( RMSe - MUM ) ,( DS + DS ) ) - Max( ( DS - MUM ),Min( MLU ,MLU ) ) ) - ( Max( ( CS / DS ),( MUC - RMSe ) ) * Min( Max( RCSe,MLU ) ,Min( DS ,CS ) ) ) ) / Max( Min( ( ( MUC / CS ) / Min( RRSe ,RRSe ) ) ,( Max( MUR,DS ) / ( MUM - DS ) ) ),Max( ( ( MUM + MUR ) * Min( MUR ,MUC ) ),( ( MLU / DS ) * ( RMSe + MUR ) ) ) ) ),( ( Min( ( Min( RCSe ,CS ) / ( MUC + RMSe ) ) ,( ( RMSe - RMSe ) * ( MLU + MUM ) ) ) * Min( Max( ( RRSe / MUM ),( MUM * MUC ) ) ,( ( RMSe + DS ) / ( MUR - CS ) ) ) ) * ( ( ( ( DS / CS ) - Max( MLU,DS ) ) / ( Min( MUC ,MUM ) + Min( RCSe ,MUM ) ) ) + ( ( ( MLU - MUC ) / ( RRSe - RRSe ) ) + Min( ( MUC / MUM ) ,Min( CS ,RRSe ) ) ) ) ) ) - Min( ( ( ( Max( ( MLU - MUM ),( CS + RCSe ) ) + ( Max( MLU,CS ) + Max( MUR,RCSe ) ) ) * ( ( ( RMSe / RRSe ) * Max( DS,MLU ) ) * Max( ( CS - MUR ),( MUM + DS ) ) ) ) + ( ( Min( ( RRSe + DS ) ,Max( RCSe,CS ) ) * ( ( DS - DS ) + ( CS * RMSe ) ) ) + ( ( ( DS / DS ) / ( MUM + MUM ) ) / ( ( RMSe - RRSe ) - Max( MLU,RMSe ) ) ) ) ) ,( Min( ( Min( ( MUR - CS ) ,( CS + MUR ) ) - ( ( MUR - RRSe ) * ( RCSe * MUC ) ) ) ,( ( ( CS / DS ) / Max( CS,RRSe ) ) - ( Min( MLU ,RRSe ) - ( MUR - DS ) ) ) ) + ( ( ( Max( MLU,MUR ) * ( MUC / MUR ) ) + ( Min( MLU ,CS ) * ( MUC / CS ) ) ) / ( Min( Max( MUM,RCSe ) ,( MUR * RCSe ) ) - ( ( MUR + MUC ) - Min( RRSe ,RMSe ) ) ) ) ) ) ),( Min( ( ( Max( Min( Min( RCSe ,RCSe ) ,Max( MLU,MLU ) ),( ( DS + RMSe ) - Min( CS ,MLU ) ) ) + Max( ( ( MUR * MLU ) + ( RCSe - MLU ) ),( ( RCSe * MUC ) - Max( MUR,MLU ) ) ) ) + ( Min( ( ( CS - RMSe ) + ( DS - RRSe ) ) ,( ( MLU / MUC ) / ( RMSe - MUC ) ) ) * Min( Max( ( MUM / MUM ),( RMSe / RMSe ) ) ,( Min( RCSe ,DS ) + ( MLU + MUM ) ) ) ) ) ,( Max( ( ( ( RCSe / MUR ) * Min( MLU ,RMSe ) ) * ( ( DS + MUC ) - ( RCSe * MLU ) ) ),Max( Min( Max( MUM,MLU ) ,( RMSe - MUR ) ),Min( ( RMSe * CS ) ,( RCSe / RCSe ) ) ) ) + Max( ( ( ( CS * RMSe ) + ( MLU / RCSe ) ) * ( Min( CS ,MUM ) + Max( DS,RMSe ) ) ),( ( ( MLU / DS ) / ( MUM + MUC ) ) / Max( Max( CS,RMSe ),Max( RCSe,CS ) ) ) ) ) ) - ( ( Max( ( Max( ( MUR - MLU ),( RMSe + MLU ) ) * ( ( RCSe + DS ) * Min( RMSe ,MLU ) ) ),Min( Min( ( RRSe - RCSe ) ,( CS + RRSe ) ) ,( ( DS / RRSe ) * Min( RMSe ,MLU ) ) ) ) * Min( Min( ( Max( CS,MUC ) - ( RCSe / MUR ) ) ,( Max( RMSe,RMSe ) - ( RRSe + RRSe ) ) ) ,( ( ( MUC + MUM ) / ( RMSe + MUC ) ) / Max( ( MUM * MUM ),Max( RRSe,MUR ) ) ) ) ) + ( ( Max( ( ( MUR - RRSe ) - ( CS / RMSe ) ),( ( RMSe * CS ) / ( RRSe - RCSe ) ) ) - ( Min( ( DS + MUR ) ,Min( MLU ,RMSe ) ) * Max( ( RMSe / CS ),Min( MUC ,MLU ) ) ) ) + Min( Max( ( ( RRSe - MUM ) * ( DS / RMSe ) ),Min( ( CS - RCSe ) ,( RMSe - RMSe ) ) ) ,( Min( ( DS * MLU ) ,( RMSe - MUR ) ) + ( ( DS * MLU ) / ( MLU / MUC ) ) ) ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.016994495965002725}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) / RRSe ) ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.24811812698800761}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( MDR + PN ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.9655172413793104, "obj2": 0.03029677747428741}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ARS,FirstVNF_Mem ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MLU * ( Min( MLU ,RRSe ) * ( MUM + CS ) ) ) ) * ( MUM + CS ) )", "obj1": 0.9616858237547893, "obj2": 0.030726561240129787}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Max( ( ( ( Min( ( ( RRS + ARS ) * ( PN - RRS ) ) ,( ( BR + MRS ) - ( FirstVNF_CPU / ACS ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + ( MDR - ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,ACS ) ) ) ) / ( ( ( ( MRS * FirstVNF_CPU_Server ) / ( ARS + FirstVNF_Mem ) ) * ( ( ACS / CRS ) * ( BR - FirstVNF_CPU ) ) ) - ( ( ( MDR + MDR ) / Min( FirstVNF_RAM ,PN ) ) * Max( Max( MDR,Const ),( ARS + CRS ) ) ) ) ) - ( ( ( ( Min( PN ,ARS ) * ( BR - AMS ) ) * ( ( ACS + FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) + ( ( Min( MRS ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( RRS,FirstVNF_RAM_Server ) - ( Const + MDR ) ) ) ) / ( Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - ACS ) ),( ( AMS * DDR ) * Max( FirstVNF_Mem_Server,CRS ) ) ) + Min( Max( Max( ARS,MDR ),( ACS + Const ) ) ,Min( ( FirstVNF_RAM_Server / Const ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) ),( ( ( Max( ( Min( FirstVNF_RAM ,ACS ) / Max( FirstVNF_RAM,DDR ) ),Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( BR ,FirstVNF_Mem ) ) ) + Min( ( ( DDR - MDR ) * ( FirstVNF_Mem + ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( Const + FirstVNF_RAM_Server ) ) ) ) * Max( Min( ( ( AMS + MDR ) / Min( FirstVNF_Mem_Server ,BR ) ) ,( ( FirstVNF_Mem_Server - PN ) / Max( Const,MDR ) ) ),( ( ( Const / PN ) * ( MDR - Const ) ) * ( Min( PN ,PN ) - ( ARS + FirstVNF_Mem ) ) ) ) ) + ( ( Min( ( ( Const / FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( ( DDR * ACS ) + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( ARS + CRS ) ) + ( ( ACS / MDR ) - Max( ACS,PN ) ) ) ) / Min( ( Min( Max( FirstVNF_RAM_Server,DDR ) ,( AMS + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem / MDR ) / ( MRS + Const ) ) ) ,( ( ( MRS * CRS ) + Max( AMS,ARS ) ) / ( Max( AMS,PN ) - ( Const / BR ) ) ) ) ) ) ) * ( ( ( Min( Max( ( ( RRS + BR ) - Max( FirstVNF_CPU_Server,MDR ) ),Max( ( ACS * FirstVNF_Mem ),Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( ( ARS + FirstVNF_RAM_Server ) + Max( ARS,AMS ) ) ,( ( DDR * ARS ) * ( FirstVNF_CPU - DDR ) ) ) ) + Min( ( ( Max( FirstVNF_CPU,BR ) * ( BR + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server / MRS ) - ( MRS + MRS ) ) ) ,Max( Max( Max( MDR,PN ),Max( DDR,BR ) ),Min( ( RRS * AMS ) ,( DDR * BR ) ) ) ) ) + Min( ( Min( Min( ( MDR + DDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ,( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( ( ( RRS * FirstVNF_RAM_Server ) - ( AMS / CRS ) ) - Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,Min( RRS ,MDR ) ) ) ) ,( ( ( ( FirstVNF_CPU * RRS ) - ( ACS * FirstVNF_CPU ) ) + Min( ( PN / FirstVNF_CPU_Server ) ,( FirstVNF_Mem - ACS ) ) ) - Min( ( ( FirstVNF_Mem_Server * CRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ,Min( ( RRS + BR ) ,( PN - FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( Max( ( ( ( RRS - FirstVNF_RAM ) / ( FirstVNF_Mem_Server - CRS ) ) / ( ( MRS * FirstVNF_RAM ) * Max( AMS,FirstVNF_RAM_Server ) ) ),( Min( ( DDR - BR ) ,( RRS + FirstVNF_RAM ) ) * ( ( ACS + Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) ) ) + Max( Min( ( Min( Const ,MRS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU * ARS ) / ( MDR / FirstVNF_Mem ) ) ),Min( ( ( AMS - BR ) * ( ACS * FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) ) ,( ( ( Min( ( Const - DDR ) ,( FirstVNF_Mem - ACS ) ) + Max( ( MRS / MRS ),Min( Const ,MDR ) ) ) + Max( ( ( CRS / FirstVNF_RAM ) - ( Const * RRS ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( RRS / CRS ) ) ) ) + Min( ( ( ( FirstVNF_CPU_Server / MRS ) + Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + MDR ) - ( FirstVNF_Mem_Server - DDR ) ) ) ,( ( Max( MDR,AMS ) + Min( MDR ,MRS ) ) - ( ( AMS / PN ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( CS * RMSe ) ) * ( ( RCSe + ( Max( RMSe,( RCSe - ( DS / DS ) ) ) / RCSe ) ) + ( MUR + CS ) ) ) / ( RRSe - ( RMSe - MUC ) ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( FirstVNF_RAM_Server ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( ( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) * RCSe ) ,RCSe ) )", "obj1": 0.6226053639846744, "obj2": 0.26135276558217946}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - ( RMSe / RRSe ) )", "obj1": 0.632183908045977, "obj2": 0.25416055322026787}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7203065134099617, "obj2": 0.16343615691669205}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + Max( DDR,DDR ) )", "choosing": "( ( DS * DS ) - ( RMSe / RRSe ) )", "obj1": 0.632183908045977, "obj2": 0.25416055322026787}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) + Max( BR,DDR ) )", "choosing": "( ( DS * DS ) - RMSe )", "obj1": 0.6283524904214559, "obj2": 0.2575644522885506}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS - CS ) ) ,( ( RMSe * ( MUC * RCSe ) ) + RRSe ) )", "obj1": 0.6264367816091954, "obj2": 0.2585830287793749}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( DS * DS ) ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.2588991055857674}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - ( DS * DS ) )", "obj1": 0.6245210727969349, "obj2": 0.2588991055857674}, {"determining": "( RRS - ( ( Const * PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( Min( Max( ( ( CRS * BR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ),( ( BR / FirstVNF_CPU ) + Min( CRS ,FirstVNF_Mem ) ) ) ,( ( ( RRS - BR ) * ( MRS * FirstVNF_RAM ) ) - Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( RRS,MDR ) ) ) ),( ( Min( ( Const / ARS ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Max( Min( CRS ,MRS ),( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem * AMS ) ,( PN + ARS ) ),( Min( FirstVNF_Mem ,AMS ) + ( MRS * Const ) ) ) ) ) * ( ( Min( ( ( MRS + MDR ) / ( FirstVNF_Mem * ACS ) ) ,( ( ACS / FirstVNF_CPU ) * ( MRS * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem + ARS ) + ( AMS * AMS ) ) * ( ( ARS + AMS ) * ( AMS * FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( DDR / PN ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( MRS * CRS ) ,( FirstVNF_RAM_Server + ACS ) ) ) - Min( Min( Max( ACS,CRS ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_CPU ) * ( FirstVNF_Mem / CRS ) ) ) ) ) ) ,Max( ( ( Min( Max( ( FirstVNF_CPU_Server / MRS ),( FirstVNF_Mem_Server / Const ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / DDR ) ) * Min( ( CRS * ARS ) ,Min( Const ,FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_Mem_Server - Const ),Max( FirstVNF_CPU_Server,MDR ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - ( MRS / FirstVNF_Mem_Server ) ) ) - ( ( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - AMS ) ) - ( ( RRS - Const ) - ( FirstVNF_Mem_Server * PN ) ) ) ) ),( ( ( Min( ( FirstVNF_CPU / BR ) ,( ARS - CRS ) ) / ( ( FirstVNF_CPU_Server * Const ) + Min( PN ,MRS ) ) ) + ( ( ( AMS - MDR ) - ( BR + MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( CRS * PN ) ) ) ) * ( ( ( Max( MDR,RRS ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( MDR - RRS ) ) ) * ( ( Max( ACS,FirstVNF_Mem_Server ) * ( PN * ARS ) ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( PN ,ACS ) ) ) ) ) ) ) ,( ( ( Max( ( Min( Max( MDR,FirstVNF_RAM_Server ) ,( Const + BR ) ) * ( Max( AMS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + AMS ) ) ),( ( Min( BR ,Const ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) - ( Min( MRS ,ARS ) - ( BR + CRS ) ) ) ) * ( Min( ( ( PN * RRS ) * Min( CRS ,DDR ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ( AMS + ARS ) + Min( BR ,ARS ) ) + ( ( BR * FirstVNF_Mem_Server ) / Max( DDR,RRS ) ) ) ) ) + ( ( Max( ( ( DDR + AMS ) + ( MRS + PN ) ),( ( AMS * BR ) + ( CRS * PN ) ) ) - ( ( ( ACS * BR ) * ( PN / ACS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( Min( Const ,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,PN ) ) ),( Max( ( ACS - FirstVNF_RAM_Server ),Max( ARS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( ARS - FirstVNF_RAM ) ) ) ) ) ) / Max( ( ( ( Min( ( ACS - AMS ) ,( Const + BR ) ) + ( Max( AMS,FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * Min( ( Min( BR ,Const ) / ( FirstVNF_RAM_Server - ARS ) ) ,Max( ( MRS + RRS ),( FirstVNF_CPU - DDR ) ) ) ) - ( Max( ( ( AMS * Const ) + ( FirstVNF_CPU_Server - CRS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( MRS * FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_CPU * FirstVNF_CPU ) ) - ( ( ACS - FirstVNF_RAM_Server ) / ( AMS * FirstVNF_Mem_Server ) ) ) ) ),Min( ( ( ( ( ACS * ARS ) + ( PN + MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - ( FirstVNF_RAM / MRS ) ) ) * ( Max( Max( MRS,BR ),( BR + Const ) ) * ( ( DDR + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( AMS * ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) * Max( ( RRS + DDR ),( FirstVNF_Mem / ARS ) ) ) * ( ( Min( FirstVNF_Mem_Server ,ARS ) + Max( FirstVNF_Mem,AMS ) ) * ( ( CRS * FirstVNF_Mem ) * ( FirstVNF_CPU - DDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( Min( Max( ( ( DS * MLU ) * ( CS + RRSe ) ),Min( ( RRSe - CS ) ,( MUM - DS ) ) ) ,Max( ( ( MLU + CS ) + Min( RRSe ,DS ) ),Min( Max( DS,MUC ) ,Min( MUR ,RMSe ) ) ) ) + Max( ( ( Max( MLU,MUM ) * ( CS + CS ) ) + ( Min( DS ,MUC ) - ( RCSe + RMSe ) ) ),( ( Max( MUR,MUR ) * Max( RRSe,CS ) ) - Max( ( MUR * MUR ),Min( RCSe ,RMSe ) ) ) ) ),( ( ( ( ( MLU - MUM ) - ( MLU + DS ) ) - ( Max( RRSe,RRSe ) * ( MUC * DS ) ) ) - Max( Max( Max( CS,MUR ),Max( MUC,RRSe ) ),Max( ( MLU + MLU ),( MUC * RCSe ) ) ) ) * Min( Max( Min( ( MUR + MUC ) ,( MUR - DS ) ),Max( ( MUM / MUM ),( RMSe - DS ) ) ) ,Min( ( Max( CS,RCSe ) + ( RRSe / RRSe ) ) ,( Min( CS ,RMSe ) - ( MUR + RCSe ) ) ) ) ) ) - Max( ( ( Max( ( Max( RCSe,MUR ) * Max( DS,RMSe ) ),Max( ( MUC / RRSe ),( DS - RMSe ) ) ) * Max( ( Max( RMSe,MLU ) * ( DS / RCSe ) ),( ( RMSe + MUC ) + ( RMSe - MLU ) ) ) ) / Min( Min( ( ( DS * MUM ) * ( RCSe * DS ) ) ,( Min( MUC ,CS ) / ( MUR / RRSe ) ) ) ,( Min( Min( CS ,MUC ) ,( RMSe * CS ) ) - ( ( MUM + MLU ) + ( MUR + MUM ) ) ) ) ),Min( ( ( ( ( CS / MLU ) * ( MUM - RCSe ) ) * ( ( MUR - RCSe ) + ( RCSe - RMSe ) ) ) - ( Min( ( MUC - CS ) ,( CS + RRSe ) ) * Max( Min( CS ,RMSe ),( MUR - MUC ) ) ) ) ,Max( ( Max( ( DS / DS ),Min( RCSe ,MUM ) ) * ( Min( CS ,RCSe ) - ( RCSe + MUR ) ) ),Max( ( Max( CS,MUM ) * ( DS - MUC ) ),Max( Min( MUM ,DS ),( DS - MUR ) ) ) ) ) ) ) + ( Min( ( ( Min( ( ( RCSe / MLU ) - Min( CS ,MLU ) ) ,( Max( RCSe,MLU ) + ( RCSe - MUC ) ) ) * ( ( ( MUM + CS ) * Min( DS ,MLU ) ) - Min( Max( MUM,CS ) ,Min( MLU ,DS ) ) ) ) * ( Min( ( ( CS / RRSe ) * Max( RCSe,MUR ) ) ,( ( MUC + MUC ) - ( MUC + RMSe ) ) ) * ( Max( ( DS / MUC ),( RCSe - RMSe ) ) * ( ( CS * CS ) + ( CS + MUC ) ) ) ) ) ,( Max( Min( ( ( MUR * MUR ) / Min( RMSe ,MLU ) ) ,Min( ( MUM - CS ) ,( MUR - MUR ) ) ),( Min( ( DS + MUR ) ,Min( MUR ,RMSe ) ) * ( Max( MUR,MUR ) + Max( RRSe,RRSe ) ) ) ) + Min( Max( Max( Min( MLU ,DS ),( MUC / DS ) ),Min( ( RCSe + MLU ) ,( MLU + DS ) ) ) ,( Min( Max( MLU,MLU ) ,( MUC * DS ) ) * ( Min( MUM ,MUC ) * Min( MLU ,MLU ) ) ) ) ) ) + ( Max( ( Min( ( Max( MUR,RMSe ) * Max( MUR,DS ) ) ,( ( CS - RRSe ) * Max( RCSe,MLU ) ) ) / ( ( Max( MLU,RMSe ) / ( MUR + CS ) ) * ( Max( MLU,CS ) - ( CS * CS ) ) ) ),( ( ( Min( MLU ,MUR ) - ( DS / RMSe ) ) - ( ( RRSe + RCSe ) + ( MUM + DS ) ) ) + ( ( Max( MUM,RRSe ) - Min( RCSe ,RMSe ) ) / Max( ( MUM * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( Min( ( RMSe * MUR ) ,( MUR * CS ) ) - ( ( RCSe + MUM ) / ( DS + CS ) ) ) / ( Max( ( MUR / RMSe ),( MUM + MUC ) ) / ( Min( RMSe ,MUC ) * ( MUM / MUC ) ) ) ) + Max( Min( ( Max( MUM,MUC ) + ( DS * RMSe ) ) ,( ( MUM / CS ) * Min( MLU ,CS ) ) ),( Max( Max( MUC,MUR ),( MLU - RCSe ) ) * Max( ( MUC + RRSe ),Max( CS,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( FirstVNF_RAM - ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( Min( AMS ,ACS ) - CRS ) ) ) + MRS ) )", "choosing": "Min( ( Max( DS,MUM ) + CS ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( AMS - ( Min( ( ( MDR / MDR ) * ( FirstVNF_RAM / AMS ) ) ,( Min( CRS ,ARS ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) + Max( ( ( ARS + DDR ) + Min( PN ,BR ) ),( ( AMS - ACS ) - Max( RRS,CRS ) ) ) ) ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,BR ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * Max( ( AMS + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "Min( ( Max( Max( DS,RRSe ),Max( RMSe,MLU ) ) + ( ( MUR * RCSe ) / ( RRSe - RCSe ) ) ) ,Min( Min( ( CS + MUR ) ,( RMSe - MUR ) ) ,Min( Min( RCSe ,RRSe ) ,Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ARS ) + Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( MUM / RMSe ) - ( MUR / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / BR ) - ( ACS / FirstVNF_Mem_Server ) ) - ( ( Const + MDR ) + ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe + RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / CRS ) ) - ( Max( PN,Const ) - ( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RCSe + CS ) / ( CS - CS ) ) ,( ( RMSe * RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ARS / RRS ) ) - Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS * RRSe ) ) / ( CS * ( RCSe + MUC ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe + ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( DS + ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( RRS / RRS ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,( Min( ( Const - RRS ) ,MDR ) - ACS ) ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( Min( Const ,PN ) - ( RRS - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - Min( DS ,MUM ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( RRSe,CS ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.842911877394636, "obj2": 0.07919203586664415}, {"determining": "( Max( ( ( ( Min( ( ( RRS + ARS ) * ( PN - RRS ) ) ,( ( BR + MRS ) - ( FirstVNF_CPU / ACS ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + ( MDR - ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,ACS ) ) ) ) / ( ( ( ( MRS * FirstVNF_CPU_Server ) / ( ARS + FirstVNF_Mem ) ) * ( ( ACS / CRS ) * ( BR - FirstVNF_CPU ) ) ) - ( ( ( MDR + MDR ) / Min( FirstVNF_RAM ,PN ) ) * Max( Max( MDR,Const ),( ARS + CRS ) ) ) ) ) - ( ( ( ( Min( PN ,ARS ) * ( BR - AMS ) ) * ( ( ACS + FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) + ( ( Min( MRS ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( RRS,FirstVNF_RAM_Server ) - ( Const + MDR ) ) ) ) / ( Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - ACS ) ),( ( AMS * DDR ) * Max( FirstVNF_Mem_Server,CRS ) ) ) + Min( Max( Max( ARS,MDR ),( ACS + Const ) ) ,Min( ( FirstVNF_RAM_Server / Const ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) ),( ( ( Max( ( Min( FirstVNF_RAM ,ACS ) / Max( FirstVNF_RAM,DDR ) ),Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( BR ,FirstVNF_Mem ) ) ) + Min( ( ( DDR - MDR ) * ( FirstVNF_Mem + ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( Const + FirstVNF_RAM_Server ) ) ) ) * Max( Min( ( ( AMS + MDR ) / Min( FirstVNF_Mem_Server ,BR ) ) ,( ( FirstVNF_Mem_Server - PN ) / Max( Const,MDR ) ) ),( ( ( Const / PN ) * ( MDR - Const ) ) * ( Min( PN ,PN ) - ( ARS + FirstVNF_Mem ) ) ) ) ) + ( ( Min( ( ( Const / FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( ( DDR * ACS ) + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( ARS + CRS ) ) + ( ( ACS / MDR ) - Max( ACS,PN ) ) ) ) / Min( ( Min( Max( FirstVNF_RAM_Server,DDR ) ,( AMS + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem / MDR ) / ( MRS + Const ) ) ) ,( ( ( MRS * CRS ) + Max( AMS,ARS ) ) / ( Max( AMS,PN ) - ( Const / BR ) ) ) ) ) ) ) * ( ( ( Min( Max( ( ( RRS + BR ) - Max( FirstVNF_CPU_Server,MDR ) ),Max( ( ACS * FirstVNF_Mem ),Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( ( ARS + FirstVNF_RAM_Server ) + Max( ARS,AMS ) ) ,( ( DDR * ARS ) * ( FirstVNF_CPU - DDR ) ) ) ) + Min( ( ( Max( FirstVNF_CPU,BR ) * ( BR + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server / MRS ) - ( MRS + MRS ) ) ) ,Max( Max( Max( MDR,PN ),Max( DDR,BR ) ),Min( ( RRS * AMS ) ,( DDR * BR ) ) ) ) ) + Min( ( Min( Min( ( MDR + DDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ,( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( ( ( RRS * FirstVNF_RAM_Server ) - ( AMS / CRS ) ) - Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,Min( RRS ,MDR ) ) ) ) ,( ( ( ( FirstVNF_CPU * RRS ) - ( ACS * FirstVNF_CPU ) ) + Min( ( PN / FirstVNF_CPU_Server ) ,( FirstVNF_Mem - ACS ) ) ) - Min( ( ( FirstVNF_Mem_Server * CRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ,Min( ( RRS + BR ) ,( PN - FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( Max( ( ( ( RRS - FirstVNF_RAM ) / ( FirstVNF_Mem_Server - CRS ) ) / ( ( MRS * FirstVNF_RAM ) * Max( AMS,FirstVNF_RAM_Server ) ) ),( Min( ( DDR - BR ) ,( RRS + FirstVNF_RAM ) ) * ( ( ACS + Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) ) ) + Max( Min( ( Min( Const ,MRS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU * ARS ) / ( MDR / FirstVNF_Mem ) ) ),Min( ( ( AMS - BR ) * ( ACS * FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) ) ,( ( ( Min( ( Const - DDR ) ,( FirstVNF_Mem - ACS ) ) + Max( ( MRS / MRS ),Min( Const ,MDR ) ) ) + Max( ( ( CRS / FirstVNF_RAM ) - ( Const * RRS ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( RRS / CRS ) ) ) ) + Min( ( ( ( FirstVNF_CPU_Server / MRS ) + Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + MDR ) - ( FirstVNF_Mem_Server - DDR ) ) ) ,( ( Max( MDR,AMS ) + Min( MDR ,MRS ) ) - ( ( AMS / PN ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( CS * RMSe ) ) * ( ( RCSe + ( Max( RMSe,( RCSe - ( DS / DS ) ) ) / RCSe ) ) + ( MUR + CS ) ) ) / ( RRSe - ( RMSe - MUC ) ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( Min( AMS ,( MRS * RRS ) ) - ( MDR / DDR ) )", "choosing": "( ( RMSe * Min( RMSe ,MUC ) ) * ( RMSe - RMSe ) )", "obj1": 0.9578544061302682, "obj2": 0.015315312123361456}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) / RRSe ) ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.24811812698800761}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04821196166821172}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Min( AMS ,( MRS * RRS ) ) - ( MDR / DDR ) )", "choosing": "( ( RMSe * Min( RMSe ,MUC ) ) * ( RMSe - RMSe ) )", "obj1": 0.9578544061302682, "obj2": 0.015315312123361456}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM / RRS ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( MLU * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.685823754789272, "obj2": 0.19662706051915838}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( ( BR / Const ) + ( BR / Const ) )", "choosing": "( ( DS * ( MLU - MUM ) ) - ( ( DS * ( MLU - MUM ) ) / DS ) )", "obj1": 0.6149425287356322, "obj2": 0.2690934042373837}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + Max( DDR,DDR ) )", "choosing": "( ( DS * DS ) - ( RMSe / RRSe ) )", "obj1": 0.632183908045977, "obj2": 0.25416055322026787}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - ( RMSe / RRSe ) )", "obj1": 0.632183908045977, "obj2": 0.25416055322026787}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( MLU - ( MLU * MUC ) ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7203065134099617, "obj2": 0.16343615691669205}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( ( RRS / RRS ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( ( Const * PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( Min( Max( ( ( CRS * BR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ),( ( BR / FirstVNF_CPU ) + Min( CRS ,FirstVNF_Mem ) ) ) ,( ( ( RRS - BR ) * ( MRS * FirstVNF_RAM ) ) - Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( RRS,MDR ) ) ) ),( ( Min( ( Const / ARS ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Max( Min( CRS ,MRS ),( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem * AMS ) ,( PN + ARS ) ),( Min( FirstVNF_Mem ,AMS ) + ( MRS * Const ) ) ) ) ) * ( ( Min( ( ( MRS + MDR ) / ( FirstVNF_Mem * ACS ) ) ,( ( ACS / FirstVNF_CPU ) * ( MRS * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem + ARS ) + ( AMS * AMS ) ) * ( ( ARS + AMS ) * ( AMS * FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( DDR / PN ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( MRS * CRS ) ,( FirstVNF_RAM_Server + ACS ) ) ) - Min( Min( Max( ACS,CRS ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_CPU ) * ( FirstVNF_Mem / CRS ) ) ) ) ) ) ,Max( ( ( Min( Max( ( FirstVNF_CPU_Server / MRS ),( FirstVNF_Mem_Server / Const ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / DDR ) ) * Min( ( CRS * ARS ) ,Min( Const ,FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_Mem_Server - Const ),Max( FirstVNF_CPU_Server,MDR ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - ( MRS / FirstVNF_Mem_Server ) ) ) - ( ( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - AMS ) ) - ( ( RRS - Const ) - ( FirstVNF_Mem_Server * PN ) ) ) ) ),( ( ( Min( ( FirstVNF_CPU / BR ) ,( ARS - CRS ) ) / ( ( FirstVNF_CPU_Server * Const ) + Min( PN ,MRS ) ) ) + ( ( ( AMS - MDR ) - ( BR + MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( CRS * PN ) ) ) ) * ( ( ( Max( MDR,RRS ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( MDR - RRS ) ) ) * ( ( Max( ACS,FirstVNF_Mem_Server ) * ( PN * ARS ) ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( PN ,ACS ) ) ) ) ) ) ) ,( ( ( Max( ( Min( Max( MDR,FirstVNF_RAM_Server ) ,( Const + BR ) ) * ( Max( AMS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + AMS ) ) ),( ( Min( BR ,Const ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) - ( Min( MRS ,ARS ) - ( BR + CRS ) ) ) ) * ( Min( ( ( PN * RRS ) * Min( CRS ,DDR ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ( AMS + ARS ) + Min( BR ,ARS ) ) + ( ( BR * FirstVNF_Mem_Server ) / Max( DDR,RRS ) ) ) ) ) + ( ( Max( ( ( DDR + AMS ) + ( MRS + PN ) ),( ( AMS * BR ) + ( CRS * PN ) ) ) - ( ( ( ACS * BR ) * ( PN / ACS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( Min( Const ,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,PN ) ) ),( Max( ( ACS - FirstVNF_RAM_Server ),Max( ARS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( ARS - FirstVNF_RAM ) ) ) ) ) ) / Max( ( ( ( Min( ( ACS - AMS ) ,( Const + BR ) ) + ( Max( AMS,FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * Min( ( Min( BR ,Const ) / ( FirstVNF_RAM_Server - ARS ) ) ,Max( ( MRS + RRS ),( FirstVNF_CPU - DDR ) ) ) ) - ( Max( ( ( AMS * Const ) + ( FirstVNF_CPU_Server - CRS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( MRS * FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_CPU * FirstVNF_CPU ) ) - ( ( ACS - FirstVNF_RAM_Server ) / ( AMS * FirstVNF_Mem_Server ) ) ) ) ),Min( ( ( ( ( ACS * ARS ) + ( PN + MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - ( FirstVNF_RAM / MRS ) ) ) * ( Max( Max( MRS,BR ),( BR + Const ) ) * ( ( DDR + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( AMS * ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) * Max( ( RRS + DDR ),( FirstVNF_Mem / ARS ) ) ) * ( ( Min( FirstVNF_Mem_Server ,ARS ) + Max( FirstVNF_Mem,AMS ) ) * ( ( CRS * FirstVNF_Mem ) * ( FirstVNF_CPU - DDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( Min( Max( ( ( DS * MLU ) * ( CS + RRSe ) ),Min( ( RRSe - CS ) ,( MUM - DS ) ) ) ,Max( ( ( MLU + CS ) + Min( RRSe ,DS ) ),Min( Max( DS,MUC ) ,Min( MUR ,RMSe ) ) ) ) + Max( ( ( Max( MLU,MUM ) * ( CS + CS ) ) + ( Min( DS ,MUC ) - ( RCSe + RMSe ) ) ),( ( Max( MUR,MUR ) * Max( RRSe,CS ) ) - Max( ( MUR * MUR ),Min( RCSe ,RMSe ) ) ) ) ),( ( ( ( ( MLU - MUM ) - ( MLU + DS ) ) - ( Max( RRSe,RRSe ) * ( MUC * DS ) ) ) - Max( Max( Max( CS,MUR ),Max( MUC,RRSe ) ),Max( ( MLU + MLU ),( MUC * RCSe ) ) ) ) * Min( Max( Min( ( MUR + MUC ) ,( MUR - DS ) ),Max( ( MUM / MUM ),( RMSe - DS ) ) ) ,Min( ( Max( CS,RCSe ) + ( RRSe / RRSe ) ) ,( Min( CS ,RMSe ) - ( MUR + RCSe ) ) ) ) ) ) - Max( ( ( Max( ( Max( RCSe,MUR ) * Max( DS,RMSe ) ),Max( ( MUC / RRSe ),( DS - RMSe ) ) ) * Max( ( Max( RMSe,MLU ) * ( DS / RCSe ) ),( ( RMSe + MUC ) + ( RMSe - MLU ) ) ) ) / Min( Min( ( ( DS * MUM ) * ( RCSe * DS ) ) ,( Min( MUC ,CS ) / ( MUR / RRSe ) ) ) ,( Min( Min( CS ,MUC ) ,( RMSe * CS ) ) - ( ( MUM + MLU ) + ( MUR + MUM ) ) ) ) ),Min( ( ( ( ( CS / MLU ) * ( MUM - RCSe ) ) * ( ( MUR - RCSe ) + ( RCSe - RMSe ) ) ) - ( Min( ( MUC - CS ) ,( CS + RRSe ) ) * Max( Min( CS ,RMSe ),( MUR - MUC ) ) ) ) ,Max( ( Max( ( DS / DS ),Min( RCSe ,MUM ) ) * ( Min( CS ,RCSe ) - ( RCSe + MUR ) ) ),Max( ( Max( CS,MUM ) * ( DS - MUC ) ),Max( Min( MUM ,DS ),( DS - MUR ) ) ) ) ) ) ) + ( Min( ( ( Min( ( ( RCSe / MLU ) - Min( CS ,MLU ) ) ,( Max( RCSe,MLU ) + ( RCSe - MUC ) ) ) * ( ( ( MUM + CS ) * Min( DS ,MLU ) ) - Min( Max( MUM,CS ) ,Min( MLU ,DS ) ) ) ) * ( Min( ( ( CS / RRSe ) * Max( RCSe,MUR ) ) ,( ( MUC + MUC ) - ( MUC + RMSe ) ) ) * ( Max( ( DS / MUC ),( RCSe - RMSe ) ) * ( ( CS * CS ) + ( CS + MUC ) ) ) ) ) ,( Max( Min( ( ( MUR * MUR ) / Min( RMSe ,MLU ) ) ,Min( ( MUM - CS ) ,( MUR - MUR ) ) ),( Min( ( DS + MUR ) ,Min( MUR ,RMSe ) ) * ( Max( MUR,MUR ) + Max( RRSe,RRSe ) ) ) ) + Min( Max( Max( Min( MLU ,DS ),( MUC / DS ) ),Min( ( RCSe + MLU ) ,( MLU + DS ) ) ) ,( Min( Max( MLU,MLU ) ,( MUC * DS ) ) * ( Min( MUM ,MUC ) * Min( MLU ,MLU ) ) ) ) ) ) + ( Max( ( Min( ( Max( MUR,RMSe ) * Max( MUR,DS ) ) ,( ( CS - RRSe ) * Max( RCSe,MLU ) ) ) / ( ( Max( MLU,RMSe ) / ( MUR + CS ) ) * ( Max( MLU,CS ) - ( CS * CS ) ) ) ),( ( ( Min( MLU ,MUR ) - ( DS / RMSe ) ) - ( ( RRSe + RCSe ) + ( MUM + DS ) ) ) + ( ( Max( MUM,RRSe ) - Min( RCSe ,RMSe ) ) / Max( ( MUM * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( Min( ( RMSe * MUR ) ,( MUR * CS ) ) - ( ( RCSe + MUM ) / ( DS + CS ) ) ) / ( Max( ( MUR / RMSe ),( MUM + MUC ) ) / ( Min( RMSe ,MUC ) * ( MUM / MUC ) ) ) ) + Max( Min( ( Max( MUM,MUC ) + ( DS * RMSe ) ) ,( ( MUM / CS ) * Min( MLU ,CS ) ) ),( Max( Max( MUC,MUR ),( MLU - RCSe ) ) * Max( ( MUC + RRSe ),Max( CS,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( FirstVNF_RAM - ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( Min( AMS ,ACS ) - CRS ) ) ) + MRS ) )", "choosing": "Min( ( Max( DS,MUM ) + CS ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( AMS - ( Min( ( ( MDR / MDR ) * ( FirstVNF_RAM / AMS ) ) ,( Min( CRS ,ARS ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) + Max( ( ( ARS + DDR ) + Min( PN ,BR ) ),( ( AMS - ACS ) - Max( RRS,CRS ) ) ) ) ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,BR ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * Max( ( AMS + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "Min( ( Max( Max( DS,RRSe ),Max( RMSe,MLU ) ) + ( ( MUR * RCSe ) / ( RRSe - RCSe ) ) ) ,Min( Min( ( CS + MUR ) ,( RMSe - MUR ) ) ,Min( Min( RCSe ,RRSe ) ,Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ARS ) + Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( MUM / RMSe ) - ( MUR / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / BR ) - ( ACS / FirstVNF_Mem_Server ) ) - ( ( Const + MDR ) + ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe + RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / CRS ) ) - ( Max( PN,Const ) - ( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RCSe + CS ) / ( CS - CS ) ) ,( ( RMSe * RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - ( ARS / Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + MUR ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ARS - ( CRS + ARS ) )", "choosing": "Max( ( MUC - ( Min( MLU ,MUC ) / Min( RRSe ,MLU ) ) ),( MUC + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,( Min( ( Const - RRS ) ,MDR ) - ACS ) ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7720306513409961, "obj2": 0.13103712387198224}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( RRSe,CS ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.842911877394636, "obj2": 0.07919203586664415}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04821196166821172}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,MUM ) * ( MUM - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010974715159536262}, {"determining": "( Max( ( ( ( Min( ( ( RRS + ARS ) * ( PN - RRS ) ) ,( ( BR + MRS ) - ( FirstVNF_CPU / ACS ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + ( MDR - ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,ACS ) ) ) ) / ( ( ( ( MRS * FirstVNF_CPU_Server ) / ( ARS + FirstVNF_Mem ) ) * ( ( ACS / CRS ) * ( BR - FirstVNF_CPU ) ) ) - ( ( ( MDR + MDR ) / Min( FirstVNF_RAM ,PN ) ) * Max( Max( MDR,Const ),( ARS + CRS ) ) ) ) ) - ( ( ( ( Min( PN ,ARS ) * ( BR - AMS ) ) * ( ( ACS + FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) + ( ( Min( MRS ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( RRS,FirstVNF_RAM_Server ) - ( Const + MDR ) ) ) ) / ( Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - ACS ) ),( ( AMS * DDR ) * Max( FirstVNF_Mem_Server,CRS ) ) ) + Min( Max( Max( ARS,MDR ),( ACS + Const ) ) ,Min( ( FirstVNF_RAM_Server / Const ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) ),( ( ( Max( ( Min( FirstVNF_RAM ,ACS ) / Max( FirstVNF_RAM,DDR ) ),Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( BR ,FirstVNF_Mem ) ) ) + Min( ( ( DDR - MDR ) * ( FirstVNF_Mem + ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( Const + FirstVNF_RAM_Server ) ) ) ) * Max( Min( ( ( AMS + MDR ) / Min( FirstVNF_Mem_Server ,BR ) ) ,( ( FirstVNF_Mem_Server - PN ) / Max( Const,MDR ) ) ),( ( ( Const / PN ) * ( MDR - Const ) ) * ( Min( PN ,PN ) - ( ARS + FirstVNF_Mem ) ) ) ) ) + ( ( Min( ( ( Const / FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( ( DDR * ACS ) + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( ARS + CRS ) ) + ( ( ACS / MDR ) - Max( ACS,PN ) ) ) ) / Min( ( Min( Max( FirstVNF_RAM_Server,DDR ) ,( AMS + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem / MDR ) / ( MRS + Const ) ) ) ,( ( ( MRS * CRS ) + Max( AMS,ARS ) ) / ( Max( AMS,PN ) - ( Const / BR ) ) ) ) ) ) ) * ( ( ( Min( Max( ( ( RRS + BR ) - Max( FirstVNF_CPU_Server,MDR ) ),Max( ( ACS * FirstVNF_Mem ),Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( ( ARS + FirstVNF_RAM_Server ) + Max( ARS,AMS ) ) ,( ( DDR * ARS ) * ( FirstVNF_CPU - DDR ) ) ) ) + Min( ( ( Max( FirstVNF_CPU,BR ) * ( BR + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server / MRS ) - ( MRS + MRS ) ) ) ,Max( Max( Max( MDR,PN ),Max( DDR,BR ) ),Min( ( RRS * AMS ) ,( DDR * BR ) ) ) ) ) + Min( ( Min( Min( ( MDR + DDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ,( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( ( ( RRS * FirstVNF_RAM_Server ) - ( AMS / CRS ) ) - Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,Min( RRS ,MDR ) ) ) ) ,( ( ( ( FirstVNF_CPU * RRS ) - ( ACS * FirstVNF_CPU ) ) + Min( ( PN / FirstVNF_CPU_Server ) ,( FirstVNF_Mem - ACS ) ) ) - Min( ( ( FirstVNF_Mem_Server * CRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ,Min( ( RRS + BR ) ,( PN - FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( Max( ( ( ( RRS - FirstVNF_RAM ) / ( FirstVNF_Mem_Server - CRS ) ) / ( ( MRS * FirstVNF_RAM ) * Max( AMS,FirstVNF_RAM_Server ) ) ),( Min( ( DDR - BR ) ,( RRS + FirstVNF_RAM ) ) * ( ( ACS + Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) ) ) + Max( Min( ( Min( Const ,MRS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU * ARS ) / ( MDR / FirstVNF_Mem ) ) ),Min( ( ( AMS - BR ) * ( ACS * FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) ) ,( ( ( Min( ( Const - DDR ) ,( FirstVNF_Mem - ACS ) ) + Max( ( MRS / MRS ),Min( Const ,MDR ) ) ) + Max( ( ( CRS / FirstVNF_RAM ) - ( Const * RRS ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( RRS / CRS ) ) ) ) + Min( ( ( ( FirstVNF_CPU_Server / MRS ) + Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + MDR ) - ( FirstVNF_Mem_Server - DDR ) ) ) ,( ( Max( MDR,AMS ) + Min( MDR ,MRS ) ) - ( ( AMS / PN ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( CS * RMSe ) ) * ( ( RCSe + ( Max( RMSe,( RCSe - ( DS / DS ) ) ) / RCSe ) ) + ( MUR + CS ) ) ) / ( RRSe - ( RMSe - MUC ) ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM / RRS ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( MLU * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.685823754789272, "obj2": 0.19662706051915838}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( BR / Const ) + ( BR / Const ) )", "choosing": "( ( DS * ( MLU - MUM ) ) - ( ( DS * ( MLU - MUM ) ) / DS ) )", "obj1": 0.6149425287356322, "obj2": 0.2690934042373837}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "Min( ( MUR - RRSe ) ,( RMSe + RCSe ) )", "obj1": 0.6934865900383141, "obj2": 0.1935739382581728}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) / RRSe ) ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.24811812698800761}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( FirstVNF_Mem + ( BR / Const ) )", "choosing": "( ( DS * ( MLU * ( DS * ( MLU * MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6398467432950191, "obj2": 0.25175958044006624}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + Max( DDR,DDR ) )", "choosing": "( ( DS * DS ) - ( RMSe / RRSe ) )", "obj1": 0.632183908045977, "obj2": 0.25416055322026787}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7203065134099617, "obj2": 0.16343615691669205}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + FirstVNF_CPU )", "choosing": "( ( DS * ( MLU * ( DS * ( MLU * MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6398467432950191, "obj2": 0.25175958044006624}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - ( RMSe / RRSe ) )", "obj1": 0.632183908045977, "obj2": 0.25416055322026787}, {"determining": "( ( RRS / FirstVNF_Mem ) + Min( MDR ,PN ) )", "choosing": "( ( MUC * ( MUM * MUR ) ) - ( RMSe / MUM ) )", "obj1": 0.6513409961685823, "obj2": 0.2483657395734057}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( BR / Const ) )", "choosing": "( ( DS * ( MLU * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6513409961685823, "obj2": 0.2483657395734057}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( ( RRS / RRS ) - ( Min( Const ,PN ) - ( RRS - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - Min( DS ,MUM ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / RRS ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( ( Const * PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( Min( Max( ( ( CRS * BR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ),( ( BR / FirstVNF_CPU ) + Min( CRS ,FirstVNF_Mem ) ) ) ,( ( ( RRS - BR ) * ( MRS * FirstVNF_RAM ) ) - Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( RRS,MDR ) ) ) ),( ( Min( ( Const / ARS ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Max( Min( CRS ,MRS ),( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem * AMS ) ,( PN + ARS ) ),( Min( FirstVNF_Mem ,AMS ) + ( MRS * Const ) ) ) ) ) * ( ( Min( ( ( MRS + MDR ) / ( FirstVNF_Mem * ACS ) ) ,( ( ACS / FirstVNF_CPU ) * ( MRS * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem + ARS ) + ( AMS * AMS ) ) * ( ( ARS + AMS ) * ( AMS * FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( DDR / PN ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( MRS * CRS ) ,( FirstVNF_RAM_Server + ACS ) ) ) - Min( Min( Max( ACS,CRS ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_CPU ) * ( FirstVNF_Mem / CRS ) ) ) ) ) ) ,Max( ( ( Min( Max( ( FirstVNF_CPU_Server / MRS ),( FirstVNF_Mem_Server / Const ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / DDR ) ) * Min( ( CRS * ARS ) ,Min( Const ,FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_Mem_Server - Const ),Max( FirstVNF_CPU_Server,MDR ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - ( MRS / FirstVNF_Mem_Server ) ) ) - ( ( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - AMS ) ) - ( ( RRS - Const ) - ( FirstVNF_Mem_Server * PN ) ) ) ) ),( ( ( Min( ( FirstVNF_CPU / BR ) ,( ARS - CRS ) ) / ( ( FirstVNF_CPU_Server * Const ) + Min( PN ,MRS ) ) ) + ( ( ( AMS - MDR ) - ( BR + MRS ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( CRS * PN ) ) ) ) * ( ( ( Max( MDR,RRS ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( MDR - RRS ) ) ) * ( ( Max( ACS,FirstVNF_Mem_Server ) * ( PN * ARS ) ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( PN ,ACS ) ) ) ) ) ) ) ,( ( ( Max( ( Min( Max( MDR,FirstVNF_RAM_Server ) ,( Const + BR ) ) * ( Max( AMS,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + AMS ) ) ),( ( Min( BR ,Const ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) - ( Min( MRS ,ARS ) - ( BR + CRS ) ) ) ) * ( Min( ( ( PN * RRS ) * Min( CRS ,DDR ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) * ( ( ( AMS + ARS ) + Min( BR ,ARS ) ) + ( ( BR * FirstVNF_Mem_Server ) / Max( DDR,RRS ) ) ) ) ) + ( ( Max( ( ( DDR + AMS ) + ( MRS + PN ) ),( ( AMS * BR ) + ( CRS * PN ) ) ) - ( ( ( ACS * BR ) * ( PN / ACS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( Min( Const ,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,PN ) ) ),( Max( ( ACS - FirstVNF_RAM_Server ),Max( ARS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) / ( ARS - FirstVNF_RAM ) ) ) ) ) ) / Max( ( ( ( Min( ( ACS - AMS ) ,( Const + BR ) ) + ( Max( AMS,FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * Min( ( Min( BR ,Const ) / ( FirstVNF_RAM_Server - ARS ) ) ,Max( ( MRS + RRS ),( FirstVNF_CPU - DDR ) ) ) ) - ( Max( ( ( AMS * Const ) + ( FirstVNF_CPU_Server - CRS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( MRS * FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_CPU * FirstVNF_CPU ) ) - ( ( ACS - FirstVNF_RAM_Server ) / ( AMS * FirstVNF_Mem_Server ) ) ) ) ),Min( ( ( ( ( ACS * ARS ) + ( PN + MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - ( FirstVNF_RAM / MRS ) ) ) * ( Max( Max( MRS,BR ),( BR + Const ) ) * ( ( DDR + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( AMS * ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) * Max( ( RRS + DDR ),( FirstVNF_Mem / ARS ) ) ) * ( ( Min( FirstVNF_Mem_Server ,ARS ) + Max( FirstVNF_Mem,AMS ) ) * ( ( CRS * FirstVNF_Mem ) * ( FirstVNF_CPU - DDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( Min( Max( ( ( DS * MLU ) * ( CS + RRSe ) ),Min( ( RRSe - CS ) ,( MUM - DS ) ) ) ,Max( ( ( MLU + CS ) + Min( RRSe ,DS ) ),Min( Max( DS,MUC ) ,Min( MUR ,RMSe ) ) ) ) + Max( ( ( Max( MLU,MUM ) * ( CS + CS ) ) + ( Min( DS ,MUC ) - ( RCSe + RMSe ) ) ),( ( Max( MUR,MUR ) * Max( RRSe,CS ) ) - Max( ( MUR * MUR ),Min( RCSe ,RMSe ) ) ) ) ),( ( ( ( ( MLU - MUM ) - ( MLU + DS ) ) - ( Max( RRSe,RRSe ) * ( MUC * DS ) ) ) - Max( Max( Max( CS,MUR ),Max( MUC,RRSe ) ),Max( ( MLU + MLU ),( MUC * RCSe ) ) ) ) * Min( Max( Min( ( MUR + MUC ) ,( MUR - DS ) ),Max( ( MUM / MUM ),( RMSe - DS ) ) ) ,Min( ( Max( CS,RCSe ) + ( RRSe / RRSe ) ) ,( Min( CS ,RMSe ) - ( MUR + RCSe ) ) ) ) ) ) - Max( ( ( Max( ( Max( RCSe,MUR ) * Max( DS,RMSe ) ),Max( ( MUC / RRSe ),( DS - RMSe ) ) ) * Max( ( Max( RMSe,MLU ) * ( DS / RCSe ) ),( ( RMSe + MUC ) + ( RMSe - MLU ) ) ) ) / Min( Min( ( ( DS * MUM ) * ( RCSe * DS ) ) ,( Min( MUC ,CS ) / ( MUR / RRSe ) ) ) ,( Min( Min( CS ,MUC ) ,( RMSe * CS ) ) - ( ( MUM + MLU ) + ( MUR + MUM ) ) ) ) ),Min( ( ( ( ( CS / MLU ) * ( MUM - RCSe ) ) * ( ( MUR - RCSe ) + ( RCSe - RMSe ) ) ) - ( Min( ( MUC - CS ) ,( CS + RRSe ) ) * Max( Min( CS ,RMSe ),( MUR - MUC ) ) ) ) ,Max( ( Max( ( DS / DS ),Min( RCSe ,MUM ) ) * ( Min( CS ,RCSe ) - ( RCSe + MUR ) ) ),Max( ( Max( CS,MUM ) * ( DS - MUC ) ),Max( Min( MUM ,DS ),( DS - MUR ) ) ) ) ) ) ) + ( Min( ( ( Min( ( ( RCSe / MLU ) - Min( CS ,MLU ) ) ,( Max( RCSe,MLU ) + ( RCSe - MUC ) ) ) * ( ( ( MUM + CS ) * Min( DS ,MLU ) ) - Min( Max( MUM,CS ) ,Min( MLU ,DS ) ) ) ) * ( Min( ( ( CS / RRSe ) * Max( RCSe,MUR ) ) ,( ( MUC + MUC ) - ( MUC + RMSe ) ) ) * ( Max( ( DS / MUC ),( RCSe - RMSe ) ) * ( ( CS * CS ) + ( CS + MUC ) ) ) ) ) ,( Max( Min( ( ( MUR * MUR ) / Min( RMSe ,MLU ) ) ,Min( ( MUM - CS ) ,( MUR - MUR ) ) ),( Min( ( DS + MUR ) ,Min( MUR ,RMSe ) ) * ( Max( MUR,MUR ) + Max( RRSe,RRSe ) ) ) ) + Min( Max( Max( Min( MLU ,DS ),( MUC / DS ) ),Min( ( RCSe + MLU ) ,( MLU + DS ) ) ) ,( Min( Max( MLU,MLU ) ,( MUC * DS ) ) * ( Min( MUM ,MUC ) * Min( MLU ,MLU ) ) ) ) ) ) + ( Max( ( Min( ( Max( MUR,RMSe ) * Max( MUR,DS ) ) ,( ( CS - RRSe ) * Max( RCSe,MLU ) ) ) / ( ( Max( MLU,RMSe ) / ( MUR + CS ) ) * ( Max( MLU,CS ) - ( CS * CS ) ) ) ),( ( ( Min( MLU ,MUR ) - ( DS / RMSe ) ) - ( ( RRSe + RCSe ) + ( MUM + DS ) ) ) + ( ( Max( MUM,RRSe ) - Min( RCSe ,RMSe ) ) / Max( ( MUM * MUC ),( MUC - DS ) ) ) ) ) * ( ( ( Min( ( RMSe * MUR ) ,( MUR * CS ) ) - ( ( RCSe + MUM ) / ( DS + CS ) ) ) / ( Max( ( MUR / RMSe ),( MUM + MUC ) ) / ( Min( RMSe ,MUC ) * ( MUM / MUC ) ) ) ) + Max( Min( ( Max( MUM,MUC ) + ( DS * RMSe ) ) ,( ( MUM / CS ) * Min( MLU ,CS ) ) ),( Max( Max( MUC,MUR ),( MLU - RCSe ) ) * Max( ( MUC + RRSe ),Max( CS,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( Min( ( FirstVNF_Mem / BR ) ,( ( ( FirstVNF_CPU - DDR ) - ( ( DDR + ( ARS / AMS ) ) / AMS ) ) - PN ) ) - Min( ARS ,( ( Const - ( MRS - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) + MDR ) ) )", "choosing": "( Min( Max( ( Min( ( Min( ( MUR - MUC ) ,( MUM * DS ) ) * ( Max( RCSe,MUC ) - ( MUR + DS ) ) ) ,( ( Min( RRSe ,RCSe ) - Max( MUC,MUC ) ) * ( ( CS / MUM ) - Max( MUM,CS ) ) ) ) + ( Min( Max( ( MUM / MUM ),Max( DS,RCSe ) ) ,( Max( MUC,MUM ) * ( MUR * RCSe ) ) ) * ( ( Min( MUC ,CS ) + ( MUM + MUC ) ) / ( ( MUR - CS ) - Min( RCSe ,RMSe ) ) ) ) ),Min( Max( Min( ( Min( DS ,RRSe ) - ( MUC * RMSe ) ) ,Min( ( MLU + RCSe ) ,( RRSe / RRSe ) ) ),( Max( ( RCSe * CS ),( RCSe + DS ) ) / ( Max( MUC,MUR ) - Min( RRSe ,RMSe ) ) ) ) ,( Min( ( ( DS / MUM ) / ( MUC - MUM ) ) ,( ( MUM - RMSe ) * Min( MLU ,RMSe ) ) ) * Max( Min( ( CS * MUM ) ,( MUM / MUR ) ),Max( Max( RCSe,MUR ),( RRSe / RMSe ) ) ) ) ) ) ,( ( ( ( ( Max( RMSe,CS ) + Min( RMSe ,RCSe ) ) / Max( Min( RMSe ,DS ),( DS / DS ) ) ) - Max( Max( ( MUM / CS ),( RCSe / RRSe ) ),( Max( MUC,RRSe ) - Max( RRSe,CS ) ) ) ) - Min( ( ( ( MUC / MUC ) * ( MUC / RMSe ) ) - Min( Max( RCSe,MUC ) ,Min( MUR ,RCSe ) ) ) ,( ( Max( MUM,RRSe ) + ( MUM / RMSe ) ) + ( ( MUR + CS ) * ( DS / MUM ) ) ) ) ) / ( ( ( ( Max( MUC,MUC ) / Min( MLU ,RMSe ) ) / ( Min( MUC ,CS ) + ( MUM + DS ) ) ) * Max( ( Min( RMSe ,RCSe ) * Min( RMSe ,RRSe ) ),Max( ( RCSe + MUC ),Min( MLU ,RMSe ) ) ) ) / ( Max( Min( Min( RMSe ,MUC ) ,( MUR + RMSe ) ),Max( ( RRSe + MUC ),( RCSe * RMSe ) ) ) / ( ( ( MLU / RRSe ) - ( MLU * CS ) ) + Min( Max( MUM,RMSe ) ,Max( MUR,MUM ) ) ) ) ) ) ) * Max( ( ( ( ( Min( Min( RCSe ,MUR ) ,( MUM * MUR ) ) * Min( ( MUM / RCSe ) ,( MLU * MUR ) ) ) * ( ( ( CS / MUR ) / ( CS / RRSe ) ) / Min( Max( CS,RCSe ) ,Min( MUR ,RMSe ) ) ) ) / ( Max( ( ( RRSe * RCSe ) + ( DS + MUR ) ),( ( MLU - RRSe ) / Max( DS,CS ) ) ) - Max( ( Max( MLU,MUR ) + Max( MLU,MUC ) ),( Min( MUR ,MUR ) + ( DS / RRSe ) ) ) ) ) * Max( ( ( ( ( MLU / RRSe ) * ( RRSe + RCSe ) ) - ( Min( RRSe ,RCSe ) + Max( MUM,RMSe ) ) ) + ( Max( Min( CS ,MUM ),Max( MUM,CS ) ) * ( Max( MUM,MLU ) + ( DS * CS ) ) ) ),( ( ( ( MUC + RMSe ) / ( RRSe / MLU ) ) * ( Min( RRSe ,MUR ) / Min( DS ,MLU ) ) ) / ( ( ( MUC + RRSe ) * ( MLU - MUC ) ) / ( Max( MLU,MLU ) * ( MUR + MUC ) ) ) ) ) ),Max( ( Min( ( ( Min( RRSe ,RRSe ) - ( CS / MUM ) ) / ( ( MUR + CS ) - ( MUM + RCSe ) ) ) ,Min( ( ( MUM + MUM ) + ( RCSe + MUC ) ) ,( ( MLU + RMSe ) + ( MUC * MUM ) ) ) ) * Min( ( Max( ( MUR + RCSe ),Min( RCSe ,MUM ) ) / Min( Min( RRSe ,MUC ) ,( RRSe / RCSe ) ) ) ,( ( ( DS / MUC ) + Min( MUM ,MUR ) ) / ( ( CS - RRSe ) * ( MUC + MUM ) ) ) ) ),Min( ( Max( ( ( RMSe - RRSe ) - ( MUR / MUM ) ),( Max( MLU,MUC ) + Min( CS ,CS ) ) ) - Min( Max( ( RCSe / RCSe ),( MUC + MUC ) ) ,Min( ( RCSe - DS ) ,( CS + MUR ) ) ) ) ,( ( ( ( DS / RRSe ) * ( DS / RRSe ) ) - ( ( DS + DS ) / ( RRSe / CS ) ) ) * ( Max( ( MUR / MLU ),Min( RMSe ,MLU ) ) / Max( ( RRSe / MUM ),Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS - ( CRS + ARS ) )", "choosing": "Max( ( MUC - ( Min( MLU ,MUC ) / Min( RRSe ,MLU ) ) ),( MUC + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7720306513409961, "obj2": 0.13103712387198224}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) - Max( ARS,Max( ( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) )", "obj1": 0.7739463601532567, "obj2": 0.12340283868046792}, {"determining": "( Max( ( ( ( Min( ( ( RRS + ARS ) * ( PN - RRS ) ) ,( ( BR + MRS ) - ( FirstVNF_CPU / ACS ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + ( MDR - ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,ACS ) ) ) ) / ( ( ( ( MRS * FirstVNF_CPU_Server ) / ( ARS + FirstVNF_Mem ) ) * ( ( ACS / CRS ) * ( BR - FirstVNF_CPU ) ) ) - ( ( ( MDR + MDR ) / Min( FirstVNF_RAM ,PN ) ) * Max( Max( MDR,Const ),( ARS + CRS ) ) ) ) ) - ( ( ( ( Min( PN ,ARS ) * ( BR - AMS ) ) * ( ( ACS + FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) + ( ( Min( MRS ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( RRS,FirstVNF_RAM_Server ) - ( Const + MDR ) ) ) ) / ( Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - ACS ) ),( ( AMS * DDR ) * Max( FirstVNF_Mem_Server,CRS ) ) ) + Min( Max( Max( ARS,MDR ),( ACS + Const ) ) ,Min( ( FirstVNF_RAM_Server / Const ) ,( MDR * FirstVNF_Mem_Server ) ) ) ) ) ),( ( ( Max( ( Min( FirstVNF_RAM ,ACS ) / Max( FirstVNF_RAM,DDR ) ),Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( BR ,FirstVNF_Mem ) ) ) + Min( ( ( DDR - MDR ) * ( FirstVNF_Mem + ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( Const + FirstVNF_RAM_Server ) ) ) ) * Max( Min( ( ( AMS + MDR ) / Min( FirstVNF_Mem_Server ,BR ) ) ,( ( FirstVNF_Mem_Server - PN ) / Max( Const,MDR ) ) ),( ( ( Const / PN ) * ( MDR - Const ) ) * ( Min( PN ,PN ) - ( ARS + FirstVNF_Mem ) ) ) ) ) + ( ( Min( ( ( Const / FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( ( DDR * ACS ) + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( ARS + CRS ) ) + ( ( ACS / MDR ) - Max( ACS,PN ) ) ) ) / Min( ( Min( Max( FirstVNF_RAM_Server,DDR ) ,( AMS + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem / MDR ) / ( MRS + Const ) ) ) ,( ( ( MRS * CRS ) + Max( AMS,ARS ) ) / ( Max( AMS,PN ) - ( Const / BR ) ) ) ) ) ) ) * ( ( ( Min( Max( ( ( RRS + BR ) - Max( FirstVNF_CPU_Server,MDR ) ),Max( ( ACS * FirstVNF_Mem ),Min( DDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( ( ARS + FirstVNF_RAM_Server ) + Max( ARS,AMS ) ) ,( ( DDR * ARS ) * ( FirstVNF_CPU - DDR ) ) ) ) + Min( ( ( Max( FirstVNF_CPU,BR ) * ( BR + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server / MRS ) - ( MRS + MRS ) ) ) ,Max( Max( Max( MDR,PN ),Max( DDR,BR ) ),Min( ( RRS * AMS ) ,( DDR * BR ) ) ) ) ) + Min( ( Min( Min( ( MDR + DDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ,( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( ( ( RRS * FirstVNF_RAM_Server ) - ( AMS / CRS ) ) - Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,Min( RRS ,MDR ) ) ) ) ,( ( ( ( FirstVNF_CPU * RRS ) - ( ACS * FirstVNF_CPU ) ) + Min( ( PN / FirstVNF_CPU_Server ) ,( FirstVNF_Mem - ACS ) ) ) - Min( ( ( FirstVNF_Mem_Server * CRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ,Min( ( RRS + BR ) ,( PN - FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( Max( ( ( ( RRS - FirstVNF_RAM ) / ( FirstVNF_Mem_Server - CRS ) ) / ( ( MRS * FirstVNF_RAM ) * Max( AMS,FirstVNF_RAM_Server ) ) ),( Min( ( DDR - BR ) ,( RRS + FirstVNF_RAM ) ) * ( ( ACS + Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) ) ) + Max( Min( ( Min( Const ,MRS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU * ARS ) / ( MDR / FirstVNF_Mem ) ) ),Min( ( ( AMS - BR ) * ( ACS * FirstVNF_CPU_Server ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) ) ,( ( ( Min( ( Const - DDR ) ,( FirstVNF_Mem - ACS ) ) + Max( ( MRS / MRS ),Min( Const ,MDR ) ) ) + Max( ( ( CRS / FirstVNF_RAM ) - ( Const * RRS ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( RRS / CRS ) ) ) ) + Min( ( ( ( FirstVNF_CPU_Server / MRS ) + Max( FirstVNF_RAM_Server,ACS ) ) + ( ( FirstVNF_RAM_Server + MDR ) - ( FirstVNF_Mem_Server - DDR ) ) ) ,( ( Max( MDR,AMS ) + Min( MDR ,MRS ) ) - ( ( AMS / PN ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - ( CS * RMSe ) ) * ( ( RCSe + ( Max( RMSe,( RCSe - ( DS / DS ) ) ) / RCSe ) ) + ( MUR + CS ) ) ) / ( RRSe - ( RMSe - MUC ) ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,MUM ) * ( MUM - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010974715159536262}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM / RRS ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( MLU * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.685823754789272, "obj2": 0.19662706051915838}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "Min( ( MUR - RRSe ) ,( RMSe + RCSe ) )", "obj1": 0.6934865900383141, "obj2": 0.1935739382581728}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) / RRSe ) ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.24811812698800761}, {"determining": "( ( RRS / FirstVNF_Mem ) + Min( MDR ,PN ) )", "choosing": "( ( MUC * ( MUM * MUR ) ) - ( RMSe / MUM ) )", "obj1": 0.6513409961685823, "obj2": 0.2483657395734057}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7203065134099617, "obj2": 0.16343615691669205}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( MLU - CS ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915574}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( Max( FirstVNF_CPU,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( Min( Min( CS ,( MLU + MUC ) ) ,( MUM - CS ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9597701149425287, "obj2": 0.014513397475406337}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( BR / Const ) )", "choosing": "( ( DS * ( MLU * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6513409961685823, "obj2": 0.2483657395734057}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( Min( AMS ,( MRS * RRS ) ) - ( MDR / DDR ) )", "choosing": "( ( RMSe * Min( RMSe ,MUC ) ) * ( RMSe - RMSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915574}, {"determining": "( ( RRS / RRS ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,( Min( ( Const - RRS ) ,MDR ) - ACS ) ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( Min( Const ,PN ) - ( RRS - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - Min( DS ,MUM ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / RRS ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) ) - ( Min( Const ,PN ) - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( Const - ( FirstVNF_Mem / FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUC - ( Min( MLU ,MUC ) / Min( RRSe ,MLU ) ) ),( MUC + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / BR ) ,( ( ( FirstVNF_CPU - DDR ) - ( ( DDR + ( ARS / AMS ) ) / AMS ) ) - PN ) ) - Min( ARS ,( ( Const - ( MRS - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) + MDR ) ) )", "choosing": "( Min( Max( ( Min( ( Min( ( MUR - MUC ) ,( MUM * DS ) ) * ( Max( RCSe,MUC ) - ( MUR + DS ) ) ) ,( ( Min( RRSe ,RCSe ) - Max( MUC,MUC ) ) * ( ( CS / MUM ) - Max( MUM,CS ) ) ) ) + ( Min( Max( ( MUM / MUM ),Max( DS,RCSe ) ) ,( Max( MUC,MUM ) * ( MUR * RCSe ) ) ) * ( ( Min( MUC ,CS ) + ( MUM + MUC ) ) / ( ( MUR - CS ) - Min( RCSe ,RMSe ) ) ) ) ),Min( Max( Min( ( Min( DS ,RRSe ) - ( MUC * RMSe ) ) ,Min( ( MLU + RCSe ) ,( RRSe / RRSe ) ) ),( Max( ( RCSe * CS ),( RCSe + DS ) ) / ( Max( MUC,MUR ) - Min( RRSe ,RMSe ) ) ) ) ,( Min( ( ( DS / MUM ) / ( MUC - MUM ) ) ,( ( MUM - RMSe ) * Min( MLU ,RMSe ) ) ) * Max( Min( ( CS * MUM ) ,( MUM / MUR ) ),Max( Max( RCSe,MUR ),( RRSe / RMSe ) ) ) ) ) ) ,( ( ( ( ( Max( RMSe,CS ) + Min( RMSe ,RCSe ) ) / Max( Min( RMSe ,DS ),( DS / DS ) ) ) - Max( Max( ( MUM / CS ),( RCSe / RRSe ) ),( Max( MUC,RRSe ) - Max( RRSe,CS ) ) ) ) - Min( ( ( ( MUC / MUC ) * ( MUC / RMSe ) ) - Min( Max( RCSe,MUC ) ,Min( MUR ,RCSe ) ) ) ,( ( Max( MUM,RRSe ) + ( MUM / RMSe ) ) + ( ( MUR + CS ) * ( DS / MUM ) ) ) ) ) / ( ( ( ( Max( MUC,MUC ) / Min( MLU ,RMSe ) ) / ( Min( MUC ,CS ) + ( MUM + DS ) ) ) * Max( ( Min( RMSe ,RCSe ) * Min( RMSe ,RRSe ) ),Max( ( RCSe + MUC ),Min( MLU ,RMSe ) ) ) ) / ( Max( Min( Min( RMSe ,MUC ) ,( MUR + RMSe ) ),Max( ( RRSe + MUC ),( RCSe * RMSe ) ) ) / ( ( ( MLU / RRSe ) - ( MLU * CS ) ) + Min( Max( MUM,RMSe ) ,Max( MUR,MUM ) ) ) ) ) ) ) * Max( ( ( ( ( Min( Min( RCSe ,MUR ) ,( MUM * MUR ) ) * Min( ( MUM / RCSe ) ,( MLU * MUR ) ) ) * ( ( ( CS / MUR ) / ( CS / RRSe ) ) / Min( Max( CS,RCSe ) ,Min( MUR ,RMSe ) ) ) ) / ( Max( ( ( RRSe * RCSe ) + ( DS + MUR ) ),( ( MLU - RRSe ) / Max( DS,CS ) ) ) - Max( ( Max( MLU,MUR ) + Max( MLU,MUC ) ),( Min( MUR ,MUR ) + ( DS / RRSe ) ) ) ) ) * Max( ( ( ( ( MLU / RRSe ) * ( RRSe + RCSe ) ) - ( Min( RRSe ,RCSe ) + Max( MUM,RMSe ) ) ) + ( Max( Min( CS ,MUM ),Max( MUM,CS ) ) * ( Max( MUM,MLU ) + ( DS * CS ) ) ) ),( ( ( ( MUC + RMSe ) / ( RRSe / MLU ) ) * ( Min( RRSe ,MUR ) / Min( DS ,MLU ) ) ) / ( ( ( MUC + RRSe ) * ( MLU - MUC ) ) / ( Max( MLU,MLU ) * ( MUR + MUC ) ) ) ) ) ),Max( ( Min( ( ( Min( RRSe ,RRSe ) - ( CS / MUM ) ) / ( ( MUR + CS ) - ( MUM + RCSe ) ) ) ,Min( ( ( MUM + MUM ) + ( RCSe + MUC ) ) ,( ( MLU + RMSe ) + ( MUC * MUM ) ) ) ) * Min( ( Max( ( MUR + RCSe ),Min( RCSe ,MUM ) ) / Min( Min( RRSe ,MUC ) ,( RRSe / RCSe ) ) ) ,( ( ( DS / MUC ) + Min( MUM ,MUR ) ) / ( ( CS - RRSe ) * ( MUC + MUM ) ) ) ) ),Min( ( Max( ( ( RMSe - RRSe ) - ( MUR / MUM ) ),( Max( MLU,MUC ) + Min( CS ,CS ) ) ) - Min( Max( ( RCSe / RCSe ),( MUC + MUC ) ) ,Min( ( RCSe - DS ) ,( CS + MUR ) ) ) ) ,( ( ( ( DS / RRSe ) * ( DS / RRSe ) ) - ( ( DS + DS ) / ( RRSe / CS ) ) ) * ( Max( ( MUR / MLU ),Min( RMSe ,MLU ) ) / Max( ( RRSe / MUM ),Max( RCSe,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7720306513409961, "obj2": 0.13103712387198224}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) - Max( ARS,Max( ( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) )", "obj1": 0.7739463601532567, "obj2": 0.12340283868046792}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM / RRS ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( MLU * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.685823754789272, "obj2": 0.19662706051915838}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,MUM ) * ( MUM - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010974715159536262}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "Min( ( MUR - RRSe ) ,( RMSe + RCSe ) )", "obj1": 0.6934865900383141, "obj2": 0.1935739382581728}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) / RRSe ) ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.24811812698800761}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7203065134099617, "obj2": 0.16343615691669205}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( MLU - CS ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915574}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( ( DDR * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( BR / Const ) )", "choosing": "( ( DS * ( MLU * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6513409961685823, "obj2": 0.2483657395734057}, {"determining": "( ( RRS / FirstVNF_Mem ) + Min( MDR ,PN ) )", "choosing": "( ( MUC * ( MUM * MUR ) ) - ( RMSe / MUM ) )", "obj1": 0.6513409961685823, "obj2": 0.2483657395734057}, {"determining": "( Max( FirstVNF_CPU,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( Min( Min( CS ,( MLU + MUC ) ) ,( MUM - CS ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9597701149425287, "obj2": 0.014513397475406337}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( MLU - CS ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9597701149425287, "obj2": 0.014513397475406337}], "13": [{"determining": "( ( RRS / RRS ) / ( ( CRS + PN ) - Max( Min( ( Const - Const ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MUC ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( FirstVNF_Mem / FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUC - ( Min( MLU ,MUC ) / Min( RRSe ,MLU ) ) ),( MUC + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7720306513409961, "obj2": 0.13103712387198224}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) - Max( ARS,Max( ( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) )", "obj1": 0.7739463601532567, "obj2": 0.12340283868046792}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM / RRS ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( MLU * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.685823754789272, "obj2": 0.19662706051915838}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,MUM ) * ( MUM - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010974715159536262}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) / RRSe ) ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.24811812698800761}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "Min( ( MUR - RRSe ) ,( RMSe + RCSe ) )", "obj1": 0.6934865900383141, "obj2": 0.1935739382581728}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7203065134099617, "obj2": 0.16343615691669205}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / ( FirstVNF_RAM_Server / CRS ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,Min( ( ( RCSe + MUR ) / ( CS - CS ) ) ,( ( RMSe * MUM ) + RRSe ) ) ) * ( MUM - CS ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9674329501915708, "obj2": 0.01178461512254234}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( MLU - CS ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915574}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) ) ) )", "obj1": 0.6915708812260536, "obj2": 0.19395864414672173}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( DDR * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( BR / Const ) )", "choosing": "( ( DS * ( MLU * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6513409961685823, "obj2": 0.2483657395734057}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( BR / Const ) )", "choosing": "( ( DS * ( MLU * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6513409961685823, "obj2": 0.2483657395734057}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}], "14": [{"determining": "Min( ( ( ( ( Max( Min( ( MDR * BR ) ,( ACS - FirstVNF_Mem ) ),( ( MDR - MDR ) / Max( Const,FirstVNF_CPU_Server ) ) ) / Max( Min( Min( ACS ,RRS ) ,Max( MDR,MDR ) ),Min( Min( PN ,DDR ) ,( Const / FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_Mem_Server / DDR ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( Const * CRS ) ) ) * Max( ( Max( RRS,ARS ) - ( MRS - FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem,CRS ) + ( CRS / AMS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem / CRS ) * ( FirstVNF_CPU + RRS ) ) * ( ( AMS * ARS ) * ( FirstVNF_RAM / PN ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ) - ( ( ARS * FirstVNF_RAM ) / ( ACS + MRS ) ) ) ) + ( ( Max( Min( FirstVNF_RAM ,PN ),( CRS / MDR ) ) * ( ( ARS + MRS ) * ( MRS * FirstVNF_RAM_Server ) ) ) * ( ( Max( BR,FirstVNF_CPU_Server ) * ( FirstVNF_RAM / RRS ) ) * Min( ( DDR / FirstVNF_RAM ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ) ) / ( Max( ( ( ( ( CRS - PN ) / ( FirstVNF_RAM * PN ) ) + ( ( FirstVNF_Mem / ARS ) / Max( FirstVNF_Mem_Server,MDR ) ) ) / Max( ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM / MDR ) ),( ( FirstVNF_CPU * BR ) - ( AMS + FirstVNF_RAM ) ) ) ),( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ARS * Const ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ( FirstVNF_RAM * PN ) ) ) + ( Max( ( RRS / MDR ),( MDR / Const ) ) * Min( ( FirstVNF_Mem / ACS ) ,( MRS + ARS ) ) ) ) ) * Max( ( ( ( ( FirstVNF_RAM_Server * DDR ) * ( FirstVNF_Mem_Server / RRS ) ) / Max( ( FirstVNF_CPU_Server + AMS ),Max( DDR,FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - MDR ) + Max( Const,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + MDR ) - ( DDR - AMS ) ) ) ),( ( Min( Max( ACS,FirstVNF_CPU ) ,Min( MRS ,ARS ) ) + Min( ( FirstVNF_CPU_Server + CRS ) ,Min( Const ,AMS ) ) ) + ( Max( ( MRS + AMS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( MRS + PN ) ) ) ) ) ) ) ,( Min( ( ( ( ( Max( ARS,MRS ) / ( RRS / DDR ) ) - Max( ( CRS + ACS ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_CPU_Server + AMS ),( RRS - ARS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( DDR * PN ) ) ) ) / ( ( ( Max( CRS,RRS ) - ( FirstVNF_Mem * AMS ) ) / ( Min( MRS ,DDR ) + ( FirstVNF_Mem + DDR ) ) ) * ( ( ( CRS * CRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_Mem ) ,Max( MRS,AMS ) ) ) ) ) ,( ( ( Min( ( PN * AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) * ( ACS / FirstVNF_Mem_Server ) ) ) / ( Min( ( MRS - Const ) ,( FirstVNF_CPU_Server / MDR ) ) / ( ( MRS / CRS ) + ( ARS + FirstVNF_CPU ) ) ) ) - ( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) ),( ( ARS + MRS ) + ( MDR + BR ) ) ) * ( Max( Min( FirstVNF_Mem ,BR ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU / CRS ) * ( ARS + FirstVNF_RAM ) ) ) ) ) ) * ( Min( ( ( ( ( FirstVNF_RAM / MDR ) * ( MRS / FirstVNF_Mem_Server ) ) * ( ( PN + BR ) / ( AMS * PN ) ) ) * ( ( ( PN / BR ) / Max( CRS,FirstVNF_Mem ) ) / Max( ( PN + FirstVNF_CPU ),( FirstVNF_Mem - Const ) ) ) ) ,Min( ( ( Min( PN ,CRS ) * ( FirstVNF_Mem / ACS ) ) / ( ( RRS / MDR ) - Min( FirstVNF_RAM ,CRS ) ) ) ,( Min( ( BR * MDR ) ,Min( BR ,FirstVNF_Mem ) ) + ( ( ARS - FirstVNF_RAM_Server ) - ( BR / Const ) ) ) ) ) / ( ( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / PN ) ) / Max( ( ACS / DDR ),Max( BR,FirstVNF_CPU ) ) ) * ( ( Max( RRS,DDR ) * ( BR * FirstVNF_CPU ) ) * Min( ( Const - FirstVNF_Mem_Server ) ,( ARS * FirstVNF_CPU ) ) ) ) / ( Max( ( Max( ACS,FirstVNF_CPU_Server ) / ( DDR - BR ) ),Min( Max( PN,FirstVNF_Mem ) ,Max( DDR,PN ) ) ) / Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( MDR + RRS ) ),( Max( Const,FirstVNF_CPU_Server ) - ( MRS / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( Max( Min( ( Min( Min( Min( ( CS / MUR ) ,( RMSe - MUC ) ) ,Min( Max( MUR,RCSe ) ,( MUC * RRSe ) ) ) ,Max( ( ( RRSe / MUR ) + ( RCSe * MUC ) ),Max( ( MUM / DS ),( DS / MUC ) ) ) ) / Max( Min( Max( Max( DS,CS ),( CS - RCSe ) ) ,( Max( RCSe,DS ) / ( MUC / RMSe ) ) ),Max( ( ( MUR - DS ) + ( MUC * MUM ) ),Min( ( MUM - DS ) ,Min( RMSe ,DS ) ) ) ) ) ,( Min( Min( ( Min( RMSe ,MUR ) / ( MUC - RMSe ) ) ,( Min( RRSe ,RCSe ) + ( MUM + MUM ) ) ) ,( ( Min( RRSe ,RRSe ) - Min( MUC ,MUC ) ) * ( Min( MUC ,MLU ) / ( CS / CS ) ) ) ) * ( ( ( ( MUM - RMSe ) * ( DS / RRSe ) ) + ( ( MUM - MUR ) + Max( DS,DS ) ) ) - Max( ( ( MUC - MUR ) / Max( MUC,RMSe ) ),( ( MLU / MLU ) * ( MUM - MUR ) ) ) ) ) ),( ( ( ( ( Min( DS ,RMSe ) - ( DS + CS ) ) * ( ( MUR + CS ) / ( MUR + MUM ) ) ) / ( Min( Min( CS ,MUR ) ,( MUM / MUR ) ) * ( ( DS / CS ) - ( MUC / RRSe ) ) ) ) * Max( Max( ( ( RMSe * CS ) + ( MLU + MUC ) ),Min( Min( MUR ,RMSe ) ,( RMSe + DS ) ) ),( ( ( CS * RRSe ) / ( RMSe + RCSe ) ) * ( ( MLU * DS ) - Min( DS ,RMSe ) ) ) ) ) / Max( Max( ( ( Min( RRSe ,RCSe ) * ( MLU * DS ) ) + ( ( CS + RRSe ) * ( DS / MUM ) ) ),( ( Min( RRSe ,RRSe ) + ( MUR * MUR ) ) / ( ( RMSe * RCSe ) / Min( RRSe ,MUR ) ) ) ),( ( Max( Max( MUR,MUR ),( MLU + RCSe ) ) - ( Min( MUC ,DS ) * Max( MUM,MUM ) ) ) / ( Min( ( DS - DS ) ,( RRSe - MUR ) ) + ( Min( RCSe ,MUM ) * ( DS * RMSe ) ) ) ) ) ) ),( ( Max( ( ( Min( Min( RMSe ,MUR ) ,( MUM - MLU ) ) - ( ( RMSe - DS ) - Max( MLU,MUR ) ) ) - Max( ( Max( RRSe,MLU ) - ( RRSe / DS ) ),( ( DS - RMSe ) * Min( MLU ,DS ) ) ) ),( ( ( Min( MUM ,MUR ) + ( MUR / RMSe ) ) / ( Min( MUR ,DS ) - ( MUR + MUR ) ) ) - ( ( ( DS * CS ) + ( RMSe - DS ) ) - ( ( RRSe - DS ) - ( DS - DS ) ) ) ) ) - Max( ( ( Max( ( MUM * RCSe ),Min( MUC ,RCSe ) ) / ( ( CS / RMSe ) + Max( MUC,MUR ) ) ) * ( Min( ( MUM * MUC ) ,Max( MLU,DS ) ) / ( Min( RMSe ,RMSe ) / ( RCSe * RMSe ) ) ) ),( ( ( ( RCSe + CS ) * ( CS + MUM ) ) + ( ( MUM * RRSe ) * ( DS + CS ) ) ) + ( ( ( CS * DS ) / Min( MLU ,RMSe ) ) * Min( ( RMSe * CS ) ,( MLU / CS ) ) ) ) ) ) - Min( ( ( ( ( Max( RMSe,MLU ) / ( DS - DS ) ) * Max( ( MUM + RRSe ),Max( MLU,CS ) ) ) / ( Max( ( CS - RCSe ),( MUM - MLU ) ) * Max( Max( RMSe,DS ),( MLU / MUR ) ) ) ) - ( ( Min( ( RRSe / MLU ) ,Min( RRSe ,DS ) ) + ( Max( RCSe,MLU ) - ( DS / MUR ) ) ) / ( ( ( RMSe + MUR ) * ( MUM - RRSe ) ) + Min( Min( CS ,MLU ) ,( MLU - DS ) ) ) ) ) ,( ( Min( ( Min( RCSe ,CS ) + ( RCSe + MUR ) ) ,( ( CS * CS ) + Max( RCSe,MLU ) ) ) / Max( ( ( RMSe * MUR ) + ( MUC / RMSe ) ),Max( ( CS + CS ),( RCSe / CS ) ) ) ) - ( Max( ( ( MUR / DS ) - ( MUR - MUC ) ),Min( Max( RRSe,CS ) ,Min( RRSe ,RCSe ) ) ) - ( ( Max( MUC,MUC ) / Max( MUR,MUC ) ) * ( ( DS * MUC ) * ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) / ( ( CRS + PN ) - Max( Min( ( Const - Const ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MUC ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM / RRS ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( MLU * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.685823754789272, "obj2": 0.19662706051915838}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + DDR ) )", "choosing": "( Min( DS ,RMSe ) - Max( Max( MLU,RRSe ),CS ) )", "obj1": 0.6551724137931034, "obj2": 0.24279750720478938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "Min( ( MUR - RRSe ) ,( RMSe + RCSe ) )", "obj1": 0.6934865900383141, "obj2": 0.1935739382581728}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( BR / Const ) )", "choosing": "( ( DS * ( MLU * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6513409961685823, "obj2": 0.2483657395734057}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7203065134099617, "obj2": 0.16343615691669205}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( MLU - CS ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915574}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / ( FirstVNF_RAM_Server / CRS ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,Min( ( ( RCSe + MUR ) / ( CS - CS ) ) ,( ( RMSe * MUM ) + RRSe ) ) ) * ( MUM - CS ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9674329501915708, "obj2": 0.01178461512254234}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) ) ) )", "obj1": 0.6915708812260536, "obj2": 0.19395864414672173}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( DDR * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}], "15": [{"determining": "( ( BR - AMS ) + Min( ( RRS * ( FirstVNF_Mem_Server * ( MRS * ACS ) ) ) ,ACS ) )", "choosing": "( Max( MUM,MUM ) / ( MLU + ( CS / ( ( ( ( ( MUR - RRSe ) - DS ) - RRSe ) + RMSe ) - Min( Max( MUR,DS ) ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Max( Min( ( MDR * BR ) ,( ACS - FirstVNF_Mem ) ),( ( MDR - MDR ) / Max( Const,FirstVNF_CPU_Server ) ) ) / Max( Min( Min( ACS ,RRS ) ,Max( MDR,MDR ) ),Min( Min( PN ,DDR ) ,( Const / FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_Mem_Server / DDR ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( Const * CRS ) ) ) * Max( ( Max( RRS,ARS ) - ( MRS - FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem,CRS ) + ( CRS / AMS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem / CRS ) * ( FirstVNF_CPU + RRS ) ) * ( ( AMS * ARS ) * ( FirstVNF_RAM / PN ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ) - ( ( ARS * FirstVNF_RAM ) / ( ACS + MRS ) ) ) ) + ( ( Max( Min( FirstVNF_RAM ,PN ),( CRS / MDR ) ) * ( ( ARS + MRS ) * ( MRS * FirstVNF_RAM_Server ) ) ) * ( ( Max( BR,FirstVNF_CPU_Server ) * ( FirstVNF_RAM / RRS ) ) * Min( ( DDR / FirstVNF_RAM ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ) ) / ( Max( ( ( ( ( CRS - PN ) / ( FirstVNF_RAM * PN ) ) + ( ( FirstVNF_Mem / ARS ) / Max( FirstVNF_Mem_Server,MDR ) ) ) / Max( ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM / MDR ) ),( ( FirstVNF_CPU * BR ) - ( AMS + FirstVNF_RAM ) ) ) ),( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ARS * Const ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ( FirstVNF_RAM * PN ) ) ) + ( Max( ( RRS / MDR ),( MDR / Const ) ) * Min( ( FirstVNF_Mem / ACS ) ,( MRS + ARS ) ) ) ) ) * Max( ( ( ( ( FirstVNF_RAM_Server * DDR ) * ( FirstVNF_Mem_Server / RRS ) ) / Max( ( FirstVNF_CPU_Server + AMS ),Max( DDR,FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - MDR ) + Max( Const,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + MDR ) - ( DDR - AMS ) ) ) ),( ( Min( Max( ACS,FirstVNF_CPU ) ,Min( MRS ,ARS ) ) + Min( ( FirstVNF_CPU_Server + CRS ) ,Min( Const ,AMS ) ) ) + ( Max( ( MRS + AMS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( MRS + PN ) ) ) ) ) ) ) ,( Min( ( ( ( ( Max( ARS,MRS ) / ( RRS / DDR ) ) - Max( ( CRS + ACS ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_CPU_Server + AMS ),( RRS - ARS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( DDR * PN ) ) ) ) / ( ( ( Max( CRS,RRS ) - ( FirstVNF_Mem * AMS ) ) / ( Min( MRS ,DDR ) + ( FirstVNF_Mem + DDR ) ) ) * ( ( ( CRS * CRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_Mem ) ,Max( MRS,AMS ) ) ) ) ) ,( ( ( Min( ( PN * AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) * ( ACS / FirstVNF_Mem_Server ) ) ) / ( Min( ( MRS - Const ) ,( FirstVNF_CPU_Server / MDR ) ) / ( ( MRS / CRS ) + ( ARS + FirstVNF_CPU ) ) ) ) - ( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) ),( ( ARS + MRS ) + ( MDR + BR ) ) ) * ( Max( Min( FirstVNF_Mem ,BR ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU / CRS ) * ( ARS + FirstVNF_RAM ) ) ) ) ) ) * ( Min( ( ( ( ( FirstVNF_RAM / MDR ) * ( MRS / FirstVNF_Mem_Server ) ) * ( ( PN + BR ) / ( AMS * PN ) ) ) * ( ( ( PN / BR ) / Max( CRS,FirstVNF_Mem ) ) / Max( ( PN + FirstVNF_CPU ),( FirstVNF_Mem - Const ) ) ) ) ,Min( ( ( Min( PN ,CRS ) * ( FirstVNF_Mem / ACS ) ) / ( ( RRS / MDR ) - Min( FirstVNF_RAM ,CRS ) ) ) ,( Min( ( BR * MDR ) ,Min( BR ,FirstVNF_Mem ) ) + ( ( ARS - FirstVNF_RAM_Server ) - ( BR / Const ) ) ) ) ) / ( ( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / PN ) ) / Max( ( ACS / DDR ),Max( BR,FirstVNF_CPU ) ) ) * ( ( Max( RRS,DDR ) * ( BR * FirstVNF_CPU ) ) * Min( ( Const - FirstVNF_Mem_Server ) ,( ARS * FirstVNF_CPU ) ) ) ) / ( Max( ( Max( ACS,FirstVNF_CPU_Server ) / ( DDR - BR ) ),Min( Max( PN,FirstVNF_Mem ) ,Max( DDR,PN ) ) ) / Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( MDR + RRS ) ),( Max( Const,FirstVNF_CPU_Server ) - ( MRS / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( Max( Min( ( Min( Min( Min( ( CS / MUR ) ,( RMSe - MUC ) ) ,Min( Max( MUR,RCSe ) ,( MUC * RRSe ) ) ) ,Max( ( ( RRSe / MUR ) + ( RCSe * MUC ) ),Max( ( MUM / DS ),( DS / MUC ) ) ) ) / Max( Min( Max( Max( DS,CS ),( CS - RCSe ) ) ,( Max( RCSe,DS ) / ( MUC / RMSe ) ) ),Max( ( ( MUR - DS ) + ( MUC * MUM ) ),Min( ( MUM - DS ) ,Min( RMSe ,DS ) ) ) ) ) ,( Min( Min( ( Min( RMSe ,MUR ) / ( MUC - RMSe ) ) ,( Min( RRSe ,RCSe ) + ( MUM + MUM ) ) ) ,( ( Min( RRSe ,RRSe ) - Min( MUC ,MUC ) ) * ( Min( MUC ,MLU ) / ( CS / CS ) ) ) ) * ( ( ( ( MUM - RMSe ) * ( DS / RRSe ) ) + ( ( MUM - MUR ) + Max( DS,DS ) ) ) - Max( ( ( MUC - MUR ) / Max( MUC,RMSe ) ),( ( MLU / MLU ) * ( MUM - MUR ) ) ) ) ) ),( ( ( ( ( Min( DS ,RMSe ) - ( DS + CS ) ) * ( ( MUR + CS ) / ( MUR + MUM ) ) ) / ( Min( Min( CS ,MUR ) ,( MUM / MUR ) ) * ( ( DS / CS ) - ( MUC / RRSe ) ) ) ) * Max( Max( ( ( RMSe * CS ) + ( MLU + MUC ) ),Min( Min( MUR ,RMSe ) ,( RMSe + DS ) ) ),( ( ( CS * RRSe ) / ( RMSe + RCSe ) ) * ( ( MLU * DS ) - Min( DS ,RMSe ) ) ) ) ) / Max( Max( ( ( Min( RRSe ,RCSe ) * ( MLU * DS ) ) + ( ( CS + RRSe ) * ( DS / MUM ) ) ),( ( Min( RRSe ,RRSe ) + ( MUR * MUR ) ) / ( ( RMSe * RCSe ) / Min( RRSe ,MUR ) ) ) ),( ( Max( Max( MUR,MUR ),( MLU + RCSe ) ) - ( Min( MUC ,DS ) * Max( MUM,MUM ) ) ) / ( Min( ( DS - DS ) ,( RRSe - MUR ) ) + ( Min( RCSe ,MUM ) * ( DS * RMSe ) ) ) ) ) ) ),( ( Max( ( ( Min( Min( RMSe ,MUR ) ,( MUM - MLU ) ) - ( ( RMSe - DS ) - Max( MLU,MUR ) ) ) - Max( ( Max( RRSe,MLU ) - ( RRSe / DS ) ),( ( DS - RMSe ) * Min( MLU ,DS ) ) ) ),( ( ( Min( MUM ,MUR ) + ( MUR / RMSe ) ) / ( Min( MUR ,DS ) - ( MUR + MUR ) ) ) - ( ( ( DS * CS ) + ( RMSe - DS ) ) - ( ( RRSe - DS ) - ( DS - DS ) ) ) ) ) - Max( ( ( Max( ( MUM * RCSe ),Min( MUC ,RCSe ) ) / ( ( CS / RMSe ) + Max( MUC,MUR ) ) ) * ( Min( ( MUM * MUC ) ,Max( MLU,DS ) ) / ( Min( RMSe ,RMSe ) / ( RCSe * RMSe ) ) ) ),( ( ( ( RCSe + CS ) * ( CS + MUM ) ) + ( ( MUM * RRSe ) * ( DS + CS ) ) ) + ( ( ( CS * DS ) / Min( MLU ,RMSe ) ) * Min( ( RMSe * CS ) ,( MLU / CS ) ) ) ) ) ) - Min( ( ( ( ( Max( RMSe,MLU ) / ( DS - DS ) ) * Max( ( MUM + RRSe ),Max( MLU,CS ) ) ) / ( Max( ( CS - RCSe ),( MUM - MLU ) ) * Max( Max( RMSe,DS ),( MLU / MUR ) ) ) ) - ( ( Min( ( RRSe / MLU ) ,Min( RRSe ,DS ) ) + ( Max( RCSe,MLU ) - ( DS / MUR ) ) ) / ( ( ( RMSe + MUR ) * ( MUM - RRSe ) ) + Min( Min( CS ,MLU ) ,( MLU - DS ) ) ) ) ) ,( ( Min( ( Min( RCSe ,CS ) + ( RCSe + MUR ) ) ,( ( CS * CS ) + Max( RCSe,MLU ) ) ) / Max( ( ( RMSe * MUR ) + ( MUC / RMSe ) ),Max( ( CS + CS ),( RCSe / CS ) ) ) ) - ( Max( ( ( MUR / DS ) - ( MUR - MUC ) ),Min( Max( RRSe,CS ) ,Min( RRSe ,RCSe ) ) ) - ( ( Max( MUC,MUC ) / Max( MUR,MUC ) ) * ( ( DS * MUC ) * ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM / RRS ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( MLU * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.685823754789272, "obj2": 0.19662706051915838}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + DDR ) )", "choosing": "( Min( DS ,RMSe ) - Max( Max( MLU,RRSe ),CS ) )", "obj1": 0.6551724137931034, "obj2": 0.24279750720478938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "Min( ( MUR - RRSe ) ,( RMSe + RCSe ) )", "obj1": 0.6934865900383141, "obj2": 0.1935739382581728}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( BR / Const ) )", "choosing": "( ( DS * ( MLU * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6513409961685823, "obj2": 0.2483657395734057}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7203065134099617, "obj2": 0.16343615691669205}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( MLU - CS ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915574}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / ( FirstVNF_RAM_Server / CRS ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,Min( ( ( RCSe + MUR ) / ( CS - CS ) ) ,( ( RMSe * MUM ) + RRSe ) ) ) * ( MUM - CS ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9674329501915708, "obj2": 0.01178461512254234}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) ) ) )", "obj1": 0.6915708812260536, "obj2": 0.19395864414672173}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7222222222222222, "obj2": 0.16180510155053035}], "16": [{"determining": "( Min( RRS ,FirstVNF_Mem ) - Max( ( CRS + PN ),( Min( ( Const - Const ) ,MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) + Min( ( RRS * ( FirstVNF_Mem_Server * ( MRS * ACS ) ) ) ,ACS ) )", "choosing": "( Max( MUM,MUM ) / ( MLU + ( CS / ( ( ( ( ( MUR - RRSe ) - DS ) - RRSe ) + RMSe ) - Min( Max( MUR,DS ) ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM / RRS ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( MLU * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.685823754789272, "obj2": 0.19662706051915838}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * MUC ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1886484140799186}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + DDR ) )", "choosing": "( Min( DS ,RMSe ) - Max( Max( MLU,RRSe ),CS ) )", "obj1": 0.6551724137931034, "obj2": 0.24279750720478938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - Max( ( CRS + PN ),( Min( ( Const - Const ) ,MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MUM * MUM ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0023003870869019957}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( BR / Const ) )", "choosing": "( ( DS * ( MLU * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6513409961685823, "obj2": 0.2483657395734057}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( MLU - CS ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915574}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * ( CS * ( RRSe * ( RCSe + RMSe ) ) ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.8505747126436781, "obj2": 0.06726364415681815}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / ( FirstVNF_RAM_Server / CRS ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,Min( ( ( RCSe + MUR ) / ( CS - CS ) ) ,( ( RMSe * MUM ) + RRSe ) ) ) * ( MUM - CS ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9674329501915708, "obj2": 0.01178461512254234}, {"determining": "Min( ( ( ( ( Max( Min( ( MDR * BR ) ,( ACS - FirstVNF_Mem ) ),( ( MDR - MDR ) / Max( Const,FirstVNF_CPU_Server ) ) ) / Max( Min( Min( ACS ,RRS ) ,Max( MDR,MDR ) ),Min( Min( PN ,DDR ) ,( Const / FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( FirstVNF_Mem_Server + BR ) / ( FirstVNF_Mem_Server / DDR ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( Const * CRS ) ) ) * Max( ( Max( RRS,ARS ) - ( MRS - FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem,CRS ) + ( CRS / AMS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem / CRS ) * ( FirstVNF_CPU + RRS ) ) * ( ( AMS * ARS ) * ( FirstVNF_RAM / PN ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ) - ( ( ARS * FirstVNF_RAM ) / ( ACS + MRS ) ) ) ) + ( ( Max( Min( FirstVNF_RAM ,PN ),( CRS / MDR ) ) * ( ( ARS + MRS ) * ( MRS * FirstVNF_RAM_Server ) ) ) * ( ( Max( BR,FirstVNF_CPU_Server ) * ( FirstVNF_RAM / RRS ) ) * Min( ( DDR / FirstVNF_RAM ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ) ) / ( Max( ( ( ( ( CRS - PN ) / ( FirstVNF_RAM * PN ) ) + ( ( FirstVNF_Mem / ARS ) / Max( FirstVNF_Mem_Server,MDR ) ) ) / Max( ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM / MDR ) ),( ( FirstVNF_CPU * BR ) - ( AMS + FirstVNF_RAM ) ) ) ),( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ARS * Const ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ( FirstVNF_RAM * PN ) ) ) + ( Max( ( RRS / MDR ),( MDR / Const ) ) * Min( ( FirstVNF_Mem / ACS ) ,( MRS + ARS ) ) ) ) ) * Max( ( ( ( ( FirstVNF_RAM_Server * DDR ) * ( FirstVNF_Mem_Server / RRS ) ) / Max( ( FirstVNF_CPU_Server + AMS ),Max( DDR,FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - MDR ) + Max( Const,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + MDR ) - ( DDR - AMS ) ) ) ),( ( Min( Max( ACS,FirstVNF_CPU ) ,Min( MRS ,ARS ) ) + Min( ( FirstVNF_CPU_Server + CRS ) ,Min( Const ,AMS ) ) ) + ( Max( ( MRS + AMS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( MRS + PN ) ) ) ) ) ) ) ,( Min( ( ( ( ( Max( ARS,MRS ) / ( RRS / DDR ) ) - Max( ( CRS + ACS ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_CPU_Server + AMS ),( RRS - ARS ) ) + ( ( FirstVNF_RAM_Server + AMS ) * ( DDR * PN ) ) ) ) / ( ( ( Max( CRS,RRS ) - ( FirstVNF_Mem * AMS ) ) / ( Min( MRS ,DDR ) + ( FirstVNF_Mem + DDR ) ) ) * ( ( ( CRS * CRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_Mem ) ,Max( MRS,AMS ) ) ) ) ) ,( ( ( Min( ( PN * AMS ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) * ( ACS / FirstVNF_Mem_Server ) ) ) / ( Min( ( MRS - Const ) ,( FirstVNF_CPU_Server / MDR ) ) / ( ( MRS / CRS ) + ( ARS + FirstVNF_CPU ) ) ) ) - ( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) ),( ( ARS + MRS ) + ( MDR + BR ) ) ) * ( Max( Min( FirstVNF_Mem ,BR ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU / CRS ) * ( ARS + FirstVNF_RAM ) ) ) ) ) ) * ( Min( ( ( ( ( FirstVNF_RAM / MDR ) * ( MRS / FirstVNF_Mem_Server ) ) * ( ( PN + BR ) / ( AMS * PN ) ) ) * ( ( ( PN / BR ) / Max( CRS,FirstVNF_Mem ) ) / Max( ( PN + FirstVNF_CPU ),( FirstVNF_Mem - Const ) ) ) ) ,Min( ( ( Min( PN ,CRS ) * ( FirstVNF_Mem / ACS ) ) / ( ( RRS / MDR ) - Min( FirstVNF_RAM ,CRS ) ) ) ,( Min( ( BR * MDR ) ,Min( BR ,FirstVNF_Mem ) ) + ( ( ARS - FirstVNF_RAM_Server ) - ( BR / Const ) ) ) ) ) / ( ( ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / PN ) ) / Max( ( ACS / DDR ),Max( BR,FirstVNF_CPU ) ) ) * ( ( Max( RRS,DDR ) * ( BR * FirstVNF_CPU ) ) * Min( ( Const - FirstVNF_Mem_Server ) ,( ARS * FirstVNF_CPU ) ) ) ) / ( Max( ( Max( ACS,FirstVNF_CPU_Server ) / ( DDR - BR ) ),Min( Max( PN,FirstVNF_Mem ) ,Max( DDR,PN ) ) ) / Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( MDR + RRS ) ),( Max( Const,FirstVNF_CPU_Server ) - ( MRS / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( Max( Min( ( Min( Min( Min( ( CS / MUR ) ,( RMSe - MUC ) ) ,Min( Max( MUR,RCSe ) ,( MUC * RRSe ) ) ) ,Max( ( ( RRSe / MUR ) + ( RCSe * MUC ) ),Max( ( MUM / DS ),( DS / MUC ) ) ) ) / Max( Min( Max( Max( DS,CS ),( CS - RCSe ) ) ,( Max( RCSe,DS ) / ( MUC / RMSe ) ) ),Max( ( ( MUR - DS ) + ( MUC * MUM ) ),Min( ( MUM - DS ) ,Min( RMSe ,DS ) ) ) ) ) ,( Min( Min( ( Min( RMSe ,MUR ) / ( MUC - RMSe ) ) ,( Min( RRSe ,RCSe ) + ( MUM + MUM ) ) ) ,( ( Min( RRSe ,RRSe ) - Min( MUC ,MUC ) ) * ( Min( MUC ,MLU ) / ( CS / CS ) ) ) ) * ( ( ( ( MUM - RMSe ) * ( DS / RRSe ) ) + ( ( MUM - MUR ) + Max( DS,DS ) ) ) - Max( ( ( MUC - MUR ) / Max( MUC,RMSe ) ),( ( MLU / MLU ) * ( MUM - MUR ) ) ) ) ) ),( ( ( ( ( Min( DS ,RMSe ) - ( DS + CS ) ) * ( ( MUR + CS ) / ( MUR + MUM ) ) ) / ( Min( Min( CS ,MUR ) ,( MUM / MUR ) ) * ( ( DS / CS ) - ( MUC / RRSe ) ) ) ) * Max( Max( ( ( RMSe * CS ) + ( MLU + MUC ) ),Min( Min( MUR ,RMSe ) ,( RMSe + DS ) ) ),( ( ( CS * RRSe ) / ( RMSe + RCSe ) ) * ( ( MLU * DS ) - Min( DS ,RMSe ) ) ) ) ) / Max( Max( ( ( Min( RRSe ,RCSe ) * ( MLU * DS ) ) + ( ( CS + RRSe ) * ( DS / MUM ) ) ),( ( Min( RRSe ,RRSe ) + ( MUR * MUR ) ) / ( ( RMSe * RCSe ) / Min( RRSe ,MUR ) ) ) ),( ( Max( Max( MUR,MUR ),( MLU + RCSe ) ) - ( Min( MUC ,DS ) * Max( MUM,MUM ) ) ) / ( Min( ( DS - DS ) ,( RRSe - MUR ) ) + ( Min( RCSe ,MUM ) * ( DS * RMSe ) ) ) ) ) ) ),( ( Max( ( ( Min( Min( RMSe ,MUR ) ,( MUM - MLU ) ) - ( ( RMSe - DS ) - Max( MLU,MUR ) ) ) - Max( ( Max( RRSe,MLU ) - ( RRSe / DS ) ),( ( DS - RMSe ) * Min( MLU ,DS ) ) ) ),( ( ( Min( MUM ,MUR ) + ( MUR / RMSe ) ) / ( Min( MUR ,DS ) - ( MUR + MUR ) ) ) - ( ( ( DS * CS ) + ( RMSe - DS ) ) - ( ( RRSe - DS ) - ( DS - DS ) ) ) ) ) - Max( ( ( Max( ( MUM * RCSe ),Min( MUC ,RCSe ) ) / ( ( CS / RMSe ) + Max( MUC,MUR ) ) ) * ( Min( ( MUM * MUC ) ,Max( MLU,DS ) ) / ( Min( RMSe ,RMSe ) / ( RCSe * RMSe ) ) ) ),( ( ( ( RCSe + CS ) * ( CS + MUM ) ) + ( ( MUM * RRSe ) * ( DS + CS ) ) ) + ( ( ( CS * DS ) / Min( MLU ,RMSe ) ) * Min( ( RMSe * CS ) ,( MLU / CS ) ) ) ) ) ) - Min( ( ( ( ( Max( RMSe,MLU ) / ( DS - DS ) ) * Max( ( MUM + RRSe ),Max( MLU,CS ) ) ) / ( Max( ( CS - RCSe ),( MUM - MLU ) ) * Max( Max( RMSe,DS ),( MLU / MUR ) ) ) ) - ( ( Min( ( RRSe / MLU ) ,Min( RRSe ,DS ) ) + ( Max( RCSe,MLU ) - ( DS / MUR ) ) ) / ( ( ( RMSe + MUR ) * ( MUM - RRSe ) ) + Min( Min( CS ,MLU ) ,( MLU - DS ) ) ) ) ) ,( ( Min( ( Min( RCSe ,CS ) + ( RCSe + MUR ) ) ,( ( CS * CS ) + Max( RCSe,MLU ) ) ) / Max( ( ( RMSe * MUR ) + ( MUC / RMSe ) ),Max( ( CS + CS ),( RCSe / CS ) ) ) ) - ( Max( ( ( MUR / DS ) - ( MUR - MUC ) ),Min( Max( RRSe,CS ) ,Min( RRSe ,RCSe ) ) ) - ( ( Max( MUC,MUC ) / Max( MUR,MUC ) ) * ( ( DS * MUC ) * ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( MDR - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MUC ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - Max( ( CRS + PN ),( Min( ( Const - Const ) ,MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM / RRS ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( MLU * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.685823754789272, "obj2": 0.19662706051915838}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + DDR ) )", "choosing": "( Min( DS ,RMSe ) - Max( Max( MLU,RRSe ),CS ) )", "obj1": 0.6551724137931034, "obj2": 0.24279750720478938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * MUC ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1886484140799186}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS + Max( ( Max( FirstVNF_Mem_Server,( ACS / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RCSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Max( DS,( CS + RRSe ) ) + MUR ) )", "obj1": 0.6264367816091954, "obj2": 0.25523563701269186}, {"determining": "( ( ( ( Const + BR ) * ( FirstVNF_CPU_Server - MDR ) ) / Max( Min( FirstVNF_Mem_Server ,ARS ),( FirstVNF_RAM * MRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( RMSe ,( ( ( ( MUR / RCSe ) / ( RMSe + MUR ) ) - MUR ) * RMSe ) ) * ( RMSe - RMSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0009434804818727904}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) + ( BR + DDR ) )", "choosing": "( ( MUR * DS ) - ( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2638618025647137}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( Max( FirstVNF_CPU,( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( MDR / MRS ) ) ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( MUM * ( MUM * MUM ) ) ) - ( MUR / CS ) )", "obj1": 0.6475095785440613, "obj2": 0.24686797950970604}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( MLU - CS ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915574}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * ( CS * ( RRSe * ( RCSe + RMSe ) ) ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.8505747126436781, "obj2": 0.06726364415681815}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}], "18": [{"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( MDR - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MUC ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( MLU - ( MLU * MUC ) ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.6819923371647509, "obj2": 0.2005528495114824}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( ( ( ( Const - Const ) + MDR ) + ACS ) - FirstVNF_Mem ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( RMSe * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6494252873563219, "obj2": 0.23992895374358583}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * MUC ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1886484140799186}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS + Max( ( Max( FirstVNF_Mem_Server,( ACS / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RCSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Max( DS,( CS + RRSe ) ) + MUR ) )", "obj1": 0.6264367816091954, "obj2": 0.25523563701269186}, {"determining": "( ( ( ( Const + BR ) * ( FirstVNF_CPU_Server - MDR ) ) / Max( Min( FirstVNF_Mem_Server ,ARS ),( FirstVNF_RAM * MRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( RMSe ,( ( ( ( MUR / RCSe ) / ( RMSe + MUR ) ) - MUR ) * RMSe ) ) * ( RMSe - RMSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0009434804818727904}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) + ( BR + DDR ) )", "choosing": "( ( MUR * DS ) - ( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2638618025647137}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( MLU - CS ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915574}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( Max( FirstVNF_CPU,( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( MDR / MRS ) ) ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( MUM * ( MUM * MUM ) ) ) - ( MUR / CS ) )", "obj1": 0.6475095785440613, "obj2": 0.24686797950970604}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * ( CS * ( RRSe * ( RCSe + RMSe ) ) ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.8505747126436781, "obj2": 0.06726364415681815}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM / RRS ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( MLU * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.685823754789272, "obj2": 0.19662706051915838}], "19": [{"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( ( MUR * DS ) - Min( MLU ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,Min( ARS ,PN ) ) )", "choosing": "( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) ) * ( CS * ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) ) )", "obj1": 0.946360153256705, "obj2": 0.02363298245133968}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( ( ( ( Const - Const ) + MDR ) + ACS ) - FirstVNF_Mem ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( RMSe * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6494252873563219, "obj2": 0.23992895374358583}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * MUC ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1886484140799186}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS + Max( ( Max( FirstVNF_Mem_Server,( ACS / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RCSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Max( DS,( CS + RRSe ) ) + MUR ) )", "obj1": 0.6264367816091954, "obj2": 0.25523563701269186}, {"determining": "( ( ( ( Const + BR ) * ( FirstVNF_CPU_Server - MDR ) ) / Max( Min( FirstVNF_Mem_Server ,ARS ),( FirstVNF_RAM * MRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( RMSe ,( ( ( ( MUR / RCSe ) / ( RMSe + MUR ) ) - MUR ) * RMSe ) ) * ( RMSe - RMSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0009434804818727904}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.6819923371647509, "obj2": 0.2005528495114824}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) + ( BR + DDR ) )", "choosing": "( ( MUR * DS ) - ( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2638618025647137}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( MLU - CS ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915574}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( Max( FirstVNF_CPU,( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( MDR / MRS ) ) ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( MUM * ( MUM * MUM ) ) ) - ( MUR / CS ) )", "obj1": 0.6475095785440613, "obj2": 0.24686797950970604}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( MLU - ( MLU * MUC ) ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.6819923371647509, "obj2": 0.2005528495114824}], "20": [{"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( ( MUR * DS ) - Min( MLU ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) - RMSe ) )", "obj1": 0.7931034482758621, "obj2": 0.09336040110131659}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,Min( ARS ,PN ) ) )", "choosing": "( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) ) * ( CS * ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) ) )", "obj1": 0.946360153256705, "obj2": 0.02363298245133968}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ARS - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( ( CS * ( RRSe / ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "Min( ( ( ( ( ( MUR / RCSe ) / ( RMSe - MUR ) ) - MUR ) * RMSe ) + RMSe ) ,( RRSe * RRSe ) )", "obj1": 0.7068965517241379, "obj2": 0.17801463822208738}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( ( Max( ACS,( AMS / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( CS * ( RCSe + RMSe ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.8352490421455939, "obj2": 0.08447561226264848}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( ( ( ( ( Const - Const ) + MDR ) + ACS ) - FirstVNF_Mem ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( RMSe * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6494252873563219, "obj2": 0.23992895374358583}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( MRS - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( MLU - ( Max( RCSe,( Max( RCSe,( CS + RRSe ) ) / ( RRSe * ( MUC + MUM ) ) ) ) / RMSe ) ) / ( CS / Max( DS,( MUM + MUR ) ) ) ) - ( Max( ( MUC * ( RRSe / ( DS + RCSe ) ) ),MUC ) / RRSe ) )", "obj1": 0.6743295019157088, "obj2": 0.21139548879508938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * MUC ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1886484140799186}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS + Max( ( Max( FirstVNF_Mem_Server,( ACS / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RCSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Max( DS,( CS + RRSe ) ) + MUR ) )", "obj1": 0.6264367816091954, "obj2": 0.25523563701269186}, {"determining": "( ( ( ( Const + BR ) * ( FirstVNF_CPU_Server - MDR ) ) / Max( Min( FirstVNF_Mem_Server ,ARS ),( FirstVNF_RAM * MRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( RMSe ,( ( ( ( MUR / RCSe ) / ( RMSe + MUR ) ) - MUR ) * RMSe ) ) * ( RMSe - RMSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0009434804818727904}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( MLU - ( MLU * MUC ) ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.6819923371647509, "obj2": 0.2005528495114824}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.18030366461884148}, {"determining": "( Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) + ( BR + DDR ) )", "choosing": "( ( MUR * DS ) - ( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2638618025647137}], "21": [{"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6704980842911877, "obj2": 0.19765462388985444}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) - RMSe ) )", "obj1": 0.7931034482758621, "obj2": 0.09336040110131659}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( CRS - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.17733045207554216}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,Min( ARS ,PN ) ) )", "choosing": "( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) ) * ( CS * ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) ) )", "obj1": 0.946360153256705, "obj2": 0.02363298245133968}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6877394636015326, "obj2": 0.19542922411270783}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( ( ( ( ( Const - Const ) + MDR ) + ACS ) - FirstVNF_Mem ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( RMSe * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6494252873563219, "obj2": 0.23992895374358583}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( ( Max( ACS,( AMS / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( CS * ( RCSe + RMSe ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.8352490421455939, "obj2": 0.08447561226264848}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * ( MUC - RRSe ) ) ,RCSe ) )", "obj1": 0.6609195402298851, "obj2": 0.23790446719451558}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * MUC ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1886484140799186}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS + Max( ( Max( FirstVNF_Mem_Server,( ACS / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RCSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Max( DS,( CS + RRSe ) ) + MUR ) )", "obj1": 0.6264367816091954, "obj2": 0.25523563701269186}, {"determining": "( ( ( ( Const + BR ) * ( FirstVNF_CPU_Server - MDR ) ) / Max( Min( FirstVNF_Mem_Server ,ARS ),( FirstVNF_RAM * MRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( RMSe ,( ( ( ( MUR / RCSe ) / ( RMSe + MUR ) ) - MUR ) * RMSe ) ) * ( RMSe - RMSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0009434804818727904}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) + ( BR + DDR ) )", "choosing": "( ( MUR * DS ) - ( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2638618025647137}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( ( MUR * DS ) - Min( MLU ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( Const ,PN ) ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( ( ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) * Min( MUM ,CS ) ) - MUR ) ) * ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,FirstVNF_CPU ) ) ) * Min( ARS ,PN ) ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) ) * ( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) - RMSe ) )", "obj1": 0.7931034482758621, "obj2": 0.09336040110131659}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6704980842911877, "obj2": 0.19765462388985444}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( CRS - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.17733045207554216}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,Min( ARS ,PN ) ) )", "choosing": "( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) ) * ( CS * ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) ) )", "obj1": 0.946360153256705, "obj2": 0.02363298245133968}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.19007875314536166}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( Max( ACS,( AMS / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( CS * ( RCSe + RMSe ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.8352490421455939, "obj2": 0.08447561226264848}, {"determining": "( ( ( ( ( Const - Const ) + MDR ) + ACS ) - FirstVNF_Mem ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( RMSe * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6494252873563219, "obj2": 0.23992895374358583}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( ( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) ) * MUC ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1886484140799186}, {"determining": "( ( PN + ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Min( MLU ,MLU ) * Max( ( RMSe - RMSe ),RCSe ) )", "obj1": 0.657088122605364, "obj2": 0.23675247174080727}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS + Max( ( Max( FirstVNF_Mem_Server,( ACS / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RCSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Max( DS,( CS + RRSe ) ) + MUR ) )", "obj1": 0.6264367816091954, "obj2": 0.25523563701269186}, {"determining": "( ( ( ( Const + BR ) * ( FirstVNF_CPU_Server - MDR ) ) / Max( Min( FirstVNF_Mem_Server ,ARS ),( FirstVNF_RAM * MRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( RMSe ,( ( ( ( MUR / RCSe ) / ( RMSe + MUR ) ) - MUR ) * RMSe ) ) * ( RMSe - RMSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0009434804818727904}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) + ( BR + DDR ) )", "choosing": "( ( MUR * DS ) - ( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2638618025647137}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,PN ) )", "choosing": "( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) + Min( MUM ,CS ) ) - MUR ) ) * ( CS * DS ) )", "obj1": 0.9674329501915708, "obj2": 0.01407096135903985}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( ( DS + RMSe ) - ( Max( RRSe,RRSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) - RMSe ) )", "obj1": 0.7931034482758621, "obj2": 0.09336040110131659}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Min( MLU ,MLU ) * Max( CS,( RCSe + RMSe ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2275280920848892}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6704980842911877, "obj2": 0.19765462388985444}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( CRS - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.17733045207554216}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,Min( ARS ,PN ) ) )", "choosing": "( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) ) * ( CS * ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) ) )", "obj1": 0.946360153256705, "obj2": 0.02363298245133968}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( PN + ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Min( MLU ,MLU ) * Max( ( RMSe - RMSe ),RCSe ) )", "obj1": 0.657088122605364, "obj2": 0.23675247174080727}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( ( Max( ACS,( AMS / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( CS * ( RCSe + RMSe ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.8352490421455939, "obj2": 0.08447561226264848}, {"determining": "( ( ( ( ( Const - Const ) + MDR ) + ACS ) - FirstVNF_Mem ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( RMSe * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6494252873563219, "obj2": 0.23992895374358583}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "Max( Min( RMSe ,MUC ),MUM )", "obj1": 0.6839080459770115, "obj2": 0.1883000707555711}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS + Max( ( Max( FirstVNF_Mem_Server,( ACS / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RCSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Max( DS,( CS + RRSe ) ) + MUR ) )", "obj1": 0.6264367816091954, "obj2": 0.25523563701269186}, {"determining": "( ( ( ( Const + BR ) * ( FirstVNF_CPU_Server - MDR ) ) / Max( Min( FirstVNF_Mem_Server ,ARS ),( FirstVNF_RAM * MRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( RMSe ,( ( ( ( MUR / RCSe ) / ( RMSe + MUR ) ) - MUR ) * RMSe ) ) * ( RMSe - RMSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0009434804818727904}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) + ( BR + DDR ) )", "choosing": "( ( MUR * DS ) - ( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2638618025647137}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,PN ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.9636015325670498, "obj2": 0.013023734982901785}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.19007875314536166}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.19007875314536166}], "24": [{"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( ( DS + RMSe ) - ( Max( RRSe,RRSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( ( DS + RMSe ) - ( Max( RRSe,RRSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) - RMSe ) )", "obj1": 0.7931034482758621, "obj2": 0.09336040110131659}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Min( MLU ,MLU ) * Max( CS,( RCSe + RMSe ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2275280920848892}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6704980842911877, "obj2": 0.19765462388985444}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( CRS - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.17733045207554216}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,Min( ARS ,PN ) ) )", "choosing": "( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) ) * ( CS * ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) ) )", "obj1": 0.946360153256705, "obj2": 0.02363298245133968}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( PN + ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Min( MLU ,MLU ) * Max( ( RMSe - RMSe ),RCSe ) )", "obj1": 0.657088122605364, "obj2": 0.23675247174080727}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( ( Max( ACS,( AMS / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( CS * ( RCSe + RMSe ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.8352490421455939, "obj2": 0.08447561226264848}, {"determining": "( ( ( ( ( Const - Const ) + MDR ) + ACS ) - FirstVNF_Mem ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( RMSe * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6494252873563219, "obj2": 0.23992895374358583}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "Max( Min( RMSe ,MUC ),MUM )", "obj1": 0.6839080459770115, "obj2": 0.1883000707555711}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS + Max( ( Max( FirstVNF_Mem_Server,( ACS / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RCSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Max( DS,( CS + RRSe ) ) + MUR ) )", "obj1": 0.6264367816091954, "obj2": 0.25523563701269186}, {"determining": "( ( ( ( Const + BR ) * ( FirstVNF_CPU_Server - MDR ) ) / Max( Min( FirstVNF_Mem_Server ,ARS ),( FirstVNF_RAM * MRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( RMSe ,( ( ( ( MUR / RCSe ) / ( RMSe + MUR ) ) - MUR ) * RMSe ) ) * ( RMSe - RMSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0009434804818727904}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) + ( BR + DDR ) )", "choosing": "( ( MUR * DS ) - ( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2638618025647137}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,PN ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.9636015325670498, "obj2": 0.013023734982901785}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.19007875314536166}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.19007875314536166}], "25": [{"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( MDR - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MUC ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) )", "choosing": "( ( DS + RMSe ) - ( Max( RRSe,RRSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) - RMSe ) )", "obj1": 0.7931034482758621, "obj2": 0.09336040110131659}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Min( MLU ,MLU ) * Max( CS,( RCSe + RMSe ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2275280920848892}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6704980842911877, "obj2": 0.19765462388985444}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( CRS - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.17733045207554216}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,Min( ARS ,PN ) ) )", "choosing": "( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) ) * ( CS * ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) ) )", "obj1": 0.946360153256705, "obj2": 0.02363298245133968}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( PN + ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Min( MLU ,MLU ) * Max( ( RMSe - RMSe ),RCSe ) )", "obj1": 0.657088122605364, "obj2": 0.23675247174080727}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( ( Max( ACS,( AMS / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( CS * ( RCSe + RMSe ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.8352490421455939, "obj2": 0.08447561226264848}, {"determining": "( ( ( ( ( Const - Const ) + MDR ) + ACS ) - FirstVNF_Mem ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( RMSe * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6494252873563219, "obj2": 0.23992895374358583}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "Max( Min( RMSe ,MUC ),MUM )", "obj1": 0.6839080459770115, "obj2": 0.1883000707555711}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( ( ( Const + BR ) * ( FirstVNF_CPU_Server - MDR ) ) / Max( Min( FirstVNF_Mem_Server ,ARS ),( FirstVNF_RAM * MRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( RMSe ,( ( ( ( MUR / RCSe ) / ( RMSe + MUR ) ) - MUR ) * RMSe ) ) * ( RMSe - RMSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0009434804818727904}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) + ( BR + DDR ) )", "choosing": "( ( MUR * DS ) - ( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2638618025647137}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,PN ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.9636015325670498, "obj2": 0.013023734982901785}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.19007875314536166}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS + Max( ( Max( FirstVNF_Mem_Server,( ACS / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RCSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Max( DS,( CS + RRSe ) ) + MUR ) )", "obj1": 0.6264367816091954, "obj2": 0.25523563701269186}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( ( FirstVNF_RAM + ( MRS + CRS ) ) * ( Min( ( ( ARS + Const ) + FirstVNF_RAM ) ,Min( ( FirstVNF_RAM + RRS ) ,FirstVNF_CPU_Server ) ) * PN ) )", "choosing": "( ( ( ( Min( Max( ( ( CS / MUR ) / ( MLU / MUR ) ),( Min( DS ,MUM ) + ( RMSe * MLU ) ) ) ,( ( Min( RCSe ,CS ) * ( DS * CS ) ) * ( Max( MUC,MLU ) * ( MUM * MLU ) ) ) ) / ( Min( Max( ( MUC / RMSe ),( MUR + RRSe ) ) ,( ( MUM + RMSe ) / Max( RMSe,MUC ) ) ) * ( ( ( RCSe - MUR ) / ( MUR - CS ) ) - ( ( MUM - MUR ) + Max( RMSe,MUC ) ) ) ) ) / ( ( Max( Max( Max( RRSe,RMSe ),Min( MLU ,DS ) ),( ( DS + RRSe ) + Max( MUR,MUC ) ) ) + ( ( ( DS / RCSe ) - Max( CS,RMSe ) ) - ( Min( MLU ,MUR ) - ( MLU * CS ) ) ) ) / ( ( Max( Max( MUR,CS ),Min( RCSe ,MUR ) ) * ( ( MUC - RMSe ) + ( RMSe / RRSe ) ) ) + Max( Min( Max( RCSe,CS ) ,( MUR - CS ) ),( Min( RMSe ,DS ) * ( DS / MUC ) ) ) ) ) ) + ( ( ( ( Max( Max( CS,MUR ),( RCSe * RRSe ) ) - ( ( MUC * DS ) * ( MUR + RMSe ) ) ) + ( ( ( CS + RCSe ) - Min( MUM ,DS ) ) / ( ( CS * DS ) * Max( MLU,DS ) ) ) ) - ( ( Min( ( MLU * CS ) ,Min( CS ,RRSe ) ) / ( ( CS / DS ) - ( RRSe + RMSe ) ) ) * ( Min( ( RCSe + MUR ) ,( DS / MUR ) ) + Min( Max( RRSe,MLU ) ,( RRSe * MUM ) ) ) ) ) + Max( ( ( ( ( MUC - RCSe ) - ( MUR * CS ) ) - ( ( MUM / DS ) / ( RMSe / DS ) ) ) / ( ( ( MUR * MLU ) - Max( MUC,RMSe ) ) / Max( ( RCSe + RMSe ),Min( MUR ,MUC ) ) ) ),( Max( Max( ( MUC - RRSe ),Max( CS,RMSe ) ),( ( MUC * MUM ) * ( RCSe + RRSe ) ) ) / Min( ( ( MUM + DS ) - ( MUC + RRSe ) ) ,( ( DS * MUM ) * Min( RRSe ,MUM ) ) ) ) ) ) ) - ( Min( ( MUC - MLU ) ,( MLU * MUC ) ) + ( Min( RMSe ,MLU ) + ( RMSe - MUC ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.252045972211861}], "26": [{"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( MDR - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MUC ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( MDR - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MUC ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) - RMSe ) )", "obj1": 0.7931034482758621, "obj2": 0.09336040110131659}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Min( MLU ,MLU ) * Max( CS,( RCSe + RMSe ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2275280920848892}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6704980842911877, "obj2": 0.19765462388985444}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( CRS - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.17733045207554216}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,Min( ARS ,PN ) ) )", "choosing": "( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) ) * ( CS * ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) ) )", "obj1": 0.946360153256705, "obj2": 0.02363298245133968}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( PN + ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Min( MLU ,MLU ) * Max( ( RMSe - RMSe ),RCSe ) )", "obj1": 0.657088122605364, "obj2": 0.23675247174080727}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( ( Max( ACS,( AMS / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( CS * ( RCSe + RMSe ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.8352490421455939, "obj2": 0.08447561226264848}, {"determining": "( ( ( ( ( Const - Const ) + MDR ) + ACS ) - FirstVNF_Mem ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( RMSe * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6494252873563219, "obj2": 0.23992895374358583}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "Max( Min( RMSe ,MUC ),MUM )", "obj1": 0.6839080459770115, "obj2": 0.1883000707555711}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.19007875314536166}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( ( ( Const + BR ) * ( FirstVNF_CPU_Server - MDR ) ) / Max( Min( FirstVNF_Mem_Server ,ARS ),( FirstVNF_RAM * MRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( RMSe ,( ( ( ( MUR / RCSe ) / ( RMSe + MUR ) ) - MUR ) * RMSe ) ) * ( RMSe - RMSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0009434804818727904}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) + ( BR + DDR ) )", "choosing": "( ( MUR * DS ) - ( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2638618025647137}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,PN ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.9636015325670498, "obj2": 0.013023734982901785}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS + Max( ( Max( FirstVNF_Mem_Server,( ACS / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RCSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Max( DS,( CS + RRSe ) ) + MUR ) )", "obj1": 0.6264367816091954, "obj2": 0.25523563701269186}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( ( FirstVNF_RAM + ( MRS + CRS ) ) * ( Min( ( ( ARS + Const ) + FirstVNF_RAM ) ,Min( ( FirstVNF_RAM + RRS ) ,FirstVNF_CPU_Server ) ) * PN ) )", "choosing": "( ( ( ( Min( Max( ( ( CS / MUR ) / ( MLU / MUR ) ),( Min( DS ,MUM ) + ( RMSe * MLU ) ) ) ,( ( Min( RCSe ,CS ) * ( DS * CS ) ) * ( Max( MUC,MLU ) * ( MUM * MLU ) ) ) ) / ( Min( Max( ( MUC / RMSe ),( MUR + RRSe ) ) ,( ( MUM + RMSe ) / Max( RMSe,MUC ) ) ) * ( ( ( RCSe - MUR ) / ( MUR - CS ) ) - ( ( MUM - MUR ) + Max( RMSe,MUC ) ) ) ) ) / ( ( Max( Max( Max( RRSe,RMSe ),Min( MLU ,DS ) ),( ( DS + RRSe ) + Max( MUR,MUC ) ) ) + ( ( ( DS / RCSe ) - Max( CS,RMSe ) ) - ( Min( MLU ,MUR ) - ( MLU * CS ) ) ) ) / ( ( Max( Max( MUR,CS ),Min( RCSe ,MUR ) ) * ( ( MUC - RMSe ) + ( RMSe / RRSe ) ) ) + Max( Min( Max( RCSe,CS ) ,( MUR - CS ) ),( Min( RMSe ,DS ) * ( DS / MUC ) ) ) ) ) ) + ( ( ( ( Max( Max( CS,MUR ),( RCSe * RRSe ) ) - ( ( MUC * DS ) * ( MUR + RMSe ) ) ) + ( ( ( CS + RCSe ) - Min( MUM ,DS ) ) / ( ( CS * DS ) * Max( MLU,DS ) ) ) ) - ( ( Min( ( MLU * CS ) ,Min( CS ,RRSe ) ) / ( ( CS / DS ) - ( RRSe + RMSe ) ) ) * ( Min( ( RCSe + MUR ) ,( DS / MUR ) ) + Min( Max( RRSe,MLU ) ,( RRSe * MUM ) ) ) ) ) + Max( ( ( ( ( MUC - RCSe ) - ( MUR * CS ) ) - ( ( MUM / DS ) / ( RMSe / DS ) ) ) / ( ( ( MUR * MLU ) - Max( MUC,RMSe ) ) / Max( ( RCSe + RMSe ),Min( MUR ,MUC ) ) ) ),( Max( Max( ( MUC - RRSe ),Max( CS,RMSe ) ),( ( MUC * MUM ) * ( RCSe + RRSe ) ) ) / Min( ( ( MUM + DS ) - ( MUC + RRSe ) ) ,( ( DS * MUM ) * Min( RRSe ,MUM ) ) ) ) ) ) ) - ( Min( ( MUC - MLU ) ,( MLU * MUC ) ) + ( Min( RMSe ,MLU ) + ( RMSe - MUC ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.252045972211861}], "27": [{"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( MDR - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MUC ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_Mem ) - Max( ( CRS + PN ),( ( ( MDR - Const ) + MDR ) + ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MUC ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU / RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( Min( Max( ( CS / RMSe ),( MLU * RMSe ) ) ,( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,MUM ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( Min( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) ,Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( MUR,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RMSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / RRS ) - ( ( Const * PN ) + ( ( ( Const - RRS ) / MDR ) - ACS ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.3087652662011574}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + MDR ) )", "choosing": "( Min( CS ,CS ) * ( MLU - RMSe ) )", "obj1": 0.7681992337164751, "obj2": 0.12093684869852278}, {"determining": "( Max( FirstVNF_Mem_Server,( PN / RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( ( CS * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.7279693486590039, "obj2": 0.14831473573653123}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) - RMSe ) )", "obj1": 0.7931034482758621, "obj2": 0.09336040110131659}, {"determining": "( ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Min( MLU ,MLU ) * Max( CS,( RCSe + RMSe ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2275280920848892}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6704980842911877, "obj2": 0.19765462388985444}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( ( ( Min( AMS ,ACS ) - DDR ) - Const ) + MRS ) )", "choosing": "Min( ( Max( DS,MUC ) + CS ) ,( MLU / MUR ) )", "obj1": 0.7854406130268199, "obj2": 0.10714327156618307}, {"determining": "( ( RRS / RRS ) - ( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + DS ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.08548055928956902}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MUC * MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.047442200089246475}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - CS ) )", "obj1": 0.7126436781609196, "obj2": 0.1638617385830886}, {"determining": "( ( ARS - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / Max( DS,( CS + RRSe ) ) ) ) - Min( Max( RCSe,( Max( DS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) ,RRSe ) )", "obj1": 0.8639846743295019, "obj2": 0.055076150158898766}, {"determining": "( ( FirstVNF_Mem_Server * ( ( CRS - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) * Min( RMSe ,( MLU * MUC ) ) )", "obj1": 0.7030651340996169, "obj2": 0.17733045207554216}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) + ( CRS + PN ) )", "choosing": "( ( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ) * RMSe ) - Min( Max( RMSe,RRSe ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2971590913083036}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,Min( ARS ,PN ) ) )", "choosing": "( ( MLU - ( ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) - MUR ) ) * ( CS * ( ( MLU - ( RRSe * MUR ) ) * Min( MUM ,CS ) ) ) )", "obj1": 0.946360153256705, "obj2": 0.02363298245133968}, {"determining": "( ( RRS / RRS ) - ( MDR - ( Min( ( Const - RRS ) ,MDR ) - ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( CS + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - RRSe ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS - MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( DS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( RCSe / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.9272030651340997, "obj2": 0.03174455748797177}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( MUM - Min( MLU ,( MLU * MUC ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04119285728316492}, {"determining": "( ( Max( DDR,( FirstVNF_CPU / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( Max( RRSe,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8409961685823755, "obj2": 0.07347259419502253}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( MLU * MUC ) ) )", "obj1": 0.6973180076628352, "obj2": 0.18467272736357668}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,Min( MLU ,( MLU * MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03199583633421281}, {"determining": "( Min( DDR ,Min( DDR ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU )", "choosing": "( ( ( ( DS * DS ) - Min( ( RMSe / RRSe ) ,DS ) ) * DS ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.2885391288644176}, {"determining": "( ( PN + ( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) ) ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Min( MLU ,MLU ) * Max( ( RMSe - RMSe ),RCSe ) )", "obj1": 0.657088122605364, "obj2": 0.23675247174080727}, {"determining": "( ( ( ( DDR * RRS ) + FirstVNF_CPU ) * RRS ) + FirstVNF_CPU )", "choosing": "( Min( DS ,( Min( DS ,RMSe ) - Min( Max( MLU,RRSe ) ,CS ) ) ) - Min( Max( MLU,RRSe ) ,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24874372683057439}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( Max( DS,( CS / MUR ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.005434769847279214}, {"determining": "( Max( BR,DDR ) + FirstVNF_CPU )", "choosing": "( ( DS * DS ) - Min( ( RMSe / DS ) ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2837043663319221}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),ACS ) ) ,MDR ),ACS ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( RMSe - CS ) / ( RCSe + RMSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( DS ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2793913805294728}, {"determining": "( ( Max( ACS,( AMS / RRS ) ) - ( MDR + PN ) ) - ( MDR + PN ) )", "choosing": "( ( CS * ( RCSe + RMSe ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.8352490421455939, "obj2": 0.08447561226264848}, {"determining": "( ( ( ( ( Const - Const ) + MDR ) + ACS ) - FirstVNF_Mem ) + ( MDR / MRS ) )", "choosing": "( ( DS * ( RMSe * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.6494252873563219, "obj2": 0.23992895374358583}, {"determining": "( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) - ( MDR + RRS ) )", "choosing": "( ( Max( RRSe,MUM ) / ( RCSe / ( RCSe + RRSe ) ) ) - Min( Max( ( CS * ( RRSe * ( RCSe + RMSe ) ) ),RCSe ) ,RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.0436145770975241}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / ( ( FirstVNF_RAM + RRS ) - ( CRS * CRS ) ) ) ) - ( MDR + PN ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * ( RCSe / MUC ) )", "obj1": 0.8486590038314177, "obj2": 0.06902857063565139}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "Max( Min( RMSe ,MUC ),MUM )", "obj1": 0.6839080459770115, "obj2": 0.1883000707555711}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + RRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( MUM,RCSe ) )", "obj1": 0.6781609195402298, "obj2": 0.19007875314536166}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( RRSe * ( MUC + RMSe ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9770114942528736, "obj2": 0.008172944621177555}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_CPU_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( CS,Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.2691857333822418}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( Min( ( Min( DDR ,FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU )", "choosing": "( ( RMSe / RRSe ) - Min( ( RMSe / RRSe ) ,DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27486052164607794}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * Max( DS,( CS + RRSe ) ) ) + MUC ) ) * ( MUM - CS ) )", "obj1": 0.9501915708812261, "obj2": 0.019259816409601564}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / RRS ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) )", "obj1": 0.9578544061302682, "obj2": 0.0151080902647263}, {"determining": "( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,RRS ) ) - ( MDR + ( DDR - ( RRS * CRS ) ) ) )", "choosing": "( Min( CS ,( MLU + MUC ) ) * ( Max( CS,( RCSe + RMSe ) ) - RMSe ) )", "obj1": 0.8601532567049809, "obj2": 0.06193587364646046}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + RRS )", "choosing": "( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.24926110600231194}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - Min( MLU ,( DS * DS ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2575232671663168}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) - ( MDR + PN ) ) / RRS ) ) - ( MDR + ( MDR + PN ) ) )", "choosing": "( Min( MLU ,( MLU * MUC ) ) * Min( MLU ,( Min( MLU ,( MLU * MUC ) ) * MUC ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06245848704126536}, {"determining": "( ( ( ( Const + BR ) * ( FirstVNF_CPU_Server - MDR ) ) / Max( Min( FirstVNF_Mem_Server ,ARS ),( FirstVNF_RAM * MRS ) ) ) - ( MDR + PN ) )", "choosing": "( Min( RMSe ,( ( ( ( MUR / RCSe ) / ( RMSe + MUR ) ) - MUR ) * RMSe ) ) * ( RMSe - RMSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0009434804818727904}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_RAM / Max( ARS,FirstVNF_Mem ) ) ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( Min( CS ,( MLU + MUC ) ) * ( MUM - CS ) ) + MUC ) ) * ( Min( MUR ,( MLU * MUM ) ) - CS ) )", "obj1": 0.9693486590038314, "obj2": 0.010811030256696058}, {"determining": "( ( RRS / RRS ) - ( ( CRS + PN ) - Max( Min( ( Const - RRS ) ,MDR ),Min( DDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( Min( Min( Min( Max( CS,RRSe ) ,Min( CS ,RRSe ) ) ,( ( MLU + MLU ) * Min( RCSe ,MUR ) ) ) ,( ( ( DS + MUC ) * ( CS / MUC ) ) * ( Min( RCSe ,RCSe ) - Min( MUC ,MLU ) ) ) ) * ( ( Max( ( MUC * MUC ),( MUC + MUR ) ) - Max( ( MLU * CS ),( MLU - MUC ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe + RRSe ) ),Max( Max( RCSe,RMSe ),( CS - DS ) ) ) ) ) * ( ( ( Max( ( RMSe + DS ),Min( MLU ,MUR ) ) + ( ( MUR * RMSe ) - ( DS * MUR ) ) ) / Max( ( ( RCSe * MUC ) - ( DS + MLU ) ),( ( RRSe + MUM ) + ( MLU - RRSe ) ) ) ) + Max( ( ( Min( CS ,DS ) * ( RRSe + MUM ) ) - ( ( DS * DS ) - Min( MLU ,RRSe ) ) ),( ( ( RRSe * MUM ) - Min( MUR ,RMSe ) ) + ( Min( MUR ,MUC ) - ( RCSe + RCSe ) ) ) ) ) ),Min( ( ( ( ( ( CS + MUC ) + ( MUM + MUM ) ) - ( ( MUM + MUR ) / Min( MUR ,MUR ) ) ) / ( ( ( RRSe * MLU ) + Max( MUM,CS ) ) / ( Max( DS,MUR ) * ( MLU + CS ) ) ) ) / ( Max( ( Min( RRSe ,MUC ) + ( MUR + RRSe ) ),( ( MUM - MLU ) * ( DS / RMSe ) ) ) / Min( ( Min( DS ,RMSe ) / Min( CS ,MUM ) ) ,( ( CS + RCSe ) / ( CS - MUC ) ) ) ) ) ,( ( ( Max( ( CS / RMSe ),( MLU * RMSe ) ) + ( Max( MUM,RRSe ) * Max( MUM,MUC ) ) ) - ( Min( ( MUR / MUM ) ,Max( MUR,RRSe ) ) / Min( ( CS / RRSe ) ,Min( MLU ,DS ) ) ) ) + ( Min( ( ( CS / RMSe ) - ( MUM + RRSe ) ) ,( ( MUR + RCSe ) / ( MUR / MUR ) ) ) + Max( Min( ( MUR * RCSe ) ,Max( MUR,CS ) ),( Min( DS ,MUM ) + Min( MUM ,RCSe ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MUC,DS ) / ( RRSe - RRSe ) ) * ( Max( RRSe,DS ) * ( MUR / RRSe ) ) ) + Min( ( ( CS / RRSe ) / ( RRSe - DS ) ) ,( Max( RMSe,CS ) - Max( RMSe,CS ) ) ) ) * ( Max( ( ( MLU / MUC ) * ( DS * RMSe ) ),Min( Min( RCSe ,MUR ) ,Max( MLU,MLU ) ) ) / ( ( ( MLU / MLU ) / ( MUM - RRSe ) ) * Min( ( MLU - RMSe ) ,Max( CS,MUR ) ) ) ) ) - Min( ( ( ( ( MLU * MUM ) * ( RMSe + CS ) ) * ( ( DS - RCSe ) * ( CS / MUR ) ) ) - ( ( ( MLU / RMSe ) / ( DS - RCSe ) ) / ( ( MLU + DS ) - Min( MUR ,CS ) ) ) ) ,Min( ( ( ( MUR + MUR ) / ( RCSe * RMSe ) ) / Max( Min( CS ,MLU ),Max( MUM,DS ) ) ) ,( Max( ( MUR - DS ),( DS / CS ) ) - ( Max( MUM,MUM ) / ( MUR + MUC ) ) ) ) ) ) ,Min( ( ( ( ( Max( CS,RRSe ) / Min( RRSe ,MLU ) ) + ( ( MUR - RCSe ) + ( RRSe - RCSe ) ) ) * ( ( ( MUR - RMSe ) + ( CS / RCSe ) ) / ( ( RCSe + MUC ) - ( DS - MUM ) ) ) ) * Min( Min( ( ( MUC / RCSe ) * ( MUR - RMSe ) ) ,( ( RCSe - MUC ) - ( MUC - RMSe ) ) ) ,Min( ( Min( CS ,RCSe ) + Min( RRSe ,RMSe ) ) ,Min( ( MLU / MUR ) ,( MUM + RCSe ) ) ) ) ) ,Max( ( ( Min( ( MUM * MLU ) ,( RRSe * MLU ) ) - ( ( CS / MLU ) - ( RCSe / RCSe ) ) ) * ( Max( ( RRSe - RCSe ),( DS * DS ) ) + ( ( MUC / MLU ) / ( MLU + MUM ) ) ) ),( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU + MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RCSe ) - ( RRSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26412296461741447}, {"determining": "( Max( ( CRS + PN ),( ( ( Const - Const ) + MDR ) + ACS ) ) + ( BR + DDR ) )", "choosing": "( ( MUR * DS ) - ( ( Max( Min( MUC ,RCSe ),( RMSe / MUR ) ) - ( ( MUR / CS ) - Max( MUR,RMSe ) ) ) / ( ( ( MLU * MUR ) / ( RCSe / RRSe ) ) + ( ( CS / RMSe ) - ( RRSe / RMSe ) ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2638618025647137}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * Min( ARS ,PN ) ) - Max( Const,PN ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( Max( CS,( CS + RRSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RRSe ) ) / ( RCSe / ( RMSe + RRSe ) ) ) - Min( Max( ( RRSe * ( RRSe / ( DS + MUM ) ) ),RCSe ) ,RCSe ) )", "obj1": 0.9636015325670498, "obj2": 0.013023734982901785}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS + Max( ( Max( FirstVNF_Mem_Server,( ACS / RRS ) ) - ( MDR + PN ) ),( PN / RRS ) ) ) ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,( Max( RCSe,( Max( MUC,( CS + RCSe ) ) / ( CS * ( RCSe + RMSe ) ) ) ) / RMSe ) ) * ( Max( DS,( CS + RRSe ) ) + MUR ) )", "obj1": 0.6264367816091954, "obj2": 0.25523563701269186}, {"determining": "( Max( AMS,( FirstVNF_RAM * RRS ) ) - ( MDR + PN ) )", "choosing": "( ( Min( RRSe ,( Max( RCSe,( ( DS * ( CS / MUR ) ) / Max( CS,( RCSe + RMSe ) ) ) ) / RMSe ) ) / ( RCSe / ( RCSe + MLU ) ) ) - Min( Max( ( RRSe * ( RRSe * ( RCSe + RMSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.15314484979631596}, {"determining": "( ( FirstVNF_RAM + ( MRS + CRS ) ) * ( Min( ( ( ARS + Const ) + FirstVNF_RAM ) ,Min( ( FirstVNF_RAM + RRS ) ,FirstVNF_CPU_Server ) ) * PN ) )", "choosing": "( ( ( ( Min( Max( ( ( CS / MUR ) / ( MLU / MUR ) ),( Min( DS ,MUM ) + ( RMSe * MLU ) ) ) ,( ( Min( RCSe ,CS ) * ( DS * CS ) ) * ( Max( MUC,MLU ) * ( MUM * MLU ) ) ) ) / ( Min( Max( ( MUC / RMSe ),( MUR + RRSe ) ) ,( ( MUM + RMSe ) / Max( RMSe,MUC ) ) ) * ( ( ( RCSe - MUR ) / ( MUR - CS ) ) - ( ( MUM - MUR ) + Max( RMSe,MUC ) ) ) ) ) / ( ( Max( Max( Max( RRSe,RMSe ),Min( MLU ,DS ) ),( ( DS + RRSe ) + Max( MUR,MUC ) ) ) + ( ( ( DS / RCSe ) - Max( CS,RMSe ) ) - ( Min( MLU ,MUR ) - ( MLU * CS ) ) ) ) / ( ( Max( Max( MUR,CS ),Min( RCSe ,MUR ) ) * ( ( MUC - RMSe ) + ( RMSe / RRSe ) ) ) + Max( Min( Max( RCSe,CS ) ,( MUR - CS ) ),( Min( RMSe ,DS ) * ( DS / MUC ) ) ) ) ) ) + ( ( ( ( Max( Max( CS,MUR ),( RCSe * RRSe ) ) - ( ( MUC * DS ) * ( MUR + RMSe ) ) ) + ( ( ( CS + RCSe ) - Min( MUM ,DS ) ) / ( ( CS * DS ) * Max( MLU,DS ) ) ) ) - ( ( Min( ( MLU * CS ) ,Min( CS ,RRSe ) ) / ( ( CS / DS ) - ( RRSe + RMSe ) ) ) * ( Min( ( RCSe + MUR ) ,( DS / MUR ) ) + Min( Max( RRSe,MLU ) ,( RRSe * MUM ) ) ) ) ) + Max( ( ( ( ( MUC - RCSe ) - ( MUR * CS ) ) - ( ( MUM / DS ) / ( RMSe / DS ) ) ) / ( ( ( MUR * MLU ) - Max( MUC,RMSe ) ) / Max( ( RCSe + RMSe ),Min( MUR ,MUC ) ) ) ),( Max( Max( ( MUC - RRSe ),Max( CS,RMSe ) ),( ( MUC * MUM ) * ( RCSe + RRSe ) ) ) / Min( ( ( MUM + DS ) - ( MUC + RRSe ) ) ,( ( DS * MUM ) * Min( RRSe ,MUM ) ) ) ) ) ) ) - ( Min( ( MUC - MLU ) ,( MLU * MUC ) ) + ( Min( RMSe ,MLU ) + ( RMSe - MUC ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.252045972211861}]}