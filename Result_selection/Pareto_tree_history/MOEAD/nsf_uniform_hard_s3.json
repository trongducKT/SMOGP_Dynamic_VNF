{"1": [{"determining": "Min( ( ARS * AMS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( Max( RMSe,RRSe ) / ( MUR - MUM ) )", "obj1": 0.6877394636015326, "obj2": 0.2838356015481465}, {"determining": "( ( FirstVNF_Mem * Max( PN,RRS ) ) * ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) / ( ( Max( MUC,MUC ) * ( MUC - MUC ) ) - ( Min( CS ,RMSe ) + ( RMSe * MUR ) ) ) )", "obj1": 0.7145593869731801, "obj2": 0.2882060369426255}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( PN / FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS / DS ),( RMSe / CS ) )", "obj1": 0.7049808429118773, "obj2": 0.2726414397555204}, {"determining": "Min( ( DDR - MRS ) ,( BR + BR ) )", "choosing": "( ( RRSe / DS ) + ( RCSe - MUM ) )", "obj1": 0.7241379310344828, "obj2": 0.30962242801211076}, {"determining": "( ( ACS * Const ) + ( AMS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + MLU ) ,( MUR - MLU ) )", "obj1": 0.7394636015325671, "obj2": 0.2801487891851457}, {"determining": "( ( FirstVNF_Mem_Server - MRS ) * Min( ( CRS * DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( RMSe + MUM ) * ( ( Max( Max( Min( ( ( RMSe * RCSe ) - CS ) ,MLU ),MLU ),MUM ) + MUR ) - MUM ) )", "obj1": 0.685823754789272, "obj2": 0.2552025454433728}, {"determining": "( ( AMS + ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( ( RRSe * RRSe ),( MUR * ( MLU + MUC ) ) )", "obj1": 0.6685823754789272, "obj2": 0.27461728915703326}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / ( Const / FirstVNF_Mem_Server ) )", "choosing": "Max( ( RMSe + CS ),( MLU + RCSe ) )", "obj1": 0.7030651340996169, "obj2": 0.2741212069322142}, {"determining": "( ( CRS + FirstVNF_CPU ) + Max( BR,AMS ) )", "choosing": "( ( MUM * CS ) / ( DS + MUR ) )", "obj1": 0.6609195402298851, "obj2": 0.2829778562454973}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - Const ) )", "choosing": "( ( MUM + RRSe ) * ( DS * MUM ) )", "obj1": 0.6819923371647509, "obj2": 0.270749006627077}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( CRS + ( FirstVNF_Mem_Server * RRS ) ) )", "choosing": "Max( ( MUM * RRSe ),( ( MUM * ( RCSe / ( DS - MLU ) ) ) / MUC ) )", "obj1": 0.6915708812260536, "obj2": 0.27002691325909145}, {"determining": "( ( BR + ( ( ( ( ACS * ( ( FirstVNF_CPU_Server - AMS ) - FirstVNF_Mem_Server ) ) + AMS ) + CRS ) * Max( Const,ARS ) ) ) + ( FirstVNF_CPU_Server + CRS ) )", "choosing": "( ( RRSe / DS ) + Max( ( Max( ( RRSe / ( CS + DS ) ),RRSe ) / MLU ),MUM ) )", "obj1": 0.685823754789272, "obj2": 0.278180729884398}, {"determining": "( Min( AMS ,AMS ) * ( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( MUR + DS ) + Max( RMSe,DS ) )", "obj1": 0.7145593869731801, "obj2": 0.2625869242258497}, {"determining": "( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.6283524904214559, "obj2": 0.26748373642779083}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) )", "choosing": "( ( RMSe + RMSe ) / Min( DS ,MUM ) )", "obj1": 0.6819923371647509, "obj2": 0.2626463967970286}, {"determining": "( ( DDR - Const ) + ( ACS + BR ) )", "choosing": "( ( MUC * MLU ) / ( MUC + CS ) )", "obj1": 0.6992337164750958, "obj2": 0.26994855000715334}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 0.8333333333333334, "obj2": 0.14558099094474553}, {"determining": "Min( ( BR / FirstVNF_Mem ) ,( FirstVNF_Mem * CRS ) )", "choosing": "( ( MUR - CS ) + Max( CS,RMSe ) )", "obj1": 0.7049808429118773, "obj2": 0.2651117983671875}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "Min( ( RRS + ARS ) ,Max( ARS,RRS ) )", "choosing": "( ( MLU + MUR ) / ( MUR / RCSe ) )", "obj1": 0.7049808429118773, "obj2": 0.2677321721471466}, {"determining": "Max( Max( Const,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "( ( DS / RCSe ) - ( MUR - MUM ) )", "obj1": 0.710727969348659, "obj2": 0.26576316830190494}, {"determining": "( ( FirstVNF_Mem_Server - Const ) * ( ACS / ARS ) )", "choosing": "( ( MLU - MUC ) - Max( DS,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.2814001679556368}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * ( ( ACS - CRS ) * FirstVNF_CPU ) ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUM,MLU ) ,( Max( RRSe,RRSe ) * MUM ) )", "obj1": 0.7394636015325671, "obj2": 0.2908727684082328}, {"determining": "Max( Min( ACS ,BR ),Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 0.7452107279693486, "obj2": 0.2560568733597695}, {"determining": "( ( ARS / MDR ) + ( ARS / BR ) )", "choosing": "( ( MLU - RRSe ) - Max( DS,MUC ) )", "obj1": 0.7605363984674329, "obj2": 0.26559550155077577}, {"determining": "( ( ACS - FirstVNF_Mem ) - ( MRS + RRS ) )", "choosing": "( ( RCSe * MUR ) - Max( ( RCSe * MLU ),( ( MUM + CS ) / Min( ( ( MUR / ( ( CS / MLU ) * MUC ) ) * Min( CS ,RCSe ) ) ,DS ) ) ) )", "obj1": 0.7413793103448276, "obj2": 0.27536327457475546}, {"determining": "Max( ( MDR + ( Min( Max( ACS,( FirstVNF_Mem_Server + ( FirstVNF_RAM - CRS ) ) ) ,( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,PN ) ) ) - DDR ) ),( FirstVNF_RAM + ACS ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( Min( MLU ,Min( DS ,( MUR / ( ( RCSe - MUC ) * DS ) ) ) ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.6954022988505747, "obj2": 0.27444970229636756}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6130268199233716, "obj2": 0.26625655867022086}, {"determining": "( Max( Const,AMS ) * ( AMS + DDR ) )", "choosing": "( ( MUC * RCSe ) * Min( MUR ,MUM ) )", "obj1": 0.6896551724137931, "obj2": 0.27580756133317785}, {"determining": "( ( AMS / DDR ) + ( MRS * ACS ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 0.7471264367816092, "obj2": 0.24318383057599616}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 0.7375478927203065, "obj2": 0.280520043444022}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,AMS ) ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * Max( Max( PN,AMS ),Max( FirstVNF_Mem_Server,ARS ) ) )", "choosing": "( Max( ( MUC + MUC ),( RMSe / RRSe ) ) - ( MUR * MUM ) )", "obj1": 0.6781609195402298, "obj2": 0.25163404181387294}, {"determining": "( ( ARS / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( RMSe + MLU ) )", "obj1": 0.7203065134099617, "obj2": 0.2925134416677463}, {"determining": "Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) )", "choosing": "( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) )", "obj1": 0.7011494252873564, "obj2": 0.26809202709050656}, {"determining": "( ( ( FirstVNF_CPU - MDR ) + ( FirstVNF_Mem_Server - AMS ) ) * ( ( FirstVNF_Mem_Server + RRS ) / ( DDR / PN ) ) )", "choosing": "( ( Max( MLU,RMSe ) / ( MUC * MUC ) ) - ( ( RRSe - CS ) / ( CS + MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.2609450931830669}, {"determining": "( ( Min( Const ,PN ) * ( FirstVNF_Mem / DDR ) ) * ( ( MRS * CRS ) + ( CRS + ARS ) ) )", "choosing": "Max( ( Max( MUR,CS ) + RCSe ),( RRSe / CS ) )", "obj1": 0.6704980842911877, "obj2": 0.2898363387773372}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( CRS,FirstVNF_RAM_Server ) + AMS ) )", "choosing": "( Max( RRSe,RMSe ) - ( RMSe * CS ) )", "obj1": 0.6896551724137931, "obj2": 0.2814054181693285}, {"determining": "Min( ( Min( BR ,PN ) + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Min( Max( AMS,FirstVNF_CPU_Server ) ,( FirstVNF_RAM * MRS ) ) )", "choosing": "( ( MLU - ( MUR / CS ) ) + ( ( MUR * CS ) + MUM ) )", "obj1": 0.7413793103448276, "obj2": 0.27686641856027533}, {"determining": "Max( ( ACS + MRS ),( AMS / ( AMS - Const ) ) )", "choosing": "( Max( Max( MUC,RMSe ),Max( MUM,MUR ) ) - ( Max( RRSe,DS ) / Max( MUR,DS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.2807196116239495}, {"determining": "Max( ( ACS - ( ARS - ACS ) ),Min( Min( ACS ,RRS ) ,Const ) )", "choosing": "( ( Min( MUC ,DS ) / ( RCSe + MUR ) ) + ( Min( DS ,MUR ) - ( MLU - MLU ) ) )", "obj1": 0.7298850574712644, "obj2": 0.2890019754860135}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( ( Min( RCSe ,RCSe ) / ( CS * RRSe ) ) * Max( Max( MLU,DS ),Min( MUM ,MUM ) ) )", "obj1": 0.6934865900383141, "obj2": 0.27130130774594713}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM * CRS ) ) - ( Max( ACS,DDR ) / ( MDR - DDR ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 0.7490421455938697, "obj2": 0.24310515131757887}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - Min( ( FirstVNF_RAM_Server / RRS ) ,Min( Const ,PN ) ) )", "choosing": "( Min( ( RRSe * CS ) ,( MUC / CS ) ) + ( ( MUM - RMSe ) / ( MUM / MUC ) ) )", "obj1": 0.710727969348659, "obj2": 0.287671594210762}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_RAM / PN ) ) / Min( ( MRS + PN ) ,( BR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS - ( MUM / MLU ) ) * ( MUC + MUM ) )", "obj1": 0.7318007662835249, "obj2": 0.2847663618242436}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * ( DDR - AMS ) ) + ( Min( FirstVNF_RAM ,ACS ) - ( FirstVNF_CPU * PN ) ) )", "choosing": "( Max( ( MUM - RCSe ),( MLU * MUC ) ) - ( ( CS * MLU ) * ( CS + MUR ) ) )", "obj1": 0.7068965517241379, "obj2": 0.26710819454061585}, {"determining": "( ( Min( Const ,AMS ) * ARS ) - ( FirstVNF_Mem_Server * MRS ) )", "choosing": "Min( ( MLU * RRSe ) ,( Min( RMSe ,CS ) + Min( CS ,RMSe ) ) )", "obj1": 0.7145593869731801, "obj2": 0.26627051630810794}, {"determining": "( Max( ( DDR / ARS ),( FirstVNF_CPU_Server / AMS ) ) + ( MRS * ( DDR - ( ARS + FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( Min( DS ,( ( ( CS * RMSe ) * Max( ( MUC + MUC ),MUC ) ) / MUR ) ) ,RCSe ),Max( RCSe,Max( RRSe,CS ) ) )", "obj1": 0.6609195402298851, "obj2": 0.2936768718054276}, {"determining": "( ( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / ACS ) ) / Min( AMS ,ARS ) )", "choosing": "( ( MUC / ( RRSe * RCSe ) ) - Max( RMSe,( MUM + MLU ) ) )", "obj1": 0.6475095785440613, "obj2": 0.2691490878644883}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,ACS ) ,Min( PN ,MDR ) )", "choosing": "( ( ( MUC - MUC ) - ( CS * RRSe ) ) / ( ( MUM / RRSe ) / ( RRSe * MUM ) ) )", "obj1": 0.6494252873563219, "obj2": 0.24963594935860753}, {"determining": "Min( ( ( ACS / RRS ) + ( FirstVNF_RAM * CRS ) ) ,( Max( BR,FirstVNF_Mem_Server ) + ( DDR - RRS ) ) )", "choosing": "( Max( ( MLU - CS ),( MUM - MUM ) ) * Min( ( MLU / MUR ) ,( RCSe + MUM ) ) )", "obj1": 0.7260536398467433, "obj2": 0.26726983888118044}, {"determining": "( Min( ( ACS * BR ) ,Min( Const ,FirstVNF_Mem ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RRSe,MLU ) + ( RMSe / RRSe ) )", "obj1": 0.7164750957854407, "obj2": 0.2955190712038296}, {"determining": "( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Max( Const,PN ) ) * ( ( DDR + MRS ) * Max( FirstVNF_Mem,RRS ) ) )", "choosing": "( ( Max( MUC,RMSe ) + MUM ) / ( RCSe + MUR ) )", "obj1": 0.7203065134099617, "obj2": 0.27626391304311104}, {"determining": "( Min( Max( MDR,RRS ) ,AMS ) + Min( CRS ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - RRSe ) - ( ( RRSe + RCSe ) - ( MUC / RRSe ) ) )", "obj1": 0.7030651340996169, "obj2": 0.2740327146224895}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 0.8486590038314177, "obj2": 0.15280842741294579}, {"determining": "( ( DDR / DDR ) - ( ( RRS + ACS ) * DDR ) )", "choosing": "Min( Min( ( RMSe - MUR ) ,Min( MUC ,MUR ) ) ,( ( RRSe + CS ) * ( MUM * DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.2697595321996572}, {"determining": "Min( Max( FirstVNF_Mem,( FirstVNF_CPU_Server / MDR ) ) ,( FirstVNF_Mem * Const ) )", "choosing": "( ( ( MUM - ( CS + ( ( CS / RMSe ) - Max( DS,MUM ) ) ) ) + RRSe ) / ( Max( RMSe,DS ) + ( MUR - CS ) ) )", "obj1": 0.6819923371647509, "obj2": 0.29303032471102314}, {"determining": "( Max( ( RRS - ( MRS * Max( ( ( RRS - Max( FirstVNF_CPU,MDR ) ) / PN ),( Max( ACS,( AMS * DDR ) ) * Min( RRS ,CRS ) ) ) ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server * Max( Const,RRS ) ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Min( ( MUR * ( ( MUM - ( RRSe / MUR ) ) / ( RRSe * ( ( RMSe / CS ) + ( RRSe + MUM ) ) ) ) ) ,CS ) - CS ) + Max( MUM,RRSe ) )", "obj1": 0.6360153256704981, "obj2": 0.2587380891136019}, {"determining": "( ( ( BR * FirstVNF_Mem_Server ) * Max( BR,FirstVNF_RAM ) ) / ( ( RRS * DDR ) + Min( PN ,DDR ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - ( RRSe + MUC ) ),( Max( MLU,RRSe ) * ( RMSe - MUR ) ) )", "obj1": 0.7068965517241379, "obj2": 0.2824239438915584}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - FirstVNF_Mem ) + ( ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server / ( RRS - AMS ) ) ) + MRS ) / RRS ) )", "choosing": "( Min( Max( RMSe,MUR ) ,MLU ) * ( ( MUM / MUC ) * RMSe ) )", "obj1": 0.8620689655172413, "obj2": 0.12493024094372004}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) )", "choosing": "( Max( Max( MUR,MLU ),( MUR / RRSe ) ) / ( ( DS * MUC ) * ( DS - RRSe ) ) )", "obj1": 0.6915708812260536, "obj2": 0.26275911906628446}, {"determining": "Min( ( Min( ( FirstVNF_Mem_Server / RRS ) ,( DDR + FirstVNF_RAM ) ) - ( ( MDR + FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ,( Min( ( ACS - ACS ) ,( ARS / FirstVNF_Mem ) ) / ( ( MDR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( MUM,RRSe ) * ( MUC / MLU ) ) * ( Min( MUR ,MUR ) * ( CS - MUR ) ) ) - Min( Min( ( RRSe + MLU ) ,( RRSe - DS ) ) ,( Max( RMSe,CS ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7337164750957854, "obj2": 0.28210204244366477}, {"determining": "Max( ( DDR + Min( AMS ,BR ) ),Min( DDR ,( Min( Const ,MRS ) + CRS ) ) )", "choosing": "( ( Max( ( RRSe / RMSe ),( RRSe - MUR ) ) - ( ( MUM - RCSe ) - Min( DS ,RCSe ) ) ) * ( Min( Min( RCSe ,MUR ) ,( MUC + MUM ) ) - ( ( MUR + DS ) - ( RCSe + MUR ) ) ) )", "obj1": 0.7337164750957854, "obj2": 0.28404116784979877}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) - MDR ) * FirstVNF_Mem ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( Max( Max( RMSe,MLU ),( RRSe - DS ) ) + ( Min( RRSe ,RRSe ) * ( MUR + MUC ) ) ) - Min( Min( ( RMSe + RMSe ) ,( RCSe * RRSe ) ) ,( Min( MLU ,RRSe ) - Max( MUM,DS ) ) ) )", "obj1": 0.789272030651341, "obj2": 0.1964852306091257}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_RAM / Const ) ,FirstVNF_CPU_Server ) - ( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( MLU + RCSe ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7279693486590039, "obj2": 0.25547779403837617}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( FirstVNF_RAM_Server / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * ( RMSe - RRSe ) ) ) )", "obj1": 0.6494252873563219, "obj2": 0.2796982044182109}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / RRS ) * Min( FirstVNF_RAM_Server ,AMS ) ) / ( ( MDR + MDR ) / Min( MDR ,FirstVNF_RAM_Server ) ) ) * ( Max( ( AMS - MDR ),( FirstVNF_RAM_Server - DDR ) ) / ( Max( BR,MDR ) - ( DDR - ACS ) ) ) )", "choosing": "( Min( Min( Min( MUC ,DS ) ,( MUM + MUR ) ) ,( Max( MLU,MUM ) / Max( CS,RRSe ) ) ) / ( ( Min( CS ,RMSe ) - Min( MUC ,DS ) ) + ( ( RCSe * MUR ) + ( RRSe / RMSe ) ) ) )", "obj1": 0.7183908045977011, "obj2": 0.25911250963713306}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM * ( FirstVNF_Mem_Server + MDR ) ) ) + FirstVNF_CPU_Server ) + CRS ) - Min( Max( ( ARS + ( ( Const / RRS ) / Min( FirstVNF_CPU ,MDR ) ) ),MRS ) ,ACS ) ) * ( ( MDR / ( FirstVNF_CPU_Server + ARS ) ) + MRS ) )", "choosing": "( Min( Max( MUC,( MUM - Min( ( ( CS * MUC ) + Max( RRSe,Max( MUC,RMSe ) ) ) ,MUC ) ) ) ,( ( ( MUR / MUR ) / MUR ) * ( MUR + DS ) ) ) / ( Max( Max( MUC,MLU ),Max( CS,MUM ) ) * ( Min( CS ,RCSe ) - ( RRSe / DS ) ) ) )", "obj1": 0.6781609195402298, "obj2": 0.27918666783264756}, {"determining": "( Min( Min( AMS ,FirstVNF_CPU ) ,CRS ) + ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( ( CS * MUC ) / ( Max( Max( RRSe,RRSe ),MUC ) * CS ) )", "obj1": 0.7318007662835249, "obj2": 0.29324841880916785}, {"determining": "Min( Min( Max( ( PN * MRS ),Min( FirstVNF_RAM ,Const ) ) ,( ( AMS - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ,Min( ( Max( BR,PN ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem * MDR ) - ( RRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS * MUC ) / ( RCSe + RRSe ) ) / ( ( MUM * DS ) / ( MUM / MUC ) ) ) - ( ( Max( RRSe,CS ) * Max( CS,CS ) ) / ( ( CS - CS ) + ( MUR / MLU ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.11554703012848737}, {"determining": "Max( Max( FirstVNF_Mem,Const ),( ( DDR - RRS ) + BR ) )", "choosing": "( ( ( ( RCSe / RCSe ) / ( MLU - RCSe ) ) - ( Max( MUC,MUM ) / ( MUM * CS ) ) ) / ( Min( ( MUR - MUC ) ,Min( MUM ,RMSe ) ) + ( ( MUR - MUC ) - ( ( MUM - RMSe ) - MUR ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.27281827334103975}, {"determining": "( Min( ( ( FirstVNF_CPU / BR ) * ( FirstVNF_RAM - ACS ) ) ,( ( RRS + ACS ) * Max( DDR,DDR ) ) ) * Min( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( MDR / FirstVNF_CPU_Server ) ) ,( ( DDR / DDR ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + Max( ( ( MUC + RMSe ) + Max( MLU,RMSe ) ),( ( DS / RRSe ) + ( MUC - RRSe ) ) ) )", "obj1": 0.7854406130268199, "obj2": 0.19761185306619664}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Max( ( RRS * MDR ),( CRS + AMS ) ),( ( Const * CRS ) / Min( FirstVNF_Mem ,MRS ) ) ),( ( ( PN * CRS ) + Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_RAM_Server ,RRS ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( RRSe - MUR ) ,MUR ) + RMSe ) * Min( ( ( RMSe / RRSe ) / RMSe ) ,( ( RMSe - CS ) - MUR ) ) )", "obj1": 0.7298850574712644, "obj2": 0.25196569665797425}, {"determining": "( Min( RRS ,( RRS / FirstVNF_RAM_Server ) ) / Max( ( ( MRS + BR ) * AMS ),RRS ) )", "choosing": "( Max( DS,( ( RMSe + MLU ) - ( DS / MUM ) ) ) + ( Min( CS ,RMSe ) + ( CS + MUC ) ) )", "obj1": 0.6781609195402298, "obj2": 0.28416124497627776}, {"determining": "Max( Max( Max( Max( FirstVNF_Mem,RRS ),Max( AMS,FirstVNF_CPU_Server ) ),( Min( ARS ,Const ) - ( ACS - AMS ) ) ),Min( ( Min( MDR ,FirstVNF_Mem_Server ) + Max( RRS,BR ) ) ,Min( ( FirstVNF_Mem - AMS ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe * ( ( RCSe + MUM ) * ( RMSe * MLU ) ) ) - ( MUM + ( ( RRSe / RMSe ) * MUM ) ) )", "obj1": 0.7241379310344828, "obj2": 0.27564249906119015}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) )", "choosing": "( ( DS * RCSe ) - ( MUC - MUC ) )", "obj1": 0.9904214559386973, "obj2": 0.004253697340937279}, {"determining": "( ( Min( Max( RRS,PN ) ,( MRS - MRS ) ) * ( ( RRS * FirstVNF_CPU ) * ( MDR * CRS ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - CS ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.2666217898182058}, {"determining": "( ( Min( ( BR / DDR ) ,( FirstVNF_CPU * ACS ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUM ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.7337164750957854, "obj2": 0.2742435215908167}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( CRS + MRS ) ) + ( ( FirstVNF_Mem_Server * RRS ) + Min( Const ,CRS ) ) ) / Max( ( ( BR / BR ) / ( RRS * ACS ) ),( ( FirstVNF_CPU_Server + CRS ) * ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( ( Max( RMSe,CS ) + ( DS - MUM ) ) / ( ( MUR + MLU ) / Min( MLU ,MUM ) ) ) / ( ( ( MUM / MUR ) + ( RMSe * MUC ) ) - Max( ( RRSe * MUR ),( CS / MUC ) ) ) )", "obj1": 0.7413793103448276, "obj2": 0.24313479568226995}, {"determining": "Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ARS / PN ) + ( PN - MDR ) ) ) )", "choosing": "( Max( MLU,MUC ) + Max( MUM,Max( MUC,MUR ) ) )", "obj1": 0.7413793103448276, "obj2": 0.272055701283588}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_Mem_Server ) * ( ( Min( ACS ,CRS ) + FirstVNF_Mem ) * DDR ) )", "choosing": "Min( Min( ( Max( DS,RMSe ) + ( RMSe * DS ) ) ,Max( Max( RCSe,RMSe ),Min( MUM ,CS ) ) ) ,Max( ( Min( CS ,CS ) / ( Min( RCSe ,Min( MUC ,MUM ) ) - MUR ) ),( ( RRSe + MUC ) / ( MUM + MLU ) ) ) )", "obj1": 0.6475095785440613, "obj2": 0.27635797249543725}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) / ( AMS + Min( MRS ,( ACS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * Max( DS,RRSe ) ) / ( Max( MUR,MLU ) / ( RRSe * RMSe ) ) ) / Min( ( ( MUR / RRSe ) * ( MUM + RMSe ) ) ,( Min( DS ,RMSe ) - Max( DS,RMSe ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.27309674795668465}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Max( ( ( FirstVNF_CPU_Server / MDR ) * ACS ),Const ) ) * ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) )", "choosing": "( Min( MUC ,RRSe ) + ( ( Max( MUM,( ( ( ( CS / MLU ) - Max( RRSe,MLU ) ) * MUR ) - MUC ) ) * Max( MUC,Max( ( MUR / CS ),DS ) ) ) / ( ( RMSe - MUC ) / ( RCSe + MLU ) ) ) )", "obj1": 0.6187739463601533, "obj2": 0.2724589001187676}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( MLU / MUM ) * Min( RRSe ,MUC ) )", "obj1": 0.6992337164750958, "obj2": 0.2760909497485683}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + Max( DDR,AMS ) ) / CRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,RRSe ) / ( MUR - DS ) )", "obj1": 0.7145593869731801, "obj2": 0.2911285115664025}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( MUM / RCSe ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.008646487508362126}, {"determining": "( ( Max( ( AMS * Const ),Max( MRS,FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,DDR ) / ( ARS * BR ) ) ) / ( Max( ( Const - MRS ),( FirstVNF_CPU + BR ) ) - ( Max( FirstVNF_Mem_Server,ARS ) - ( AMS * MRS ) ) ) )", "choosing": "( ( MUC * ( MUC + MLU ) ) - ( MUM / Max( ( MUR - RCSe ),MLU ) ) )", "obj1": 0.6973180076628352, "obj2": 0.24619030921729781}], "2": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,FirstVNF_RAM ) + Max( ARS,Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "( ( CS / DS ) / Min( ( RMSe - ( RRSe / Max( RMSe,( RRSe / ( ( RCSe - DS ) - Min( RMSe ,MUM ) ) ) ) ) ) ,( MUR - MLU ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( Min( ( ( FirstVNF_CPU / BR ) * ( FirstVNF_RAM - ACS ) ) ,( ( RRS + ACS ) * Max( DDR,DDR ) ) ) * Min( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( MDR / FirstVNF_CPU_Server ) ) ,( ( DDR / DDR ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 0.9137931034482759, "obj2": 0.0704072777876791}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM * ACS ) ) * ( BR / Min( FirstVNF_Mem ,ACS ) ) ) ,( DDR + FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUC ,( ( RCSe + MUC ) * ( Max( RCSe,CS ) - Max( MLU,Min( ( RCSe + RMSe ) ,MLU ) ) ) ) ),( ( RCSe - MUC ) * Max( Min( MLU ,MUC ),MUR ) ) )", "obj1": 0.6436781609195402, "obj2": 0.22065644465147521}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - FirstVNF_Mem )", "choosing": "Max( ( RMSe / DS ),( RMSe / CS ) )", "obj1": 0.9022988505747126, "obj2": 0.1062310933073201}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( FirstVNF_RAM_Server / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * ( RMSe - RRSe ) ) ) )", "obj1": 0.7720306513409961, "obj2": 0.19055155363164802}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "Min( Min( Max( ( PN * MRS ),Min( FirstVNF_RAM ,Const ) ) ,( ( AMS - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ,Min( ( Max( BR,PN ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem * MDR ) - ( RRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS * MUC ) / ( RCSe + RRSe ) ) / ( ( MUM * DS ) / ( MUM / MUC ) ) ) - ( ( Max( RRSe,CS ) * Max( CS,CS ) ) / ( ( CS - CS ) + ( MUR / MLU ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.11554703012848737}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( ( Min( ( FirstVNF_RAM / Const ) ,FirstVNF_CPU_Server ) - ( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( MLU + RCSe ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7739463601532567, "obj2": 0.16956798179616406}, {"determining": "( ( ACS - FirstVNF_Mem ) - ( MRS + RRS ) )", "choosing": "( ( RCSe * MUR ) - Max( ( RCSe * MLU ),( ( MUM + CS ) / Min( ( ( MUR / ( ( CS / MLU ) * MUC ) ) * Min( CS ,RCSe ) ) ,DS ) ) ) )", "obj1": 0.8084291187739464, "obj2": 0.1605302110950127}, {"determining": "( ( ( ( RRS / RRS ) * Min( FirstVNF_RAM_Server ,AMS ) ) / ( ( MDR + MDR ) / Min( MDR ,FirstVNF_RAM_Server ) ) ) * ( Max( ( AMS - MDR ),( FirstVNF_RAM_Server - DDR ) ) / ( Max( BR,MDR ) - ( DDR - ACS ) ) ) )", "choosing": "( ( Max( ( DS / MUM ),( RRSe * CS ) ) * Min( Max( MLU,CS ) ,Min( RCSe ,RCSe ) ) ) / ( Max( Max( MUC,MLU ),Max( CS,MUM ) ) * ( Min( CS ,RCSe ) - ( RRSe / DS ) ) ) )", "obj1": 0.6398467432950191, "obj2": 0.25594881479404735}, {"determining": "Min( Min( Max( ( PN * BR ),Min( FirstVNF_RAM ,Const ) ) ,( ( AMS - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ,Min( ( Max( BR,PN ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem * MDR ) - ( RRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS * ( Min( ( MUR - MUC ) ,Min( MUM ,RMSe ) ) + ( ( MUR - MUC ) - ( ( MUM - RMSe ) - MUR ) ) ) ) / ( RCSe + RRSe ) ) / ( ( MUM * DS ) / ( MUM / MUC ) ) ) - ( ( Max( RRSe,CS ) * Max( CS,CS ) ) / ( ( CS - CS ) + ( MUR / MLU ) ) ) )", "obj1": 0.8103448275862069, "obj2": 0.15097724891787703}, {"determining": "Min( Min( Max( ( PN * MRS ),Min( FirstVNF_RAM ,Const ) ) ,( ( AMS - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ,Min( ( Max( BR,PN ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem * MDR ) - ( RRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe / RCSe ) / ( MLU - RCSe ) ) - ( Max( MUC,MUM ) / ( MUM * CS ) ) ) / ( Min( ( MUR - MUC ) ,Min( MUM ,RMSe ) ) + ( ( MUR - MUC ) - ( ( MUM - RMSe ) - MUR ) ) ) )", "obj1": 0.8314176245210728, "obj2": 0.1384793794687016}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - FirstVNF_Mem ) + ( ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server / ( RRS - AMS ) ) ) + MRS ) / RRS ) )", "choosing": "( Min( Max( RMSe,MUR ) ,MLU ) * ( ( MUM / MUC ) * RMSe ) )", "obj1": 0.8620689655172413, "obj2": 0.12493024094372004}, {"determining": "( ( RRS / Max( FirstVNF_Mem_Server,MDR ) ) + Min( ( ( FirstVNF_Mem_Server - ARS ) / Min( MRS ,MRS ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + RRSe ) - ( ( MLU - MUC ) / ( CS - MUM ) ) )", "obj1": 0.8390804597701149, "obj2": 0.1351538695430824}, {"determining": "( Min( AMS ,CRS ) / ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * Min( FirstVNF_Mem_Server ,( ACS + ( FirstVNF_CPU * BR ) ) ) ) ) )", "choosing": "Max( ( MUM + ( ( MUR * ( MUM / DS ) ) / Min( RRSe ,MUR ) ) ),Min( Max( Max( ( Min( ( ( MUM - MUC ) * ( CS / RCSe ) ) ,DS ) + Max( ( DS + ( RMSe * RRSe ) ),Min( RMSe ,( CS - RCSe ) ) ) ),RMSe ),( MUC - CS ) ) ,RRSe ) )", "obj1": 0.6168582375478927, "obj2": 0.26625995747054204}, {"determining": "Min( ( ( AMS / ( AMS - Const ) ) + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Min( Max( AMS,FirstVNF_CPU_Server ) ,( FirstVNF_RAM * MRS ) ) )", "choosing": "( ( MLU - Max( MUM,MUR ) ) + ( ( MUR * CS ) + MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.26372731266830707}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6130268199233716, "obj2": 0.26625655867022086}, {"determining": "( ( ( ( AMS / BR ) / Max( Const,( FirstVNF_Mem + BR ) ) ) * MDR ) - ( ( FirstVNF_Mem_Server / AMS ) / FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS - ( MLU + MLU ) ),( RMSe / Min( MUM ,Max( MUC,RRSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0018379632934854577}, {"determining": "( ( ( Min( ( FirstVNF_RAM / Const ) ,FirstVNF_CPU_Server ) - ( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( MLU + RCSe ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7739463601532567, "obj2": 0.16956798179616406}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "( Max( Max( FirstVNF_Mem_Server,MRS ),Min( MRS ,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem_Server * AMS ) * ( FirstVNF_RAM * FirstVNF_Mem ) ) )", "choosing": "( Min( CS ,MUM ) + Max( ( CS / MUR ),DS ) )", "obj1": 0.6360153256704981, "obj2": 0.2587380891136019}, {"determining": "( Max( ( RRS - ( MRS * Max( ( ( RRS - Max( FirstVNF_CPU,MDR ) ) / PN ),( Max( ACS,( AMS * DDR ) ) * Min( RRS ,CRS ) ) ) ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server * Max( Const,RRS ) ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Min( ( MUR * ( ( MUM - ( RRSe / MUR ) ) / ( RRSe * ( ( RMSe / CS ) + ( RRSe + MUM ) ) ) ) ) ,CS ) - CS ) + Max( MUM,RRSe ) )", "obj1": 0.6360153256704981, "obj2": 0.2587380891136019}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( FirstVNF_RAM_Server / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * ( RMSe - RRSe ) ) ) )", "obj1": 0.7720306513409961, "obj2": 0.19055155363164802}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( MUC * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "( Max( Max( MUR,MLU ),( MUR / RRSe ) ) / ( ( DS * MUC ) * ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( ( ( ( MDR / FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * ( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU / BR ) * ( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) ) ) ,( ( RRS + ACS ) * Max( DDR,DDR ) ) ) * Min( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( MDR / FirstVNF_CPU_Server ) ) ,( ( DDR / DDR ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + ( ( RRSe + RCSe ) - ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + Max( ( ( MUC + RMSe ) + Max( MLU,RMSe ) ),( ( DS / RRSe ) + ( MUC - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / BR ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( RMSe + MLU ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Max( DS,( ( RMSe + MLU ) - ( DS / MUM ) ) ) + ( Min( CS ,RMSe ) + ( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) / PN ) + ( PN - MDR ) ) ) )", "choosing": "( Max( MLU,MUC ) + ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - MDR )", "choosing": "( ( MLU + MUM ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ARS / PN ) + ( PN - MDR ) ) ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) + Max( MUM,Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_Mem_Server ) * ( PN * ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( Min( CS ,Max( Max( RCSe,RMSe ),Min( CS ,MUM ) ) ) ,Max( Max( Max( RRSe,MUR ),Max( MUR,RMSe ) ),( ( RRSe + MUC ) / ( MUM + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - ( CRS * FirstVNF_Mem_Server ) ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),Min( ( Max( DS,RMSe ) + ( RMSe * DS ) ) ,Max( Max( RCSe,RMSe ),Min( CS ,MUM ) ) ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) / ( AMS + Min( MRS ,( ACS + ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * Max( DS,RRSe ) ) / ( Max( MUR,MLU ) / ( RRSe * RMSe ) ) ) / Min( ( ( MUR / RRSe ) * ( MUM + RMSe ) ) ,( Min( MUR ,RMSe ) - Max( DS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + ( ( ( MUM + RRSe ) * Max( DS,RRSe ) ) / ( Max( MUR,MLU ) / ( RRSe * RMSe ) ) ) ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * Max( DS,RRSe ) ) / ( Max( MUR,MLU ) / ( RRSe * RMSe ) ) ) / Min( ( ( MUR / RRSe ) * ( MUM + RMSe ) ) ,( Min( DS ,RMSe ) - Max( DS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( ( ( DS / MUC ) + ( MUR / DS ) ) + ( ( MUR / MUC ) / ( CS * MUM ) ) ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,CRS ) + ( Const / FirstVNF_CPU ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Min( ( ( FirstVNF_CPU / BR ) * ( FirstVNF_RAM - ACS ) ) ,( ( RRS + ACS ) * Max( DDR,DDR ) ) ) * Min( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( MDR / FirstVNF_CPU_Server ) ) ,( ( DDR / DDR ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 0.9137931034482759, "obj2": 0.0704072777876791}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "Min( Min( Max( ( PN * MRS ),Min( FirstVNF_RAM ,Const ) ) ,( ( AMS - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ,Min( ( Max( BR,PN ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem * MDR ) - ( RRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS * MUC ) / ( RCSe + RRSe ) ) / ( ( MUM * DS ) / ( MUM / MUC ) ) ) - ( ( Max( RRSe,CS ) * Max( CS,CS ) ) / ( ( CS - CS ) + ( MUR / MLU ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.11554703012848737}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( ( AMS + ( BR - ARS ) ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ,DDR ) / Const ) )", "choosing": "( Max( ( RRSe * DS ),( MUR * ( MLU + MUC ) ) ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.896551724137931, "obj2": 0.0965195847246497}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) * Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( RMSe + MUM ) * ( MLU - Max( MUM,MUM ) ) )", "obj1": 0.7471264367816092, "obj2": 0.1840561868908029}, {"determining": "( Min( RRS ,CRS ) + ( FirstVNF_CPU_Server * ( CRS + ARS ) ) )", "choosing": "( ( MLU + MUR ) / ( ( RCSe / MLU ) / ( CS / MUC ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2551933980834946}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( ( ( Min( ( FirstVNF_RAM / Const ) ,FirstVNF_CPU_Server ) - ( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( MLU + RCSe ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7739463601532567, "obj2": 0.16956798179616406}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - FirstVNF_Mem ) + ( ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server / ( RRS - AMS ) ) ) + MRS ) / RRS ) )", "choosing": "( Min( Max( RMSe,MUR ) ,MLU ) * ( ( MUM / MUC ) * RMSe ) )", "obj1": 0.8620689655172413, "obj2": 0.12493024094372004}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( Max( MUR,MUC ) / ( Min( RMSe ,MUR ) + DS ) ) / ( MUR + DS ) )", "obj1": 0.6111111111111112, "obj2": 0.271144851434462}, {"determining": "( ( AMS * FirstVNF_RAM ) / PN )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( ( ( Min( ( FirstVNF_RAM / Const ) ,FirstVNF_CPU_Server ) - ( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( MLU + RCSe ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7739463601532567, "obj2": 0.16956798179616406}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUR,( ( ( MUC * MLU ) / ( MUC + CS ) ) * ( RMSe + CS ) ) ) / ( Min( RMSe ,MUR ) + DS ) )", "obj1": 0.603448275862069, "obj2": 0.2733879562919439}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "( ( ( ( AMS / BR ) / Max( Const,( FirstVNF_Mem + BR ) ) ) * MDR ) - ( ( FirstVNF_Mem_Server / AMS ) / FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS - ( MLU + MLU ) ),( RMSe / Min( MUM ,Max( MUC,RRSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0018379632934854577}, {"determining": "( Max( ( RRS - ( MRS * Max( ( ( RRS - Max( FirstVNF_CPU,MDR ) ) / PN ),( Max( ACS,( AMS * DDR ) ) * Min( RRS ,CRS ) ) ) ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server * Max( Const,RRS ) ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Min( ( MUR * ( ( MUM - ( RRSe / MUR ) ) / ( RRSe * ( ( RMSe / CS ) + ( RRSe + MUM ) ) ) ) ) ,CS ) - CS ) + Max( MUM,RRSe ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( ( AMS / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS / ( MLU + MLU ) ),( DS / CS ) )", "obj1": 0.9980842911877394, "obj2": 0.0018379632934854577}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( MUC * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "( Max( Max( MUR,MLU ),( MUR / RRSe ) ) / ( ( DS * MUC ) * ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( ( ( ( MDR / FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * ( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU / BR ) * ( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) ) ) ,( ( RRS + ACS ) * Max( DDR,DDR ) ) ) * Min( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( MDR / FirstVNF_CPU_Server ) ) ,( ( DDR / DDR ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + ( ( RRSe + RCSe ) - ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + Max( ( ( MUC + RMSe ) + Max( MLU,RMSe ) ),( ( DS / RRSe ) + ( MUC - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / BR ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( RMSe + MLU ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Max( DS,( ( RMSe + MLU ) - ( DS / MUM ) ) ) + ( Min( CS ,RMSe ) + ( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) / PN ) + ( PN - MDR ) ) ) )", "choosing": "( Max( MLU,MUC ) + ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - MDR )", "choosing": "( ( MLU + MUM ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ARS / PN ) + ( PN - MDR ) ) ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) + Max( MUM,Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_Mem_Server ) * ( PN * ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( Min( CS ,Max( Max( RCSe,RMSe ),Min( CS ,MUM ) ) ) ,Max( Max( Max( RRSe,MUR ),Max( MUR,RMSe ) ),( ( RRSe + MUC ) / ( MUM + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - ( CRS * FirstVNF_Mem_Server ) ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),Min( ( Max( DS,RMSe ) + ( RMSe * DS ) ) ,Max( Max( RCSe,RMSe ),Min( CS ,MUM ) ) ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) / ( AMS + Min( MRS ,( ACS + ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * Max( DS,RRSe ) ) / ( Max( MUR,MLU ) / ( RRSe * RMSe ) ) ) / Min( ( ( MUR / RRSe ) * ( MUM + RMSe ) ) ,( Min( MUR ,RMSe ) - Max( DS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + ( ( ( MUM + RRSe ) * Max( DS,RRSe ) ) / ( Max( MUR,MLU ) / ( RRSe * RMSe ) ) ) ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * Max( DS,RRSe ) ) / ( Max( MUR,MLU ) / ( RRSe * RMSe ) ) ) / Min( ( ( MUR / RRSe ) * ( MUM + RMSe ) ) ,( Min( DS ,RMSe ) - Max( DS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( ( ( DS / MUC ) + ( MUR / DS ) ) + ( ( MUR / MUC ) / ( CS * MUM ) ) ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( MLU,( ( ( Min( ( MLU / MLU ) ,( ( Max( RMSe,MUC ) * RRSe ) - ( MUR * MUM ) ) ) + Max( DS,Min( MLU ,DS ) ) ) + ( Max( Max( Max( CS,( DS + MUM ) ),( MUR + RMSe ) ),DS ) * ( CS / MLU ) ) ) * Min( ( Max( ( ( ( MLU + DS ) - Max( RCSe,MUR ) ) + RRSe ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( AMS - FirstVNF_CPU_Server ) ) ,MDR ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "Max( RMSe,( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + Max( ( CS + MUR ),( RMSe * MUM ) ) ) ,( ( MUR - DS ) / Min( RMSe ,MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "Min( Min( Max( ( PN * MRS ),Min( FirstVNF_RAM ,Const ) ) ,( ( AMS - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ,Min( ( Max( BR,PN ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem * MDR ) - ( RRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS * MUC ) / ( RCSe + RRSe ) ) / ( ( MUM * DS ) / ( MUM / MUC ) ) ) - ( ( Max( RRSe,CS ) * Max( CS,CS ) ) / ( ( CS - CS ) + ( MUR / MLU ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.11554703012848737}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( ( ( Min( ( FirstVNF_RAM / Const ) ,FirstVNF_CPU_Server ) - ( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( MLU + RCSe ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7739463601532567, "obj2": 0.16956798179616406}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( Min( RRS ,CRS ) + ( FirstVNF_CPU_Server * ( CRS + ARS ) ) )", "choosing": "( ( MLU + MUR ) / ( ( RCSe / MLU ) / ( CS / MUC ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2551933980834946}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - DDR ) / FirstVNF_Mem ) - DDR )", "choosing": "( ( ( ( MUC * MLU ) / ( MUC + CS ) ) * ( RMSe + CS ) ) * ( RMSe + CS ) )", "obj1": 0.8160919540229885, "obj2": 0.11802093555997804}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( ARS - DDR ) ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Max( ( RMSe / Min( DS ,MUM ) ),Min( RMSe ,RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.2704824976572967}, {"determining": "( Min( AMS ,AMS ) * ( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUR,( ( ( MUC * MLU ) / ( MUC + CS ) ) * ( RMSe + CS ) ) ) / ( Min( RMSe ,MUR ) + DS ) )", "obj1": 0.603448275862069, "obj2": 0.2733879562919439}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "( ( AMS * FirstVNF_RAM ) / PN )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( ( ( Min( ( FirstVNF_RAM / Const ) ,FirstVNF_CPU_Server ) - ( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( MLU + RCSe ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7739463601532567, "obj2": 0.16956798179616406}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( MUC * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "( Max( Max( MUR,MLU ),( MUR / RRSe ) ) / ( ( DS * MUC ) * ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( ( ( ( MDR / FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * ( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU / BR ) * ( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) ) ) ,( ( RRS + ACS ) * Max( DDR,DDR ) ) ) * Min( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( MDR / FirstVNF_CPU_Server ) ) ,( ( DDR / DDR ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + ( ( RRSe + RCSe ) - ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + Max( ( ( MUC + RMSe ) + Max( MLU,RMSe ) ),( ( DS / RRSe ) + ( MUC - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / BR ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( RMSe + MLU ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Max( DS,( ( RMSe + MLU ) - ( DS / MUM ) ) ) + ( Min( CS ,RMSe ) + ( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) / PN ) + ( PN - MDR ) ) ) )", "choosing": "( Max( MLU,MUC ) + ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - MDR )", "choosing": "( ( MLU + MUM ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ARS / PN ) + ( PN - MDR ) ) ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) + Max( MUM,Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_Mem_Server ) * ( PN * ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( Min( CS ,Max( Max( RCSe,RMSe ),Min( CS ,MUM ) ) ) ,Max( Max( Max( RRSe,MUR ),Max( MUR,RMSe ) ),( ( RRSe + MUC ) / ( MUM + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - ( CRS * FirstVNF_Mem_Server ) ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),Min( ( Max( DS,RMSe ) + ( RMSe * DS ) ) ,Max( Max( RCSe,RMSe ),Min( CS ,MUM ) ) ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) / ( AMS + Min( MRS ,( ACS + ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * Max( DS,RRSe ) ) / ( Max( MUR,MLU ) / ( RRSe * RMSe ) ) ) / Min( ( ( MUR / RRSe ) * ( MUM + RMSe ) ) ,( Min( MUR ,RMSe ) - Max( DS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + ( ( ( MUM + RRSe ) * Max( DS,RRSe ) ) / ( Max( MUR,MLU ) / ( RRSe * RMSe ) ) ) ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * Max( DS,RRSe ) ) / ( Max( MUR,MLU ) / ( RRSe * RMSe ) ) ) / Min( ( ( MUR / RRSe ) * ( MUM + RMSe ) ) ,( Min( DS ,RMSe ) - Max( DS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( ( ( DS / MUC ) + ( MUR / DS ) ) + ( ( MUR / MUC ) / ( CS * MUM ) ) ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( MLU,( ( ( Min( ( MLU / MLU ) ,( ( Max( RMSe,MUC ) * RRSe ) - ( MUR * MUM ) ) ) + Max( DS,Min( MLU ,DS ) ) ) + ( Max( Max( Max( CS,( DS + MUM ) ),( MUR + RMSe ) ),DS ) * ( CS / MLU ) ) ) * Min( ( Max( ( ( ( MLU + DS ) - Max( RCSe,MUR ) ) + RRSe ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( AMS - FirstVNF_CPU_Server ) ) ,MDR ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "Max( RMSe,( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + Max( ( CS + MUR ),( RMSe * MUM ) ) ) ,( ( MUR - DS ) / Min( RMSe ,MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( ( ( Min( ( FirstVNF_RAM / Const ) ,FirstVNF_CPU_Server ) - ( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( MLU + RCSe ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7739463601532567, "obj2": 0.16956798179616406}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( Max( RRS,CRS ) + ( Min( FirstVNF_CPU_Server ,( ( FirstVNF_RAM - FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server - ( ( CRS - Min( ACS ,CRS ) ) * RRS ) ) ) ) / CRS ) )", "choosing": "( ( MUR / MUC ) / ( Min( ( Max( Min( RCSe ,RCSe ),MUC ) - MLU ) ,RRSe ) + ( MLU / ( MUC - MUM ) ) ) )", "obj1": 0.8697318007662835, "obj2": 0.11024477404400333}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "Min( AMS ,( ARS - DDR ) )", "choosing": "Max( ( MUC + MUR ),( RMSe / Min( DS ,MUM ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2471650145705629}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - DDR ) / FirstVNF_Mem ) - DDR )", "choosing": "( ( ( ( MUC * MLU ) / ( MUC + CS ) ) * ( RMSe + CS ) ) * ( RMSe + CS ) )", "obj1": 0.8160919540229885, "obj2": 0.11802093555997804}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "Min( Min( Max( ( PN * MRS ),Min( FirstVNF_RAM ,Const ) ) ,( ( AMS - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ,Min( ( Max( BR,PN ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem * MDR ) - ( RRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS * MUC ) / ( RCSe + RRSe ) ) / ( ( MUM * DS ) / ( MUM / MUC ) ) ) - ( ( Max( RRSe,CS ) * Max( CS,CS ) ) / ( ( CS - CS ) + ( MUR / MLU ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.11554703012848737}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( ( AMS * Const ) + ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( FirstVNF_Mem_Server - MRS ) * Min( MDR ,FirstVNF_RAM ) ) + ARS ) ) * ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( ( ( ( DS / MUC ) + ( MUR / DS ) ) + ( ( MUR / MUC ) / ( CS * MUM ) ) ) + ( ( ( RCSe / MLU ) / ( CS / ( ( DS - RCSe ) + MUC ) ) ) / ( Max( RMSe,MUC ) / ( RCSe + MLU ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26734452864675234}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUC ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.046576883454263855}, {"determining": "( Min( AMS ,AMS ) * ( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( ARS - DDR ) ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Max( ( RMSe / Min( DS ,MUM ) ),Min( RMSe ,RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.2704824976572967}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + ACS ) ) * ( FirstVNF_RAM_Server / CRS ) )", "choosing": "Max( ( ( RRSe * ( MLU - ( ( Max( RRSe,MUM ) - Max( MLU,RCSe ) ) + ( RCSe * MUC ) ) ) ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.6015325670498084, "obj2": 0.27677879903619473}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUR,( ( ( MUC * MLU ) / ( MUC + CS ) ) * ( RMSe + CS ) ) ) / ( Min( RMSe ,MUR ) + DS ) )", "obj1": 0.603448275862069, "obj2": 0.2733879562919439}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( ( Min( ( FirstVNF_RAM / Const ) ,FirstVNF_CPU_Server ) - ( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( MLU + RCSe ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7739463601532567, "obj2": 0.16956798179616406}, {"determining": "( ( Max( Max( MRS,RRS ),FirstVNF_Mem ) + ACS ) - ARS )", "choosing": "Max( ( RMSe / ( RCSe + CS ) ),( Max( DS,( MUR - ( CS * ( ( DS * Max( MLU,DS ) ) * MUR ) ) ) ) / DS ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( MUC * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "( Max( Max( MUR,MLU ),( MUR / RRSe ) ) / ( ( DS * MUC ) * ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( ( ( ( MDR / FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * ( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU / BR ) * ( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) ) ) ,( ( RRS + ACS ) * Max( DDR,DDR ) ) ) * Min( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( MDR / FirstVNF_CPU_Server ) ) ,( ( DDR / DDR ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + ( ( RRSe + RCSe ) - ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + Max( ( ( MUC + RMSe ) + Max( MLU,RMSe ) ),( ( DS / RRSe ) + ( MUC - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / BR ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( RMSe + MLU ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Max( DS,( ( RMSe + MLU ) - ( DS / MUM ) ) ) + ( Min( CS ,RMSe ) + ( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) / PN ) + ( PN - MDR ) ) ) )", "choosing": "( Max( MLU,MUC ) + ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - MDR )", "choosing": "( ( MLU + MUM ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ARS / PN ) + ( PN - MDR ) ) ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) + Max( MUM,Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_Mem_Server ) * ( PN * ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( Min( CS ,Max( Max( RCSe,RMSe ),Min( CS ,MUM ) ) ) ,Max( Max( Max( RRSe,MUR ),Max( MUR,RMSe ) ),( ( RRSe + MUC ) / ( MUM + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - ( CRS * FirstVNF_Mem_Server ) ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),Min( ( Max( DS,RMSe ) + ( RMSe * DS ) ) ,Max( Max( RCSe,RMSe ),Min( CS ,MUM ) ) ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( ( ( Min( ( FirstVNF_RAM / Const ) ,FirstVNF_CPU_Server ) - ( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( MLU + RCSe ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7739463601532567, "obj2": 0.16956798179616406}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( Max( RRS,CRS ) + ( Min( FirstVNF_CPU_Server ,( ( FirstVNF_RAM - FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server - ( ( CRS - Min( ACS ,CRS ) ) * RRS ) ) ) ) / CRS ) )", "choosing": "( ( MUR / MUC ) / ( Min( ( Max( Min( RCSe ,RCSe ),MUC ) - MLU ) ,RRSe ) + ( MLU / ( MUC - MUM ) ) ) )", "obj1": 0.8697318007662835, "obj2": 0.11024477404400333}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - DDR ) / FirstVNF_Mem ) - DDR )", "choosing": "( ( ( ( MUC * MLU ) / ( MUC + CS ) ) * ( RMSe + CS ) ) * ( RMSe + CS ) )", "obj1": 0.8160919540229885, "obj2": 0.11802093555997804}, {"determining": "Min( AMS ,( ARS - DDR ) )", "choosing": "Max( ( MUC + MUR ),( RMSe / Min( DS ,MUM ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2471650145705629}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "Min( Min( Max( ( PN * MRS ),Min( FirstVNF_RAM ,Const ) ) ,( ( AMS - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ,Min( ( Max( BR,PN ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem * MDR ) - ( RRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS * MUC ) / ( RCSe + RRSe ) ) / ( ( MUM * DS ) / ( MUM / MUC ) ) ) - ( ( Max( RRSe,CS ) * Max( CS,CS ) ) / ( ( CS - CS ) + ( MUR / MLU ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.11554703012848737}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( ( DDR - DDR ) + ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUR ) / Max( MUR,DS ) )", "obj1": 0.6149425287356322, "obj2": 0.2528351892682386}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( FirstVNF_Mem_Server - MRS ) * Min( MDR ,FirstVNF_RAM ) ) + ARS ) ) * ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( ( ( ( DS / MUC ) + ( MUR / DS ) ) + ( ( MUR / MUC ) / ( CS * MUM ) ) ) + ( ( ( RCSe / MLU ) / ( CS / ( ( DS - RCSe ) + MUC ) ) ) / ( Max( RMSe,MUC ) / ( RCSe + MLU ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26734452864675234}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUC ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.046576883454263855}, {"determining": "( Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( ARS - DDR ) ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Max( ( RMSe / Min( DS ,MUM ) ),Min( RMSe ,RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.2704824976572967}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + ACS ) ) * ( FirstVNF_RAM_Server / CRS ) )", "choosing": "Max( ( ( RRSe * ( MLU - ( ( Max( RRSe,MUM ) - Max( MLU,RCSe ) ) + ( RCSe * MUC ) ) ) ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.6015325670498084, "obj2": 0.27677879903619473}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUR,( ( ( MUC * MLU ) / ( MUC + CS ) ) * ( RMSe + CS ) ) ) / ( Min( RMSe ,MUR ) + DS ) )", "obj1": 0.603448275862069, "obj2": 0.2733879562919439}, {"determining": "( ( AMS * FirstVNF_RAM ) / PN )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "( ( AMS * Const ) + ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( ( Min( ( FirstVNF_RAM / Const ) ,FirstVNF_CPU_Server ) - ( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( MLU + RCSe ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7739463601532567, "obj2": 0.16956798179616406}, {"determining": "( Min( MDR ,( ARS * Min( MDR ,( ARS * AMS ) ) ) ) - ARS )", "choosing": "Max( ( Max( ( DS / DS ),DS ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( MUC * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "( Max( Max( MUR,MLU ),( MUR / RRSe ) ) / ( ( DS * MUC ) * ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( ( ( ( MDR / FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * ( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU / BR ) * ( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) ) ) ,( ( RRS + ACS ) * Max( DDR,DDR ) ) ) * Min( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( MDR / FirstVNF_CPU_Server ) ) ,( ( DDR / DDR ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + ( ( RRSe + RCSe ) - ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + Max( ( ( MUC + RMSe ) + Max( MLU,RMSe ) ),( ( DS / RRSe ) + ( MUC - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / BR ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( RMSe + MLU ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Max( DS,( ( RMSe + MLU ) - ( DS / MUM ) ) ) + ( Min( CS ,RMSe ) + ( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) / PN ) + ( PN - MDR ) ) ) )", "choosing": "( Max( MLU,MUC ) + ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - MDR )", "choosing": "( ( MLU + MUM ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ARS / PN ) + ( PN - MDR ) ) ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) + Max( MUM,Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - MDR ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( RMSe,MUR ) ) ,( ( ( Max( MLU,( DS - MUR ) ) * ( MUR / MUR ) ) - MUM ) / MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.16931702873223717}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( FirstVNF_RAM_Server / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * ( RMSe - RRSe ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.0969190263737419}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - DDR ) / FirstVNF_Mem ) - DDR )", "choosing": "( ( ( ( MUC * MLU ) / ( MUC + CS ) ) * ( RMSe + CS ) ) * ( RMSe + CS ) )", "obj1": 0.8160919540229885, "obj2": 0.11802093555997804}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "Min( AMS ,( ARS - DDR ) )", "choosing": "Max( ( MUC + MUR ),( RMSe / Min( DS ,MUM ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2471650145705629}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "Min( Min( Max( ( PN * MRS ),Min( FirstVNF_RAM ,Const ) ) ,( ( AMS - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ,Min( ( Max( BR,PN ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem * MDR ) - ( RRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS * MUC ) / ( RCSe + RRSe ) ) / ( ( MUM * DS ) / ( MUM / MUC ) ) ) - ( ( Max( RRSe,CS ) * Max( CS,CS ) ) / ( ( CS - CS ) + ( MUR / MLU ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.11554703012848737}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( Max( ( FirstVNF_Mem_Server - ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) / ACS ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( ( FirstVNF_RAM * FirstVNF_Mem ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( RRSe / MUM ) + ( ( CS / Min( MUM ,Max( MUC,CS ) ) ) + DS ) )", "obj1": 0.6015325670498084, "obj2": 0.27117280608710903}, {"determining": "( ( PN / FirstVNF_CPU ) + ( Min( Max( ( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ),FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ) ) / RRS ) )", "choosing": "( Max( MUR,MUC ) / MUC )", "obj1": 0.60727969348659, "obj2": 0.2612990491094752}, {"determining": "( ( DDR - DDR ) + ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUR ) / Max( MUR,DS ) )", "obj1": 0.6149425287356322, "obj2": 0.2528351892682386}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUC ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.046576883454263855}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / PN )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( DS / DS ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Max( ( FirstVNF_Mem_Server - MRS ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( ( FirstVNF_RAM * FirstVNF_Mem ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( MUC * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "( Max( Max( MUR,MLU ),( MUR / RRSe ) ) / ( ( DS * MUC ) * ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( ( ( ( MDR / FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * ( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU / BR ) * ( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) ) ) ,( ( RRS + ACS ) * Max( DDR,DDR ) ) ) * Min( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( MDR / FirstVNF_CPU_Server ) ) ,( ( DDR / DDR ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + ( ( RRSe + RCSe ) - ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + Max( ( ( MUC + RMSe ) + Max( MLU,RMSe ) ),( ( DS / RRSe ) + ( MUC - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / BR ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( RMSe + MLU ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Max( DS,( ( RMSe + MLU ) - ( DS / MUM ) ) ) + ( Min( CS ,RMSe ) + ( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) / PN ) + ( PN - MDR ) ) ) )", "choosing": "( Max( MLU,MUC ) + ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - MDR )", "choosing": "( ( MLU + MUM ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ARS / PN ) + ( PN - MDR ) ) ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,MUR ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) + Max( MUM,Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( Min( FirstVNF_Mem ,AMS ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU_Server ) ) - ( ARS / ( ( FirstVNF_RAM - ( ( Min( Const ,PN ) - ACS ) / Const ) ) * FirstVNF_CPU ) ) )", "choosing": "Max( ( MUR * CS ),Min( ( ( ( ( MLU + RMSe ) - ( ( Max( MUC,MUR ) * MLU ) - MUM ) ) * RMSe ) / RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ( FirstVNF_RAM * ARS ) - Max( ( Max( ARS,FirstVNF_CPU ) + CRS ),FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ,MDR ) - ( MDR - AMS ) )", "choosing": "Max( ( Min( ( DS / MUR ) ,( RMSe * CS ) ) + ( Max( RMSe,( ( MUC * RMSe ) * RCSe ) ) * Max( MUM,MUC ) ) ),MUR )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "Min( AMS ,( ARS - DDR ) )", "choosing": "Max( ( MUC + MUR ),( RMSe / Min( DS ,MUM ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2471650145705629}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( MUC,Min( RMSe ,RMSe ) )", "obj1": 0.7298850574712644, "obj2": 0.16548887559158854}, {"determining": "( ( DDR - DDR ) + ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUR ) / Max( MUR,DS ) )", "obj1": 0.6149425287356322, "obj2": 0.2528351892682386}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - MDR ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( RMSe,MUR ) ) ,( ( ( Max( MLU,( DS - MUR ) ) * ( MUR / MUR ) ) - MUM ) / MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.16931702873223717}, {"determining": "( ( PN / FirstVNF_CPU ) + ( Min( Max( ( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ),FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ) ) / RRS ) )", "choosing": "( Max( MUR,MUC ) / MUC )", "obj1": 0.60727969348659, "obj2": 0.2612990491094752}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / PN )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUC ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.046576883454263855}, {"determining": "Min( ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) / FirstVNF_Mem_Server ) ,( ARS - DDR ) )", "choosing": "Max( ( MUC + MUR ),( RMSe / Min( DS ,MUM ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2471650145705629}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Max( ( FirstVNF_Mem_Server - MRS ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( ( FirstVNF_RAM * FirstVNF_Mem ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( MUC * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "( Max( Max( MUR,MLU ),( MUR / RRSe ) ) / ( ( DS * MUC ) * ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( ( ( ( MDR / FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * ( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU / BR ) * ( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) ) ) ,( ( RRS + ACS ) * Max( DDR,DDR ) ) ) * Min( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( MDR / FirstVNF_CPU_Server ) ) ,( ( DDR / DDR ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + ( ( RRSe + RCSe ) - ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + Max( ( ( MUC + RMSe ) + Max( MLU,RMSe ) ),( ( DS / RRSe ) + ( MUC - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / BR ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( RMSe + MLU ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Max( DS,( ( RMSe + MLU ) - ( DS / MUM ) ) ) + ( Min( CS ,RMSe ) + ( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( CRS,Const ) ,( FirstVNF_Mem * PN ) ) * ( ( ACS + MDR ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( ( ( FirstVNF_RAM / CRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ( ( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) / PN ) + ( PN - MDR ) ) ) )", "choosing": "( Max( MLU,MUC ) + ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - MDR )", "choosing": "( ( MLU + MUM ) - MUR )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "Min( AMS ,( ARS - DDR ) )", "choosing": "Max( ( MUC + MUR ),( RMSe / Min( DS ,MUM ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2471650145705629}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( MUC,Min( RMSe ,RMSe ) )", "obj1": 0.7298850574712644, "obj2": 0.16548887559158854}, {"determining": "( ( DDR - DDR ) + ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUR ) / Max( MUR,DS ) )", "obj1": 0.6149425287356322, "obj2": 0.2528351892682386}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - MDR ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( RMSe,MUR ) ) ,( ( ( Max( MLU,( DS - MUR ) ) * ( MUR / MUR ) ) - MUM ) / MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.16931702873223717}, {"determining": "( ( PN / FirstVNF_CPU ) + ( Min( Max( ( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ),FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ) ) / RRS ) )", "choosing": "( Max( MUR,MUC ) / MUC )", "obj1": 0.60727969348659, "obj2": 0.2612990491094752}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / PN )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "Min( ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) / FirstVNF_Mem_Server ) ,( ARS - DDR ) )", "choosing": "Max( ( MUC + MUR ),( RMSe / Min( DS ,MUM ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2471650145705629}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( PN / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( MUC * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "( Max( Max( MUR,MLU ),( MUR / RRSe ) ) / ( ( DS * MUC ) * ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( ( ( ( MDR / FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * ( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Min( FirstVNF_Mem ,AMS ) ) ,( ( FirstVNF_CPU / PN ) * ( MDR / MDR ) ) ) )", "choosing": "( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( DS + ( CS / MUC ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU / BR ) * ( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) ) ) ,( ( RRS + ACS ) * Max( DDR,DDR ) ) ) * Min( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( MDR / FirstVNF_CPU_Server ) ) ,( ( DDR / DDR ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + ( ( RRSe + RCSe ) - ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( DS,RCSe ) + ( RCSe + MUR ) ) + Max( ( MUC / RRSe ),( MLU / CS ) ) ) + Max( ( ( MUC + RMSe ) + Max( MLU,RMSe ) ),( ( DS / RRSe ) + ( MUC - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "Min( AMS ,( ARS - DDR ) )", "choosing": "Max( ( MUC + MUR ),( RMSe / Min( DS ,MUM ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2471650145705629}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( MUC,Min( RMSe ,RMSe ) )", "obj1": 0.7298850574712644, "obj2": 0.16548887559158854}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( ( DDR - DDR ) + ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUR ) / Max( MUR,DS ) )", "obj1": 0.6149425287356322, "obj2": 0.2528351892682386}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - MDR ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( RMSe,MUR ) ) ,( ( ( Max( MLU,( DS - MUR ) ) * ( MUR / MUR ) ) - MUM ) / MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.16931702873223717}, {"determining": "( ( PN / FirstVNF_CPU ) + ( Min( Max( ( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ),FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ) ) / RRS ) )", "choosing": "( Max( MUR,MUC ) / MUC )", "obj1": 0.60727969348659, "obj2": 0.2612990491094752}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( AMS * FirstVNF_RAM ) / PN )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "Min( ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) / FirstVNF_Mem_Server ) ,( ARS - DDR ) )", "choosing": "Max( ( MUC + MUR ),( RMSe / Min( DS ,MUM ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2471650145705629}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( ( MDR * ( MRS - FirstVNF_CPU_Server ) ) ,MDR ) )", "choosing": "Max( ( CS * DS ),Min( ( RCSe + ( ( ( MUC + ( RRSe * CS ) ) + MUM ) / ( CS * Max( ( ( MUR + RMSe ) / MLU ),DS ) ) ) ) ,RMSe ) )", "obj1": 0.9942528735632183, "obj2": 0.0027347023134930756}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Max( ( FirstVNF_Mem_Server - MRS ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( ( FirstVNF_RAM * FirstVNF_Mem ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( MUC * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "( Max( Max( MUR,MLU ),( MUR / RRSe ) ) / ( ( DS * MUC ) * ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "Min( AMS ,( ARS - DDR ) )", "choosing": "Max( ( MUC + MUR ),( RMSe / Min( DS ,MUM ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2471650145705629}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ) )", "choosing": "Max( ( MUC + MUR ),Min( DS ,MUM ) )", "obj1": 0.9329501915708812, "obj2": 0.03936669841357311}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( ( DDR - DDR ) + ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUR ) / Max( MUR,DS ) )", "obj1": 0.6149425287356322, "obj2": 0.2528351892682386}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( ( PN / FirstVNF_CPU ) + ( Min( Max( ( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ),FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ) ) / RRS ) )", "choosing": "( Max( MUR,MUC ) / MUC )", "obj1": 0.60727969348659, "obj2": 0.2612990491094752}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( AMS * FirstVNF_RAM ) / PN )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "Min( ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) / FirstVNF_Mem_Server ) ,( ARS - DDR ) )", "choosing": "Max( ( MUC + MUR ),( RMSe / Min( DS ,MUM ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2471650145705629}, {"determining": "( ( ( AMS * Const ) - Min( ( FirstVNF_Mem + ( ( PN * FirstVNF_Mem ) + ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ,RRS ) ) - Min( ( MDR * FirstVNF_CPU ) ,MDR ) )", "choosing": "Max( DS,( MUR - ( MUR / RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0025226248225210285}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Max( ( FirstVNF_Mem_Server - MRS ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( ( FirstVNF_RAM * FirstVNF_Mem ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( MUC * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ) )", "choosing": "Max( ( MUC + MUR ),Min( DS ,MUM ) )", "obj1": 0.9329501915708812, "obj2": 0.03936669841357311}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( ( DDR - DDR ) + ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUR ) / Max( MUR,DS ) )", "obj1": 0.6149425287356322, "obj2": 0.2528351892682386}, {"determining": "( ( PN / FirstVNF_CPU ) + ( Min( Max( ( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ),FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM * Max( PN,DDR ) ) * Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( BR - PN ) ),( FirstVNF_RAM - Const ) ) ) ) / RRS ) )", "choosing": "( Max( MUR,MUC ) / MUC )", "obj1": 0.60727969348659, "obj2": 0.2612990491094752}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( AMS * FirstVNF_RAM ) / PN )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( ( ( AMS * Const ) - Min( ( FirstVNF_Mem + ( ( PN * FirstVNF_Mem ) + ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ,RRS ) ) - Min( ( MDR * FirstVNF_CPU ) ,MDR ) )", "choosing": "Max( DS,( MUR - ( MUR / RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0025226248225210285}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Max( ( FirstVNF_Mem_Server - MRS ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( ( FirstVNF_RAM * FirstVNF_Mem ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( RRSe / MUM ) + ( ( CS / MUR ) + DS ) )", "obj1": 0.6130268199233716, "obj2": 0.258862433732142}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MRS / BR ) / Max( FirstVNF_RAM_Server,MRS ) ),( Min( MDR ,PN ) / Min( DDR ,Const ) ) ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( MUC * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ) )", "choosing": "Max( ( MUC + MUR ),Min( DS ,MUM ) )", "obj1": 0.9329501915708812, "obj2": 0.03936669841357311}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "Min( ( Const - ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( RRSe - Min( Max( ( MLU + ( ( RRSe * ( MUM * MUM ) ) - Max( Max( DS,DS ),( MUM * CS ) ) ) ),DS ) ,( MUM * ( RCSe - Max( ( ( CS / RRSe ) - RMSe ),( RMSe / MUM ) ) ) ) ) ) - ( MUR * ( DS - ( ( Max( RCSe,RRSe ) - Max( ( RMSe / CS ),DS ) ) / MLU ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.012232556275569881}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( ( ( AMS * Const ) - Min( ( FirstVNF_Mem + ( ( PN * FirstVNF_Mem ) + ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ,RRS ) ) - Min( ( MDR * FirstVNF_CPU ) ,MDR ) )", "choosing": "Max( DS,( MUR - ( MUR / RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0025226248225210285}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( Max( Max( Const,( ( Const / MDR ) - MRS ) ),PN ) / FirstVNF_Mem ) / Max( PN,FirstVNF_CPU ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MDR ,ACS ) + AMS ) ) )", "choosing": "Max( DS,CS )", "obj1": 0.9961685823754789, "obj2": 0.0017967075516603568}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ) )", "choosing": "Max( ( MUC + MUR ),Min( DS ,MUM ) )", "obj1": 0.9329501915708812, "obj2": 0.03936669841357311}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "Min( ( Const - ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( RRSe - Min( Max( ( MLU + ( ( RRSe * ( MUM * MUM ) ) - Max( Max( DS,DS ),( MUM * CS ) ) ) ),DS ) ,( MUM * ( RCSe - Max( ( ( CS / RRSe ) - RMSe ),( RMSe / MUM ) ) ) ) ) ) - ( MUR * ( DS - ( ( Max( RCSe,RRSe ) - Max( ( RMSe / CS ),DS ) ) / MLU ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.012232556275569881}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( ( ( AMS * Const ) - Min( ( FirstVNF_Mem + ( ( PN * FirstVNF_Mem ) + ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ,RRS ) ) - Min( ( MDR * FirstVNF_CPU ) ,MDR ) )", "choosing": "Max( DS,( MUR - ( MUR / RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0025226248225210285}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( Max( Max( Const,( ( Const / MDR ) - MRS ) ),PN ) / FirstVNF_Mem ) / Max( PN,FirstVNF_CPU ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MDR ,ACS ) + AMS ) ) )", "choosing": "Max( DS,CS )", "obj1": 0.9961685823754789, "obj2": 0.0017967075516603568}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ) )", "choosing": "Max( ( MUC + MUR ),Min( DS ,MUM ) )", "obj1": 0.9329501915708812, "obj2": 0.03936669841357311}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "Min( ( Const - ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( RRSe - Min( Max( ( MLU + ( ( RRSe * ( MUM * MUM ) ) - Max( Max( DS,DS ),( MUM * CS ) ) ) ),DS ) ,( MUM * ( RCSe - Max( ( ( CS / RRSe ) - RMSe ),( RMSe / MUM ) ) ) ) ) ) - ( MUR * ( DS - ( ( Max( RCSe,RRSe ) - Max( ( RMSe / CS ),DS ) ) / MLU ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.012232556275569881}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( ( ( AMS * Const ) - Min( ( FirstVNF_Mem + ( ( PN * FirstVNF_Mem ) + ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ,RRS ) ) - Min( ( MDR * FirstVNF_CPU ) ,MDR ) )", "choosing": "Max( DS,( MUR - ( MUR / RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0025226248225210285}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( Max( Max( Const,( ( Const / MDR ) - MRS ) ),PN ) / FirstVNF_Mem ) / Max( PN,FirstVNF_CPU ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MDR ,ACS ) + AMS ) ) )", "choosing": "Max( DS,CS )", "obj1": 0.9961685823754789, "obj2": 0.0017967075516603568}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU * MLU ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ) )", "choosing": "Max( ( MUC + MUR ),Min( DS ,MUM ) )", "obj1": 0.9329501915708812, "obj2": 0.03936669841357311}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "Min( ( Const - ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( RRSe - Min( Max( ( MLU + ( ( RRSe * ( MUM * MUM ) ) - Max( Max( DS,DS ),( MUM * CS ) ) ) ),DS ) ,( MUM * ( RCSe - Max( ( ( CS / RRSe ) - RMSe ),( RMSe / MUM ) ) ) ) ) ) - ( MUR * ( DS - ( ( Max( RCSe,RRSe ) - Max( ( RMSe / CS ),DS ) ) / MLU ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.012232556275569881}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( ( ( AMS * Const ) - Min( ( FirstVNF_Mem + ( ( PN * FirstVNF_Mem ) + ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ,RRS ) ) - Min( ( MDR * FirstVNF_CPU ) ,MDR ) )", "choosing": "Max( DS,( MUR - ( MUR / RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0025226248225210285}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) / BR ) * Max( DDR,( MDR * ( DDR + BR ) ) ) )", "choosing": "Min( Min( ( MLU * MUC ) ,MUM ) ,( MUR - ( RCSe + ( MLU / RRSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003956082599098786}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( Max( Max( Const,( ( Const / MDR ) - MRS ) ),PN ) / FirstVNF_Mem ) / Max( PN,FirstVNF_CPU ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MDR ,ACS ) + AMS ) ) )", "choosing": "Max( DS,CS )", "obj1": 0.9961685823754789, "obj2": 0.0017967075516603568}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( ( Min( ( FirstVNF_RAM / RRS ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) ),Const ) )", "choosing": "( DS * ( ( MLU + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ,DDR ) / ( Min( FirstVNF_CPU_Server ,CRS ) - Const ) )", "choosing": "Min( ( Min( Max( CS,MUR ) ,MLU ) * ( ( MLU + CS ) * RMSe ) ) ,( ( DS / DS ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ) )", "choosing": "Max( ( MUC + MUR ),Min( DS ,MUM ) )", "obj1": 0.9329501915708812, "obj2": 0.03936669841357311}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "Min( ( Const - ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( RRSe - Min( Max( ( MLU + ( ( RRSe * ( MUM * MUM ) ) - Max( Max( DS,DS ),( MUM * CS ) ) ) ),DS ) ,( MUM * ( RCSe - Max( ( ( CS / RRSe ) - RMSe ),( RMSe / MUM ) ) ) ) ) ) - ( MUR * ( DS - ( ( Max( RCSe,RRSe ) - Max( ( RMSe / CS ),DS ) ) / MLU ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.012232556275569881}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( Const / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( MUR / Min( RRSe ,RRSe ) ),( RMSe / Max( ( MUR / Min( RRSe ,RRSe ) ),( RMSe / MUR ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.002987294319280598}, {"determining": "( ( ( AMS * Const ) - Min( ( FirstVNF_Mem + ( ( PN * FirstVNF_Mem ) + ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ,RRS ) ) - Min( ( MDR * FirstVNF_CPU ) ,MDR ) )", "choosing": "Max( DS,( MUR - ( MUR / RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0025226248225210285}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( DDR,( MDR * ( MRS - FirstVNF_CPU_Server ) ) ) / Const ) )", "choosing": "Max( ( ( ( MUC + ( RRSe * CS ) ) + MUM ) / ( ( ( ( RMSe * ( DS / RRSe ) ) - ( CS * MLU ) ) * ( MUC - RMSe ) ) - ( RMSe - ( ( RMSe / Min( Min( MUM ,CS ) ,RCSe ) ) * MUC ) ) ) ),DS )", "obj1": 0.9904214559386973, "obj2": 0.003934856035290418}, {"determining": "( ( ( Max( Max( Const,( ( Const / MDR ) - MRS ) ),PN ) / FirstVNF_Mem ) / Max( PN,FirstVNF_CPU ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MDR ,ACS ) + AMS ) ) )", "choosing": "Max( DS,CS )", "obj1": 0.9961685823754789, "obj2": 0.0017967075516603568}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "Max( MLU,( ( RMSe + DS ) * Min( ( Max( RMSe,( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ) )", "choosing": "Max( ( MUC + MUR ),Min( DS ,MUM ) )", "obj1": 0.9329501915708812, "obj2": 0.03936669841357311}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "Min( ( Const - ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( RRSe - Min( Max( ( MLU + ( ( RRSe * ( MUM * MUM ) ) - Max( Max( DS,DS ),( MUM * CS ) ) ) ),DS ) ,( MUM * ( RCSe - Max( ( ( CS / RRSe ) - RMSe ),( RMSe / MUM ) ) ) ) ) ) - ( MUR * ( DS - ( ( Max( RCSe,RRSe ) - Max( ( RMSe / CS ),DS ) ) / MLU ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.012232556275569881}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( AMS * Const ) - Min( ( FirstVNF_Mem + ( ( PN * FirstVNF_Mem ) + ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ,RRS ) ) - Min( ( MDR * FirstVNF_CPU ) ,MDR ) )", "choosing": "Max( DS,( MUR - ( MUR / RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0025226248225210285}, {"determining": "( ( ( Const / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( MUR / Min( RRSe ,RRSe ) ),( RMSe / Max( ( MUR / Min( RRSe ,RRSe ) ),( RMSe / MUR ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.002987294319280598}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( DDR,( MDR * ( MRS - FirstVNF_CPU_Server ) ) ) / Const ) )", "choosing": "Max( ( ( ( MUC + ( RRSe * CS ) ) + MUM ) / ( ( ( ( RMSe * ( DS / RRSe ) ) - ( CS * MLU ) ) * ( MUC - RMSe ) ) - ( RMSe - ( ( RMSe / Min( Min( MUM ,CS ) ,RCSe ) ) * MUC ) ) ) ),DS )", "obj1": 0.9904214559386973, "obj2": 0.003934856035290418}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( Min( ARS ,CRS ) * RRS ) + Max( ( PN + FirstVNF_RAM ),PN ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem + ACS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - CS ) * ( MUC - RCSe ) ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0014830058093487314}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( RCSe * Max( CS,( DS * ( ( ( ( RMSe * MUR ) * MUR ) / ( RRSe / MUC ) ) * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "Max( MLU,( ( RMSe + DS ) * Min( ( Max( RMSe,( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ) )", "choosing": "Max( ( MUC + MUR ),Min( DS ,MUM ) )", "obj1": 0.9329501915708812, "obj2": 0.03936669841357311}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( ( ( PN - ( Const / ( ( FirstVNF_CPU_Server + ARS ) - ACS ) ) ) * FirstVNF_CPU ) / ARS ) ) )", "choosing": "Max( Min( ( Min( ( MUM + ( ( ( CS / MUM ) / MUR ) / ( MLU * ( MUC - MUR ) ) ) ) ,( ( CS * Max( MUM,Max( MUM,RCSe ) ) ) * MLU ) ) / RRSe ) ,MUM ),( RRSe * CS ) )", "obj1": 0.9770114942528736, "obj2": 0.009918881383643179}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( ( RMSe + DS ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 0.5919540229885057, "obj2": 0.2831658806810035}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / Max( PN,BR ) ) + Max( ( PN + FirstVNF_RAM ),PN ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,FirstVNF_RAM ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - DS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005848210241070455}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( AMS * Const ) - Min( ( FirstVNF_Mem + ( ( PN * FirstVNF_Mem ) + ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ,RRS ) ) - Min( ( MDR * FirstVNF_CPU ) ,MDR ) )", "choosing": "Max( DS,( MUR - ( MUR / RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0025226248225210285}, {"determining": "( ( ( Const / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( MUR / Min( RRSe ,RRSe ) ),( RMSe / Max( ( MUR / Min( RRSe ,RRSe ) ),( RMSe / MUR ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.002987294319280598}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( DDR,( Min( ( Min( CRS ,RRS ) + CRS ) ,FirstVNF_CPU ) / ARS ) ) / Const ) )", "choosing": "Max( ( DS / ( ( ( ( RMSe * ( DS / RRSe ) ) - ( CS * MLU ) ) * ( MUC - RMSe ) ) - ( RMSe - ( ( RMSe / Min( Min( MUM ,CS ) ,RCSe ) ) * MUC ) ) ) ),( DS / ( ( ( ( RMSe * ( DS / RRSe ) ) - ( CS * MLU ) ) * ( MUC - RMSe ) ) - ( RMSe - ( ( RMSe / Min( Min( MUM ,CS ) ,RCSe ) ) * MUC ) ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003887628861982399}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( Min( ARS ,CRS ) * RRS ) + Max( ( PN + FirstVNF_RAM ),PN ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem + ACS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - CS ) * ( MUC - RCSe ) ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0014830058093487314}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - MRS ) - ( ACS + ARS ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) - ( ACS + ARS ) ) )", "choosing": "Max( Min( ( DS + DS ) ,RMSe ),Max( RCSe,( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( ( Max( DDR,( Min( ( Min( CRS ,RRS ) + FirstVNF_CPU ) ,FirstVNF_CPU ) / ARS ) ) / Const ) ,MDR ) )", "choosing": "Max( ( CS * DS ),Min( ( RCSe + ( ( ( MUC + ( RRSe * CS ) ) + MUM ) / ( CS * Max( ( ( MUR + RMSe ) / MLU ),DS ) ) ) ) ,RMSe ) )", "obj1": 0.9291187739463601, "obj2": 0.029472952888735995}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( ( MDR * AMS ) ,MDR ) )", "choosing": "Max( ( CS * DS ),Min( ( RCSe + ( ( ( MUC + ( RRSe * RMSe ) ) + MUM ) / ( CS * Max( ( ( MUR + RMSe ) / MLU ),DS ) ) ) ) ,RMSe ) )", "obj1": 0.9157088122605364, "obj2": 0.037892720210969774}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( ( ( PN - ( Const / ( ( FirstVNF_CPU_Server + ARS ) - ACS ) ) ) * FirstVNF_CPU ) / ARS ) ) )", "choosing": "Max( Min( ( Min( ( MUM + ( ( ( CS / MUM ) / MUR ) / ( MLU * ( MUC - MUR ) ) ) ) ,( ( CS * Max( MUM,Max( MUM,RCSe ) ) ) * MLU ) ) / RRSe ) ,MUM ),( RRSe * CS ) )", "obj1": 0.9770114942528736, "obj2": 0.009918881383643179}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( ( RMSe + DS ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 0.5919540229885057, "obj2": 0.2831658806810035}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / Max( PN,BR ) ) + Max( ( PN + FirstVNF_RAM ),PN ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,FirstVNF_RAM ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - DS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005848210241070455}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( ( ( ARS - ( DDR + AMS ) ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU - FirstVNF_CPU ) / FirstVNF_CPU ) - ARS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Max( DS,( CS * MLU ) ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9521072796934866, "obj2": 0.019181925149155687}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( AMS * Const ) - Min( ( FirstVNF_Mem + ( ( PN * FirstVNF_Mem ) + ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ,RRS ) ) - Min( ( MDR * FirstVNF_CPU ) ,MDR ) )", "choosing": "Max( DS,( MUR - ( MUR / RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0025226248225210285}, {"determining": "( ( ( Const / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( MUR / Min( RRSe ,RRSe ) ),( RMSe / Max( ( MUR / Min( RRSe ,RRSe ) ),( RMSe / MUR ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.002987294319280598}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( DDR,( Min( ( Min( CRS ,RRS ) + CRS ) ,FirstVNF_CPU ) / ARS ) ) / Const ) )", "choosing": "Max( ( DS / ( ( ( ( RMSe * ( DS / RRSe ) ) - ( CS * MLU ) ) * ( MUC - RMSe ) ) - ( RMSe - ( ( RMSe / Min( Min( MUM ,CS ) ,RCSe ) ) * MUC ) ) ) ),( DS / ( ( ( ( RMSe * ( DS / RRSe ) ) - ( CS * MLU ) ) * ( MUC - RMSe ) ) - ( RMSe - ( ( RMSe / Min( Min( MUM ,CS ) ,RCSe ) ) * MUC ) ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003887628861982399}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( Min( ARS ,CRS ) * RRS ) + Max( ( PN + FirstVNF_RAM ),PN ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem + ACS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - CS ) * ( MUC - RCSe ) ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0014830058093487314}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ARS - Min( ( MRS * Min( MDR ,( ARS * ( Min( ARS ,AMS ) * FirstVNF_CPU ) ) ) ) ,MRS ) )", "choosing": "Max( ( Max( ( Max( ( Max( MUR,MUR ) * CS ),MUR ) * ( RCSe + ( MUR / Min( CS ,DS ) ) ) ),Min( RMSe ,RMSe ) ) / DS ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Min( MRS ,ACS ) + AMS ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( CS - RCSe ) + Min( MUC ,MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0013852580623019267}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "Max( MLU,( ( RMSe + DS ) * Min( ( Max( RMSe,( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ) * ( MRS - CRS ) )", "choosing": "Max( CS,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( ( ( PN / PN ) / FirstVNF_CPU_Server ) / ( Const - FirstVNF_CPU_Server ) ) + ( PN / ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Const ) + FirstVNF_RAM ) ) )", "choosing": "( Max( MUM,MUC ) / ( Max( Max( RCSe,( RCSe * CS ) ),( DS / ( MUC / ( RMSe * ( ( DS * DS ) / ( MLU * MUR ) ) ) ) ) ) + ( Max( MLU,( ( DS / MUM ) + ( RCSe / RMSe ) ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( ( MDR * AMS ) ,MDR ) )", "choosing": "Max( ( CS * DS ),Min( ( RCSe + ( ( ( MUC + ( RRSe * RMSe ) ) + MUM ) / ( CS * Max( ( ( MUR + RMSe ) / MLU ),DS ) ) ) ) ,RMSe ) )", "obj1": 0.9157088122605364, "obj2": 0.037892720210969774}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( ( ( PN - ( Const / ( ( FirstVNF_CPU_Server + ARS ) - ACS ) ) ) * FirstVNF_CPU ) / ARS ) ) )", "choosing": "Max( Min( ( Min( ( MUM + ( ( ( CS / MUM ) / MUR ) / ( MLU * ( MUC - MUR ) ) ) ) ,( ( CS * Max( MUM,Max( MUM,RCSe ) ) ) * MLU ) ) / RRSe ) ,MUM ),( RRSe * CS ) )", "obj1": 0.9770114942528736, "obj2": 0.009918881383643179}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( ( RMSe + DS ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 0.5919540229885057, "obj2": 0.2831658806810035}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( ( Max( DDR,( Min( ( Min( CRS ,RRS ) + FirstVNF_CPU ) ,FirstVNF_CPU ) / ARS ) ) / Const ) ,MDR ) )", "choosing": "Max( ( CS * DS ),Min( ( RCSe + ( ( ( MUC + ( RRSe * CS ) ) + MUM ) / ( CS * Max( ( ( MUR + RMSe ) / MLU ),DS ) ) ) ) ,RMSe ) )", "obj1": 0.9291187739463601, "obj2": 0.029472952888735995}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * BR ) + Const ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - ( MUM * ( RMSe / MUR ) ) ) / MUR ),( RMSe / MUR ) )", "obj1": 0.9310344827586207, "obj2": 0.028719258218041697}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / Max( PN,BR ) ) + Max( ( PN + FirstVNF_RAM ),PN ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,FirstVNF_RAM ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - DS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005848210241070455}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( ( ( ARS - ( DDR + AMS ) ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU - FirstVNF_CPU ) / FirstVNF_CPU ) - ARS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Max( DS,( CS * MLU ) ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9521072796934866, "obj2": 0.019181925149155687}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - CRS ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( Max( MUM,DS ) / MLU ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( AMS * Const ) - Min( ( FirstVNF_Mem + ( ( PN * FirstVNF_Mem ) + ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem ) ) ) ,RRS ) ) - Min( ( MDR * FirstVNF_CPU ) ,MDR ) )", "choosing": "Max( DS,( MUR - ( MUR / RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0025226248225210285}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( Min( CRS ,RRS ) ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / ( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9923371647509579, "obj2": 0.0028574295202555048}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003837048479660962}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9904214559386973, "obj2": 0.003837048479660962}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "Max( MLU,( ( RMSe + DS ) * Min( ( Max( RMSe,( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( PN * AMS ) ) / FirstVNF_Mem ) - ( Const + PN ) )", "choosing": "( ( CS - ( RCSe + RCSe ) ) - ( ( ( ( RMSe - CS ) * ( MLU / MUM ) ) + ( Max( MUR,RMSe ) / ( CS * CS ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,( Max( ACS,DDR ) / ( MDR - DDR ) ) ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + MUM ) * Max( RCSe,MUR ) ) ,( ( MUM / DS ) - ( RCSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ARS,MDR ),Max( BR,RRS ) ) / Min( ( PN - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( CS,MUM ) ,( DS - RCSe ) ),( ( MUC * MUR ) - ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( ( ( ( Max( ( BR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),AMS ) + Const ) / MDR ) - BR ) - ( ( Max( ( BR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),AMS ) + Const ) / MDR ) )", "choosing": "Max( ( ( Min( RMSe ,MUM ) - ( DS * RCSe ) ) / ( Min( RRSe ,RRSe ) + MUR ) ),( Min( RRSe ,RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / PN ) / FirstVNF_CPU_Server ) / ( Const - FirstVNF_CPU_Server ) ) + ( PN / ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Const ) + FirstVNF_RAM ) ) )", "choosing": "( Max( MUM,MUC ) / ( Max( Max( RCSe,( RCSe * CS ) ),( DS / ( MUC / ( RMSe * ( ( DS * DS ) / ( MLU * MUR ) ) ) ) ) ) + ( Max( MLU,( ( DS / MUM ) + ( RCSe / RMSe ) ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ,( FirstVNF_CPU * ( FirstVNF_Mem + ACS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,( Max( CS,MUM ) / Min( ( RMSe + Min( RCSe ,RRSe ) ) ,Min( RRSe ,MUM ) ) ) ),RMSe ) ) )", "obj1": 0.9118773946360154, "obj2": 0.03701339444569935}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( ( ( PN - ( Const / ( ( FirstVNF_CPU_Server + ARS ) - ACS ) ) ) * FirstVNF_CPU ) / ARS ) ) )", "choosing": "Max( Min( ( Min( ( MUM + ( ( ( CS / MUM ) / MUR ) / ( MLU * ( MUC - MUR ) ) ) ) ,( ( CS * Max( MUM,Max( MUM,RCSe ) ) ) * MLU ) ) / RRSe ) ,MUM ),( RRSe * CS ) )", "obj1": 0.9770114942528736, "obj2": 0.009918881383643179}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( ( Max( DDR,( Min( ( Min( CRS ,RRS ) + FirstVNF_CPU ) ,FirstVNF_CPU ) / ARS ) ) / Const ) ,MDR ) )", "choosing": "Max( ( CS * DS ),Min( ( RCSe + ( ( ( MUC + ( RRSe * CS ) ) + MUM ) / ( CS * Max( ( ( MUR + RMSe ) / MLU ),DS ) ) ) ) ,RMSe ) )", "obj1": 0.9291187739463601, "obj2": 0.029472952888735995}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( ( RMSe + DS ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 0.5919540229885057, "obj2": 0.2831658806810035}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / Max( PN,BR ) ) + Max( ( PN + FirstVNF_RAM ),PN ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,FirstVNF_RAM ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - DS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005848210241070455}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ( Max( FirstVNF_CPU,MDR ) + ACS ) ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( RRSe + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9367816091954023, "obj2": 0.027555310007507047}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( ( ( ARS - ( DDR + AMS ) ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU - FirstVNF_CPU ) / FirstVNF_CPU ) - ARS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Max( DS,( CS * MLU ) ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9521072796934866, "obj2": 0.019181925149155687}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * BR ) + Const ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - ( MUM * ( RMSe / MUR ) ) ) / MUR ),( RMSe / MUR ) )", "obj1": 0.9310344827586207, "obj2": 0.028719258218041697}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( FirstVNF_RAM - ( ( ( Max( MDR,PN ) + ARS ) - ACS ) / Const ) ) * FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "Max( ( Min( ( DS / Max( ( ( MUM / MLU ) + ( RCSe + CS ) ),MUR ) ) ,( RMSe * CS ) ) + ( Max( RMSe,( ( MUC * RMSe ) * RCSe ) ) * RRSe ) ),DS )", "obj1": 0.9942528735632183, "obj2": 0.0024254205676541405}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( Min( CRS ,RRS ) ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / ( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9923371647509579, "obj2": 0.0028574295202555048}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ACS * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - CRS ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( Max( MUM,DS ) / MLU ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003837048479660962}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9904214559386973, "obj2": 0.003837048479660962}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "Max( MLU,( ( RMSe + DS ) * Min( ( Max( RMSe,( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "Max( ( MUM - RRSe ),( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "Max( ( Max( MLU,DS ) + Max( DS,MUM ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) * Max( Const,CRS ) )", "choosing": "( Max( MLU,DS ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( ( Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * ( Min( AMS ,ACS ) + FirstVNF_Mem ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * ( Min( AMS ,ACS ) + FirstVNF_Mem ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( MUM * CS ) + Max( MUR,MLU ) ) ) ) ) * ( MLU / CS ) ) / MUR ),( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( BR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),AMS ) + Const ) / MDR ) - BR ) - ( ( Max( ( BR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),AMS ) + Const ) / MDR ) )", "choosing": "Max( ( ( Min( RMSe ,MUM ) - ( DS * RCSe ) ) / ( Min( RRSe ,RRSe ) + MUR ) ),( Min( RRSe ,RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ,( FirstVNF_CPU * ( FirstVNF_Mem + ACS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,( Max( CS,MUM ) / Min( ( RMSe + Min( RCSe ,RRSe ) ) ,Min( RRSe ,MUM ) ) ) ),RMSe ) ) )", "obj1": 0.9118773946360154, "obj2": 0.03701339444569935}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( ( ( PN - ( Const / ( ( FirstVNF_CPU_Server + ARS ) - ACS ) ) ) * FirstVNF_CPU ) / ARS ) ) )", "choosing": "Max( Min( ( Min( ( MUM + ( ( ( CS / MUM ) / MUR ) / ( MLU * ( MUC - MUR ) ) ) ) ,( ( CS * Max( MUM,Max( MUM,RCSe ) ) ) * MLU ) ) / RRSe ) ,MUM ),( RRSe * CS ) )", "obj1": 0.9770114942528736, "obj2": 0.009918881383643179}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ( ( Max( Const,Const ) * PN ) / FirstVNF_Mem ) / BR ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + AMS ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),Min( RMSe ,CS ) ) / ( ( Max( DS,MUC ) / ( CS * Max( ( ( DS + RMSe ) / RMSe ),DS ) ) ) - RMSe ) ),DS )", "obj1": 0.9636015325670498, "obj2": 0.018924520092835084}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( ( Max( DDR,( Min( ( Min( CRS ,RRS ) + FirstVNF_CPU ) ,FirstVNF_CPU ) / ARS ) ) / Const ) ,MDR ) )", "choosing": "Max( ( CS * DS ),Min( ( RCSe + ( ( ( MUC + ( RRSe * CS ) ) + MUM ) / ( CS * Max( ( ( MUR + RMSe ) / MLU ),DS ) ) ) ) ,RMSe ) )", "obj1": 0.9291187739463601, "obj2": 0.029472952888735995}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( ( RMSe + DS ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 0.5919540229885057, "obj2": 0.2831658806810035}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( AMS / DDR ) + ( ( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) ) * ACS ) )", "choosing": "Max( ( MUM - RRSe ),DS )", "obj1": 0.9425287356321839, "obj2": 0.024218264115502226}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / Max( PN,BR ) ) + Max( ( PN + FirstVNF_RAM ),PN ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,FirstVNF_RAM ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - DS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005848210241070455}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ( Max( FirstVNF_CPU,MDR ) + ACS ) ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( RRSe + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9367816091954023, "obj2": 0.027555310007507047}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( ( ( ARS - ( DDR + AMS ) ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU - FirstVNF_CPU ) / FirstVNF_CPU ) - ARS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Max( DS,( CS * MLU ) ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9521072796934866, "obj2": 0.019181925149155687}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM_Server * BR ),( Const - FirstVNF_RAM_Server ) ) + Const ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - ( MUM * DS ) ) / ( RMSe / MUR ) ),( RMSe / MUR ) )", "obj1": 0.9310344827586207, "obj2": 0.028719258218041697}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( FirstVNF_RAM - ( ( ( Max( MDR,PN ) + ARS ) - ACS ) / Const ) ) * FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "Max( ( Min( ( DS / Max( ( ( MUM / MLU ) + ( RCSe + CS ) ),MUR ) ) ,( RMSe * CS ) ) + ( Max( RMSe,( ( MUC * RMSe ) * RCSe ) ) * RRSe ) ),DS )", "obj1": 0.9942528735632183, "obj2": 0.0024254205676541405}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( Min( CRS ,RRS ) ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / ( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9923371647509579, "obj2": 0.0028574295202555048}, {"determining": "( ( ARS - ( ( ( BR - ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,MUM ) ) ) ) ) ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0005950023982061264}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * BR ) + Const ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - ( MUM * ( RMSe / MUR ) ) ) / MUR ),( RMSe / MUR ) )", "obj1": 0.9310344827586207, "obj2": 0.028719258218041697}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - CRS ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( Max( MUM,DS ) / MLU ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0038370484796609616}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ACS * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,( FirstVNF_RAM_Server * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( ( MUM * ( Max( ( CS / MUC ),( RRSe * MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ,DS ) ) ),( MLU * ( RRSe * ( RRSe / Min( ( DS - MUM ) ,( MUR - DS ) ) ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0038370484796609616}, {"determining": "( ( ( ( PN / PN ) / FirstVNF_CPU_Server ) / ( Const - FirstVNF_CPU_Server ) ) + ( PN / ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Const ) + FirstVNF_RAM ) ) )", "choosing": "( Max( MUM,MUC ) / ( Max( Max( RCSe,( RCSe * CS ) ),( DS / ( MUC / ( RMSe * ( ( DS * DS ) / ( MLU * MUR ) ) ) ) ) ) + ( Max( MLU,( ( DS / MUM ) + ( RCSe / RMSe ) ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "Max( MLU,( ( RMSe + DS ) * Min( ( Max( RMSe,( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "Min( ( RRS - ( ( FirstVNF_CPU_Server - Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) ) ,Min( Max( DDR,Min( MRS ,MDR ) ) ,MRS ) )", "choosing": "Max( ( DS + Min( Min( RMSe ,Min( RCSe ,Max( CS,RCSe ) ) ) ,MLU ) ),( ( MUR / RCSe ) + ( RMSe - ( Max( MUR,MUR ) / ( ( DS - ( MLU * MLU ) ) * Max( ( MUR + MUR ),( RRSe - CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * ( Min( AMS ,ACS ) + FirstVNF_Mem ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * ( Min( AMS ,ACS ) + FirstVNF_Mem ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( MUM * CS ) + Max( MUR,MLU ) ) ) ) ) * ( MLU / CS ) ) / MUR ),( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ,( FirstVNF_CPU * ( FirstVNF_Mem + ACS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,( Max( CS,MUM ) / Min( ( RMSe + Min( RCSe ,RRSe ) ) ,Min( RRSe ,MUM ) ) ) ),RMSe ) ) )", "obj1": 0.9118773946360154, "obj2": 0.03701339444569935}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ( ( ( CRS * Max( ACS,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) / PN ) / FirstVNF_CPU_Server ) / ( Const - FirstVNF_CPU_Server ) ) + ( PN / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),MLU ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( RMSe ,Min( RCSe ,( CS + MLU ) ) ) ,MLU ) ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.016792392234930616}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( ( ( PN - ( Const / ( ( FirstVNF_CPU_Server + ARS ) - ACS ) ) ) * FirstVNF_CPU ) / ARS ) ) )", "choosing": "Max( Min( ( Min( ( MUM + ( ( ( CS / MUM ) / MUR ) / ( MLU * ( MUC - MUR ) ) ) ) ,( ( CS * Max( MUM,Max( MUM,RCSe ) ) ) * MLU ) ) / RRSe ) ,MUM ),( RRSe * CS ) )", "obj1": 0.9770114942528736, "obj2": 0.009918881383643179}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( ( Max( DDR,( Min( ( Min( CRS ,RRS ) + FirstVNF_CPU ) ,FirstVNF_CPU ) / ARS ) ) / Const ) ,MDR ) )", "choosing": "Max( ( CS * DS ),Min( ( RCSe + ( ( ( MUC + ( RRSe * CS ) ) + MUM ) / ( CS * Max( ( ( MUR + RMSe ) / MLU ),DS ) ) ) ) ,RMSe ) )", "obj1": 0.9291187739463601, "obj2": 0.029472952888735995}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( ( RMSe + DS ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 0.5919540229885057, "obj2": 0.2831658806810035}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server - MRS ) ) + Max( PN,( PN + FirstVNF_RAM ) ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ( ARS + ARS ) - CRS ) ) ) ) + MDR ) ,( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,( MLU * CS ) ),( MUC / ( CS * MLU ) ) )", "obj1": 0.9348659003831418, "obj2": 0.023995189231851306}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( ( ( ARS - ( DDR + AMS ) ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU - FirstVNF_CPU ) / FirstVNF_CPU ) - ARS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Max( DS,( CS * MLU ) ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9521072796934866, "obj2": 0.019181925149155687}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / Max( PN,BR ) ) + Max( ( PN + FirstVNF_RAM ),PN ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,FirstVNF_RAM ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - DS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005848210241070455}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server - MRS ) ) + Max( PN,( PN + FirstVNF_RAM ) ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ( ARS + ARS ) - CRS ) ) ) ) + MDR ) ,( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,( MLU * CS ) ),( MUC / ( CS * MLU ) ) )", "obj1": 0.9348659003831418, "obj2": 0.023995189231851306}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM_Server * BR ),( Const - FirstVNF_RAM_Server ) ) + Const ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - ( MUM * DS ) ) / ( RMSe / MUR ) ),( RMSe / MUR ) )", "obj1": 0.9310344827586207, "obj2": 0.028719258218041697}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( FirstVNF_RAM - ( ( ( Max( MDR,PN ) + ARS ) - ACS ) / Const ) ) * FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "Max( ( Min( ( DS / Max( ( ( MUM / MLU ) + ( RCSe + CS ) ),MUR ) ) ,( RMSe * CS ) ) + ( Max( RMSe,( ( MUC * RMSe ) * RCSe ) ) * RRSe ) ),DS )", "obj1": 0.9942528735632183, "obj2": 0.0024254205676541405}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( Min( CRS ,RRS ) ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / ( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9923371647509579, "obj2": 0.0028574295202555048}, {"determining": "( ( ARS - ( ( ( BR - ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,MUM ) ) ) ) ) ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0005950023982061264}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * BR ) + Const ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - ( MUM * ( RMSe / MUR ) ) ) / MUR ),( RMSe / MUR ) )", "obj1": 0.9310344827586207, "obj2": 0.028719258218041697}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ACS * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0038370484796609616}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - CRS ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( Max( MUM,DS ) / MLU ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,( FirstVNF_RAM_Server * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( ( MUM * ( Max( ( CS / MUC ),( RRSe * MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ,DS ) ) ),( MLU * ( RRSe * ( RRSe / Min( ( DS - MUM ) ,( MUR - DS ) ) ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0038370484796609616}, {"determining": "( ( ( ( Max( ( BR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),AMS ) + Const ) / MDR ) - BR ) - ( ( Max( ( BR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),AMS ) + Const ) / MDR ) )", "choosing": "Max( ( ( Min( RMSe ,MUM ) - ( DS * RCSe ) ) / ( Min( RRSe ,RRSe ) + MUR ) ),( Min( RRSe ,RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / PN ) / FirstVNF_CPU_Server ) / ( Const - FirstVNF_CPU_Server ) ) + ( PN / ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Const ) + FirstVNF_RAM ) ) )", "choosing": "( Max( MUM,MUC ) / ( Max( Max( RCSe,( RCSe * CS ) ),( DS / ( MUC / ( RMSe * ( ( DS * DS ) / ( MLU * MUR ) ) ) ) ) ) + ( Max( MLU,( ( DS / MUM ) + ( RCSe / RMSe ) ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "Max( MLU,( ( RMSe + DS ) * Min( ( Max( RMSe,( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "( ( ( ( ( ACS - ( DDR / FirstVNF_CPU_Server ) ) - Max( AMS,ARS ) ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - Max( MUC,Max( MUR,RRSe ) ) ) / MUR ),( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( ( FirstVNF_CPU_Server - Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) ) ,Min( Max( DDR,Min( MRS ,MDR ) ) ,MRS ) )", "choosing": "Max( ( DS + Min( Min( RMSe ,Min( RCSe ,Max( CS,RCSe ) ) ) ,MLU ) ),( ( MUR / RCSe ) + ( RMSe - ( Max( MUR,MUR ) / ( ( DS - ( MLU * MLU ) ) * Max( ( MUR + MUR ),( RRSe - CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ,( FirstVNF_CPU * ( FirstVNF_Mem + ACS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,( Max( CS,MUM ) / Min( ( RMSe + Min( RCSe ,RRSe ) ) ,Min( RRSe ,MUM ) ) ) ),RMSe ) ) )", "obj1": 0.9118773946360154, "obj2": 0.03701339444569935}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ( ( ( CRS * Max( ACS,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) / PN ) / FirstVNF_CPU_Server ) / ( Const - FirstVNF_CPU_Server ) ) + ( PN / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),MLU ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( RMSe ,Min( RCSe ,( CS + MLU ) ) ) ,MLU ) ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.016792392234930616}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( ( ( PN - ( Const / ( ( FirstVNF_CPU_Server + ARS ) - ACS ) ) ) * FirstVNF_CPU ) / ARS ) ) )", "choosing": "Max( Min( ( Min( ( MUM + ( ( ( CS / MUM ) / MUR ) / ( MLU * ( MUC - MUR ) ) ) ) ,( ( CS * Max( MUM,Max( MUM,RCSe ) ) ) * MLU ) ) / RRSe ) ,MUM ),( RRSe * CS ) )", "obj1": 0.9770114942528736, "obj2": 0.009918881383643179}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( ( Max( DDR,( Min( ( Min( CRS ,RRS ) + FirstVNF_CPU ) ,FirstVNF_CPU ) / ARS ) ) / Const ) ,MDR ) )", "choosing": "Max( ( CS * DS ),Min( ( RCSe + ( ( ( MUC + ( RRSe * CS ) ) + MUM ) / ( CS * Max( ( ( MUR + RMSe ) / MLU ),DS ) ) ) ) ,RMSe ) )", "obj1": 0.9291187739463601, "obj2": 0.029472952888735995}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( ( RMSe + DS ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 0.5919540229885057, "obj2": 0.2831658806810035}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server - MRS ) ) + Max( PN,( PN + FirstVNF_RAM ) ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ( ARS + ARS ) - CRS ) ) ) ) + MDR ) ,( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,( MLU * CS ) ),( MUC / ( CS * MLU ) ) )", "obj1": 0.9348659003831418, "obj2": 0.023995189231851306}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( ( ( ARS - ( DDR + AMS ) ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU - FirstVNF_CPU ) / FirstVNF_CPU ) - ARS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Max( DS,( CS * MLU ) ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9521072796934866, "obj2": 0.019181925149155687}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / Max( PN,BR ) ) + Max( ( PN + FirstVNF_RAM ),PN ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,FirstVNF_RAM ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - DS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005848210241070455}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server - MRS ) ) + Max( PN,( PN + FirstVNF_RAM ) ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ( ARS + ARS ) - CRS ) ) ) ) + MDR ) ,( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,( MLU * CS ) ),( MUC / ( CS * MLU ) ) )", "obj1": 0.9348659003831418, "obj2": 0.023995189231851306}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM_Server * BR ),( Const - FirstVNF_RAM_Server ) ) + Const ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - ( MUM * DS ) ) / ( RMSe / MUR ) ),( RMSe / MUR ) )", "obj1": 0.9310344827586207, "obj2": 0.028719258218041697}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( FirstVNF_RAM - ( ( ( Max( MDR,PN ) + ARS ) - ACS ) / Const ) ) * FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "Max( ( Min( ( DS / Max( ( ( MUM / MLU ) + ( RCSe + CS ) ),MUR ) ) ,( RMSe * CS ) ) + ( Max( RMSe,( ( MUC * RMSe ) * RCSe ) ) * RRSe ) ),DS )", "obj1": 0.9942528735632183, "obj2": 0.0024254205676541405}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( Min( CRS ,RRS ) ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / ( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9923371647509579, "obj2": 0.0028574295202555048}, {"determining": "( ( ARS - ( ( ( BR - ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,MUM ) ) ) ) ) ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0005950023982061264}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * BR ) + Const ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - ( MUM * ( RMSe / MUR ) ) ) / MUR ),( RMSe / MUR ) )", "obj1": 0.9310344827586207, "obj2": 0.028719258218041697}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - CRS ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( Max( MUM,DS ) / MLU ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0038370484796609616}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ACS * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,( FirstVNF_RAM_Server * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( ( MUM * ( Max( ( CS / MUC ),( RRSe * MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ,DS ) ) ),( MLU * ( RRSe * ( RRSe / Min( ( DS - MUM ) ,( MUR - DS ) ) ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0038370484796609616}, {"determining": "( ( Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * ( Min( AMS ,ACS ) + FirstVNF_Mem ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * ( Min( AMS ,ACS ) + FirstVNF_Mem ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( MUM * CS ) + Max( MUR,MLU ) ) ) ) ) * ( MLU / CS ) ) / MUR ),( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( BR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),AMS ) + Const ) / MDR ) - BR ) - ( ( Max( ( BR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),AMS ) + Const ) / MDR ) )", "choosing": "Max( ( ( Min( RMSe ,MUM ) - ( DS * RCSe ) ) / ( Min( RRSe ,RRSe ) + MUR ) ),( Min( RRSe ,RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / PN ) / FirstVNF_CPU_Server ) / ( Const - FirstVNF_CPU_Server ) ) + ( PN / ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Const ) + FirstVNF_RAM ) ) )", "choosing": "( Max( MUM,MUC ) / ( Max( Max( RCSe,( RCSe * CS ) ),( DS / ( MUC / ( RMSe * ( ( DS * DS ) / ( MLU * MUR ) ) ) ) ) ) + ( Max( MLU,( ( DS / MUM ) + ( RCSe / RMSe ) ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "Max( MLU,( ( RMSe + DS ) * Min( ( Max( RMSe,( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * CRS ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( MLU - DS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - ( DDR - PN ) )", "choosing": "Min( ( CS * MUM ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Min( AMS ,ACS ) )", "choosing": "Max( ( RRSe * Max( MUR,MUC ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUC ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "( ( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ACS ) ) - BR ) - AMS ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - ( MUM * DS ) ) / ( ( MLU * Min( DS ,RMSe ) ) - MLU ) ),( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ACS - ( DDR / FirstVNF_CPU_Server ) ) - Max( AMS,ARS ) ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - Max( MUC,Max( MUR,RRSe ) ) ) / MUR ),( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( ( AMS * Const ) ,MDR ) - ( AMS + ( MRS / BR ) ) ) )", "choosing": "Max( ( ( Min( MUC ,( ( RMSe / CS ) - RRSe ) ) + ( Min( RCSe ,RRSe ) + RMSe ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.5708812260536399, "obj2": 0.30451897295465086}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( ( CRS * DDR ) ,FirstVNF_RAM ) / Const ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( RMSe * RCSe ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.6283524904214559, "obj2": 0.19469990267878431}, {"determining": "( Min( ( Min( ( BR - AMS ) ,FirstVNF_Mem ) - DDR ) ,FirstVNF_Mem ) - ( Min( MDR ,( ( Min( MDR ,( ARS * AMS ) ) - ARS ) * AMS ) ) - ARS ) )", "choosing": "Max( ( DS / ( MUR * ( CS * ( DS / DS ) ) ) ),RMSe )", "obj1": 0.7931034482758621, "obj2": 0.10392258410325081}, {"determining": "( Min( ( MDR - ACS ) ,Max( Const,RRS ) ) / ( DDR * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) ) ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.19185507532920895}, {"determining": "( ( PN * PN ) - Max( MRS,MRS ) )", "choosing": "Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( MLU,( RRSe * RRSe ) ) ) + Min( MUM ,( Min( DS ,MUR ) / RRSe ) ) ),DS )", "obj1": 0.8390804597701149, "obj2": 0.07075328310883572}, {"determining": "( ( ( AMS * ACS ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * Max( BR,FirstVNF_RAM_Server ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( RMSe * RCSe ) + ( MUR + MLU ) ) ) ) ) * ( CS / MLU ) ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( Max( Max( Const,( ( Const / ACS ) - MRS ) ),PN ) + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( MUR - RMSe ) ),DS )", "obj1": 0.7586206896551724, "obj2": 0.1589929027903128}, {"determining": "( ( Min( FirstVNF_RAM_Server ,BR ) * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MLU ,DS ) - MLU ) + Min( MUM ,( Min( Min( MUR ,CS ) ,CS ) / RRSe ) ) ),DS )", "obj1": 0.8639846743295019, "obj2": 0.060857768379386064}, {"determining": "( ( Min( ( FirstVNF_RAM / Const ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) / AMS ) ) * ( ( DDR * FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) / Min( Max( Max( FirstVNF_RAM_Server,RRS ),( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ,( Max( RRS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,RRSe ) + ( CS * DS ) ) ) / ( ( Max( ( DS / Min( RMSe ,MLU ) ),RCSe ) - ( RRSe - RRSe ) ) * ( MLU * Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.12852272785636681}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / Min( ( ( ( ACS * ( FirstVNF_RAM * ( FirstVNF_CPU_Server - ( CRS - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + DS ) * Max( Max( ( MUM * RRSe ),MUM ),MUR ) ) ,( ( CS - MUM ) / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.2667513779201627}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( FirstVNF_RAM_Server ,BR ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.60727969348659, "obj2": 0.24851521387535092}, {"determining": "( ( ARS * AMS ) - Min( MDR ,Min( ( ARS + MDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / ( RCSe * ( Max( MUR,DS ) + DS ) ) ),( RMSe / CS ) )", "obj1": 0.7471264367816092, "obj2": 0.16249453703792074}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( MUC + MUR ) + ( Max( CS,MUR ) * DS ) )", "obj1": 0.7145593869731801, "obj2": 0.16288072553935504}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( DS / ( MUR * ( CS * Min( ( ( MUM + MUM ) + ( ( RRSe - MLU ) + ( RRSe * DS ) ) ) ,( ( MUR - MUC ) / DS ) ) ) ) ),RMSe )", "obj1": 0.7049808429118773, "obj2": 0.17228389912813577}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,Max( PN,FirstVNF_CPU ) ) ,BR ),DDR ) - Min( ( MDR + ARS ) ,( Min( Max( ( DDR + FirstVNF_RAM_Server ),( PN - Max( FirstVNF_Mem_Server,ARS ) ) ) ,FirstVNF_Mem_Server ) - ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU / ( ( ( MUR * MLU ) * Min( ( CS + DS ) ,( Min( RMSe ,DS ) - Min( MUM ,MUM ) ) ) ) * MUC ) ) / RMSe ) + MLU )", "obj1": 0.8505747126436781, "obj2": 0.06967458964012437}, {"determining": "( ( ( ( ( CRS * Max( ACS,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) / PN ) / FirstVNF_CPU_Server ) / ( Const - FirstVNF_CPU_Server ) ) + ( PN / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),MLU ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( RMSe ,Min( RCSe ,( CS + MLU ) ) ) ,MLU ) ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.016792392234930616}, {"determining": "( Min( ( ARS * AMS ) ,MDR ) - Min( MDR ,Min( MDR ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( ( ( RMSe + RRSe ) / Max( ( MUR + RMSe ),( RRSe + RRSe ) ) ) - RMSe ) ),DS )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( Min( MDR ,( ( Min( AMS ,FirstVNF_Mem ) * ( FirstVNF_RAM_Server * AMS ) ) - FirstVNF_CPU ) ) - ( ( ( PN - ( Const / ( ( FirstVNF_CPU_Server + ARS ) - ACS ) ) ) * FirstVNF_CPU ) / ARS ) ) )", "choosing": "Max( Min( ( Min( ( MUM + ( ( ( CS / MUM ) / MUR ) / ( MLU * ( MUC - MUR ) ) ) ) ,( ( CS * Max( MUM,Max( MUM,RCSe ) ) ) * MLU ) ) / RRSe ) ,MUM ),( RRSe * CS ) )", "obj1": 0.9770114942528736, "obj2": 0.009918881383643179}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.8831417624521073, "obj2": 0.050633305332726725}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( ( RMSe + DS ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 0.5919540229885057, "obj2": 0.2831658806810035}, {"determining": "( Max( MRS,ARS ) - Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUC ) + Min( MUM ,( ( RCSe - RMSe ) - DS ) ) )", "obj1": 0.5938697318007663, "obj2": 0.2773017898692293}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ,( FirstVNF_CPU * ( FirstVNF_Mem + ACS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,( Max( CS,MUM ) / Min( ( RMSe + Min( RCSe ,RRSe ) ) ,Min( RRSe ,MUM ) ) ) ),RMSe ) ) )", "obj1": 0.9118773946360154, "obj2": 0.03701339444569935}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.13350151528382748}, {"determining": "( ( ( ACS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / Const ) ) * Min( FirstVNF_CPU ,DDR ) ) ) - ( ARS * AMS ) ) ) )", "choosing": "Max( Max( ( Max( ( Max( ( MUR / MUC ),DS ) - ( Max( DS,MUC ) - Max( MUC,( MUM * MUC ) ) ) ),( DS - CS ) ) / ( MUM - ( RRSe * MUC ) ) ),( ( MUM / ( ( MUC + MLU ) - DS ) ) / ( MUM / MUC ) ) ),MLU )", "obj1": 0.9003831417624522, "obj2": 0.04158358569950913}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) - ( Min( AMS ,DDR ) / ( AMS / DDR ) ) )", "choosing": "( ( MUM - RCSe ) / ( Min( ( Max( MUM,Min( ( RCSe * ( DS * MUR ) ) ,( ( RRSe + DS ) - ( MLU * MUR ) ) ) ) + ( MUR * MUM ) ) ,( RMSe - MUR ) ) * MUM ) )", "obj1": 0.9482758620689655, "obj2": 0.020068766555667993}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "Max( ( MUC + RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.17043357395680073}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( ( ( ARS - ( DDR + AMS ) ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU - FirstVNF_CPU ) / FirstVNF_CPU ) - ARS ) ) ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Max( DS,( CS * MLU ) ) - CS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9521072796934866, "obj2": 0.019181925149155687}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / Max( PN,BR ) ) + Max( ( PN + FirstVNF_RAM ),PN ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,FirstVNF_RAM ) + MDR ) ,( AMS + ACS ) ) )", "choosing": "Max( ( ( ( ( Min( ( DS / ( MUC - RCSe ) ) ,RMSe ) - DS ) * RCSe ) + RRSe ) / DS ),( ( RRSe * RRSe ) - Max( Min( MUC ,CS ),RMSe ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005848210241070455}, {"determining": "( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( MUR,MUC ) / ( MUR + DS ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( ( Max( ARS,Min( ARS ,BR ) ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server - MRS ) ) + Max( PN,( PN + FirstVNF_RAM ) ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ( ARS + ARS ) - CRS ) ) ) ) + MDR ) ,( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,( MLU * CS ) ),( ( ( MUC * DS ) - ( MUC - MUR ) ) / ( CS * MLU ) ) )", "obj1": 0.9176245210727969, "obj2": 0.0337131763756777}, {"determining": "( ( AMS * PN ) - Min( Max( DDR,Min( ACS ,Min( FirstVNF_RAM_Server ,BR ) ) ) ,MRS ) )", "choosing": "Max( ( ( Min( MUC ,Min( Max( MLU,( ( DS + MUC ) * ( MUM * RMSe ) ) ) ,MUM ) ) + MLU ) / DS ),( RMSe - RMSe ) )", "obj1": 0.6187739463601533, "obj2": 0.24395701926122115}, {"determining": "Min( ( FirstVNF_RAM / ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,BR ) ) ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "( Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) / Min( DS ,MUM ) )", "obj1": 0.8946360153256705, "obj2": 0.043210855501063086}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server - MRS ) ) + Max( PN,( PN + FirstVNF_RAM ) ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ( ARS + ARS ) - CRS ) ) ) ) + MDR ) ,( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,( MLU * CS ) ),( MUC / ( CS * MLU ) ) )", "obj1": 0.9348659003831418, "obj2": 0.023995189231851306}, {"determining": "( ( AMS * FirstVNF_RAM ) / ( ( AMS * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "( ( AMS * FirstVNF_RAM ) / AMS )", "choosing": "Max( ( ( MUR + MUR ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.5823754789272031, "obj2": 0.29059796626535717}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUR + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8908045977011494, "obj2": 0.04574287744312768}, {"determining": "( ( ( DDR - ( MDR * FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,Const ) - ( CRS * FirstVNF_Mem_Server ) ) ) + ( ARS / ( Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( DS,MLU ),( MUC + Min( Min( DS ,RRSe ) ,Min( DS ,( ( RRSe - RRSe ) / RRSe ) ) ) ) ) / Min( MLU ,( ( ( DS / DS ) + RMSe ) * ( CS + Min( Min( MUM ,MLU ) ,Max( Min( ( MLU + CS ) ,MUR ),CS ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2939512128435891}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( ( Max( DDR,( Min( ( Min( CRS ,RRS ) + FirstVNF_CPU ) ,FirstVNF_CPU ) / ARS ) ) / Const ) ,MDR ) )", "choosing": "Max( ( CS * DS ),Min( ( RCSe + ( ( ( MUC + ( RRSe * CS ) ) + MUM ) / ( CS * Max( ( ( MUR + RMSe ) / MLU ),DS ) ) ) ) ,RMSe ) )", "obj1": 0.9291187739463601, "obj2": 0.029472952888735995}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server - MRS ) ) + Max( PN,( PN + FirstVNF_RAM ) ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ( ARS + ARS ) - CRS ) ) ) ) + MDR ) ,( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,( MLU * CS ) ),( MUC / ( CS * MLU ) ) )", "obj1": 0.9329501915708812, "obj2": 0.02505682028752034}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( MUC + MUR ),Min( RMSe ,Min( RMSe ,RMSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04822940458524419}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server - MRS ) ) + Max( PN,( PN + FirstVNF_RAM ) ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ( ARS + ARS ) - CRS ) ) ) ) + MDR ) ,( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 0.9233716475095786, "obj2": 0.0319548191818479}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server * PN ) - ( BR / PN ) ) ,Min( Max( ACS,MDR ) ,( ACS + ARS ) ) ) ,Max( ( ( MRS - MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ),( ( FirstVNF_RAM / RRS ) / Min( ACS ,PN ) ) ) ) / ( ( ( FirstVNF_Mem_Server - DDR ) - ( PN * CRS ) ) / Min( Max( ARS,Const ) ,Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) + ( MUR * RRSe ) ) - ( ( RCSe / RRSe ) + ( CS - RCSe ) ) ) * ( ( Min( DS ,MUR ) / ( RCSe - MUM ) ) / Max( ( MUM * MUC ),Max( RCSe,RRSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.0041485111218818715}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server - MRS ) ) + Max( PN,( PN + FirstVNF_RAM ) ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ( ARS + ARS ) - CRS ) ) ) ) + MDR ) ,( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 0.9233716475095786, "obj2": 0.0319548191818479}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU ) - BR ) - Const ) - Min( ( Min( ( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server - MRS ) ) + Max( PN,( PN + FirstVNF_RAM ) ) ) / ( FirstVNF_Mem_Server + ( Min( ARS ,CRS ) * RRS ) ) ) ,( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ( ARS + ARS ) - CRS ) ) ) ) + MDR ) ,( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,( MLU * CS ) ),( MUC / ( CS * MLU ) ) )", "obj1": 0.9348659003831418, "obj2": 0.023995189231851306}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM_Server * BR ),( Const - FirstVNF_RAM_Server ) ) + Const ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - ( MUM * DS ) ) / ( RMSe / MUR ) ),( RMSe / MUR ) )", "obj1": 0.9310344827586207, "obj2": 0.028719258218041697}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ( ARS - DDR ) - DDR ) )", "choosing": "Max( Min( RMSe ,RMSe ),Min( RMSe ,RMSe ) )", "obj1": 0.8869731800766284, "obj2": 0.04959002284538363}, {"determining": "( ( ( FirstVNF_RAM - ( ( ( Max( MDR,PN ) + ARS ) - ACS ) / Const ) ) * FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "Max( ( Min( ( DS / Max( ( ( MUM / MLU ) + ( RCSe + CS ) ),MUR ) ) ,( RMSe * CS ) ) + ( Max( RMSe,( ( MUC * RMSe ) * RCSe ) ) * RRSe ) ),DS )", "obj1": 0.9942528735632183, "obj2": 0.0024254205676541405}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( Min( CRS ,RRS ) ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / ( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9923371647509579, "obj2": 0.0028574295202555048}, {"determining": "( ( ARS - ( ( ( BR - ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,MUM ) ) ) ) ) ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0005950023982061264}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - DDR ) ) - DDR ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) + MUR ),Min( RMSe ,RMSe ) )", "obj1": 0.8850574712643678, "obj2": 0.05004394833124976}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ACS * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "( ( ARS * ( ( ( BR + Const ) * ACS ) - ( FirstVNF_Mem_Server / DDR ) ) ) - Max( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MRS ) ,FirstVNF_CPU_Server ) ),( RRS - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM / RRSe ) * ( MUC - RRSe ) ),( MLU * ( DS + ( RCSe + MUC ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0038370484796609616}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * BR ) + Const ) / MDR ) - BR ) - FirstVNF_RAM )", "choosing": "Max( ( ( RRSe - ( MUM * ( RMSe / MUR ) ) ) / MUR ),( RMSe / MUR ) )", "obj1": 0.9310344827586207, "obj2": 0.028719258218041697}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - CRS ) * MDR ) ) ,FirstVNF_CPU ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( Max( MUM,DS ) / MLU ) * ( ( Max( MUM,DS ) / MLU ) + Min( DS ,( MUM * ( Max( ( CS / MUC ),( RRSe - MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ) ) ),DS )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "( ( ARS - ( ( ( BR - Const ) * ACS ) - ARS ) ) - ( Max( ( Min( ( Min( CRS ,RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * MDR ) ) ,( FirstVNF_RAM_Server * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) / ARS ),DDR ) / Const ) )", "choosing": "Max( ( ( MUC + MUC ) * ( ( Max( MUM,DS ) / MLU ) + Min( ( MUM * ( Max( ( CS / MUC ),( RRSe * MUR ) ) + Min( ( DS + DS ) ,( MUR * MUM ) ) ) ) ,DS ) ) ),( MLU * ( RRSe * ( RRSe / Min( ( DS - MUM ) ,( MUR - DS ) ) ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0038370484796609616}, {"determining": "Min( ( RRS - ( ( FirstVNF_CPU_Server - Min( Const ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) ) ,Min( Max( DDR,Min( MRS ,MDR ) ) ,MRS ) )", "choosing": "Max( ( DS + Min( Min( RMSe ,Min( RCSe ,Max( CS,RCSe ) ) ) ,MLU ) ),( ( MUR / RCSe ) + ( RMSe - ( Max( MUR,MUR ) / ( ( DS - ( MLU * MLU ) ) * Max( ( MUR + MUR ),( RRSe - CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * ( Min( AMS ,ACS ) + FirstVNF_Mem ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) * ( ACS * DDR ) ) - Min( Min( DDR ,Min( ( FirstVNF_RAM_Server * ( Min( AMS ,ACS ) + FirstVNF_Mem ) ) ,( AMS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) ) ) ,PN ) )", "choosing": "Max( ( ( Max( MUC,( ( DS + RCSe ) + Max( MLU,( ( MUM * CS ) + Max( MUR,MLU ) ) ) ) ) * ( MLU / CS ) ) / MUR ),( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( BR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),AMS ) + Const ) / MDR ) - BR ) - ( ( Max( ( BR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),AMS ) + Const ) / MDR ) )", "choosing": "Max( ( ( Min( RMSe ,MUM ) - ( DS * RCSe ) ) / ( Min( RRSe ,RRSe ) + MUR ) ),( Min( RRSe ,RRSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / PN ) / FirstVNF_CPU_Server ) / ( Const - FirstVNF_CPU_Server ) ) + ( PN / ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Const ) + FirstVNF_RAM ) ) )", "choosing": "( Max( MUM,MUC ) / ( Max( Max( RCSe,( RCSe * CS ) ),( DS / ( MUC / ( RMSe * ( ( DS * DS ) / ( MLU * MUR ) ) ) ) ) ) + ( Max( MLU,( ( DS / MUM ) + ( RCSe / RMSe ) ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "Max( MLU,( ( RMSe + DS ) * Min( ( Max( RMSe,( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( ( ( ACS * ( CRS / Min( AMS ,RRS ) ) ) - PN ) * ( ( FirstVNF_Mem - CRS ) / PN ) ) ,( RRS + Max( Const,MDR ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) * ( Max( ( RRSe + RCSe ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "( ( MLU * Max( ( ( DS - Min( MUM ,MUC ) ) - MLU ),( ( Max( RMSe,DS ) + ( Max( ( RRSe + MUC ),( RCSe * MLU ) ) - DS ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ACS * FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - PN ) * ( ( FirstVNF_Mem - CRS ) / CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / MUC ) + RMSe ) - DS ),( ( RCSe * MUC ) / ( ( DS - Max( Max( MUR,DS ),Min( MUM ,( ( DS * RRSe ) * ( DS / MLU ) ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - ( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,FirstVNF_Mem ),DDR ) - Min( ( Const + ARS ) ,( Min( FirstVNF_Mem ,( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + Const ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / ARS ) ) ) ) - ( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "Max( MLU,( ( MLU + DS ) * Min( ( Max( ( MUM - MLU ),( ( Min( RCSe ,RRSe ) + RRSe ) - MLU ) ) - MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( AMS + ACS ) ) )", "choosing": "( ( RRSe * ( ( ( CS / Min( RRSe ,RRSe ) ) * MUM ) - CS ) ) - Max( ( RMSe / MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem ) ) * Min( ( RRS + Max( Const,MDR ) ) ,MDR ) )", "choosing": "( ( MUR * Max( RCSe,( ( Max( RMSe,DS ) + Max( DS,MUC ) ) - MLU ) ) ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( ACS,FirstVNF_Mem_Server ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,MUM ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( AMS,( Const - ACS ) ) ) * Min( MDR ,FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,CS ) - ( RCSe / Max( RCSe,DS ) ) ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( ARS - ( ARS - ( ( ( FirstVNF_Mem + CRS ) * ( MRS * MDR ) ) * ( ACS + ( ( MRS - FirstVNF_Mem_Server ) - AMS ) ) ) ) ) )", "choosing": "( ( ( MUM - ( Max( RMSe,( Max( RRSe,Min( MUM ,RRSe ) ) - RCSe ) ) - CS ) ) / Max( MUR,DS ) ) / Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( ( Min( Min( MUM ,Max( ( CS - DS ),MLU ) ) ,RRSe ) / DS ) + MUM ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,CRS ) + ( ( Max( RRS,CRS ) + ( FirstVNF_RAM_Server - ARS ) ) - ARS ) )", "choosing": "( MUC / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( ARS - ( ( MDR + ( Min( Min( FirstVNF_CPU ,MDR ) ,MDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "Max( ( MUC + MUR ),Min( Max( RCSe,RRSe ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * Max( PN,RRS ) ) - ACS ) ,Max( Const,RRS ) ) / ( DDR * FirstVNF_Mem ) )", "choosing": "Max( Max( ( Max( RRSe,MLU ) + ( MUR / MUM ) ),( ( MUC * DS ) * ( RMSe - CS ) ) ),( ( ( MUR + RMSe ) + ( ( ( RCSe / RCSe ) + ( MUC / RRSe ) ) * Max( ( DS - MUR ),Max( MLU,DS ) ) ) ) * ( Min( MLU ,RMSe ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( Max( ( AMS * BR ),( PN * AMS ) ),BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Max( ( MLU / ( DS - Min( RRSe ,( ( RMSe + ( DS + CS ) ) * DS ) ) ) ),( RCSe / MUR ) ) - ( ( MLU * ( RMSe / MUM ) ) - ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - ( DDR / Min( CRS ,Max( ( ( ( CRS / FirstVNF_CPU_Server ) + CRS ) * ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) ),MDR ) ) ) )", "choosing": "( ( ( Max( ( ( ( ( MUM + MUR ) - Max( MUM,CS ) ) - RRSe ) / ( Min( MUM ,MUC ) * ( MLU + MUR ) ) ),( ( ( RCSe * CS ) - MUR ) / ( MLU / RCSe ) ) ) - DS ) * RCSe ) / Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - Min( ( MRS * Min( ( BR + FirstVNF_CPU_Server ) ,MRS ) ) ,FirstVNF_RAM ) ) ,Min( ( MRS + MRS ) ,ACS ) ) - ( ( RRS * PN ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( Min( MUC ,( ( ( RMSe * MLU ) - RCSe ) * ( RMSe + Max( RMSe,MUR ) ) ) ) + RCSe ) - Max( ( Min( ( ( CS + MUC ) / Min( MUC ,CS ) ) ,Max( ( DS - MUR ),MLU ) ) + ( DS / MLU ) ),Min( ( ( ( MUR * RRSe ) + ( MUR / MUC ) ) - ( ( CS - MUM ) / ( MLU / MUM ) ) ) ,DS ) ) ),RRSe ) + Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) * ( FirstVNF_RAM_Server - ( ARS / ( CRS - PN ) ) ) )", "choosing": "Max( ( MUR - ( ( RMSe * ( ( MUM - RMSe ) + ( MUC * ( RMSe * MUR ) ) ) ) / ( MUC / RCSe ) ) ),Max( ( RCSe * ( RRSe * DS ) ),Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,RRS ),Max( ARS,MDR ) ) / ( ( FirstVNF_CPU - CRS ) / ( Max( ( PN + Max( ( BR - CRS ),Min( Min( RRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - DDR ) ) ) ),( CRS / Min( RRS ,FirstVNF_Mem_Server ) ) ) / ACS ) ) )", "choosing": "Min( ( RMSe * CS ) ,( Min( MUC ,MLU ) * ( RMSe - ( ( MUM - Max( ( Max( MLU,RCSe ) - ( RCSe - MUR ) ),RMSe ) ) + ( RRSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) * ( MRS - CRS ) )", "choosing": "Max( ( ( RRSe / MUC ) / RMSe ),Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS + FirstVNF_Mem_Server ) + Min( MDR ,MDR ) ) ,( ( FirstVNF_Mem - FirstVNF_RAM ) * Min( ( AMS * Max( RRS,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / Max( ( ( MUC / Min( MUR ,RMSe ) ) + ( CS / Max( DS,RRSe ) ) ),RRSe ) ) / ( DS * CS ) ) / ( Max( RCSe,RRSe ) - Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / AMS ) / RRS ) ,DDR ) / ( Min( ARS ,CRS ) - Const ) )", "choosing": "Min( ( CS / ( MUR - RMSe ) ) ,( ( DS / DS ) * Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * PN ) - Min( FirstVNF_RAM_Server ,PN ) ) - ( ( PN - PN ) + ( CRS / FirstVNF_RAM_Server ) ) ),( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_RAM_Server + PN ) ) - ( Max( ACS,ARS ) / Min( MDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RRSe ,MUM ) ) - ( ( CS * MUC ) / ( DS + CS ) ) ) * Max( ( ( RMSe / RCSe ) + ( MUC + MUC ) ),Min( Max( MUR,MUR ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - PN ) - Max( ARS,FirstVNF_RAM_Server ) ) * ( ( RRS * PN ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) + ( ( ( MDR / FirstVNF_CPU ) + Max( AMS,ACS ) ) - ( ( AMS / PN ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / RMSe ) * Max( RMSe,RMSe ) ) * ( ( RCSe + CS ) / Min( MUC ,CS ) ) ) / ( ( ( MUM - MUR ) / ( RCSe / DS ) ) + Max( ( MUC - RCSe ),Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) - ( ARS / ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + RCSe ) * Max( RCSe,MLU ) ) * ( ( RRSe + CS ) * ( CS + RMSe ) ) ) * ( ( ( RRSe + RCSe ) - ( MUC / MUC ) ) * ( ( MLU - RRSe ) - Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MRS ),Min( MRS ,ARS ) ),Min( ( FirstVNF_RAM * RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) - Max( ( Max( BR,CRS ) - ( BR * ACS ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUM ) - ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS / RRS ) ) - ( Min( PN ,AMS ) - ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( ( BR / ARS ) - ( FirstVNF_RAM_Server - PN ) ) - ( ( FirstVNF_CPU - CRS ) + Max( MRS,Const ) ) ) )", "choosing": "( Max( ( ( CS - MUM ) * Min( CS ,MUR ) ),Max( ( MUM + MUM ),( DS * CS ) ) ) / ( ( ( RRSe + MUC ) - Max( DS,MUM ) ) - Min( ( MUR / MUM ) ,( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - FirstVNF_CPU_Server ) - Max( CRS,ACS ) )", "choosing": "Max( ( Min( ( RMSe * MLU ) ,( MUC * CS ) ) * ( ( CS / CS ) / Min( MUR ,RRSe ) ) ),Min( ( ( DS + MUR ) + ( RRSe + MUM ) ) ,( ( DS / RRSe ) / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_Mem ) ,( ( ( Min( RRS ,BR ) / ARS ) - Const ) + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Max( MLU,Min( RMSe ,( RCSe + DS ) ) ) + ( DS / Max( MLU,RCSe ) ) ) / MUC ) ,MUM ) - ( MUR * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ACS - MRS ) ) ,( FirstVNF_RAM * ARS ) )", "choosing": "( ( RRSe - ( MUR * DS ) ) - ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( Min( DDR ,FirstVNF_RAM_Server ) + ( Max( ( BR - Const ),ARS ) - Const ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( Min( MUR ,MUM ) * DS ),MUM ) ) * RRSe ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ARS ) )", "choosing": "Max( ( MUM * RRSe ),( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU * ( FirstVNF_CPU + Max( RRS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_Mem ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * ( ( RRSe - ( CS - ( Max( DS,MUM ) * RCSe ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}]}