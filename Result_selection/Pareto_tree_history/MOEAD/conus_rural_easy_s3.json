{"1": [{"determining": "( Max( BR,PN ) + ( RRS + PN ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) )", "obj1": 0.23, "obj2": 0.5938442304672398}, {"determining": "( ( FirstVNF_RAM / MDR ) / ( Min( MRS ,BR ) + ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * MUR ) ,( MUR - MLU ) ) ) ,Max( MUC,( MUM + Max( MLU,MUM ) ) ) )", "obj1": 0.16, "obj2": 0.6922366378019378}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / Min( DDR ,PN ) )", "choosing": "( Max( CS,MUC ) - Min( MUM ,MUR ) )", "obj1": 0.248, "obj2": 0.6353999815127569}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * ( ( RMSe - MUR ) - ( CS * DS ) ) ) ) ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - ( DS / CS ) )", "obj1": 0.146, "obj2": 0.7102148892857819}, {"determining": "( ( RRS - Min( PN ,( CRS / BR ) ) ) / Min( ( ACS - ( FirstVNF_RAM_Server - AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( Max( Max( Max( RCSe,Min( Min( MUM ,RRSe ) ,( ( MUR - MLU ) - RCSe ) ) ),CS ),MUC ) + Min( CS ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / MDR ) / Min( FirstVNF_RAM_Server ,( ( MDR - FirstVNF_Mem_Server ) / Min( MRS ,CRS ) ) ) )", "choosing": "Max( ( MUM + MUM ),Min( Max( DS,( ( Min( MUC ,Min( MUC ,( CS + CS ) ) ) * Max( MUC,CS ) ) * Max( RCSe,CS ) ) ) ,MUM ) )", "obj1": 0.308, "obj2": 0.575597808854478}, {"determining": "Max( ( MDR - MRS ),Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,MUM ) + Min( CS ,MUM ) )", "obj1": 0.312, "obj2": 0.5827388817960818}, {"determining": "( Max( ( ( ( ( ( PN + Min( Const ,ARS ) ) + ( RRS + ( AMS - FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server ) + DDR ) - ARS ),FirstVNF_Mem ) / ( Max( Min( ( AMS * CRS ) ,PN ),( AMS - Min( ARS ,BR ) ) ) - Const ) )", "choosing": "( ( Max( MLU,Max( RCSe,Max( RCSe,( RCSe / MUR ) ) ) ) + Min( ( RRSe + Min( MLU ,Max( DS,CS ) ) ) ,MUR ) ) * ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( ( Max( ( Min( MLU ,RCSe ) + MUM ),Min( Max( MUR,MLU ) ,RMSe ) ) - ( ( Max( RMSe,RCSe ) / RMSe ) - ( ( RRSe + RRSe ) / MUC ) ) ) + RCSe ) + ( Max( RRSe,RCSe ) / MUC ) ) ) )", "obj1": 0.364, "obj2": 0.5184027132388517}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Max( MRS,ARS ) )", "choosing": "( ( RMSe + RCSe ) / Max( MUM,RMSe ) )", "obj1": 0.276, "obj2": 0.6181190063134863}, {"determining": "Max( Min( RRS ,FirstVNF_CPU_Server ),( MDR - MRS ) )", "choosing": "( ( MLU + CS ) / Max( MLU,RRSe ) )", "obj1": 0.26, "obj2": 0.7401506792400401}, {"determining": "Max( ( MRS + BR ),( DDR * ARS ) )", "choosing": "( ( MUC / RRSe ) - ( MUR - CS ) )", "obj1": 0.256, "obj2": 0.7219352975973821}, {"determining": "Max( Max( PN,FirstVNF_Mem ),( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( RCSe - MUM ) / Max( MLU,MLU ) )", "obj1": 0.266, "obj2": 0.6380557621964831}, {"determining": "( ( BR + FirstVNF_Mem ) + Max( Max( ( Max( MRS,Const ) + ( Const + Min( DDR ,PN ) ) ),FirstVNF_CPU_Server ),( DDR + ( DDR / MRS ) ) ) )", "choosing": "( ( ( MLU - RMSe ) * MUC ) + ( MUC + RRSe ) )", "obj1": 0.362, "obj2": 0.521293390660792}, {"determining": "Max( Max( RRS,Const ),( ( BR + DDR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MUR,DS ),Min( DS ,MUC ) )", "obj1": 0.364, "obj2": 0.5212248214733541}, {"determining": "Min( ( ACS - FirstVNF_Mem ) ,( Max( DDR,ACS ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( RRSe ,MUM ) * ( ( CS - MUM ) * ( ( Max( DS,MUR ) - ( CS + MUM ) ) / ( RMSe - RRSe ) ) ) ),Max( MLU,CS ) )", "obj1": 0.65, "obj2": 0.3671067570206647}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) / CRS ) * ( ACS * FirstVNF_RAM_Server ) ) * Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "Min( ( RMSe + MUR ) ,( Max( ( MLU - ( RMSe / ( ( Max( RRSe,MLU ) + MLU ) + MUM ) ) ),( Max( Max( ( MUM + RCSe ),Max( CS,RCSe ) ),Max( ( MLU * Min( MUM ,MUR ) ),DS ) ) * MUM ) ) + ( ( ( MUC / MUR ) + ( Min( MUR ,RRSe ) / ( Max( CS,MUM ) - MLU ) ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.326, "obj2": 0.558181499785205}, {"determining": "( ( ACS + ACS ) + ( Const * Max( Max( FirstVNF_RAM,( ARS * Const ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / MUR ) + ( ( RMSe / MUM ) - MUR ) )", "obj1": 0.326, "obj2": 0.5649032259513346}, {"determining": "( Min( ( Const - FirstVNF_CPU_Server ) ,( AMS + ARS ) ) + ( MDR / Const ) )", "choosing": "( Max( ( ( ( MUR / RMSe ) * RRSe ) - MUM ),RCSe ) / ( MLU + ( MUM * RCSe ) ) )", "obj1": 0.308, "obj2": 0.5959840201220997}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + ( ACS + FirstVNF_CPU ) )", "choosing": "Max( ( ( CS + MUM ) + Max( RCSe,DS ) ),( ( RCSe + CS ) * Max( MUC,CS ) ) )", "obj1": 0.318, "obj2": 0.59025252266609}, {"determining": "( ( Min( FirstVNF_RAM ,RRS ) + ( ACS - ARS ) ) + ( ( FirstVNF_Mem + PN ) + ( DDR / FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC + MUR ) ,MUC ) - Max( RCSe,RCSe ) )", "obj1": 0.242, "obj2": 0.6232974298365997}, {"determining": "( ( ( Max( FirstVNF_CPU,Const ) + Max( CRS,Const ) ) * AMS ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( Min( ( MUM + RRSe ) ,Max( MUM,( RMSe * ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) ) ) ) + Min( RRSe ,MUM ) ) * ( Max( ( RRSe + ( ( Min( CS ,DS ) * ( CS - ( RRSe / MLU ) ) ) + RRSe ) ),MUC ) / ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( ( RCSe - MUM ) * Max( RMSe,RRSe ) ) * Max( ( MUM + RMSe ),( RMSe - RCSe ) ) )", "obj1": 0.278, "obj2": 0.630482382781403}, {"determining": "Min( ( Const - CRS ) ,( ( FirstVNF_RAM_Server - ( PN * AMS ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * ( DS / RMSe ) ) / ( MLU / DS ) ),( Max( MUM,MUM ) / ( CS + MLU ) ) )", "obj1": 0.192, "obj2": 0.620460879551363}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * Max( RRS,MRS ) ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / CRS ) ) )", "choosing": "( ( ( DS - MUM ) / ( MUM + MLU ) ) + ( ( MUM + DS ) / ( RCSe + RRSe ) ) )", "obj1": 0.41, "obj2": 0.47254264551596314}, {"determining": "Min( ( FirstVNF_RAM * ( PN - FirstVNF_Mem_Server ) ) ,Min( Min( BR ,FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( ( ( Min( CS ,RRSe ) / RRSe ) + MUC ) * Max( DS,RCSe ) ) ,Min( ( RMSe + RRSe ) ,( MUM * RCSe ) ) )", "obj1": 0.336, "obj2": 0.593908603775094}, {"determining": "Max( Max( FirstVNF_RAM,MRS ),Min( FirstVNF_CPU ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( MUC / RRSe ) * ( RRSe * Max( Min( ( Min( CS ,DS ) / ( Min( CS ,MUR ) + MLU ) ) ,Max( ( MUR * MUC ),( ( Max( RCSe,RMSe ) / Min( MUR ,DS ) ) + MUR ) ) ),MUR ) ) )", "obj1": 0.192, "obj2": 0.6248405862154705}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + MRS ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ACS ) )", "choosing": "Max( Max( RCSe,( RCSe + MLU ) ),( CS - ( MUR + RMSe ) ) )", "obj1": 0.37, "obj2": 0.5182305847557558}, {"determining": "( ( ( ACS * Const ) * Min( DDR ,DDR ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) - ( ACS - CRS ) ) )", "choosing": "( ( ( CS / MUM ) * Min( RMSe ,MLU ) ) / ( RCSe - MUM ) )", "obj1": 0.526, "obj2": 0.41747476070225814}, {"determining": "Max( ( PN * FirstVNF_RAM ),( ( ARS / ACS ) + FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS * MUM ) + ( CS + DS ) ),( Min( RCSe ,RCSe ) - Min( RMSe ,RCSe ) ) )", "obj1": 0.432, "obj2": 0.5612876376268131}, {"determining": "( ( FirstVNF_CPU_Server - PN ) * ( ( AMS - FirstVNF_Mem ) + ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Min( RMSe ,( RMSe * MUC ) ) * ( Min( DS ,MLU ) / ( RCSe * DS ) ) )", "obj1": 0.31, "obj2": 0.5622626425708404}, {"determining": "( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RMSe ,Min( MUR ,MUC ) ) - Max( RMSe,MUM ) )", "obj1": 0.63, "obj2": 0.32769407505306947}, {"determining": "( Max( MDR,Max( FirstVNF_CPU,MRS ) ) + ( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( MLU + DS ) * ( MLU * MUR ) ),( Min( RMSe ,CS ) * ( MLU / CS ) ) )", "obj1": 0.47, "obj2": 0.41149378851504437}, {"determining": "Min( Min( CRS ,ACS ) ,( PN * Const ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * Max( ( MUM * DS ),CS ) )", "obj1": 0.53, "obj2": 0.3982016478041923}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( Min( ( Min( FirstVNF_CPU ,MRS ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - FirstVNF_CPU ) )", "choosing": "( Min( RRSe ,Min( MLU ,( RRSe / Min( ( MUR - Min( RMSe ,Min( CS ,RMSe ) ) ) ,MUR ) ) ) ) - Min( ( Max( RCSe,RRSe ) * ( Min( Min( MLU ,MUR ) ,( ( CS + RCSe ) - Min( ( RCSe * CS ) ,( CS + MLU ) ) ) ) * MUM ) ) ,( MLU - ( RCSe / DS ) ) ) )", "obj1": 0.258, "obj2": 0.5412255953554009}, {"determining": "( ( Min( ( CRS / CRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( CRS - ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) - ( Min( ( CRS + CRS ) ,Min( PN ,DDR ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC * RCSe ),( DS - RCSe ) ) - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ),( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + Const ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + ( CS - RMSe ) ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),Min( RRSe ,MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.216, "obj2": 0.5652509982854426}, {"determining": "Min( ( Min( BR ,FirstVNF_RAM_Server ) + ARS ) ,Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( ( RCSe - RCSe ) / ( Min( ( ( DS / ( RRSe - MUR ) ) - RRSe ) ,MUR ) / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.268, "obj2": 0.7296995690019981}, {"determining": "Min( ( FirstVNF_CPU_Server + Const ) ,Min( Max( FirstVNF_Mem_Server,ACS ) ,ACS ) )", "choosing": "( Max( ( ( MUM - CS ) + ( RRSe - DS ) ),( Min( MUC ,MUR ) / Max( MUR,CS ) ) ) + Max( ( ( RRSe - MUC ) + ( MLU * RRSe ) ),Max( ( MLU - RCSe ),( CS - MUR ) ) ) )", "obj1": 0.314, "obj2": 0.547050899179501}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) / ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU ) ),FirstVNF_Mem_Server ) * MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,CS ) + ( RRSe - RRSe ) )", "obj1": 0.374, "obj2": 0.5109675190416267}, {"determining": "( Min( ( ( FirstVNF_Mem + MRS ) + Min( FirstVNF_Mem_Server ,ARS ) ) ,Min( ( MRS - CRS ) ,Max( PN,ARS ) ) ) * Max( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) )", "choosing": "( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS * FirstVNF_Mem ) - ( BR - AMS ) ) ,( ( ACS + FirstVNF_CPU_Server ) + Min( MDR ,FirstVNF_Mem_Server ) ) ) + ( Max( Min( MDR ,( RRS * Max( ARS,FirstVNF_CPU ) ) ),Max( FirstVNF_CPU,CRS ) ) + ( ( FirstVNF_Mem * ACS ) * ( FirstVNF_RAM * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( DS,MUM ) + ( DS + DS ) ) - ( Max( MUC,DS ) + ( MUM / RCSe ) ) ) / ( CS / ( ( ( ( MUC + Min( Min( RRSe ,MLU ) ,RCSe ) ) * DS ) * ( MUR - MUC ) ) / ( DS - RMSe ) ) ) )", "obj1": 0.474, "obj2": 0.41997964106963936}, {"determining": "( ( ( Max( MDR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,( Max( CRS,( Max( RRS,Const ) - Min( DDR ,AMS ) ) ) / FirstVNF_RAM ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( RCSe,( DS - RMSe ) ) + Max( DS,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const * RRS ),( ( ( RRS + BR ) - Min( ( Const - FirstVNF_Mem ) ,AMS ) ) / Const ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.312, "obj2": 0.5272335447394595}, {"determining": "( Max( ( Max( FirstVNF_RAM_Server,AMS ) / Max( FirstVNF_Mem_Server,ARS ) ),( ( FirstVNF_Mem - PN ) * Min( ARS ,Const ) ) ) + Max( ( ( MDR - FirstVNF_CPU ) + Min( CRS ,ACS ) ),( ( FirstVNF_Mem_Server - AMS ) + Max( FirstVNF_RAM_Server,MDR ) ) ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * DS ) * ( Min( MUC ,MLU ) * ( MLU / MUM ) ) ) ,( RMSe / MUM ) )", "obj1": 0.57, "obj2": 0.3295970622912557}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS / RRSe ) / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( Min( MUM ,RMSe ) + ( CS - MUR ) ) / ( ( RRSe + MUR ) + Max( MUR,MLU ) ) ) )", "obj1": 0.644, "obj2": 0.3545422416320911}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ),Max( ARS,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,CS ) ,Min( RMSe ,CS ) ) + Min( Max( DS,MUC ) ,( MUC / RMSe ) ) ) ,( ( Max( DS,MLU ) + ( CS + RMSe ) ) - ( Min( CS ,RRSe ) / Max( MUR,CS ) ) ) )", "obj1": 0.34, "obj2": 0.5654678155505406}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server + AMS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( AMS / PN ) ) ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Max( ( RMSe * RRSe ),( MUR * MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server + AMS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( AMS / PN ) ) ) )", "choosing": "Min( ( Min( Max( RRSe,CS ) ,Min( RMSe ,CS ) ) + Min( Max( DS,MUC ) ,( MUC / RMSe ) ) ) ,( ( Max( DS,MLU ) + ( CS + RMSe ) ) - ( Min( CS ,RRSe ) / Max( MUR,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( PN ,( CRS / BR ) ) ) / Min( ( ACS - ( FirstVNF_RAM_Server - AMS ) ) ,FirstVNF_RAM ) )", "choosing": "( Max( Max( Max( RCSe,Min( Min( MUM ,RRSe ) ,( ( MUR - MLU ) - RCSe ) ) ),CS ),MUC ) + Min( CS ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) + ( Const * MDR ) )", "choosing": "( Min( MUR ,RCSe ) + ( RRSe - ( DS + MUC ) ) )", "obj1": 0.114, "obj2": 0.7217301070365797}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - PN ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.744, "obj2": 0.19477362200445983}, {"determining": "Min( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,Min( Min( BR ,FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,RRSe ) / RRSe ) + MUC ) * Max( DS,RCSe ) ) ,Min( ( RMSe + RRSe ) ,( MUM * RCSe ) ) )", "obj1": 0.902, "obj2": 0.09501919478030484}, {"determining": "( ( ( ARS - Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ),Max( ARS,( RRS - FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS / RRSe ) / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( Min( MUM ,RMSe ) + Min( ( Min( Max( RRSe,CS ) ,Min( RMSe ,CS ) ) + Min( Max( DS,MUC ) ,( MUC / RMSe ) ) ) ,( ( Max( DS,MLU ) + ( CS + RMSe ) ) - ( Min( CS ,RRSe ) / Max( MUR,CS ) ) ) ) ) / ( ( RRSe + MUR ) + Max( MUR,MLU ) ) ) )", "obj1": 0.924, "obj2": 0.09067807696070324}, {"determining": "Min( Min( CRS ,ACS ) ,( PN * Const ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * Max( ( MUM * DS ),CS ) )", "obj1": 0.53, "obj2": 0.3982016478041923}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * MDR ) )", "choosing": "( Min( ( CS - CS ) ,Max( RMSe,MLU ) ) - ( MLU + MUC ) )", "obj1": 0.678, "obj2": 0.23776081464380608}, {"determining": "Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.546, "obj2": 0.3530876760472225}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * ( ( RMSe - MUR ) - ( CS * DS ) ) ) ) ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "Min( MRS ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * DS ) ) ) )", "obj1": 0.392, "obj2": 0.4832298884746321}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.258, "obj2": 0.534741639964819}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * Max( RRS,MRS ) ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / CRS ) ) )", "choosing": "( ( ( DS - MUM ) / ( MUM + MLU ) ) + ( ( MUM + DS ) / ( RCSe + RRSe ) ) )", "obj1": 0.41, "obj2": 0.47254264551596314}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.594, "obj2": 0.30887683479375966}, {"determining": "( ( PN * ARS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + Const ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + ( CS - RMSe ) ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),Min( RRSe ,MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.216, "obj2": 0.5652509982854426}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.25, "obj2": 0.5442470832515199}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.558, "obj2": 0.3151910120972256}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "( Min( ( Const - ( Const * Max( Max( FirstVNF_RAM,( ARS * Const ) ),FirstVNF_RAM_Server ) ) ) ,( AMS + ARS ) ) + ( MDR / Const ) )", "choosing": "( Max( MUM,RCSe ) / ( MLU + ( MUM * RCSe ) ) )", "obj1": 0.172, "obj2": 0.6601307871727762}, {"determining": "Min( ( Const / CRS ) ,CRS )", "choosing": "Max( ( ( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) ) / ( MLU / DS ) ),( Max( MUM,MUM ) / ( CS + MLU ) ) )", "obj1": 0.198, "obj2": 0.6158508282512626}, {"determining": "( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - ( DS / CS ) )", "obj1": 0.146, "obj2": 0.7102148892857819}, {"determining": "( ( ACS + ACS ) + Min( ( Const - FirstVNF_CPU_Server ) ,( AMS + ARS ) ) )", "choosing": "( ( Max( ( ( ( MUR / RMSe ) * RRSe ) - MUM ),RCSe ) / ( MLU + ( MUM * RCSe ) ) ) + ( ( RMSe / MUM ) - MUR ) )", "obj1": 0.174, "obj2": 0.6364742582039157}, {"determining": "Max( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + MRS ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ACS ) ),( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) )", "choosing": "( ( ( MUC - MLU ) / MUC ) * ( Max( Max( RCSe,( RCSe + MLU ) ),( CS - ( MUR + RMSe ) ) ) - ( RRSe / RMSe ) ) )", "obj1": 0.166, "obj2": 0.6832342750034238}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "( ( MRS * MDR ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - Min( MLU ,DS ) )", "obj1": 0.154, "obj2": 0.6918153465545515}, {"determining": "Min( ( Const / CRS ) ,( Max( Min( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + ( FirstVNF_CPU / ARS ) ) ,Min( Min( FirstVNF_RAM ,BR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ),ARS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe * CS ) / ( MLU / DS ) ),( Max( MUM,MUM ) / ( CS + MLU ) ) )", "obj1": 0.188, "obj2": 0.6295549039414067}, {"determining": "Min( ( FirstVNF_RAM_Server + ARS ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.208, "obj2": 0.5703654533204504}, {"determining": "Max( Max( PN,FirstVNF_Mem ),( ( MRS + BR ) - BR ) )", "choosing": "( MUR / Max( MLU,MLU ) )", "obj1": 0.158, "obj2": 0.686850218196511}, {"determining": "( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - ( DS / CS ) )", "obj1": 0.146, "obj2": 0.7102148892857819}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / ( ( Min( ( CRS / CRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( CRS - ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) - ( Min( ( CRS + CRS ) ,Min( PN ,DDR ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) ) ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( RCSe * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5367843727015771}, {"determining": "Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( Max( MUM,MUM ) / ( CS + MLU ) ) )", "obj1": 0.192, "obj2": 0.620460879551363}, {"determining": "( ( PN * ARS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + Const ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + ( CS - RMSe ) ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),Min( RRSe ,MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.558, "obj2": 0.3151910120972256}, {"determining": "Min( ( Const - CRS ) ,( ( FirstVNF_RAM_Server - ( PN * AMS ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * ( DS / RMSe ) ) / ( MLU / DS ) ),( Max( MUM,MUM ) / ( CS + MLU ) ) )", "obj1": 0.192, "obj2": 0.620460879551363}, {"determining": "( ( ( Max( FirstVNF_CPU,Const ) + Max( CRS,Const ) ) * AMS ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( Min( ( MUM + RRSe ) ,Max( MUM,( RMSe * ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) ) ) ) + Min( RRSe ,MUM ) ) * ( Max( ( RRSe + ( ( Min( CS ,DS ) * ( CS - ( RRSe / MLU ) ) ) + RRSe ) ),MUC ) / ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS / CRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( CRS - ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) - ( Min( ( CRS + CRS ) ,Min( PN ,DDR ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC * RCSe ),( DS - RCSe ) ) - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ),( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MRS ) + Min( FirstVNF_Mem_Server ,ARS ) ) ,Min( ( MRS - CRS ) ,Max( PN,ARS ) ) ) * Max( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) )", "choosing": "( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,( Max( CRS,( Max( RRS,Const ) - Min( DDR ,AMS ) ) ) / FirstVNF_RAM ) ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( RCSe,( DS - RMSe ) ) + Max( DS,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server + AMS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( AMS / PN ) ) ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Max( ( RMSe * RRSe ),( MUR * MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - ( Max( RMSe,MLU ) + Max( ( CS / Max( MUR,RMSe ) ),( DS / Max( DS,MUM ) ) ) ) ) ) - ( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) ) ,FirstVNF_RAM ) / ( RRS - CRS ) )", "choosing": "( CS + ( MUM - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - CRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - CRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - CRS ) )", "choosing": "Max( ( MUM + MUM ),( MLU / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / MDR ) / Min( FirstVNF_RAM_Server ,( ( MDR - FirstVNF_Mem_Server ) / Min( MRS ,CRS ) ) ) )", "choosing": "Max( ( MUM + MUM ),Min( Max( DS,( ( Min( MUC ,Min( MUC ,( CS + CS ) ) ) * Max( MUC,CS ) ) * Max( RCSe,CS ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / MDR ) / Min( FirstVNF_RAM_Server ,( ( MDR - FirstVNF_Mem_Server ) / Min( MRS ,CRS ) ) ) )", "choosing": "Max( ( MUM + MUM ),Min( Max( DS,( ( Min( MUC ,Min( MUC ,( CS + CS ) ) ) * Max( MUC,CS ) ) * Max( RCSe,CS ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( DDR - FirstVNF_RAM_Server ) / Max( CRS,ARS ) )", "choosing": "( ( RRSe + RCSe ) / Max( ( ( DS + Min( Min( Min( ( RMSe + MUM ) ,CS ) ,MUM ) ,RCSe ) ) / DS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server + AMS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( AMS / PN ) ) ) )", "choosing": "Min( ( Min( Max( RRSe,CS ) ,Min( RMSe ,CS ) ) + Min( Max( DS,MUC ) ,( MUC / RMSe ) ) ) ,( ( Max( DS,MLU ) + ( CS + RMSe ) ) - ( Min( CS ,RRSe ) / Max( MUR,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) * AMS )", "choosing": "( ( RMSe * ( ( MUC - MLU ) / MUC ) ) - ( DS / CS ) )", "obj1": 0.112, "obj2": 0.7425500334081916}, {"determining": "Min( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,Min( Min( BR ,FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,RRSe ) / RRSe ) + MUC ) * Max( DS,RCSe ) ) ,Min( ( RMSe + RRSe ) ,( MUM * RCSe ) ) )", "obj1": 0.902, "obj2": 0.09501919478030484}, {"determining": "Min( ( ACS - FirstVNF_Mem ) ,( Max( DDR,ACS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * DS ) ) ) )", "obj1": 0.48, "obj2": 0.40574868331341535}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + MUC ) )", "obj1": 0.744, "obj2": 0.19477362200445983}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - PN ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.744, "obj2": 0.19477362200445983}, {"determining": "Min( ( MRS - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( ( DS + DS ) - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.956, "obj2": 0.04289104955429962}, {"determining": "( ( ( ARS - Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ),Max( ARS,( RRS - FirstVNF_Mem ) ) ) ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS / RRSe ) / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( Min( MUM ,RMSe ) + Min( ( Min( Max( RRSe,CS ) ,Min( RMSe ,CS ) ) + Min( Max( DS,MUC ) ,( MUC / RMSe ) ) ) ,( ( Max( DS,MLU ) + ( CS + RMSe ) ) - ( Min( CS ,RRSe ) / Max( MUR,CS ) ) ) ) ) / ( ( RRSe + MUR ) + Max( MUR,MLU ) ) ) )", "obj1": 0.924, "obj2": 0.09067807696070324}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( ( ( AMS * MDR ) - FirstVNF_Mem ) ,( Max( DDR,ACS ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( RRSe ,MUM ) * ( ( CS - MUM ) * ( ( Max( DS,MUR ) - ( CS + MUM ) ) / ( RMSe - RRSe ) ) ) ),Max( ( ( Min( MLU ,DS ) - RRSe ) * DS ),CS ) )", "obj1": 0.988, "obj2": 0.01569949395019408}, {"determining": "( Min( MDR ,( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "( Max( ( ( MUM - CS ) + MUM ),MUC ) + ( MUM - CS ) )", "obj1": 0.354, "obj2": 0.48622815883104203}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.258, "obj2": 0.534741639964819}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.594, "obj2": 0.30887683479375966}, {"determining": "Min( ( RRS * ( AMS + FirstVNF_CPU_Server ) ) ,( RRS / Const ) )", "choosing": "( Min( Min( RRSe ,( Max( MUC,RRSe ) * ( DS / MUC ) ) ) ,MUC ) + ( ( Min( DS ,MLU ) + DS ) - RMSe ) )", "obj1": 0.708, "obj2": 0.20965784969689746}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( Max( FirstVNF_Mem,Min( DDR ,Min( DDR ,( RRS - ( ( Min( FirstVNF_CPU_Server ,AMS ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Max( AMS,Max( FirstVNF_CPU,BR ) ) )", "choosing": "( ( MUM / ( ( ( Max( RCSe,( RMSe / ( MUR * RMSe ) ) ) - RMSe ) + MUC ) * MUC ) ) * Min( ( Max( MLU,Min( ( ( MLU / MUM ) - CS ) ,( MUR * DS ) ) ) * ( MUC + Min( Max( MUR,RCSe ) ,( Max( Max( RRSe,RCSe ),CS ) + RRSe ) ) ) ) ,( Max( RMSe,( ( ( ( CS * MUM ) - ( CS * RCSe ) ) * MUC ) * ( MUC * RCSe ) ) ) + ( MUC + MUM ) ) ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "Min( MRS ,( AMS * Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( AMS * MDR ) ) ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( ( ( Min( MLU ,DS ) - RRSe ) * ( ( RMSe - MUR ) - ( CS * DS ) ) ) - RRSe ) * DS ) ) ) )", "obj1": 0.41, "obj2": 0.4606106725418197}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Max( ( MLU * RRSe ),( MLU / RRSe ) )", "obj1": 0.166, "obj2": 0.657387969383915}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.25, "obj2": 0.5442470832515199}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "( ( ACS + ACS ) + Min( ( Const - FirstVNF_CPU_Server ) ,( AMS + ARS ) ) )", "choosing": "( ( Max( ( ( ( MUR / RMSe ) * RRSe ) - MUM ),RCSe ) / ( MLU + ( MUM * RCSe ) ) ) + ( ( RMSe / MUM ) - MUR ) )", "obj1": 0.174, "obj2": 0.6364742582039157}, {"determining": "( ( PN * ARS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + Const ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + ( CS - RMSe ) ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),Min( RRSe ,MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.216, "obj2": 0.5652509982854426}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * MDR ) )", "choosing": "( Min( ( CS - CS ) ,Max( RMSe,MLU ) ) - ( MLU + MUC ) )", "obj1": 0.678, "obj2": 0.23776081464380608}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.552, "obj2": 0.31572174977453343}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * ( ( RMSe - MUR ) - ( CS * DS ) ) ) ) ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "( ( CRS / FirstVNF_Mem ) + ( Const * MDR ) )", "choosing": "( Min( MUR ,RCSe ) + ( RRSe - ( DS + MUC ) ) )", "obj1": 0.114, "obj2": 0.7217301070365797}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * MDR ) )", "choosing": "( Min( ( CS - CS ) ,Max( RMSe,MLU ) ) - ( MLU + MUC ) )", "obj1": 0.678, "obj2": 0.23776081464380608}, {"determining": "Min( MRS ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * DS ) ) ) )", "obj1": 0.392, "obj2": 0.4832298884746321}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / AMS ) )", "choosing": "( ( ( MUC - MLU ) / MUC ) * Max( RMSe,MUC ) )", "obj1": 0.162, "obj2": 0.6859161586129712}, {"determining": "( ( MRS * MDR ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - Min( MLU ,DS ) )", "obj1": 0.154, "obj2": 0.6918153465545515}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * ( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * MDR ) ) )", "choosing": "( Min( ( CS - CS ) ,Max( RMSe,MLU ) ) - Min( ( CS - CS ) ,Max( RMSe,MLU ) ) )", "obj1": 0.682, "obj2": 0.23698208427137973}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "Min( MRS ,( AMS * ( BR + DDR ) ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * Min( DS ,MUC ) ) ) ) )", "obj1": 0.396, "obj2": 0.47696297807742205}, {"determining": "( ( MRS * AMS ) * FirstVNF_Mem )", "choosing": "( ( ( ( RMSe * MUM ) - ( DS / CS ) ) * MUM ) - ( DS / CS ) )", "obj1": 0.134, "obj2": 0.7201065524488515}, {"determining": "( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - ( DS / CS ) )", "obj1": 0.146, "obj2": 0.7102148892857819}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.558, "obj2": 0.3151910120972256}, {"determining": "( ( MRS * AMS ) * CRS )", "choosing": "( ( Max( RMSe,( ( MUC - MLU ) / MUC ) ) * MUM ) - ( DS / CS ) )", "obj1": 0.136, "obj2": 0.7127640037025681}, {"determining": "Min( ( FirstVNF_RAM_Server + ARS ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.208, "obj2": 0.5703654533204504}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / ( ( Min( ( CRS / CRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( CRS - ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) - ( Min( ( CRS + CRS ) ,Min( PN ,DDR ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) ) ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( RCSe * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5367843727015771}, {"determining": "Max( Max( PN,FirstVNF_Mem ),( ( MRS + BR ) - BR ) )", "choosing": "( MUR / Max( MLU,MLU ) )", "obj1": 0.158, "obj2": 0.686850218196511}, {"determining": "Max( ( MDR / ( ( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ) / CRS ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( MUM * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.212, "obj2": 0.5659629937905363}, {"determining": "( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - ( DS / CS ) )", "obj1": 0.146, "obj2": 0.7102148892857819}], "4": [{"determining": "( ( Min( ARS ,( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,CRS ) ) - Const ) ) * ARS ) / Max( MRS,ARS ) )", "choosing": "( Max( Min( MUC ,( Max( MUC,RRSe ) + MUR ) ),DS ) * ( ( MUR - MUR ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / Max( CRS,ARS ) )", "choosing": "( ( RRSe + RCSe ) / Max( ( ( DS + Min( Min( Min( ( RMSe + MUM ) ,CS ) ,MUM ) ,RCSe ) ) / DS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS * MDR ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + ( DS + DS ) ) )", "obj1": 0.102, "obj2": 0.7140485597354072}, {"determining": "Min( ( ACS - FirstVNF_Mem ) ,( Max( DDR,ACS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * DS ) ) ) )", "obj1": 0.48, "obj2": 0.40574868331341535}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - ( CRS - AMS ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / ( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) ) ) ) - ( RCSe - RCSe ) )", "obj1": 0.52, "obj2": 0.3691361796261422}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) * MDR ) )", "choosing": "( ( DS + DS ) - ( ( ( MUR / MUC ) / MUR ) + MUC ) )", "obj1": 0.84, "obj2": 0.11767683271960788}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * ( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * MDR ) ) )", "choosing": "( ( DS + DS ) - MLU )", "obj1": 0.794, "obj2": 0.1561347826511159}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "( Max( ACS,RRS ) / ( ( ( FirstVNF_Mem * ( Max( DDR,FirstVNF_RAM_Server ) / Max( MRS,ARS ) ) ) - RRS ) - AMS ) )", "choosing": "( Max( MLU,DS ) * ( ( Max( MLU,DS ) * ( ( MUR - MUR ) * RRSe ) ) * RRSe ) )", "obj1": 0.894, "obj2": 0.10499344152699351}, {"determining": "( Min( MDR ,( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "( Max( ( ( MUM - CS ) + MUM ),MUC ) + ( MUM - CS ) )", "obj1": 0.354, "obj2": 0.48622815883104203}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.594, "obj2": 0.30887683479375966}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "Min( MRS ,( AMS * Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( AMS * MDR ) ) ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( ( ( Min( MLU ,DS ) - RRSe ) * ( ( RMSe - MUR ) - ( CS * DS ) ) ) - RRSe ) * DS ) ) ) )", "obj1": 0.41, "obj2": 0.4606106725418197}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS + DS ) - ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.744, "obj2": 0.1946445362554682}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( FirstVNF_RAM / MDR ) / ( Min( MRS ,BR ) + ( FirstVNF_Mem + ( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,CRS ) ) - Const ) ) ) )", "choosing": "Min( Min( DS ,( ( RCSe / Max( Min( MUC ,( Max( MUC,RRSe ) + MUR ) ),RRSe ) ) * ( MLU + Min( MLU ,RRSe ) ) ) ) ,Max( MUC,( MUM + Max( MLU,MUM ) ) ) )", "obj1": 0.902, "obj2": 0.0788408024128885}, {"determining": "Min( ( ( ARS + ( ( MRS * Min( ( FirstVNF_CPU_Server - ( MRS * ARS ) ) ,( MRS + ( Const * FirstVNF_Mem_Server ) ) ) ) * AMS ) ) + Min( MRS ,( ( FirstVNF_RAM_Server * BR ) / ( FirstVNF_RAM - ( PN / AMS ) ) ) ) ) ,( Min( ( FirstVNF_Mem_Server - Min( CRS ,( PN + MRS ) ) ) ,Const ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe / RCSe ) + ( Max( DS,( ( MUR / MUC ) / MUC ) ) * ( ( RMSe * ( RRSe * CS ) ) + RRSe ) ) ) + ( ( Max( ( MUC * RRSe ),Max( RRSe,( ( MUR * RMSe ) + MUR ) ) ) - ( RCSe / RCSe ) ) - MUC ) ) - Max( RRSe,RCSe ) )", "obj1": 0.772, "obj2": 0.17158570248079866}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( FirstVNF_RAM - Const ) )", "choosing": "( ( ( DS + DS ) - ( MLU + MUC ) ) - MLU )", "obj1": 0.93, "obj2": 0.0656294321810866}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Max( ( MLU * RRSe ),( MLU / RRSe ) )", "obj1": 0.166, "obj2": 0.657387969383915}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),( Max( ( MDR + Const ),Min( ARS ,PN ) ) - Const ) )", "choosing": "( ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.236, "obj2": 0.5487893410632231}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( MDR + Const ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( Min( ( DS + MUC ) ,RRSe ) / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.532, "obj2": 0.33636168171698566}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * Min( AMS ,MDR ) ) )", "choosing": "( ( MLU + DS ) - ( MLU + MUC ) )", "obj1": 0.728, "obj2": 0.19809725865780273}, {"determining": "Min( MRS ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * DS ) ) ) )", "obj1": 0.392, "obj2": 0.4832298884746321}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( MLU + MUC ) + DS ) - ( MLU + MUC ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.552, "obj2": 0.31572174977453343}, {"determining": "( ( MRS * AMS ) * CRS )", "choosing": "( ( Max( RMSe,( ( MUC - MLU ) / MUC ) ) * MUM ) - ( DS / CS ) )", "obj1": 0.136, "obj2": 0.7127640037025681}, {"determining": "( ( ACS + ACS ) + Min( ( Const - FirstVNF_CPU_Server ) ,( AMS + ARS ) ) )", "choosing": "( ( Max( ( ( ( MUR / RMSe ) * RRSe ) - MUM ),RCSe ) / ( MLU + ( MUM * RCSe ) ) ) + ( ( RMSe / MUM ) - MUR ) )", "obj1": 0.174, "obj2": 0.6364742582039157}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "( ( PN * ARS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + Const ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + ( CS - RMSe ) ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),Min( RRSe ,MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.216, "obj2": 0.5652509982854426}, {"determining": "Max( ( ( RRS / AMS ) * ( FirstVNF_CPU_Server - MDR ) ),( ( AMS + Const ) / AMS ) )", "choosing": "( ( ( MUC - MLU ) / MUC ) * Max( RMSe,MUC ) )", "obj1": 0.162, "obj2": 0.6859161586129712}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + MUC ) )", "obj1": 0.926, "obj2": 0.06911940455684641}, {"determining": "Max( RRS,( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) )", "choosing": "( ( ( MUC - MLU ) / MUC ) * ( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) )", "obj1": 0.142, "obj2": 0.7044750492865334}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,DS ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "Min( ( RRS * ( AMS + FirstVNF_CPU_Server ) ) ,( RRS / Const ) )", "choosing": "( Min( Min( RRSe ,( Max( MUC,RRSe ) * ( DS / MUC ) ) ) ,MUC ) + ( ( Min( DS ,MLU ) + DS ) - RMSe ) )", "obj1": 0.708, "obj2": 0.20965784969689746}, {"determining": "( ( MRS * MDR ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - Min( MLU ,DS ) )", "obj1": 0.154, "obj2": 0.6918153465545515}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "Min( ( MRS - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( ( DS + DS ) - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.956, "obj2": 0.04289104955429962}, {"determining": "( Max( FirstVNF_Mem,Min( DDR ,Min( DDR ,( RRS - ( ( Min( FirstVNF_CPU_Server ,AMS ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) ) ) ) / Max( AMS,Max( FirstVNF_CPU,BR ) ) )", "choosing": "( ( MUM / ( ( ( Max( RCSe,( RMSe / ( MUR * RMSe ) ) ) - RMSe ) + MUC ) * MUC ) ) * Min( ( Max( MLU,Min( ( ( MLU / MUM ) - CS ) ,( MUR * DS ) ) ) * ( MUC + Min( Max( MUR,RCSe ) ,( Max( Max( RRSe,RCSe ),CS ) + RRSe ) ) ) ) ,( Max( RMSe,( ( ( ( CS * MUM ) - ( CS * RCSe ) ) * MUC ) * ( MUC * RCSe ) ) ) + ( MUC + MUM ) ) ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.558, "obj2": 0.3151910120972256}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - MLU )", "obj1": 0.956, "obj2": 0.04289104955429962}, {"determining": "Min( MRS ,( AMS * ( BR + DDR ) ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * Min( DS ,MUC ) ) ) ) )", "obj1": 0.396, "obj2": 0.47696297807742205}], "5": [{"determining": "( Max( ACS,RRS ) / ( ( ( FirstVNF_Mem * ( ( CRS + ARS ) * DDR ) ) - RRS ) - AMS ) )", "choosing": "( Max( MLU,DS ) * ( ( Max( MLU,Max( RCSe,Max( RCSe,( RCSe / MUR ) ) ) ) + Min( ( RRSe + Min( MLU ,Max( DS,CS ) ) ) ,MUR ) ) * ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,CRS ) ) - Const ) ) * ARS ) / Max( MRS,ARS ) )", "choosing": "( Max( Min( MUC ,( Max( MUC,RRSe ) + MUR ) ),DS ) * ( ( MUR - MUR ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR / ( RRS - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * Min( ( CS - CS ) ,( ( MUR - MUR ) * RRSe ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.094, "obj2": 0.7322157284566221}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) * MDR ) )", "choosing": "( ( DS + DS ) - ( ( ( MUR / MUC ) / MUR ) + MUC ) )", "obj1": 0.84, "obj2": 0.11767683271960788}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * ( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * MDR ) ) )", "choosing": "( ( DS + DS ) - MLU )", "obj1": 0.794, "obj2": 0.1561347826511159}, {"determining": "Min( ( ACS - FirstVNF_Mem ) ,( Max( DDR,ACS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * DS ) ) ) )", "obj1": 0.48, "obj2": 0.40574868331341535}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "( Max( ACS,RRS ) / ( ( ( FirstVNF_Mem * ( Max( DDR,FirstVNF_RAM_Server ) / Max( MRS,ARS ) ) ) - RRS ) - AMS ) )", "choosing": "( Max( MLU,DS ) * ( ( Max( MLU,DS ) * ( ( MUR - MUR ) * RRSe ) ) * RRSe ) )", "obj1": 0.894, "obj2": 0.10499344152699351}, {"determining": "( Min( MDR ,( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "( Max( ( ( MUM - CS ) + MUM ),MUC ) + ( MUM - CS ) )", "obj1": 0.354, "obj2": 0.48622815883104203}, {"determining": "Min( Min( DDR ,ARS ) ,Min( Min( DDR ,ARS ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS + DS ) - ( Min( RMSe ,RCSe ) + ( ( MUM - ( RCSe + MUM ) ) - RCSe ) ) ) - ( Min( RMSe ,RCSe ) + ( ( MUM - ( RCSe + MUM ) ) - RCSe ) ) )", "obj1": 0.51, "obj2": 0.3953094706970048}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - Min( PN ,RRS ) ) )", "choosing": "( Max( RMSe,MUC ) + ( DS + DS ) )", "obj1": 0.518, "obj2": 0.36596913192947444}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.594, "obj2": 0.30887683479375966}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Max( ( MLU * RRSe ),( MLU / RRSe ) )", "obj1": 0.166, "obj2": 0.657387969383915}, {"determining": "Min( MRS ,( AMS * Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( AMS * MDR ) ) ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( ( ( Min( MLU ,DS ) - RRSe ) * ( ( RMSe - MUR ) - ( CS * DS ) ) ) - RRSe ) * DS ) ) ) )", "obj1": 0.41, "obj2": 0.4606106725418197}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( Min( FirstVNF_Mem_Server ,( MDR * MDR ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe * MUC ) / MUC ) / MUR ) - ( RCSe - RCSe ) )", "obj1": 0.68, "obj2": 0.2373754728005757}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),( Max( ( MDR + Const ),Min( ARS ,PN ) ) - Const ) )", "choosing": "( ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.236, "obj2": 0.5487893410632231}, {"determining": "( ( FirstVNF_RAM / MDR ) / ( Min( MRS ,BR ) + ( FirstVNF_Mem + ( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,CRS ) ) - Const ) ) ) )", "choosing": "Min( Min( DS ,( ( RCSe / Max( Min( MUC ,( Max( MUC,RRSe ) + MUR ) ),RRSe ) ) * ( MLU + Min( MLU ,RRSe ) ) ) ) ,Max( MUC,( MUM + Max( MLU,MUM ) ) ) )", "obj1": 0.902, "obj2": 0.0788408024128885}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( ( ( MLU + MUC ) + DS ) - ( MLU + MUC ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "( ( ACS + ACS ) + Min( ( Const - FirstVNF_CPU_Server ) ,( AMS + ARS ) ) )", "choosing": "( ( Max( ( ( ( MUR / RMSe ) * RRSe ) - MUM ),RCSe ) / ( MLU + ( MUM * RCSe ) ) ) + ( ( RMSe / MUM ) - MUR ) )", "obj1": 0.174, "obj2": 0.6364742582039157}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "( Max( ( ( ( ( ( PN + AMS ) + ( RRS + FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) + CRS ) - ARS ),FirstVNF_Mem ) / ( Max( Min( ( AMS * CRS ) ,PN ),( Max( Min( ( AMS * CRS ) ,PN ),( AMS - Min( ARS ,BR ) ) ) - Min( ARS ,BR ) ) ) - Const ) )", "choosing": "( ( Max( MLU,Max( RCSe,Max( RCSe,( RCSe / ( DS + MUC ) ) ) ) ) + Min( ( RRSe + Min( MLU ,Max( DS,CS ) ) ) ,MUR ) ) * ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( MUM - MLU ) ) )", "obj1": 0.154, "obj2": 0.6833710802899929}, {"determining": "Min( Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + ( ( MUR / MUC ) / MUR ) ) )", "obj1": 0.77, "obj2": 0.17592846623168107}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( MDR + Const ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( Min( ( DS + MUC ) ,RRSe ) / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.532, "obj2": 0.33636168171698566}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * Min( AMS ,MDR ) ) )", "choosing": "( ( MLU + DS ) - ( MLU + MUC ) )", "obj1": 0.728, "obj2": 0.19809725865780273}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.708, "obj2": 0.20965784969689746}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "Min( MRS ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * DS ) ) ) )", "obj1": 0.392, "obj2": 0.4832298884746321}, {"determining": "( Max( BR,RRS ) + ( RRS + PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.258, "obj2": 0.5412255953554009}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( FirstVNF_RAM - Const ) )", "choosing": "( ( ( DS + DS ) - ( MLU + MUC ) ) - MLU )", "obj1": 0.93, "obj2": 0.0656294321810866}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "( ( PN * ARS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + Const ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + ( CS - RMSe ) ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),Min( RRSe ,MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.216, "obj2": 0.5652509982854426}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "Min( ( RRS * ( AMS + FirstVNF_CPU_Server ) ) ,( RRS / Const ) )", "choosing": "( Min( Min( RRSe ,( Max( MUC,RRSe ) * ( DS / MUC ) ) ) ,MUC ) + ( ( Min( DS ,MLU ) + DS ) - RMSe ) )", "obj1": 0.708, "obj2": 0.20965784969689746}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,DS ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS + DS ) - ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.744, "obj2": 0.1946445362554682}, {"determining": "Min( ( AMS * MDR ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + ( DS + DS ) ) )", "obj1": 0.102, "obj2": 0.7140485597354072}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,DS ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "Max( RRS,( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) )", "choosing": "( ( ( MUC - MLU ) / MUC ) * ( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) )", "obj1": 0.142, "obj2": 0.7044750492865334}], "6": [{"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Min( ARS ,( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,CRS ) ) - Const ) ) )", "choosing": "( Max( MLU,DS ) * ( MLU + Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( Min( ( Min( FirstVNF_CPU ,MRS ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - FirstVNF_CPU ) )", "choosing": "( Min( RRSe ,Min( MLU ,( RRSe / Min( ( MUR - Min( RMSe ,Min( CS ,RMSe ) ) ) ,MUR ) ) ) ) - Min( ( Max( RCSe,RRSe ) * ( Min( Min( MLU ,MUR ) ,( ( CS + RCSe ) - Min( ( RCSe * CS ) ,( CS + MLU ) ) ) ) * MUM ) ) ,( MLU - ( RCSe / DS ) ) ) )", "obj1": 0.068, "obj2": 0.7583829582122068}, {"determining": "( Max( ACS,RRS ) / ( ( ( FirstVNF_Mem * ( ( CRS + ARS ) * DDR ) ) - RRS ) - AMS ) )", "choosing": "( Max( MLU,DS ) * ( ( Max( MLU,Max( RCSe,Max( RCSe,( RCSe / MUR ) ) ) ) + Min( ( RRSe + Min( MLU ,Max( DS,CS ) ) ) ,MUR ) ) * ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR / ( BR + DDR ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Min( ( MLU - ( RCSe - DS ) ) ,( Max( RCSe,MLU ) * ( MUC * MUM ) ) ) )", "obj1": 0.068, "obj2": 0.7583829582122068}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * ( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * MDR ) ) )", "choosing": "( ( DS + DS ) - MLU )", "obj1": 0.794, "obj2": 0.1561347826511159}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Max( RRS,( ( AMS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) )", "choosing": "( ( ( MUC - MLU ) / MUC ) * ( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) )", "obj1": 0.142, "obj2": 0.7044750492865334}, {"determining": "Min( Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + ( ( MUR / MUC ) / MUR ) ) )", "obj1": 0.77, "obj2": 0.17592846623168107}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( Min( FirstVNF_Mem_Server ,( MDR * MDR ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe * MUC ) / MUC ) / MUR ) - ( RCSe - RCSe ) )", "obj1": 0.68, "obj2": 0.2373754728005757}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "( Min( MDR ,( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "( Max( ( ( MUM - CS ) + MUM ),MUC ) + ( MUM - CS ) )", "obj1": 0.354, "obj2": 0.48622815883104203}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( MDR + Const ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( Min( ( DS + MUC ) ,RRSe ) / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.532, "obj2": 0.33636168171698566}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - Min( PN ,RRS ) ) )", "choosing": "( Max( RMSe,MUC ) + ( DS + DS ) )", "obj1": 0.518, "obj2": 0.36596913192947444}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "( Max( ( ( ( ( ( PN + Min( Const ,ARS ) ) + ( RRS + FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) + DDR ) - ARS ),FirstVNF_Mem ) / ( Max( Min( ( AMS * CRS ) ,PN ),( AMS - Min( ARS ,BR ) ) ) - Const ) )", "choosing": "( ( Max( MLU,Max( RCSe,Max( RCSe,( RCSe / MUR ) ) ) ) + Min( ( RRSe + Min( MLU ,Max( DS,CS ) ) ) ,MUR ) ) * ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( ( Max( ( Min( DS ,RCSe ) + MUM ),Min( Max( MUR,MLU ) ,RMSe ) ) - ( ( Max( RMSe,RCSe ) / RMSe ) - Min( ( MLU / MUM ) ,RRSe ) ) ) + RCSe ) + ( ( MLU / MUM ) / MUC ) ) ) )", "obj1": 0.406, "obj2": 0.4591246293074483}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.594, "obj2": 0.30887683479375966}, {"determining": "Max( ( MDR / ( RRS - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * Min( ( CS - CS ) ,( ( MUR - MUR ) * RRSe ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.094, "obj2": 0.7322157284566221}, {"determining": "Min( MRS ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * DS ) ) ) )", "obj1": 0.392, "obj2": 0.4832298884746321}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS + DS ) - ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.744, "obj2": 0.1946445362554682}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,DS ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "( ( MDR / ( BR + DDR ) ) + Max( MRS,ARS ) )", "choosing": "( Min( RRSe ,Min( MLU ,( RRSe / Min( ( MUR - Min( RMSe ,Min( CS ,RMSe ) ) ) ,MUR ) ) ) ) - Min( ( Max( RCSe,RRSe ) * ( Min( Min( MLU ,MUR ) ,( ( CS + RCSe ) - Min( ( RCSe * CS ) ,( CS + MLU ) ) ) ) * MUM ) ) ,( MLU - ( RCSe / DS ) ) ) )", "obj1": 0.076, "obj2": 0.7564413412410163}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "Min( ( AMS * MDR ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + ( DS + DS ) ) )", "obj1": 0.102, "obj2": 0.7140485597354072}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( FirstVNF_RAM - Const ) )", "choosing": "( ( ( DS + DS ) - ( MLU + MUC ) ) - MLU )", "obj1": 0.93, "obj2": 0.0656294321810866}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * Min( AMS ,MDR ) ) )", "choosing": "( ( MLU + DS ) - ( MLU + MUC ) )", "obj1": 0.728, "obj2": 0.19809725865780273}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),( Max( ( MDR + Const ),Min( ARS ,PN ) ) - Const ) )", "choosing": "( ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.236, "obj2": 0.5487893410632231}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "( Max( BR,RRS ) + ( RRS + PN ) )", "choosing": "( Max( MLU,DS ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.708, "obj2": 0.20965784969689746}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.708, "obj2": 0.20965784969689746}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( Min( PN ,( MDR / BR ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( RCSe - RCSe ) - CS ) )", "obj1": 0.712, "obj2": 0.20451390116171286}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}], "7": [{"determining": "Max( ( FirstVNF_CPU / CRS ),( Min( ( Min( FirstVNF_CPU ,MRS ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - FirstVNF_CPU ) )", "choosing": "( Min( RRSe ,Min( MLU ,( RRSe / Min( ( MUR - Min( RMSe ,Min( CS ,RMSe ) ) ) ,MUR ) ) ) ) - Min( ( Max( RCSe,RRSe ) * ( Min( Min( MLU ,MUR ) ,( ( CS + RCSe ) - Min( ( RCSe * CS ) ,( CS + MLU ) ) ) ) * MUM ) ) ,( MLU - ( RCSe / DS ) ) ) )", "obj1": 0.068, "obj2": 0.7583829582122068}, {"determining": "( ( CRS - AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Min( ARS ,( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,CRS ) ) - Const ) ) )", "choosing": "( Max( MLU,DS ) * ( MLU + Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR / ( BR + DDR ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Min( ( MLU - ( RCSe - DS ) ) ,( Max( RCSe,MLU ) * ( MUC * MUM ) ) ) )", "obj1": 0.068, "obj2": 0.7583829582122068}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * ( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) * MDR ) ) )", "choosing": "( ( DS + DS ) - MLU )", "obj1": 0.794, "obj2": 0.1561347826511159}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - Min( PN ,RRS ) ) )", "choosing": "( Max( RMSe,MUC ) + ( DS + DS ) )", "obj1": 0.518, "obj2": 0.36596913192947444}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( DDR,AMS ) ) ,Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( DDR - PN ),AMS ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MUM - Max( MLU,RRSe ) ) ) - MUC ) ) - ( MLU - ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.132, "obj2": 0.7018189014444185}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( Min( FirstVNF_Mem_Server ,( MDR * MDR ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe * MUC ) / MUC ) / MUR ) - ( RCSe - RCSe ) )", "obj1": 0.68, "obj2": 0.2373754728005757}, {"determining": "Min( Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + ( ( MUR / MUC ) / MUR ) ) )", "obj1": 0.77, "obj2": 0.17592846623168107}, {"determining": "( Min( MDR ,( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "( Max( ( ( MUM - CS ) + MUM ),MUC ) + ( MUM - CS ) )", "obj1": 0.354, "obj2": 0.48622815883104203}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "( Max( ( ( ( ( ( PN + Min( Const ,ARS ) ) + ( RRS + FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) + DDR ) - ARS ),FirstVNF_Mem ) / ( Max( Min( ( AMS * CRS ) ,PN ),( AMS - Min( ARS ,BR ) ) ) - Const ) )", "choosing": "( ( Max( MLU,Max( RCSe,Max( RCSe,( RCSe / MUR ) ) ) ) + Min( ( RRSe + Min( MLU ,Max( DS,CS ) ) ) ,MUR ) ) * ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( ( Max( ( Min( DS ,RCSe ) + MUM ),Min( Max( MUR,MLU ) ,RMSe ) ) - ( ( Max( RMSe,RCSe ) / RMSe ) - Min( ( MLU / MUM ) ,RRSe ) ) ) + RCSe ) + ( ( MLU / MUM ) / MUC ) ) ) )", "obj1": 0.406, "obj2": 0.4591246293074483}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.594, "obj2": 0.30887683479375966}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( MRS ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * DS ) ) ) )", "obj1": 0.392, "obj2": 0.4832298884746321}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,Max( BR,( RRS - ( ( RRS - FirstVNF_CPU_Server ) + RRS ) ) ) )", "choosing": "( Max( Max( ( RCSe + DS ),MUM ),MUC ) + ( MUM - CS ) )", "obj1": 0.744, "obj2": 0.1898613166807036}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,DS ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.706, "obj2": 0.2111783102408934}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / Min( ( ( AMS - Const ) - ( MRS / Const ) ) ,RRS ) )", "choosing": "( ( MUC * Max( MUR,MLU ) ) * ( ( MUR - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 0.278, "obj2": 0.5176485710365154}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * Min( AMS ,MDR ) ) )", "choosing": "( ( MLU + DS ) - ( MLU + MUC ) )", "obj1": 0.728, "obj2": 0.19809725865780273}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "Min( ( AMS * MDR ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + ( DS + DS ) ) )", "obj1": 0.102, "obj2": 0.7140485597354072}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),( Max( ( MDR + Const ),Min( ARS ,PN ) ) - Const ) )", "choosing": "( ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.236, "obj2": 0.5487893410632231}, {"determining": "Max( ( MDR / ( RRS - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * Min( ( CS - CS ) ,( ( MUR - MUR ) * RRSe ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.094, "obj2": 0.7322157284566221}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "( Max( BR,RRS ) + ( RRS + PN ) )", "choosing": "( Max( MLU,DS ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( Min( PN ,( MDR / BR ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( RCSe - RCSe ) - CS ) )", "obj1": 0.712, "obj2": 0.20451390116171286}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( MDR + Const ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( Min( ( DS + MUC ) ,RRSe ) / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.532, "obj2": 0.33636168171698566}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}], "8": [{"determining": "( Max( BR,PN ) + ( RRS - FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( ( ( ( ( CS - CS ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR / ( BR + DDR ) ),( AMS - Const ) )", "choosing": "( ( ( CS + ( MUC * Max( MUR,MLU ) ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Min( ( MLU - ( RCSe - DS ) ) ,( Max( RCSe,MLU ) * ( MUC * MUM ) ) ) )", "obj1": 0.062, "obj2": 0.7738816221280459}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( Min( PN ,( MDR / BR ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( RCSe - RCSe ) - CS ) )", "obj1": 0.712, "obj2": 0.20451390116171286}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - Min( PN ,RRS ) ) )", "choosing": "( Max( RMSe,MUC ) + ( DS + DS ) )", "obj1": 0.518, "obj2": 0.36596913192947444}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),Const ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - MUC ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.132, "obj2": 0.6985348823802902}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "( Max( ( ( ( ( ( PN + Min( Const ,ARS ) ) + ( RRS + FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) + DDR ) - ARS ),FirstVNF_Mem ) / ( Max( Min( ( AMS * CRS ) ,PN ),( AMS - Min( ARS ,BR ) ) ) - Const ) )", "choosing": "( ( Max( MLU,Max( RCSe,Max( RCSe,( RCSe / MUR ) ) ) ) + Min( ( RRSe + Min( MLU ,Max( DS,CS ) ) ) ,MUR ) ) * ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( ( Max( ( Min( DS ,RCSe ) + MUM ),Min( Max( MUR,MLU ) ,RMSe ) ) - ( ( Max( RMSe,RCSe ) / RMSe ) - Min( ( MLU / MUM ) ,RRSe ) ) ) + RCSe ) + ( ( MLU / MUM ) / MUC ) ) ) )", "obj1": 0.406, "obj2": 0.4591246293074483}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.594, "obj2": 0.30887683479375966}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( MRS ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * DS ) ) ) )", "obj1": 0.392, "obj2": 0.4832298884746321}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( DDR - PN ),AMS ) ) ,FirstVNF_Mem )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MLU - Max( MLU,RRSe ) ) - Max( MLU,RRSe ) ) ) - MUC ) ) - ( MLU - ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.088, "obj2": 0.7304846623244332}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / Min( ( ( AMS - Const ) - ( MRS / Const ) ) ,RRS ) )", "choosing": "( ( MUC * Max( MUR,MLU ) ) * ( ( MUR - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 0.278, "obj2": 0.5176485710365154}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,DS ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,MUC ) + ( RRSe - CS ) )", "obj1": 0.706, "obj2": 0.2047054928664918}, {"determining": "( Min( MDR ,( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "( Max( ( ( MUM - CS ) + MUM ),MUC ) + ( MUM - CS ) )", "obj1": 0.354, "obj2": 0.48622815883104203}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "Min( Min( ( Max( ( MDR / ( BR + DDR ) ),Max( MRS,ARS ) ) - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "( Min( DS ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Min( ( MLU - ( RCSe - DS ) ) ,( Max( RCSe,MLU ) * ( MUC * MUM ) ) ) ) ) ) )", "obj1": 0.072, "obj2": 0.7508157173917575}, {"determining": "Min( ( AMS * MDR ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + ( DS + DS ) ) )", "obj1": 0.102, "obj2": 0.7140485597354072}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( Min( FirstVNF_Mem_Server ,( MDR * MDR ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe * MUC ) / MUC ) / MUR ) - ( RCSe - RCSe ) )", "obj1": 0.68, "obj2": 0.2373754728005757}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),( Max( ( MDR + Const ),Min( ARS ,PN ) ) - Const ) )", "choosing": "( ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.236, "obj2": 0.5487893410632231}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "( Max( BR,RRS ) + ( RRS + PN ) )", "choosing": "( Max( MLU,DS ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( MDR + Const ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( Min( ( DS + MUC ) ,RRSe ) / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.532, "obj2": 0.33636168171698566}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "Max( ( MDR / ( BR + DDR ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Min( ( MLU - ( RCSe - DS ) ) ,( Max( RCSe,MLU ) * ( MUC * MUM ) ) ) )", "obj1": 0.068, "obj2": 0.7583829582122068}], "9": [{"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / PN )", "choosing": "( ( MLU - DS ) * ( ( ( ( ( RCSe - RCSe ) - RCSe ) + MUC ) - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,PN ) + ( RRS - FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( ( ( ( ( CS - CS ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR / ( BR + DDR ) ),( AMS - Const ) )", "choosing": "( ( ( CS + ( MUC * Max( MUR,MLU ) ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Min( ( MLU - ( RCSe - DS ) ) ,( Max( RCSe,MLU ) * ( MUC * MUM ) ) ) )", "obj1": 0.062, "obj2": 0.7738816221280459}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( Min( PN ,( MDR / BR ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( RCSe - RCSe ) - CS ) )", "obj1": 0.712, "obj2": 0.20451390116171286}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - Min( PN ,RRS ) ) )", "choosing": "( Max( RMSe,MUC ) + ( DS + DS ) )", "obj1": 0.518, "obj2": 0.36596913192947444}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.09, "obj2": 0.7024408445318256}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( FirstVNF_Mem / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( PN ,( ( MDR + CRS ) / DDR ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "( ( Min( ( DS - ( ( MUC * MUM ) - MLU ) ) ,MUM ) * ( ( MLU * ( Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - MLU ) ) - ( MLU + Max( Min( ( Min( RRSe ,MUM ) * MUR ) ,MUM ),MUR ) ) )", "obj1": 0.122, "obj2": 0.689310727433603}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( PN / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( ( MLU - RCSe ) - ( Max( MUM,MUM ) + MUM ) ) - ( MLU - ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.136, "obj2": 0.6654340741609821}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.07, "obj2": 0.7276937556455796}, {"determining": "( Max( ( ( ( ( ( PN + Min( Const ,ARS ) ) + ( RRS + FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) + DDR ) - ARS ),FirstVNF_Mem ) / ( Max( Min( ( AMS * CRS ) ,PN ),( AMS - Min( ARS ,BR ) ) ) - Const ) )", "choosing": "( ( Max( MLU,Max( RCSe,Max( RCSe,( RCSe / MUR ) ) ) ) + Min( ( RRSe + Min( MLU ,Max( DS,CS ) ) ) ,MUR ) ) * ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( ( Max( ( Min( DS ,RCSe ) + MUM ),Min( Max( MUR,MLU ) ,RMSe ) ) - ( ( Max( RMSe,RCSe ) / RMSe ) - Min( ( MLU / MUM ) ,RRSe ) ) ) + RCSe ) + ( ( MLU / MUM ) / MUC ) ) ) )", "obj1": 0.406, "obj2": 0.4591246293074483}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.594, "obj2": 0.30887683479375966}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( MRS ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - ( MLU + Min( RCSe ,( ( Min( MLU ,DS ) - RRSe ) * DS ) ) ) )", "obj1": 0.392, "obj2": 0.4832298884746321}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "Max( ( MDR / ( BR + DDR ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Min( ( MLU - ( RCSe - DS ) ) ,( Max( RCSe,MLU ) * ( MUC * MUM ) ) ) )", "obj1": 0.068, "obj2": 0.7547577051845832}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,MUC ) + ( RRSe - CS ) )", "obj1": 0.706, "obj2": 0.2047054928664918}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "( Min( MDR ,( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "( Max( ( ( MUM - CS ) + MUM ),MUC ) + ( MUM - CS ) )", "obj1": 0.354, "obj2": 0.48622815883104203}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / Min( ( ( AMS - Const ) - ( MRS / Const ) ) ,RRS ) )", "choosing": "( ( MUC * Max( MUR,MLU ) ) * ( ( MUR - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 0.278, "obj2": 0.5176485710365154}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,DS ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.178, "obj2": 0.61216813180857}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),( Max( ( MDR + Const ),Min( ARS ,PN ) ) - Const ) )", "choosing": "( ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.236, "obj2": 0.5487893410632231}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( Min( FirstVNF_Mem_Server ,( MDR * MDR ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe * MUC ) / MUC ) / MUR ) - ( RCSe - RCSe ) )", "obj1": 0.68, "obj2": 0.2373754728005757}, {"determining": "Min( ( ( MDR / BR ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ) + ( CS - DS ) ) )", "obj1": 0.292, "obj2": 0.5117386712208154}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( MDR + Const ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - CS ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( Min( ( DS + MUC ) ,RRSe ) / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.532, "obj2": 0.33636168171698566}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}], "10": [{"determining": "Min( ( ( ( AMS * Min( ARS ,FirstVNF_CPU_Server ) ) * CRS ) - AMS ) ,( ( ACS * CRS ) + PN ) )", "choosing": "( ( MLU - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( Max( CS,RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / PN )", "choosing": "( ( MLU - DS ) * ( ( ( ( ( RCSe - RCSe ) - RCSe ) + MUC ) - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR / ( BR + DDR ) ),( AMS - Const ) )", "choosing": "( ( ( CS + ( MUC * Max( MUR,MLU ) ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Min( ( MLU - ( RCSe - DS ) ) ,( Max( RCSe,MLU ) * ( MUC * MUM ) ) ) )", "obj1": 0.062, "obj2": 0.7738816221280459}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( Min( PN ,( MDR / BR ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( RCSe - RCSe ) - CS ) )", "obj1": 0.712, "obj2": 0.20451390116171286}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.07, "obj2": 0.7276937556455796}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - Min( PN ,RRS ) ) )", "choosing": "( Max( RMSe,MUC ) + ( DS + DS ) )", "obj1": 0.518, "obj2": 0.36596913192947444}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( PN / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( ( MLU - RCSe ) - ( Max( MUM,MUM ) + MUM ) ) - ( MLU - ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.136, "obj2": 0.6654340741609821}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.594, "obj2": 0.30887683479375966}, {"determining": "Min( ( Min( RRS ,FirstVNF_Mem ) * Const ) ,( ( BR + DDR ) + ( ( ARS / ( DDR / CRS ) ) * MRS ) ) )", "choosing": "( ( DS + DS ) - ( MUC + ( ( RCSe - Max( RRSe,( MUM - ( RCSe + MUM ) ) ) ) - RCSe ) ) )", "obj1": 0.382, "obj2": 0.4700645278577759}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "( Max( ( ( ( ( ( PN + Min( Const ,ARS ) ) + ( RRS + FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) + DDR ) - ARS ),FirstVNF_Mem ) / ( Max( Min( ( AMS * CRS ) ,PN ),( AMS - Min( ARS ,BR ) ) ) - Const ) )", "choosing": "( ( Max( MLU,Max( RCSe,Max( RCSe,( RCSe / MUR ) ) ) ) + Min( ( RRSe + Min( MLU ,Max( DS,CS ) ) ) ,MUR ) ) * ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( ( Max( ( Min( DS ,RCSe ) + MUM ),Min( Max( MUR,MLU ) ,RMSe ) ) - ( ( Max( RMSe,RCSe ) / RMSe ) - Min( ( MLU / MUM ) ,RRSe ) ) ) + RCSe ) + ( ( MLU / MUM ) / MUC ) ) ) )", "obj1": 0.406, "obj2": 0.4591246293074483}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "( Min( MDR ,( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "( Max( ( ( MUM - CS ) + MUM ),MUC ) + ( MUM - CS ) )", "obj1": 0.354, "obj2": 0.48622815883104203}, {"determining": "Max( ( MDR / ( BR + DDR ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( RMSe / DS ) - ( MUR + CS ) ) ) - Min( ( MLU - ( RCSe - DS ) ) ,( Max( RCSe,MLU ) * ( MUC * MUM ) ) ) )", "obj1": 0.068, "obj2": 0.7547577051845832}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - MUC ) ) - ( ( ( Min( Min( DS ,RRSe ) ,( DS / CS ) ) * Min( MUM ,Min( ( Min( MUC ,MUM ) * RRSe ) ,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) ) * DS ) )", "obj1": 0.562, "obj2": 0.31972515665195367}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.696, "obj2": 0.21136228388904318}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "Min( ( ARS - Min( PN ,( ( MDR + CRS ) / DDR ) ) ) ,( MDR * AMS ) )", "choosing": "( Min( DS ,DS ) - ( MLU + ( ( DS - ( ( MUC * MUM ) - MLU ) ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.158, "obj2": 0.6346015184791194}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / Min( ( ( AMS - Const ) - ( MRS / Const ) ) ,RRS ) )", "choosing": "( ( MUC * Max( MUR,MLU ) ) * ( ( MUR - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 0.278, "obj2": 0.5176485710365154}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),( Max( ( MDR + Const ),Min( ARS ,PN ) ) - Const ) )", "choosing": "( ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.236, "obj2": 0.5487893410632231}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( CRS / MRS ) ) ) )", "choosing": "( Max( RMSe,( RRSe * RMSe ) ) - ( Min( ( MUM + RRSe ) ,Max( RCSe,MUM ) ) * ( RRSe + MUM ) ) )", "obj1": 0.68, "obj2": 0.23684045855933458}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( ( MDR / BR ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ) + ( CS - DS ) ) )", "obj1": 0.292, "obj2": 0.5117386712208154}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}], "11": [{"determining": "Min( ( ( ( AMS * Min( ARS ,FirstVNF_CPU_Server ) ) * CRS ) - AMS ) ,( ( ACS * CRS ) + PN ) )", "choosing": "( ( MLU - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( Max( CS,RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS * Min( ARS ,FirstVNF_CPU_Server ) ) * CRS ) - AMS ) ,( ( ACS * CRS ) + PN ) )", "choosing": "( ( MLU - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( Max( CS,RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( Min( PN ,( MDR / BR ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( ( RCSe - RCSe ) - CS ) )", "obj1": 0.712, "obj2": 0.20451390116171286}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - Min( PN ,RRS ) ) )", "choosing": "( Max( RMSe,MUC ) + ( DS + DS ) )", "obj1": 0.518, "obj2": 0.36596913192947444}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( PN / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( ( MLU - RCSe ) - ( Max( MUM,MUM ) + MUM ) ) - ( MLU - ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.136, "obj2": 0.6654340741609821}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}, {"determining": "Min( ( Min( RRS ,FirstVNF_Mem ) * Const ) ,( ( BR + DDR ) + ( ( ARS / ( DDR / CRS ) ) * MRS ) ) )", "choosing": "( ( DS + DS ) - ( MUC + ( ( RCSe - Max( RRSe,( MUM - ( RCSe + MUM ) ) ) ) - RCSe ) ) )", "obj1": 0.382, "obj2": 0.4700645278577759}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.594, "obj2": 0.30887683479375966}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "( Max( ( ( ( ( ( PN + Min( Const ,ARS ) ) + ( RRS + FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) + DDR ) - ARS ),FirstVNF_Mem ) / ( Max( Min( ( AMS * CRS ) ,PN ),( AMS - Min( ARS ,BR ) ) ) - Const ) )", "choosing": "( ( Max( MLU,Max( RCSe,Max( RCSe,( RCSe / MUR ) ) ) ) + Min( ( RRSe + Min( MLU ,Max( DS,CS ) ) ) ,MUR ) ) * ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( ( Max( ( Min( DS ,RCSe ) + MUM ),Min( Max( MUR,MLU ) ,RMSe ) ) - ( ( Max( RMSe,RCSe ) / RMSe ) - Min( ( MLU / MUM ) ,RRSe ) ) ) + RCSe ) + ( ( MLU / MUM ) / MUC ) ) ) )", "obj1": 0.406, "obj2": 0.4591246293074483}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "( Min( MDR ,( Min( MDR ,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "( Max( ( ( MUM - CS ) + MUM ),MUC ) + ( MUM - CS ) )", "obj1": 0.354, "obj2": 0.48622815883104203}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - MUC ) ) - ( ( ( Min( Min( DS ,RRSe ) ,( DS / CS ) ) * Min( MUM ,Min( ( Min( MUC ,MUM ) * RRSe ) ,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) ) * DS ) )", "obj1": 0.562, "obj2": 0.31972515665195367}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.696, "obj2": 0.21136228388904318}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "Min( ( ARS - Min( PN ,( ( MDR + CRS ) / DDR ) ) ) ,( MDR * AMS ) )", "choosing": "( Min( DS ,DS ) - ( MLU + ( ( DS - ( ( MUC * MUM ) - MLU ) ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.158, "obj2": 0.6346015184791194}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / Min( ( ( AMS - Const ) - ( MRS / Const ) ) ,RRS ) )", "choosing": "( ( MUC * Max( MUR,MLU ) ) * ( ( MUR - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 0.278, "obj2": 0.5176485710365154}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( CRS / MRS ) ) ) )", "choosing": "( Max( RMSe,( RRSe * RMSe ) ) - ( Min( ( MUM + RRSe ) ,Max( RCSe,MUM ) ) * ( RRSe + MUM ) ) )", "obj1": 0.68, "obj2": 0.23684045855933458}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "Min( ( ( MDR / BR ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ) + ( CS - DS ) ) )", "obj1": 0.292, "obj2": 0.5117386712208154}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),( Max( ( MDR + Const ),Min( ARS ,PN ) ) - Const ) )", "choosing": "( ( Max( Min( ( DS + MUC ) ,RRSe ),MUR ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.236, "obj2": 0.5487893410632231}, {"determining": "Min( ( ARS - RRS ) ,( MDR * AMS ) )", "choosing": "( Min( DS ,DS ) - ( ( RCSe * CS ) + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.234, "obj2": 0.5503087300757131}], "12": [{"determining": "Min( ( ( ( AMS * Min( ( CRS - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) * CRS ) - AMS ) ,( ( ACS * CRS ) + PN ) )", "choosing": "( ( ( MUM * ( ( RMSe + ( Max( DS,MUR ) * Max( DS,( RRSe - CS ) ) ) ) * MUM ) ) - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( CS - RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS * Min( ARS ,FirstVNF_CPU_Server ) ) * CRS ) - AMS ) ,( ( ACS * CRS ) + PN ) )", "choosing": "( ( MLU - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( Max( CS,RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / ( RRS - Min( PN ,RRS ) ) )", "choosing": "( Max( RMSe,MUC ) + ( DS + DS ) )", "obj1": 0.518, "obj2": 0.36596913192947444}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - CRS ) - PN ) )", "choosing": "( ( Min( Max( DS,( MLU - ( MUC * MUM ) ) ) ,MUM ) * ( ( MLU * ( RMSe / RCSe ) ) - MLU ) ) - ( MLU + Max( Max( CS,MLU ),MUR ) ) )", "obj1": 0.13, "obj2": 0.665247494723229}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "Min( ( Min( RRS ,FirstVNF_Mem ) * Const ) ,( ( FirstVNF_CPU - BR ) + ( Min( FirstVNF_Mem_Server ,( Const * ( ACS - FirstVNF_Mem_Server ) ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ARS ) ) ) )", "choosing": "( ( DS + DS ) - ( MUC + ( ( RCSe - Max( Max( RCSe,MUC ),MUC ) ) - RCSe ) ) )", "obj1": 0.614, "obj2": 0.2905957555193793}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.696, "obj2": 0.21136228388904318}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "( ( ( ( ARS * DDR ) * ( FirstVNF_RAM + MDR ) ) * ( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM + RRSe ) ,Max( MUM,( RMSe * ( Min( CS ,Min( CS ,RMSe ) ) + Max( RMSe,MUC ) ) ) ) ) + ( RRSe + MUM ) ) * ( Max( CS,MUR ) / ( RRSe * RRSe ) ) )", "obj1": 0.97, "obj2": 0.04613833645170588}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "( ( ARS / ( AMS - FirstVNF_RAM ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 0.594, "obj2": 0.30887683479375966}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - MUC ) ) - ( ( ( Min( Min( DS ,RRSe ) ,( DS / CS ) ) * Min( MUM ,Min( ( Min( MUC ,MUM ) * RRSe ) ,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) ) * DS ) )", "obj1": 0.562, "obj2": 0.31972515665195367}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "Min( ( Min( RRS ,FirstVNF_Mem ) * Const ) ,( ( BR + DDR ) + ( ( ARS / ( DDR / CRS ) ) * MRS ) ) )", "choosing": "( ( DS + DS ) - ( MUC + ( ( RCSe - Max( RRSe,( MUM - ( RCSe + MUM ) ) ) ) - RCSe ) ) )", "obj1": 0.382, "obj2": 0.4700645278577759}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "Min( ( ARS - Min( PN ,( ( MDR + CRS ) / DDR ) ) ) ,( MDR * AMS ) )", "choosing": "( Min( DS ,DS ) - ( MLU + ( ( DS - ( ( MUC * MUM ) - MLU ) ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.158, "obj2": 0.6346015184791194}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / Min( ( ( AMS - Const ) - ( MRS / Const ) ) ,RRS ) )", "choosing": "( ( MUC * Max( MUR,MLU ) ) * ( ( MUR - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 0.278, "obj2": 0.5176485710365154}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( CRS / MRS ) ) ) )", "choosing": "( Max( RMSe,( RRSe * RMSe ) ) - ( Min( ( MUM + RRSe ) ,Max( RCSe,MUM ) ) * ( RRSe + MUM ) ) )", "obj1": 0.68, "obj2": 0.23684045855933458}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / Min( ARS ,( FirstVNF_CPU_Server / ( CRS / ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( RMSe - RRSe ),RCSe ),MUM ),RMSe ) - ( ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) - RCSe ) )", "obj1": 0.71, "obj2": 0.20192854513554315}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}], "13": [{"determining": "Min( ( ( ( AMS * Min( ( CRS - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) * CRS ) - AMS ) ,( ( ACS * CRS ) + PN ) )", "choosing": "( ( ( MUM * ( ( RMSe + ( Max( DS,MUR ) * Max( DS,( RRSe - CS ) ) ) ) * MUM ) ) - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( CS - RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS * Min( ( CRS - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) * CRS ) - AMS ) ,( ( ACS * CRS ) + PN ) )", "choosing": "( ( ( MUM * ( ( RMSe + ( Max( DS,MUR ) * Max( DS,( RRSe - CS ) ) ) ) * MUM ) ) - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( CS - RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( MDR * ( Const + ( MDR + FirstVNF_Mem ) ) ) * ( DDR - PN ) ),Max( ( MDR - PN ),( DDR / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * Min( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( RCSe ,MLU ) - DS ) ) - ( MUC + RRSe ) ) ) ,Min( DS ,RRSe ) ) ) - ( DS + ( MUC - RCSe ) ) )", "obj1": 0.044, "obj2": 0.7631237816687859}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "Min( Min( DDR ,( RRS - Min( PN ,( MDR / ( Min( ( DDR / BR ) ,FirstVNF_Mem ) - Const ) ) ) ) ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ),MUC ) + ( CS - DS ) ) )", "obj1": 0.486, "obj2": 0.365482640967631}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - CRS ) - PN ) )", "choosing": "( ( Min( Max( DS,( MLU - ( MUC * MUM ) ) ) ,MUM ) * ( ( MLU * ( RMSe / RCSe ) ) - MLU ) ) - ( MLU + Max( Max( CS,MLU ),MUR ) ) )", "obj1": 0.13, "obj2": 0.665247494723229}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "Min( ( Min( RRS ,FirstVNF_Mem ) * Const ) ,( ( BR + DDR ) + ( ( ARS / ( DDR / CRS ) ) * MRS ) ) )", "choosing": "( ( DS + DS ) - ( MUC + ( ( RCSe - Max( RRSe,( MUM - ( RCSe + MUM ) ) ) ) - RCSe ) ) )", "obj1": 0.382, "obj2": 0.4700645278577759}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / Min( ( ( AMS - Const ) - ( MRS / Const ) ) ,RRS ) )", "choosing": "( ( MUC * Max( MUR,MLU ) ) * ( ( MUR - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 0.278, "obj2": 0.5176485710365154}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( Min( RRS ,AMS ) / Min( ACS ,RRS ) ) ,PN ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.298, "obj2": 0.5031976932226665}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.696, "obj2": 0.21136228388904318}, {"determining": "Min( ( Min( RRS ,FirstVNF_Mem ) * Const ) ,( ( FirstVNF_CPU - BR ) + ( Min( FirstVNF_Mem_Server ,( Const * ( ACS - FirstVNF_Mem_Server ) ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ARS ) ) ) )", "choosing": "( ( DS + DS ) - ( MUC + ( ( RCSe - Max( Max( RCSe,MUC ),MUC ) ) - RCSe ) ) )", "obj1": 0.614, "obj2": 0.2905957555193793}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "( ( ( ( ARS * DDR ) * ( FirstVNF_RAM + MDR ) ) * ( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM + RRSe ) ,Max( MUM,( RMSe * ( Min( CS ,Min( CS ,RMSe ) ) + Max( RMSe,MUC ) ) ) ) ) + ( RRSe + MUM ) ) * ( Max( CS,MUR ) / ( RRSe * RRSe ) ) )", "obj1": 0.97, "obj2": 0.04613833645170588}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - MUC ) ) - ( ( ( Min( Min( DS ,RRSe ) ,( DS / CS ) ) * Min( MUM ,Min( ( Min( MUC ,MUM ) * RRSe ) ,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) ) * DS ) )", "obj1": 0.562, "obj2": 0.31972515665195367}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "Min( ( ARS - Min( PN ,( ( MDR + CRS ) / DDR ) ) ) ,( MDR * AMS ) )", "choosing": "( Min( DS ,DS ) - ( MLU + ( ( DS - ( ( MUC * MUM ) - MLU ) ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.158, "obj2": 0.6346015184791194}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( CRS / MRS ) ) ) )", "choosing": "( Max( RMSe,( RRSe * RMSe ) ) - ( Min( ( MUM + RRSe ) ,Max( RCSe,MUM ) ) * ( RRSe + MUM ) ) )", "obj1": 0.68, "obj2": 0.23684045855933458}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / Min( ARS ,( FirstVNF_CPU_Server / ( CRS / ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( RMSe - RRSe ),RCSe ),MUM ),RMSe ) - ( ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) - RCSe ) )", "obj1": 0.71, "obj2": 0.20192854513554315}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / Min( ACS ,FirstVNF_Mem ) ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( ( ( MUC / RMSe ) + CS ) * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.204, "obj2": 0.5784338028293426}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}], "14": [{"determining": "Min( Max( ( ( Max( ( ( FirstVNF_CPU_Server + ( BR + RRS ) ) / FirstVNF_Mem ),( ARS - Min( CRS ,BR ) ) ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - RRS ) ),Max( BR,AMS ) ) ,( ( Min( CRS ,( ( ACS - FirstVNF_Mem_Server ) - CRS ) ) * RRS ) - ARS ) )", "choosing": "( ( RRSe - Min( ( MUM - CS ) ,Min( ( ( ( ( DS + RCSe ) / RCSe ) - DS ) / DS ) ,DS ) ) ) - Min( RMSe ,( MUC * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS * Min( ( CRS - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) * CRS ) - AMS ) ,( ( ACS * CRS ) + PN ) )", "choosing": "( ( ( MUM * ( ( RMSe + ( Max( DS,MUR ) * Max( DS,( RRSe - CS ) ) ) ) * MUM ) ) - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( CS - RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( MDR * ( Const + ( MDR + FirstVNF_Mem ) ) ) * ( DDR - PN ) ),Max( ( MDR - PN ),( DDR / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * Min( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( RCSe ,MLU ) - DS ) ) - ( MUC + RRSe ) ) ) ,Min( DS ,RRSe ) ) ) - ( DS + ( MUC - RCSe ) ) )", "obj1": 0.044, "obj2": 0.7631237816687859}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "Min( Min( DDR ,( RRS - Min( PN ,( MDR / ( Min( ( DDR / BR ) ,FirstVNF_Mem ) - Const ) ) ) ) ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ),MUC ) + ( CS - DS ) ) )", "obj1": 0.486, "obj2": 0.365482640967631}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.524, "obj2": 0.33746467210453235}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - CRS ) - PN ) )", "choosing": "( ( Min( Max( DS,( MLU - ( MUC * MUM ) ) ) ,MUM ) * ( ( MLU * ( RMSe / RCSe ) ) - MLU ) ) - ( MLU + Max( Max( CS,MLU ),MUR ) ) )", "obj1": 0.13, "obj2": 0.665247494723229}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,( ( Min( FirstVNF_Mem_Server ,( Const * ( ACS - FirstVNF_Mem_Server ) ) ) - ( ( MRS - ( FirstVNF_RAM / RRS ) ) - ARS ) ) + ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( DS + DS ) - ( MUC + ( ( Max( RRSe,MUC ) - MLU ) - RCSe ) ) )", "obj1": 0.37, "obj2": 0.47776941396821493}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "Min( FirstVNF_Mem ,Min( PN ,MDR ) )", "choosing": "( ( DS / DS ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) )", "obj1": 0.294, "obj2": 0.5023808966953971}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / Min( ( ( AMS - Const ) - ( MRS / Const ) ) ,RRS ) )", "choosing": "( ( MUC * Max( MUR,MLU ) ) * ( ( MUR - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 0.278, "obj2": 0.5176485710365154}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.696, "obj2": 0.21136228388904318}, {"determining": "( Max( MRS,ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.582, "obj2": 0.3117081632021462}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "( ( ( ( ARS * DDR ) * ( FirstVNF_RAM + MDR ) ) * ( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM + RRSe ) ,Max( MUM,( RMSe * ( Min( CS ,Min( CS ,RMSe ) ) + Max( RMSe,MUC ) ) ) ) ) + ( RRSe + MUM ) ) * ( Max( CS,MUR ) / ( RRSe * RRSe ) ) )", "obj1": 0.97, "obj2": 0.04613833645170588}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.546, "obj2": 0.31451346808346425}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "Min( ( Min( RRS ,FirstVNF_Mem ) * Const ) ,( ( FirstVNF_CPU - BR ) + ( Min( FirstVNF_Mem_Server ,( Const * ( ACS - FirstVNF_Mem_Server ) ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ARS ) ) ) )", "choosing": "( ( DS + DS ) - ( MUC + ( ( RCSe - Max( Max( RCSe,MUC ),MUC ) ) - RCSe ) ) )", "obj1": 0.614, "obj2": 0.2905957555193793}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( ( ARS - Min( PN ,( ( MDR + CRS ) / DDR ) ) ) ,( MDR * AMS ) )", "choosing": "( Min( DS ,DS ) - ( MLU + ( ( DS - ( ( MUC * MUM ) - MLU ) ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.158, "obj2": 0.6346015184791194}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( CRS / MRS ) ) ) )", "choosing": "( Max( RMSe,( RRSe * RMSe ) ) - ( Min( ( MUM + RRSe ) ,Max( RCSe,MUM ) ) * ( RRSe + MUM ) ) )", "obj1": 0.68, "obj2": 0.23684045855933458}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / Min( ARS ,( FirstVNF_CPU_Server / ( CRS / ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( RMSe - RRSe ),RCSe ),MUM ),RMSe ) - ( ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) - RCSe ) )", "obj1": 0.71, "obj2": 0.20192854513554315}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( Min( CRS ,BR ) - ARS ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( DDR,AMS ) ) ,( ( Min( ( FirstVNF_Mem_Server - CRS ) ,CRS ) * RRS ) * ARS ) )", "choosing": "( ( Max( Min( Max( ( RMSe * CS ),MUR ) ,DS ),MUM ) * ( ( RMSe * ( Max( MLU,RRSe ) - MLU ) ) - MUC ) ) - ( ( MUM + Min( RCSe ,( MUC - ( Max( MLU,RMSe ) - CS ) ) ) ) - ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.2, "obj2": 0.5709590807470347}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC - CS ) / Min( ( CS * Max( RRSe,( Max( Max( MUR,MLU ),CS ) * Max( MLU,CS ) ) ) ) ,MLU ) ) + ( MUM * RCSe ) )", "obj1": 0.618, "obj2": 0.2736974316834511}], "15": [{"determining": "Min( Max( ( ( Max( ( ( FirstVNF_CPU_Server + ( BR + RRS ) ) / FirstVNF_Mem ),( ARS - Min( CRS ,BR ) ) ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - RRS ) ),Max( BR,AMS ) ) ,( ( Min( CRS ,( ( ACS - FirstVNF_Mem_Server ) - CRS ) ) * RRS ) - ARS ) )", "choosing": "( ( RRSe - Min( ( MUM - CS ) ,Min( ( ( ( ( DS + RCSe ) / RCSe ) - DS ) / DS ) ,DS ) ) ) - Min( RMSe ,( MUC * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( Max( ( ( FirstVNF_CPU_Server + ( BR + RRS ) ) / FirstVNF_Mem ),( ARS - Min( CRS ,BR ) ) ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - RRS ) ),Max( BR,AMS ) ) ,( ( Min( CRS ,( ( ACS - FirstVNF_Mem_Server ) - CRS ) ) * RRS ) - ARS ) )", "choosing": "( ( RRSe - Min( ( MUM - CS ) ,Min( ( ( ( ( DS + RCSe ) / RCSe ) - DS ) / DS ) ,DS ) ) ) - Min( RMSe ,( MUC * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( MDR * ( Const + ( MDR + FirstVNF_Mem ) ) ) * ( DDR - PN ) ),Max( ( MDR - PN ),( DDR / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * Min( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( RCSe ,MLU ) - DS ) ) - ( MUC + RRSe ) ) ) ,Min( DS ,RRSe ) ) ) - ( DS + ( MUC - RCSe ) ) )", "obj1": 0.044, "obj2": 0.7631237816687859}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.512, "obj2": 0.3317954702460016}, {"determining": "( ( RRS - Max( ACS,MDR ) ) / Min( ACS ,RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( RRSe * RRSe ) )", "obj1": 0.364, "obj2": 0.47220517892104596}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "Min( ( FirstVNF_RAM * RRS ) ,( RRS / MDR ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.56, "obj2": 0.30199073160573153}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - ( Min( Min( RRSe ,( Max( RRSe,MUC ) * ( DS / MUC ) ) ) ,MUC ) + ( RCSe - RMSe ) ) ) ) )", "obj1": 0.49, "obj2": 0.35698355662671344}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "Min( FirstVNF_Mem ,Min( PN ,MDR ) )", "choosing": "( ( DS / DS ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) )", "obj1": 0.294, "obj2": 0.5023808966953971}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / Min( ( ( AMS - Const ) - ( MRS / Const ) ) ,RRS ) )", "choosing": "( ( MUC * Max( MUR,MLU ) ) * ( ( MUR - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 0.278, "obj2": 0.5176485710365154}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.696, "obj2": 0.21136228388904318}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - CRS ) - PN ) )", "choosing": "( ( Min( Max( DS,( MLU - ( MUC * MUM ) ) ) ,MUM ) * ( ( MLU * ( RMSe / RCSe ) ) - MLU ) ) - ( MLU + Max( Max( CS,MLU ),MUR ) ) )", "obj1": 0.13, "obj2": 0.665247494723229}, {"determining": "( ( ( ( ARS * DDR ) * ( FirstVNF_RAM + MDR ) ) * ( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM + RRSe ) ,Max( MUM,( RMSe * ( Min( CS ,Min( CS ,RMSe ) ) + Max( RMSe,MUC ) ) ) ) ) + ( RRSe + MUM ) ) * ( Max( CS,MUR ) / ( RRSe * RRSe ) ) )", "obj1": 0.97, "obj2": 0.04613833645170588}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + ( BR + FirstVNF_Mem ) ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( ( DDR / MDR ) - ( MDR - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * ( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,DS ) - DS ) ) - ( MUC + DS ) ) ) * CS ) ) - ( ( Max( MLU,RMSe ) / DS ) + ( MUC - RCSe ) ) )", "obj1": 0.596, "obj2": 0.29941819254578345}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "Min( Min( DDR ,( RRS - Min( PN ,( MDR / ( Min( ( DDR / BR ) ,FirstVNF_Mem ) - Const ) ) ) ) ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ),MUC ) + ( CS - DS ) ) )", "obj1": 0.486, "obj2": 0.365482640967631}, {"determining": "Min( ( ARS - Min( PN ,( ( MDR + CRS ) / DDR ) ) ) ,( MDR * AMS ) )", "choosing": "( Min( DS ,DS ) - ( MLU + ( ( DS - ( ( MUC * MUM ) - MLU ) ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.158, "obj2": 0.6346015184791194}, {"determining": "Min( Min( Min( ACS ,RRS ) ,FirstVNF_CPU_Server ) ,( ( ( BR * MRS ) + BR ) + Min( FirstVNF_Mem_Server ,( MRS + Max( RRS,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ) ) ) ) )", "choosing": "( ( MUM / ( Max( ( CS * MLU ),( MUM + Min( Min( RMSe ,Max( MLU,MUC ) ) ,Min( Min( MLU ,MLU ) ,MUR ) ) ) ) - MUR ) ) - Max( CS,MUR ) )", "obj1": 0.14, "obj2": 0.6631022346027788}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.546, "obj2": 0.31451346808346425}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( CRS / MRS ) ) ) )", "choosing": "( Max( RMSe,( RRSe * RMSe ) ) - ( Min( ( MUM + RRSe ) ,Max( RCSe,MUM ) ) * ( RRSe + MUM ) ) )", "obj1": 0.68, "obj2": 0.23684045855933458}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / Min( ARS ,( FirstVNF_CPU_Server / ( CRS / ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( RMSe - RRSe ),RCSe ),MUM ),RMSe ) - ( ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) - RCSe ) )", "obj1": 0.71, "obj2": 0.20192854513554315}], "16": [{"determining": "Min( Max( ( ( Max( ( ( FirstVNF_CPU_Server + ( BR + RRS ) ) / FirstVNF_Mem ),( ARS - Min( CRS ,BR ) ) ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - RRS ) ),Max( BR,AMS ) ) ,( ( Min( CRS ,( ( ACS - FirstVNF_Mem_Server ) - CRS ) ) * RRS ) - ARS ) )", "choosing": "( ( ( MUM * ( ( RMSe + Max( Max( DS,MUR ),Max( DS,( RRSe - MUR ) ) ) ) * MUM ) ) - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( CS - RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( Max( ( ( FirstVNF_CPU_Server + ( BR + RRS ) ) / FirstVNF_Mem ),( ARS - Min( CRS ,BR ) ) ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - RRS ) ),Max( BR,AMS ) ) ,( ( Min( CRS ,( ( ACS - FirstVNF_Mem_Server ) - CRS ) ) * RRS ) - ARS ) )", "choosing": "( ( RRSe - Min( ( MUM - CS ) ,Min( ( ( ( ( DS + RCSe ) / RCSe ) - DS ) / DS ) ,DS ) ) ) - Min( RMSe ,( MUC * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( MDR * ( Const + ( MDR + FirstVNF_Mem ) ) ) * ( DDR - PN ) ),Max( ( MDR - PN ),( DDR / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * Min( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( RCSe ,MLU ) - DS ) ) - ( MUC + RRSe ) ) ) ,Min( DS ,RRSe ) ) ) - ( DS + ( MUC - RCSe ) ) )", "obj1": 0.044, "obj2": 0.7631237816687859}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.512, "obj2": 0.3317954702460016}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - ( Min( Min( RRSe ,( Max( RRSe,MUC ) * ( DS / MUC ) ) ) ,MUC ) + ( RCSe - RMSe ) ) ) ) )", "obj1": 0.49, "obj2": 0.35698355662671344}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "Min( FirstVNF_Mem ,Min( PN ,MDR ) )", "choosing": "( ( DS / DS ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) )", "obj1": 0.294, "obj2": 0.5023808966953971}, {"determining": "( ( RRS - RRS ) / Max( ( ( PN / FirstVNF_Mem ) * ( AMS - ACS ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - ( MUM * ( RMSe - ( MUR - MUR ) ) ) ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MUM ) ) ) )", "obj1": 0.19, "obj2": 0.5861423627777919}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / Min( ( ( AMS - Const ) - ( MRS / Const ) ) ,RRS ) )", "choosing": "( ( MUC * Max( MUR,MLU ) ) * ( ( MUR - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 0.278, "obj2": 0.5176485710365154}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.696, "obj2": 0.21136228388904318}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "( ( RRS - Max( ACS,MDR ) ) / Min( ACS ,RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( RRSe * RRSe ) )", "obj1": 0.364, "obj2": 0.47220517892104596}, {"determining": "Min( ( FirstVNF_RAM * RRS ) ,( RRS / MDR ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.56, "obj2": 0.30199073160573153}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - CRS ) - PN ) )", "choosing": "( ( Min( Max( DS,( MLU - ( MUC * MUM ) ) ) ,MUM ) * ( ( MLU * ( RMSe / RCSe ) ) - MLU ) ) - ( MLU + Max( Max( CS,MLU ),MUR ) ) )", "obj1": 0.13, "obj2": 0.665247494723229}, {"determining": "( ( ( ( ARS * DDR ) * ( FirstVNF_RAM + MDR ) ) * ( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM + RRSe ) ,Max( MUM,( RMSe * ( Min( CS ,Min( CS ,RMSe ) ) + Max( RMSe,MUC ) ) ) ) ) + ( RRSe + MUM ) ) * ( Max( CS,MUR ) / ( RRSe * RRSe ) ) )", "obj1": 0.97, "obj2": 0.04613833645170588}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "( ( MRS * ( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ) / ( RRS - CRS ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) - MUC ) ) - ( RMSe / CS ) )", "obj1": 0.988, "obj2": 0.0069040853256462555}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "Min( Min( DDR ,( RRS - Min( PN ,( MDR / ( Min( ( DDR / BR ) ,FirstVNF_Mem ) - Const ) ) ) ) ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ),MUC ) + ( CS - DS ) ) )", "obj1": 0.486, "obj2": 0.365482640967631}, {"determining": "Min( ( ARS - Min( PN ,( ( MDR + CRS ) / DDR ) ) ) ,( MDR * AMS ) )", "choosing": "( Min( DS ,DS ) - ( MLU + ( ( DS - ( ( MUC * MUM ) - MLU ) ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.158, "obj2": 0.6346015184791194}, {"determining": "Min( Min( Min( ACS ,RRS ) ,FirstVNF_CPU_Server ) ,( ( ( BR * MRS ) + BR ) + Min( FirstVNF_Mem_Server ,( MRS + Max( RRS,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ) ) ) ) )", "choosing": "( ( MUM / ( Max( ( CS * MLU ),( MUM + Min( Min( RMSe ,Max( MLU,MUC ) ) ,Min( Min( MLU ,MLU ) ,MUR ) ) ) ) - MUR ) ) - Max( CS,MUR ) )", "obj1": 0.14, "obj2": 0.6631022346027788}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM * Max( MRS,( ARS / FirstVNF_Mem ) ) ) + ( CRS / ( CRS + ( ( BR / PN ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,( ( FirstVNF_CPU - ACS ) * AMS ) ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( ( MUM + MLU ) - ( Max( MUM,( MUC / RMSe ) ) / CS ) ),( DS / RRSe ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) ),( DS / RRSe ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.378, "obj2": 0.4709500233952247}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.546, "obj2": 0.31451346808346425}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( CRS / MRS ) ) ) )", "choosing": "( Max( RMSe,( RRSe * RMSe ) ) - ( Min( ( MUM + RRSe ) ,Max( RCSe,MUM ) ) * ( RRSe + MUM ) ) )", "obj1": 0.68, "obj2": 0.23684045855933458}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / Min( ARS ,( FirstVNF_CPU_Server / ( CRS / ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( RMSe - RRSe ),RCSe ),MUM ),RMSe ) - ( ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) - RCSe ) )", "obj1": 0.71, "obj2": 0.20192854513554315}], "17": [{"determining": "Min( Max( ( ( Max( ( ( FirstVNF_CPU_Server + ( BR + FirstVNF_Mem ) ) / FirstVNF_Mem ),( ARS - Min( CRS ,BR ) ) ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - RRS ) ),Max( ( FirstVNF_Mem - FirstVNF_CPU ),AMS ) ) ,( ( Min( CRS ,( ( ACS - FirstVNF_Mem_Server ) - CRS ) ) * RRS ) - ARS ) )", "choosing": "( ( ( MUM * ( ( RMSe + Max( Max( DS,MUR ),Max( DS,( RRSe - MUR ) ) ) ) * MUM ) ) - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( CS - RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( Max( ( ( FirstVNF_CPU_Server + ( BR + RRS ) ) / FirstVNF_Mem ),( ARS - Min( CRS ,BR ) ) ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - RRS ) ),Max( BR,AMS ) ) ,( ( Min( CRS ,( ( ACS - FirstVNF_Mem_Server ) - CRS ) ) * RRS ) - ARS ) )", "choosing": "( ( ( MUM * ( ( RMSe + Max( Max( DS,MUR ),Max( DS,( RRSe - MUR ) ) ) ) * MUM ) ) - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( CS - RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( MDR * ( Const + ( MDR + FirstVNF_Mem ) ) ) * ( DDR - PN ) ),Max( ( MDR - PN ),( DDR / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * Min( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( RCSe ,MLU ) - DS ) ) - ( MUC + RRSe ) ) ) ,Min( DS ,RRSe ) ) ) - ( DS + ( MUC - RCSe ) ) )", "obj1": 0.044, "obj2": 0.7631237816687859}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.512, "obj2": 0.3317954702460016}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) ) )", "choosing": "( ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.614, "obj2": 0.27944224934361295}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - ( Min( Min( RRSe ,( Max( RRSe,MUC ) * ( DS / MUC ) ) ) ,MUC ) + ( RCSe - RMSe ) ) ) ) )", "obj1": 0.49, "obj2": 0.35698355662671344}, {"determining": "Min( FirstVNF_Mem ,Min( PN ,MDR ) )", "choosing": "( ( DS / DS ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) )", "obj1": 0.294, "obj2": 0.5023808966953971}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "( ( ( ( AMS - Const ) - ( MRS / Const ) ) - FirstVNF_Mem_Server ) / Min( ( ( AMS - Const ) - ( MRS / Const ) ) ,RRS ) )", "choosing": "( ( MUC * Max( MUR,MLU ) ) * ( ( MUR - ( CS + ( MUC * Max( MUR,MLU ) ) ) ) * RRSe ) )", "obj1": 0.278, "obj2": 0.5176485710365154}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.696, "obj2": 0.21136228388904318}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - CRS ) - PN ) )", "choosing": "( ( Min( Max( DS,( MLU - ( MUC * MUM ) ) ) ,MUM ) * ( ( MLU * ( RMSe / RCSe ) ) - MLU ) ) - ( MLU + Max( Max( CS,MLU ),MUR ) ) )", "obj1": 0.13, "obj2": 0.665247494723229}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "( ( ( ( ARS * DDR ) * ( FirstVNF_RAM + MDR ) ) * ( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM + RRSe ) ,Max( MUM,( RMSe * ( Min( CS ,Min( CS ,RMSe ) ) + Max( RMSe,MUC ) ) ) ) ) + ( RRSe + MUM ) ) * ( Max( CS,MUR ) / ( RRSe * RRSe ) ) )", "obj1": 0.97, "obj2": 0.04613833645170588}, {"determining": "( ( RRS - Max( ACS,MDR ) ) / Min( ACS ,RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( RRSe * RRSe ) )", "obj1": 0.364, "obj2": 0.47220517892104596}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) + ( PN * ( FirstVNF_CPU + Const ) ) )", "choosing": "( ( RRSe - CS ) / ( RCSe * DS ) )", "obj1": 0.144, "obj2": 0.6362333102602562}, {"determining": "Min( Min( DDR ,( RRS - Min( PN ,( MDR / ( Min( ( DDR / BR ) ,FirstVNF_Mem ) - Const ) ) ) ) ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ),MUC ) + ( CS - DS ) ) )", "obj1": 0.486, "obj2": 0.365482640967631}, {"determining": "Min( ( ARS - Min( PN ,( ( MDR + CRS ) / DDR ) ) ) ,( MDR * AMS ) )", "choosing": "( Min( DS ,DS ) - ( MLU + ( ( DS - ( ( MUC * MUM ) - MLU ) ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.158, "obj2": 0.6346015184791194}, {"determining": "Min( Min( Min( ACS ,RRS ) ,FirstVNF_CPU_Server ) ,( ( ( BR * MRS ) + BR ) + Min( FirstVNF_Mem_Server ,( MRS + Max( RRS,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ) ) ) ) )", "choosing": "( ( MUM / ( Max( ( CS * MLU ),( MUM + Min( Min( RMSe ,Max( MLU,MUC ) ) ,Min( Min( MLU ,MLU ) ,MUR ) ) ) ) - MUR ) ) - Max( CS,MUR ) )", "obj1": 0.14, "obj2": 0.6631022346027788}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.578, "obj2": 0.2910085463822436}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "Min( Min( DDR ,DDR ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,Max( RRSe,( MUR - RMSe ) ) ) + ( CS - DS ) ) )", "obj1": 0.4, "obj2": 0.42873372865815673}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ,FirstVNF_CPU_Server ) ,( ( ( BR * MRS ) + BR ) + Min( FirstVNF_Mem_Server ,( MRS + Max( RRS,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ) ) ) ) )", "choosing": "( ( MUM / ( Max( ( CS * MLU ),( MUM + Min( Min( RMSe ,Max( MLU,MUC ) ) ,Min( Min( MLU ,MLU ) ,MUR ) ) ) ) - MUR ) ) - Max( CS,MUR ) )", "obj1": 0.368, "obj2": 0.4654070927574035}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( CRS / MRS ) ) ) )", "choosing": "( Max( RMSe,( RRSe * RMSe ) ) - ( Min( ( MUM + RRSe ) ,Max( RCSe,MUM ) ) * ( RRSe + MUM ) ) )", "obj1": 0.68, "obj2": 0.23684045855933458}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / Min( ARS ,( FirstVNF_CPU_Server / ( CRS / ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( RMSe - RRSe ),RCSe ),MUM ),RMSe ) - ( ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) - RCSe ) )", "obj1": 0.71, "obj2": 0.20192854513554315}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( ( ARS / ( FirstVNF_Mem * RRS ) ) ,( Max( ( BR + ( ( FirstVNF_RAM * DDR ) * DDR ) ),Min( DDR ,ACS ) ) / ( BR * ( ( Const / MRS ) - Min( BR ,CRS ) ) ) ) )", "choosing": "( ( ( Max( ( ( RRSe - CS ) - ( Min( RRSe ,MUM ) * ( DS * RRSe ) ) ),Min( ( CS - ( RCSe * CS ) ) ,( RMSe + DS ) ) ) / ( Min( Max( RRSe,DS ) ,RRSe ) - DS ) ) + ( DS - Max( MUR,DS ) ) ) - Min( ( MUR + ( Max( ( ( RRSe - CS ) - ( Min( RRSe ,MUM ) * ( DS * RRSe ) ) ),Min( ( CS - ( RCSe * CS ) ) ,( RMSe + DS ) ) ) / ( Min( Max( RRSe,DS ) ,RRSe ) - DS ) ) ) ,DS ) )", "obj1": 0.202, "obj2": 0.5840470282884467}], "18": [{"determining": "Min( Max( ( ( Max( ( ( FirstVNF_CPU_Server + ( BR + FirstVNF_Mem ) ) / FirstVNF_Mem ),( ARS - Min( CRS ,BR ) ) ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - RRS ) ),Max( ( FirstVNF_Mem - FirstVNF_CPU ),AMS ) ) ,( ( Min( CRS ,( ( ACS - FirstVNF_Mem_Server ) - CRS ) ) * RRS ) - ARS ) )", "choosing": "( ( RRSe - Min( ( MUM - CS ) ,Min( ( ( ( ( RMSe + RCSe ) / RCSe ) - DS ) / DS ) ,DS ) ) ) - Min( CS ,( MUC * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( Max( ( ( FirstVNF_CPU_Server + ( BR + FirstVNF_Mem ) ) / FirstVNF_Mem ),( ARS - Min( CRS ,BR ) ) ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - RRS ) ),Max( ( FirstVNF_Mem - FirstVNF_CPU ),AMS ) ) ,( ( Min( CRS ,( ( ACS - FirstVNF_Mem_Server ) - CRS ) ) * RRS ) - ARS ) )", "choosing": "( ( ( MUM * ( ( RMSe + Max( Max( DS,MUR ),Max( DS,( RRSe - MUR ) ) ) ) * MUM ) ) - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( CS - RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( MDR * ( Const + ( MDR + FirstVNF_Mem ) ) ) * ( DDR - PN ) ),Max( ( MDR - PN ),( DDR / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * Min( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( RCSe ,MLU ) - DS ) ) - ( MUC + RRSe ) ) ) ,Min( DS ,RRSe ) ) ) - ( DS + ( MUC - RCSe ) ) )", "obj1": 0.044, "obj2": 0.7631237816687859}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.512, "obj2": 0.3317954702460016}, {"determining": "( Max( MRS,( ( ACS - MRS ) / ( DDR * PN ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - CS )", "obj1": 0.142, "obj2": 0.6303570176940193}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.456, "obj2": 0.3987013095161469}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ACS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( DS / ( CS / MUC ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.562, "obj2": 0.3051305874109301}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "Min( FirstVNF_Mem ,Min( PN ,MDR ) )", "choosing": "( ( DS / DS ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) )", "obj1": 0.294, "obj2": 0.5023808966953971}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - ( Min( Min( RRSe ,( Max( RRSe,MUC ) * ( DS / MUC ) ) ) ,MUC ) + ( RCSe - RMSe ) ) ) ) )", "obj1": 0.49, "obj2": 0.35698355662671344}, {"determining": "Min( ( ARS / ( FirstVNF_Mem * RRS ) ) ,( Max( ( BR + ( ( FirstVNF_RAM * DDR ) * DDR ) ),Min( DDR ,ACS ) ) / ( BR * ( ( Const / MRS ) - Min( BR ,CRS ) ) ) ) )", "choosing": "( ( ( Max( ( ( RRSe - CS ) - ( Min( RRSe ,MUM ) * ( DS * RRSe ) ) ),Min( ( CS - ( RCSe * CS ) ) ,( RMSe + DS ) ) ) / ( Min( Max( RRSe,DS ) ,RRSe ) - DS ) ) + ( DS - Max( MUR,DS ) ) ) - Min( ( MUR + ( Max( ( ( RRSe - CS ) - ( Min( RRSe ,MUM ) * ( DS * RRSe ) ) ),Min( ( CS - ( RCSe * CS ) ) ,( RMSe + DS ) ) ) / ( Min( Max( RRSe,DS ) ,RRSe ) - DS ) ) ) ,DS ) )", "obj1": 0.202, "obj2": 0.5840470282884467}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) ) )", "choosing": "( ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.614, "obj2": 0.27944224934361295}, {"determining": "Max( ( ( MDR * Max( DDR,FirstVNF_CPU_Server ) ) - FirstVNF_CPU ),( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "( ( RRSe + Min( MLU ,( RRSe / Min( ( MUR - Min( RMSe ,Min( DS ,RMSe ) ) ) ,MUR ) ) ) ) - Min( ( Max( RCSe,RRSe ) * ( Min( Min( MLU ,MUR ) ,( ( RCSe + CS ) - Max( MUM,MUC ) ) ) * MUM ) ) ,Min( RRSe ,RMSe ) ) )", "obj1": 0.274, "obj2": 0.5166329803964922}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.696, "obj2": 0.21136228388904318}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - CRS ) - PN ) )", "choosing": "( ( Min( Max( DS,( MLU - ( MUC * MUM ) ) ) ,MUM ) * ( ( MLU * ( RMSe / RCSe ) ) - MLU ) ) - ( MLU + Max( Max( CS,MLU ),MUR ) ) )", "obj1": 0.13, "obj2": 0.665247494723229}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "( ( ( ( ARS * DDR ) * ( FirstVNF_RAM + MDR ) ) * ( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM + RRSe ) ,Max( MUM,( RMSe * ( Min( CS ,Min( CS ,RMSe ) ) + Max( RMSe,MUC ) ) ) ) ) + ( RRSe + MUM ) ) * ( Max( CS,MUR ) / ( RRSe * RRSe ) ) )", "obj1": 0.97, "obj2": 0.04613833645170588}, {"determining": "Min( ( Min( FirstVNF_CPU ,Const ) - Const ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) + ( ( ARS / ( DDR / CRS ) ) * MRS ) ) - FirstVNF_CPU ) - Min( AMS ,( ARS * ( ARS - ARS ) ) ) ) )", "choosing": "( ( ( ( ( RCSe + MUM ) - MUM ) - RCSe ) + ( ( RMSe - ( MUM + RMSe ) ) - Min( ( ( ( RRSe - ( CS + RCSe ) ) * RMSe ) / Min( Min( ( RMSe * CS ) ,MUM ) ,( ( RRSe / MUC ) + ( RMSe * MUR ) ) ) ) ,( ( ( RCSe + ( DS - CS ) ) + CS ) + ( RRSe * RMSe ) ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.982, "obj2": 0.013481989191931434}, {"determining": "Min( Min( Min( ACS ,RRS ) ,FirstVNF_CPU_Server ) ,( ( ( BR * MRS ) + BR ) + Min( FirstVNF_Mem_Server ,( MRS + Max( RRS,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ) ) ) ) )", "choosing": "( ( MUM / ( Max( ( CS * MLU ),( MUM + Min( Min( RMSe ,Max( MLU,MUC ) ) ,Min( Min( MLU ,MLU ) ,MUR ) ) ) ) - MUR ) ) - Max( CS,MUR ) )", "obj1": 0.14, "obj2": 0.6631022346027788}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "Min( Min( DDR ,( RRS - Min( PN ,( MDR / ( Min( ( DDR / BR ) ,FirstVNF_Mem ) - Const ) ) ) ) ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ),MUC ) + ( CS - DS ) ) )", "obj1": 0.486, "obj2": 0.365482640967631}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + MUM ) )", "obj1": 0.592, "obj2": 0.29085370514085196}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "Min( Min( DDR ,DDR ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,Max( RRSe,( MUR - RMSe ) ) ) + ( CS - DS ) ) )", "obj1": 0.4, "obj2": 0.42873372865815673}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ,FirstVNF_CPU_Server ) ,( ( ( BR * MRS ) + BR ) + Min( FirstVNF_Mem_Server ,( MRS + Max( RRS,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ) ) ) ) )", "choosing": "( ( MUM / ( Max( ( CS * MLU ),( MUM + Min( Min( RMSe ,Max( MLU,MUC ) ) ,Min( Min( MLU ,MLU ) ,MUR ) ) ) ) - MUR ) ) - Max( CS,MUR ) )", "obj1": 0.368, "obj2": 0.4654070927574035}, {"determining": "Min( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU ),AMS ) * CRS ) + PN ) ,( ( ( AMS * Min( ( ( ( BR - AMS ) * Max( FirstVNF_RAM_Server,AMS ) ) - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) * CRS ) + AMS ) )", "choosing": "( ( ( ( RMSe + RCSe ) / RCSe ) - ( Max( MUM,MUM ) + MUM ) ) - ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( CS - RRSe ) - Max( MLU,RRSe ) ) ) - MUC ) ) )", "obj1": 0.358, "obj2": 0.4857596485494837}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / Min( ARS ,( FirstVNF_CPU_Server / ( CRS / ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( RMSe - RRSe ),RCSe ),MUM ),RMSe ) - ( ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) - RCSe ) )", "obj1": 0.71, "obj2": 0.20192854513554315}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}], "19": [{"determining": "Min( Max( ( ( ( FirstVNF_RAM * Max( MRS,PN ) ) + ( CRS / ( CRS + ( ( BR / PN ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,( ( FirstVNF_CPU - ACS ) * AMS ) ) ) ,( BR - AMS ) )", "choosing": "( Max( ( ( MUM + ( RRSe - MUR ) ) - ( Max( MUM,( MUC / RMSe ) ) / CS ) ),( DS / RRSe ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( Max( ( ( FirstVNF_CPU_Server + ( BR + FirstVNF_Mem ) ) / FirstVNF_Mem ),( ARS - Min( CRS ,BR ) ) ) + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - RRS ) ),Max( ( FirstVNF_Mem - FirstVNF_CPU ),AMS ) ) ,( ( Min( CRS ,( ( ACS - FirstVNF_Mem_Server ) - CRS ) ) * RRS ) - ARS ) )", "choosing": "( ( RRSe - Min( ( MUM - CS ) ,Min( ( ( ( ( RMSe + RCSe ) / RCSe ) - DS ) / DS ) ,DS ) ) ) - Min( CS ,( MUC * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( MDR * ( Const + ( MDR + FirstVNF_Mem ) ) ) * ( DDR - PN ) ),Max( ( MDR - PN ),( DDR / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * Min( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( RCSe ,MLU ) - DS ) ) - ( MUC + RRSe ) ) ) ,Min( DS ,RRSe ) ) ) - ( DS + ( MUC - RCSe ) ) )", "obj1": 0.044, "obj2": 0.7631237816687859}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Max( MRS,( ( ACS - MRS ) / ( DDR * PN ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - CS )", "obj1": 0.142, "obj2": 0.6303570176940193}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,Min( ( ARS * AMS ) ,ARS ) )", "choosing": "( ( Min( Min( MUM ,( MUM + ( MUC + RCSe ) ) ) ,( Max( DS,( ( MUR / MUC ) / MUC ) ) * ( RRSe + ( RMSe * ( MUM * CS ) ) ) ) ) + ( ( Max( ( MUC * DS ),Max( RRSe,( MUR + MUR ) ) ) - ( RMSe * ( MUM * CS ) ) ) - MUC ) ) - ( DS + DS ) )", "obj1": 0.102, "obj2": 0.6593506609559054}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / MUC ) / ( MLU + MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.664, "obj2": 0.2519163516332703}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.512, "obj2": 0.3317954702460016}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_Mem + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( RMSe * MUC ) )", "obj1": 0.422, "obj2": 0.3941059733959131}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + MUM ) )", "obj1": 0.592, "obj2": 0.29085370514085196}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS - CS ) ,( CS * ( ( RCSe / ( ( Max( Max( DS,MUM ),( DS / RMSe ) ) / Max( ( RCSe + DS ),MUM ) ) / ( MUC * DS ) ) ) * CS ) ) )", "obj1": 0.686, "obj2": 0.23334618397373244}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ACS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( DS / ( CS / MUC ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.562, "obj2": 0.3051305874109301}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "Min( FirstVNF_Mem ,Min( PN ,MDR ) )", "choosing": "( ( DS / DS ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) )", "obj1": 0.294, "obj2": 0.5023808966953971}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - ( Min( Min( RRSe ,( Max( RRSe,MUC ) * ( DS / MUC ) ) ) ,MUC ) + ( RCSe - RMSe ) ) ) ) )", "obj1": 0.49, "obj2": 0.35698355662671344}, {"determining": "( Min( FirstVNF_Mem ,( Const * FirstVNF_CPU ) ) / Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( BR - RRS ) ) ,Min( DDR ,( Const / ( ( FirstVNF_Mem_Server * ARS ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) - ( ( ( RCSe - ( ( RMSe - RMSe ) * ( Min( ( RMSe * RRSe ) ,( MLU + RRSe ) ) / RMSe ) ) ) - ( ( RMSe - DS ) - MUM ) ) + MUC ) )", "obj1": 0.2, "obj2": 0.5809541872564633}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ,FirstVNF_CPU_Server ) ,( ( ( BR * MRS ) + BR ) + Min( FirstVNF_Mem_Server ,( MRS + Max( RRS,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ) ) ) ) )", "choosing": "( ( MUM / ( Max( ( CS * MLU ),( MUM + Min( Min( RMSe ,Max( MLU,MUC ) ) ,Min( Min( MLU ,MLU ) ,MUR ) ) ) ) - MUR ) ) - Max( CS,MUR ) )", "obj1": 0.368, "obj2": 0.4654070927574035}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) ) )", "choosing": "( ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.614, "obj2": 0.27944224934361295}, {"determining": "Max( ( ( MDR * Max( DDR,FirstVNF_CPU_Server ) ) - FirstVNF_CPU ),( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "( ( RRSe + Min( MLU ,( RRSe / Min( ( MUR - Min( RMSe ,Min( DS ,RMSe ) ) ) ,MUR ) ) ) ) - Min( ( Max( RCSe,RRSe ) * ( Min( Min( MLU ,MUR ) ,( ( RCSe + CS ) - Max( MUM,MUC ) ) ) * MUM ) ) ,Min( RRSe ,RMSe ) ) )", "obj1": 0.274, "obj2": 0.5166329803964922}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM - CS ) )", "obj1": 0.696, "obj2": 0.21136228388904318}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "( ( ( ( ARS * DDR ) * ( FirstVNF_RAM + MDR ) ) * ( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM + RRSe ) ,Max( MUM,( RMSe * ( Min( CS ,Min( CS ,RMSe ) ) + Max( RMSe,MUC ) ) ) ) ) + ( RRSe + MUM ) ) * ( Max( CS,MUR ) / ( RRSe * RRSe ) ) )", "obj1": 0.97, "obj2": 0.04613833645170588}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "Min( ( Min( FirstVNF_CPU ,Const ) - Const ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) + ( ( ARS / ( DDR / CRS ) ) * MRS ) ) - FirstVNF_CPU ) - Min( AMS ,( ARS * ( ARS - ARS ) ) ) ) )", "choosing": "( ( ( ( ( RCSe + MUM ) - MUM ) - RCSe ) + ( ( RMSe - ( MUM + RMSe ) ) - Min( ( ( ( RRSe - ( CS + RCSe ) ) * RMSe ) / Min( Min( ( RMSe * CS ) ,MUM ) ,( ( RRSe / MUC ) + ( RMSe * MUR ) ) ) ) ,( ( ( RCSe + ( DS - CS ) ) + CS ) + ( RRSe * RMSe ) ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.982, "obj2": 0.013481989191931434}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "( ( RRS - RRS ) / Min( ACS ,RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.529383713068537}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( MDR - Max( Max( Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) ),( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - Max( MLU,RRSe ) ) ) / MUC ) ) - ( ( ( DS + DS ) - ( MLU + MUC ) ) - RCSe ) )", "obj1": 0.974, "obj2": 0.024000061037325573}, {"determining": "Min( Min( DDR ,( RRS - Min( PN ,( MDR / ( Min( ( DDR / BR ) ,FirstVNF_Mem ) - Const ) ) ) ) ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ),MUC ) + ( CS - DS ) ) )", "obj1": 0.486, "obj2": 0.365482640967631}, {"determining": "Min( Min( DDR ,DDR ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,Max( RRSe,( MUR - RMSe ) ) ) + ( CS - DS ) ) )", "obj1": 0.4, "obj2": 0.42873372865815673}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / Min( ARS ,( FirstVNF_CPU_Server / ( CRS / ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( RMSe - RRSe ),RCSe ),MUM ),RMSe ) - ( ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) - RCSe ) )", "obj1": 0.71, "obj2": 0.20192854513554315}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_RAM_Server - CRS ) ,MDR ) - PN ) ),( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( ( MUC - RCSe ) - RCSe ) ) )", "obj1": 0.55, "obj2": 0.3197734874652802}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( Max( MRS,( ( FirstVNF_Mem + ARS ) / ( ACS - RRS ) ) ) * Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe * ( RCSe - Max( MUM,CS ) ) ) + ( RMSe / CS ) )", "obj1": 0.336, "obj2": 0.48657566759473553}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "( ( ( Max( FirstVNF_CPU,Const ) / BR ) * AMS ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( ( DS + DS ) - ( ( MLU - ( CS / ( ( Max( MUC,RRSe ) / DS ) - RRSe ) ) ) + ( CS - RMSe ) ) )", "obj1": 0.362, "obj2": 0.48496802818764234}], "20": [{"determining": "Min( Max( ( ( ( FirstVNF_RAM * Max( MRS,PN ) ) + ( CRS / ( CRS + ( ( BR / PN ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( ( FirstVNF_Mem_Server - ( CRS / Const ) ),( ( FirstVNF_CPU - ACS ) * AMS ) ) ) ,( CRS + ( FirstVNF_CPU - ( Max( ( ARS / MRS ),ARS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MUM + MLU ) - Max( MUM,RCSe ) ),( DS / RRSe ) ) - ( DS + ( Max( MUM,MUM ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM * Max( MRS,PN ) ) + ( CRS / ( CRS + ( ( BR / PN ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,( ( FirstVNF_CPU - ACS ) * AMS ) ) ) ,( BR - AMS ) )", "choosing": "( Max( ( ( MUM + ( RRSe - MUR ) ) - ( Max( MUM,( MUC / RMSe ) ) / CS ) ),( DS / RRSe ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( MDR * ( Const + ( MDR + FirstVNF_Mem ) ) ) * ( DDR - PN ) ),Max( ( MDR - PN ),( DDR / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * Min( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( RCSe ,MLU ) - DS ) ) - ( MUC + RRSe ) ) ) ,Min( DS ,RRSe ) ) ) - ( DS + ( MUC - RCSe ) ) )", "obj1": 0.044, "obj2": 0.7631237816687859}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Max( MRS,( ( ACS - MRS ) / ( DDR * PN ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - CS )", "obj1": 0.142, "obj2": 0.6303570176940193}, {"determining": "Min( Max( ( Min( ( MRS / ( ( FirstVNF_Mem - MDR ) * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( Min( Min( ARS ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUM + Max( MUC,MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.648, "obj2": 0.236414757640384}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,Min( ( ARS * AMS ) ,ARS ) )", "choosing": "( ( Min( Min( MUM ,( MUM + ( MUC + RCSe ) ) ) ,( Max( DS,( ( MUR / MUC ) / MUC ) ) * ( RRSe + ( RMSe * ( MUM * CS ) ) ) ) ) + ( ( Max( ( MUC * DS ),Max( RRSe,( MUR + MUR ) ) ) - ( RMSe * ( MUM * CS ) ) ) - MUC ) ) - ( DS + DS ) )", "obj1": 0.102, "obj2": 0.6593506609559054}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ,FirstVNF_CPU_Server ) ,( ( ( BR * MRS ) + BR ) + Min( FirstVNF_Mem_Server ,( MRS + Max( RRS,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ) ) ) ) )", "choosing": "( ( MUM / ( Max( ( CS * MLU ),( MUM + Min( Min( RMSe ,Max( MLU,MUC ) ) ,Min( Min( MLU ,MLU ) ,MUR ) ) ) ) - MUR ) ) - Max( CS,MUR ) )", "obj1": 0.368, "obj2": 0.4654070927574035}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.512, "obj2": 0.3317954702460016}, {"determining": "( Min( FirstVNF_Mem ,( Const * FirstVNF_CPU ) ) / Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( BR - RRS ) ) ,Min( DDR ,( Const / Max( ( FirstVNF_Mem_Server - CRS ),FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) - ( ( ( RCSe - ( MLU * ( Min( ( RMSe * RRSe ) ,( MLU + RRSe ) ) / RMSe ) ) ) - ( ( ( ( ( RMSe * DS ) * DS ) / ( ( CS + MUC ) - RMSe ) ) - ( ( ( RMSe * MLU ) - RCSe ) - MLU ) ) + Min( ( ( Min( RCSe ,RMSe ) * RRSe ) - RCSe ) ,RCSe ) ) ) + MUC ) )", "obj1": 0.326, "obj2": 0.48265591116837536}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "( Min( ( AMS + ( FirstVNF_CPU_Server * CRS ) ) ,AMS ) / ( ( ( FirstVNF_RAM_Server / Min( ( AMS * ( Max( CRS,ACS ) / MDR ) ) ,Const ) ) - ( MDR / BR ) ) - RRS ) )", "choosing": "( ( CS - DS ) + ( MUM / ( MLU - Max( ( MUM * ( MUM - RCSe ) ),MUM ) ) ) )", "obj1": 0.972, "obj2": 0.012802371572328025}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_Mem + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( RMSe * MUC ) )", "obj1": 0.422, "obj2": 0.3941059733959131}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + MUM ) )", "obj1": 0.592, "obj2": 0.29085370514085196}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ACS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( DS / ( CS / MUC ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.562, "obj2": 0.3051305874109301}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "( ( ( ( ARS * DDR ) * ( FirstVNF_RAM + MDR ) ) * ( AMS * ( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM + RRSe ) ,Max( MUM,( RMSe * ( Min( CS ,Min( CS ,RMSe ) ) + Max( RMSe,MUC ) ) ) ) ) + ( RRSe + MUM ) ) * ( Max( CS,MUR ) / ( RRSe * RRSe ) ) )", "obj1": 0.97, "obj2": 0.04613833645170588}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}, {"determining": "Min( FirstVNF_Mem ,Min( PN ,MDR ) )", "choosing": "( ( DS / DS ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) )", "obj1": 0.294, "obj2": 0.5023808966953971}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - ( Min( Min( RRSe ,( Max( RRSe,MUC ) * ( DS / MUC ) ) ) ,MUC ) + ( RCSe - RMSe ) ) ) ) )", "obj1": 0.49, "obj2": 0.35698355662671344}, {"determining": "( Min( FirstVNF_Mem ,( Const * FirstVNF_CPU ) ) / Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( BR - RRS ) ) ,Min( DDR ,( Const / ( ( FirstVNF_Mem_Server * ARS ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) - ( ( ( RCSe - ( ( RMSe - RMSe ) * ( Min( ( RMSe * RRSe ) ,( MLU + RRSe ) ) / RMSe ) ) ) - ( ( RMSe - DS ) - MUM ) ) + MUC ) )", "obj1": 0.2, "obj2": 0.5809541872564633}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / Min( ARS ,( FirstVNF_CPU_Server / ( CRS / ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( RMSe - RRSe ),RCSe ),MUM ),RMSe ) - ( ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) - RCSe ) )", "obj1": 0.71, "obj2": 0.20192854513554315}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) ) )", "choosing": "( ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.614, "obj2": 0.27944224934361295}, {"determining": "Max( ( ( MDR * Max( DDR,FirstVNF_CPU_Server ) ) - FirstVNF_CPU ),( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "( ( RRSe + Min( MLU ,( RRSe / Min( ( MUR - Min( RMSe ,Min( DS ,RMSe ) ) ) ,MUR ) ) ) ) - Min( ( Max( RCSe,RRSe ) * ( Min( Min( MLU ,MUR ) ,( ( RCSe + CS ) - Max( MUM,MUC ) ) ) * MUM ) ) ,Min( RRSe ,RMSe ) ) )", "obj1": 0.274, "obj2": 0.5166329803964922}, {"determining": "Min( Max( ( Min( ( RRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( Min( Min( ARS ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( Max( MUC,RMSe ) + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 0.672, "obj2": 0.21291721391333804}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( FirstVNF_RAM - AMS ) ,( ( FirstVNF_RAM + AMS ) * MDR ) )", "choosing": "( DS - Min( RRSe ,( ( MUR + Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) * ( MLU - RCSe ) ) ) )", "obj1": 0.948, "obj2": 0.05086183225895067}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,( Const * ( ACS - FirstVNF_Mem_Server ) ) ) - ( ( MRS - ( FirstVNF_RAM / RRS ) ) - ARS ) ),( AMS * Const ) ) ,( ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_Mem + RRS ) ) / ( Max( ( FirstVNF_Mem + ( FirstVNF_CPU - FirstVNF_Mem ) ),CRS ) + MDR ) ) )", "choosing": "( ( CS / ( ( MUC * Min( ( Min( RCSe ,MUM ) - Min( MUR ,MLU ) ) ,( ( RRSe + RMSe ) / Min( MLU ,MUC ) ) ) ) - MUR ) ) - ( MLU * CS ) )", "obj1": 0.256, "obj2": 0.5231343023972789}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( Min( DDR ,( RRS - Min( PN ,( MDR / ( Min( ( DDR / BR ) ,FirstVNF_Mem ) - Const ) ) ) ) ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ),MUC ) + ( CS - DS ) ) )", "obj1": 0.486, "obj2": 0.365482640967631}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "Min( Min( DDR ,DDR ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,Max( RRSe,( MUR - RMSe ) ) ) + ( CS - DS ) ) )", "obj1": 0.4, "obj2": 0.42873372865815673}, {"determining": "Min( ( ARS / ( FirstVNF_Mem * RRS ) ) ,( Max( ( BR + ( ( FirstVNF_RAM * AMS ) * DDR ) ),Min( DDR ,ACS ) ) / ( BR * ( ( ARS / ( FirstVNF_Mem * RRS ) ) - Min( BR ,CRS ) ) ) ) )", "choosing": "( ( RMSe + ( ( Max( ( ( RRSe - CS ) - ( Min( RRSe ,MUM ) * ( DS * RRSe ) ) ),Min( ( CS - ( RCSe * CS ) ) ,( RMSe + DS ) ) ) / ( Min( Max( RRSe,DS ) ,RRSe ) - DS ) ) - Max( MUR,DS ) ) ) - Min( ( MUR + ( Max( ( ( RRSe - CS ) - ( Min( RRSe ,MUM ) * ( DS * RRSe ) ) ),Min( ( CS - ( RCSe * CS ) ) ,( RMSe + DS ) ) ) / ( Min( Max( RRSe,DS ) ,RRSe ) - DS ) ) ) ,DS ) )", "obj1": 0.164, "obj2": 0.6140397558941175}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_RAM_Server - CRS ) ,MDR ) - PN ) ),( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( ( MUC - RCSe ) - RCSe ) ) )", "obj1": 0.55, "obj2": 0.3197734874652802}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( Min( Min( ARS ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUM + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 0.674, "obj2": 0.20986006603350194}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM * Max( MRS,PN ) ) + ( CRS / ( CRS + ( ( FirstVNF_CPU / PN ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,( ( FirstVNF_CPU - ACS ) * AMS ) ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( MUM + MLU ) - ( Max( MUM,( MUC / RMSe ) ) / CS ) ),( DS / RRSe ) ) - ( ( MUM + MLU ) - ( Max( MUM,( MUC / RMSe ) ) / CS ) ) )", "obj1": 0.388, "obj2": 0.4566273089346593}], "21": [{"determining": "Min( Max( ( ( ( FirstVNF_RAM * Max( MRS,PN ) ) + ( CRS / ( CRS + ( ( BR / PN ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( ( FirstVNF_Mem_Server - ( CRS / Const ) ),( ( FirstVNF_CPU - ACS ) * AMS ) ) ) ,( CRS + ( FirstVNF_CPU - ( Max( ( ARS / MRS ),ARS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MUM + MLU ) - Max( MUM,RCSe ) ),( DS / RRSe ) ) - ( DS + ( Max( MUM,MUM ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM * Max( MRS,PN ) ) + ( CRS / ( CRS + ( ( BR / PN ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( ( FirstVNF_Mem_Server - ( CRS / Const ) ),( ( FirstVNF_CPU - ACS ) * AMS ) ) ) ,( CRS + ( FirstVNF_CPU - ( Max( ( ARS / MRS ),ARS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MUM + MLU ) - Max( MUM,RCSe ) ),( DS / RRSe ) ) - ( DS + ( Max( MUM,MUM ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( MDR * ( Const + ( MDR + FirstVNF_Mem ) ) ) * ( DDR - PN ) ),Max( ( MDR - PN ),( DDR / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * Min( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( RCSe ,MLU ) - DS ) ) - ( MUC + RRSe ) ) ) ,Min( DS ,RRSe ) ) ) - ( DS + ( MUC - RCSe ) ) )", "obj1": 0.044, "obj2": 0.7631237816687859}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Max( MRS,( ( ACS - MRS ) / ( DDR * PN ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - CS )", "obj1": 0.142, "obj2": 0.6303570176940193}, {"determining": "( Min( ( AMS + ( FirstVNF_CPU_Server * CRS ) ) ,AMS ) / ( ( ( FirstVNF_RAM_Server / Min( ( AMS * ( Max( CRS,ACS ) / MDR ) ) ,Const ) ) - ( MDR / BR ) ) - RRS ) )", "choosing": "( ( CS - DS ) + ( MUM / ( MLU - Max( ( MUM * ( MUM - RCSe ) ),MUM ) ) ) )", "obj1": 0.972, "obj2": 0.012802371572328025}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,Min( ( ARS * AMS ) ,ARS ) )", "choosing": "( ( Min( Min( MUM ,( MUM + ( MUC + RCSe ) ) ) ,( Max( DS,( ( MUR / MUC ) / MUC ) ) * ( RRSe + ( RMSe * ( MUM * CS ) ) ) ) ) + ( ( Max( ( MUC * DS ),Max( RRSe,( MUR + MUR ) ) ) - ( RMSe * ( MUM * CS ) ) ) - MUC ) ) - ( DS + DS ) )", "obj1": 0.102, "obj2": 0.6593506609559054}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( ( Min( ( DDR / Min( Const ,Max( ( AMS + FirstVNF_CPU_Server ),( PN - MDR ) ) ) ) ,FirstVNF_Mem ) - Const ) ,( Min( ( RRS / DDR ) ,MRS ) + ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( Max( MUM,Max( MLU,MUM ) ) * MUC ) - ( ( CS - DS ) + ( RRSe / MLU ) ) )", "obj1": 0.946, "obj2": 0.04371293785910977}, {"determining": "Min( Max( ( Min( ( MRS / ( ( FirstVNF_Mem - MDR ) * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( Min( Min( ARS ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUM + Max( MUC,MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.648, "obj2": 0.236414757640384}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.512, "obj2": 0.3317954702460016}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_Mem + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( RMSe * MUC ) )", "obj1": 0.422, "obj2": 0.3941059733959131}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + MUM ) )", "obj1": 0.592, "obj2": 0.29085370514085196}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "( Min( FirstVNF_Mem ,( Const * FirstVNF_CPU ) ) / Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( BR - RRS ) ) ,Min( DDR ,( Const / Max( ( FirstVNF_Mem_Server - CRS ),FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) - ( ( ( RCSe - ( MLU * ( Min( ( RMSe * RRSe ) ,( MLU + RRSe ) ) / RMSe ) ) ) - ( ( ( ( ( RMSe * DS ) * DS ) / ( ( CS + MUC ) - RMSe ) ) - ( ( ( RMSe * MLU ) - RCSe ) - MLU ) ) + Min( ( ( Min( RCSe ,RMSe ) * RRSe ) - RCSe ) ,RCSe ) ) ) + MUC ) )", "obj1": 0.326, "obj2": 0.48265591116837536}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ACS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( DS / ( CS / MUC ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.562, "obj2": 0.3051305874109301}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "Min( FirstVNF_Mem ,Min( PN ,MDR ) )", "choosing": "( ( DS / DS ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) )", "obj1": 0.294, "obj2": 0.5023808966953971}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - ( Min( Min( RRSe ,( Max( RRSe,MUC ) * ( DS / MUC ) ) ) ,MUC ) + ( RCSe - RMSe ) ) ) ) )", "obj1": 0.49, "obj2": 0.35698355662671344}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "( Min( FirstVNF_Mem ,( Const * FirstVNF_CPU ) ) / Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( BR - RRS ) ) ,Min( DDR ,( Const / ( ( FirstVNF_Mem_Server * ARS ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) - ( ( ( RCSe - ( ( RMSe - RMSe ) * ( Min( ( RMSe * RRSe ) ,( MLU + RRSe ) ) / RMSe ) ) ) - ( ( RMSe - DS ) - MUM ) ) + MUC ) )", "obj1": 0.2, "obj2": 0.5809541872564633}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( Min( FirstVNF_RAM ,MDR ) / Min( ARS ,( FirstVNF_CPU_Server / ( CRS / ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( Max( Max( Max( ( RMSe - RRSe ),RCSe ),MUM ),RMSe ) - ( ( Min( CS ,Min( CS ,RMSe ) ) + RCSe ) - RCSe ) )", "obj1": 0.71, "obj2": 0.20192854513554315}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) ) )", "choosing": "( ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.614, "obj2": 0.27944224934361295}, {"determining": "Max( ( ( MDR * Max( DDR,FirstVNF_CPU_Server ) ) - FirstVNF_CPU ),( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "( ( RRSe + Min( MLU ,( RRSe / Min( ( MUR - Min( RMSe ,Min( DS ,RMSe ) ) ) ,MUR ) ) ) ) - Min( ( Max( RCSe,RRSe ) * ( Min( Min( MLU ,MUR ) ,( ( RCSe + CS ) - Max( MUM,MUC ) ) ) * MUM ) ) ,Min( RRSe ,RMSe ) ) )", "obj1": 0.274, "obj2": 0.5166329803964922}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( Min( Min( ARS ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Max( ( ( MUM + MLU ) - Max( MUM,RCSe ) ),( DS / RRSe ) ) - ( DS + ( Max( MUM,MUM ) + RCSe ) ) )", "obj1": 0.358, "obj2": 0.4658328824963708}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,( Const * ( ACS - FirstVNF_Mem_Server ) ) ) - ( ( MRS - ( FirstVNF_RAM / RRS ) ) - ARS ) ),( AMS * Const ) ) ,( ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_Mem + RRS ) ) / ( Max( ( FirstVNF_Mem + ( FirstVNF_CPU - FirstVNF_Mem ) ),CRS ) + MDR ) ) )", "choosing": "( ( CS / ( ( MUC * Min( ( Min( RCSe ,MUM ) - Min( MUR ,MLU ) ) ,( ( RRSe + RMSe ) / Min( MLU ,MUC ) ) ) ) - MUR ) ) - ( MLU * CS ) )", "obj1": 0.256, "obj2": 0.5231343023972789}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( Min( Min( FirstVNF_Mem ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + ( ( MUM + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 0.662, "obj2": 0.21687658021009218}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( Min( DDR ,( RRS - Min( PN ,( MDR / ( Min( ( DDR / BR ) ,FirstVNF_Mem ) - Const ) ) ) ) ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ),MUC ) + ( CS - DS ) ) )", "obj1": 0.486, "obj2": 0.365482640967631}, {"determining": "Min( Min( DDR ,DDR ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,Max( RRSe,( MUR - RMSe ) ) ) + ( CS - DS ) ) )", "obj1": 0.4, "obj2": 0.42873372865815673}, {"determining": "Min( ( ARS / ( FirstVNF_Mem * RRS ) ) ,( Max( ( BR + ( ( FirstVNF_RAM * AMS ) * DDR ) ),Min( DDR ,ACS ) ) / ( BR * ( ( ARS / ( FirstVNF_Mem * RRS ) ) - Min( BR ,CRS ) ) ) ) )", "choosing": "( ( RMSe + ( ( Max( ( ( RRSe - CS ) - ( Min( RRSe ,MUM ) * ( DS * RRSe ) ) ),Min( ( CS - ( RCSe * CS ) ) ,( RMSe + DS ) ) ) / ( Min( Max( RRSe,DS ) ,RRSe ) - DS ) ) - Max( MUR,DS ) ) ) - Min( ( MUR + ( Max( ( ( RRSe - CS ) - ( Min( RRSe ,MUM ) * ( DS * RRSe ) ) ),Min( ( CS - ( RCSe * CS ) ) ,( RMSe + DS ) ) ) / ( Min( Max( RRSe,DS ) ,RRSe ) - DS ) ) ) ,DS ) )", "obj1": 0.164, "obj2": 0.6140397558941175}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_RAM_Server - CRS ) ,MDR ) - PN ) ),( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( ( MUC - RCSe ) - RCSe ) ) )", "obj1": 0.55, "obj2": 0.3197734874652802}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "( Min( FirstVNF_Mem ,( Const * FirstVNF_CPU ) ) / Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( BR - RRS ) ) ,Min( DDR ,( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) - ( ( ( RCSe - ( ( RMSe - RMSe ) * ( Min( ( RMSe * RRSe ) ,( MLU + RRSe ) ) / RMSe ) ) ) - ( ( ( ( ( RMSe * DS ) * DS ) / ( ( CS + MUC ) - RMSe ) ) - ( ( ( RMSe * MLU ) - RCSe ) - MLU ) ) + Min( ( ( Min( RCSe ,RMSe ) * RRSe ) - RCSe ) ,RCSe ) ) ) + MUC ) )", "obj1": 0.248, "obj2": 0.5443483498882709}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ,FirstVNF_CPU_Server ) ,( ( ( BR * MRS ) + BR ) + Min( FirstVNF_Mem_Server ,( MRS + Max( RRS,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ) ) ) ) )", "choosing": "( ( MUM / ( Max( ( CS * MLU ),( MUM + Min( Min( RMSe ,Max( MLU,MUC ) ) ,Min( Min( MLU ,MLU ) ,MUR ) ) ) ) - MUR ) ) - Max( CS,MUR ) )", "obj1": 0.368, "obj2": 0.4654070927574035}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( Min( Min( ARS ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUM + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 0.674, "obj2": 0.20986006603350194}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "( Max( RRS,BR ) + ( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) * PN ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.252, "obj2": 0.5425688035153218}], "22": [{"determining": "Min( Max( ( ( ( FirstVNF_RAM * Max( MRS,PN ) ) + ( CRS / ( CRS + ( ( BR / PN ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( ( FirstVNF_Mem_Server - ( CRS / Const ) ),( ( FirstVNF_CPU - ACS ) * AMS ) ) ) ,( CRS + ( FirstVNF_CPU - ( Max( ( ARS / MRS ),ARS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUM + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM * Max( MRS,PN ) ) + ( CRS / ( CRS + ( ( BR / PN ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( ( FirstVNF_Mem_Server - ( CRS / Const ) ),( ( FirstVNF_CPU - ACS ) * AMS ) ) ) ,( CRS + ( FirstVNF_CPU - ( Max( ( ARS / MRS ),ARS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MUM + MLU ) - Max( MUM,RCSe ) ),( DS / RRSe ) ) - ( DS + ( Max( MUM,MUM ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( MDR * ( Const + ( MDR + FirstVNF_Mem ) ) ) * ( DDR - PN ) ),Max( ( MDR - PN ),( DDR / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * Min( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( RCSe ,MLU ) - DS ) ) - ( MUC + RRSe ) ) ) ,Min( DS ,RRSe ) ) ) - ( DS + ( MUC - RCSe ) ) )", "obj1": 0.044, "obj2": 0.7631237816687859}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "( Max( MRS,( ( ACS - MRS ) / ( DDR * PN ) ) ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - CS )", "obj1": 0.142, "obj2": 0.6303570176940193}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,Min( ( ARS * AMS ) ,ARS ) )", "choosing": "( ( Min( Min( MUM ,( MUM + ( MUC + RCSe ) ) ) ,( Max( DS,( ( MUR / MUC ) / MUC ) ) * ( RRSe + ( RMSe * ( MUM * CS ) ) ) ) ) + ( ( Max( ( MUC * DS ),Max( RRSe,( MUR + MUR ) ) ) - ( RMSe * ( MUM * CS ) ) ) - MUC ) ) - ( DS + DS ) )", "obj1": 0.102, "obj2": 0.6593506609559054}, {"determining": "Min( ( Min( ( DDR / Min( Const ,Max( ( AMS + FirstVNF_CPU_Server ),( PN - MDR ) ) ) ) ,FirstVNF_Mem ) - Const ) ,( Min( ( RRS / DDR ) ,MRS ) + ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( Max( MUM,Max( MLU,MUM ) ) * MUC ) - ( ( CS - DS ) + ( RRSe / MLU ) ) )", "obj1": 0.946, "obj2": 0.04371293785910977}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.512, "obj2": 0.3317954702460016}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_Mem + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( RMSe * MUC ) )", "obj1": 0.422, "obj2": 0.3941059733959131}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + MUM ) )", "obj1": 0.592, "obj2": 0.29085370514085196}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "( Min( FirstVNF_Mem ,( Const * FirstVNF_CPU ) ) / Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( BR - RRS ) ) ,Min( DDR ,( Const / Max( ( FirstVNF_Mem_Server - CRS ),FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) - ( ( ( RCSe - ( MLU * ( Min( ( RMSe * RRSe ) ,( MLU + RRSe ) ) / RMSe ) ) ) - ( ( ( ( ( RMSe * DS ) * DS ) / ( ( CS + MUC ) - RMSe ) ) - ( ( ( RMSe * MLU ) - RCSe ) - MLU ) ) + Min( ( ( Min( RCSe ,RMSe ) * RRSe ) - RCSe ) ,RCSe ) ) ) + MUC ) )", "obj1": 0.326, "obj2": 0.48265591116837536}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ACS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( DS / ( CS / MUC ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.562, "obj2": 0.3051305874109301}, {"determining": "Min( Max( ( Min( ( MRS / ( ( FirstVNF_Mem - MDR ) * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( Min( Min( ARS ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUM + Max( MUC,MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.648, "obj2": 0.236414757640384}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "( Min( ( AMS + ( FirstVNF_CPU_Server * CRS ) ) ,AMS ) / ( ( ( FirstVNF_RAM_Server / Min( AMS ,Const ) ) - ( MDR / BR ) ) - Min( CRS ,CRS ) ) )", "choosing": "( Min( RCSe ,( Max( MUR,MUR ) + MUM ) ) + ( MUM / ( MLU - Max( ( CS * ( MUM - RCSe ) ),MUM ) ) ) )", "obj1": 0.972, "obj2": 0.010086531676309133}, {"determining": "Min( FirstVNF_Mem ,Min( PN ,MDR ) )", "choosing": "( ( DS / DS ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) )", "obj1": 0.294, "obj2": 0.5023808966953971}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - ( Min( Min( RRSe ,( Max( RRSe,MUC ) * ( DS / MUC ) ) ) ,MUC ) + ( RCSe - RMSe ) ) ) ) )", "obj1": 0.49, "obj2": 0.35698355662671344}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( MRS + ( Min( Min( ARS ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Min( ( RMSe * MUC ) ,MLU ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUM + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 0.688, "obj2": 0.1985577039066913}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) ) )", "choosing": "( ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.614, "obj2": 0.27944224934361295}, {"determining": "Max( ( ( MDR * Max( DDR,FirstVNF_CPU_Server ) ) - FirstVNF_CPU ),( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "( ( RRSe + Min( MLU ,( RRSe / Min( ( MUR - Min( RMSe ,Min( DS ,RMSe ) ) ) ,MUR ) ) ) ) - Min( ( Max( RCSe,RRSe ) * ( Min( Min( MLU ,MUR ) ,( ( RCSe + CS ) - Max( MUM,MUC ) ) ) * MUM ) ) ,Min( RRSe ,RMSe ) ) )", "obj1": 0.274, "obj2": 0.5166329803964922}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( Min( DDR ,( RRS - Min( PN ,( MDR / ( Min( ( DDR / BR ) ,FirstVNF_Mem ) - Const ) ) ) ) ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ),MUC ) + ( CS - DS ) ) )", "obj1": 0.486, "obj2": 0.365482640967631}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,( Const * ( ACS - FirstVNF_Mem_Server ) ) ) - ( ( MRS - ( FirstVNF_RAM / RRS ) ) - ARS ) ),( AMS * Const ) ) ,( ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_Mem + RRS ) ) / ( Max( ( FirstVNF_Mem + ( FirstVNF_CPU - FirstVNF_Mem ) ),CRS ) + MDR ) ) )", "choosing": "( ( CS / ( ( MUC * Min( ( Min( RCSe ,MUM ) - Min( MUR ,MLU ) ) ,( ( RRSe + RMSe ) / Min( MLU ,MUC ) ) ) ) - MUR ) ) - ( MLU * CS ) )", "obj1": 0.256, "obj2": 0.5231343023972789}, {"determining": "Min( Min( DDR ,DDR ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,Max( RRSe,( MUR - RMSe ) ) ) + ( CS - DS ) ) )", "obj1": 0.4, "obj2": 0.42873372865815673}, {"determining": "Min( ( ARS / ( FirstVNF_Mem * RRS ) ) ,( Max( ( BR + ( ( FirstVNF_RAM * AMS ) * DDR ) ),Min( DDR ,ACS ) ) / ( BR * ( ( ARS / ( FirstVNF_Mem * RRS ) ) - Min( BR ,CRS ) ) ) ) )", "choosing": "( ( RMSe + ( ( Max( ( ( RRSe - CS ) - ( Min( RRSe ,MUM ) * ( DS * RRSe ) ) ),Min( ( CS - ( RCSe * CS ) ) ,( RMSe + DS ) ) ) / ( Min( Max( RRSe,DS ) ,RRSe ) - DS ) ) - Max( MUR,DS ) ) ) - Min( ( MUR + ( Max( ( ( RRSe - CS ) - ( Min( RRSe ,MUM ) * ( DS * RRSe ) ) ),Min( ( CS - ( RCSe * CS ) ) ,( RMSe + DS ) ) ) / ( Min( Max( RRSe,DS ) ,RRSe ) - DS ) ) ) ,DS ) )", "obj1": 0.164, "obj2": 0.6140397558941175}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ,FirstVNF_CPU_Server ) ,( ( ( BR * MRS ) + BR ) + Min( FirstVNF_Mem_Server ,( MRS + Max( RRS,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ) ) ) ) )", "choosing": "( ( MUM / ( Max( ( CS * MLU ),( MUM + Min( Min( RMSe ,Max( MLU,MUC ) ) ,Min( Min( MLU ,MLU ) ,MUR ) ) ) ) - MUR ) ) - Max( CS,MUR ) )", "obj1": 0.368, "obj2": 0.4654070927574035}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_RAM_Server - CRS ) ,MDR ) - PN ) ),( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( ( MUC - RCSe ) - RCSe ) ) )", "obj1": 0.55, "obj2": 0.3197734874652802}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( Min( Min( FirstVNF_Mem ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + ( ( MUM + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 0.662, "obj2": 0.21687658021009218}, {"determining": "Min( Max( ( MDR / Const ),( AMS * Const ) ) ,( ( ( FirstVNF_Mem * ( MDR / Const ) ) + ( FirstVNF_Mem + RRS ) ) / ( Max( ( FirstVNF_Mem + ( FirstVNF_CPU - FirstVNF_Mem ) ),CRS ) + MDR ) ) )", "choosing": "( ( CS / ( ( ( MUC * Min( Min( MUM ,( MUM * MUR ) ) ,( ( RRSe + RMSe ) / Min( MLU ,MUC ) ) ) ) - MUR ) - MUR ) ) - ( MLU * CS ) )", "obj1": 0.192, "obj2": 0.5844878746139038}, {"determining": "( Min( ( AMS + ( FirstVNF_CPU_Server * CRS ) ) ,AMS ) / ( ( ( FirstVNF_RAM_Server / Min( AMS ,Const ) ) - ( MDR / BR ) ) - Min( CRS ,CRS ) ) )", "choosing": "( Min( RCSe ,( Max( MUR,MUR ) + MUM ) ) + ( MUM / ( MLU - Max( ( CS * ( MUM - RCSe ) ),MUM ) ) ) )", "obj1": 0.972, "obj2": 0.010086531676309133}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( ( FirstVNF_RAM_Server + AMS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUC + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 0.656, "obj2": 0.2292623486398757}, {"determining": "( Min( FirstVNF_Mem ,( Const * FirstVNF_CPU ) ) / Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( BR - RRS ) ) ,Min( DDR ,( Const / ( ( FirstVNF_Mem_Server * ARS ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) - ( ( ( RCSe - ( ( RMSe - RMSe ) * ( Min( ( RMSe * RRSe ) ,( MLU + RRSe ) ) / RMSe ) ) ) - ( ( RMSe - DS ) - MUM ) ) + MUC ) )", "obj1": 0.2, "obj2": 0.5809541872564633}, {"determining": "Min( ( ARS - RRS ) ,( MDR * DDR ) )", "choosing": "( RRSe - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.166, "obj2": 0.6134829253029924}, {"determining": "Min( Max( ( MDR / Const ),( AMS * Const ) ) ,( ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_Mem + RRS ) ) / ( Max( ( FirstVNF_Mem + ARS ),CRS ) + MDR ) ) )", "choosing": "( ( CS / ( ( MUC * Min( Min( MUM ,( MUM * MUR ) ) ,( ( RRSe + RMSe ) / Min( MLU ,MUC ) ) ) ) - ( RRSe / ( Min( RCSe ,MUM ) - Min( MUR ,MLU ) ) ) ) ) - ( MLU * CS ) )", "obj1": 0.242, "obj2": 0.5465728146458502}], "23": [{"determining": "Min( Max( ( ( ( FirstVNF_RAM * Max( MRS,PN ) ) + ( CRS / ( CRS + ( ( BR / PN ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( ( FirstVNF_Mem_Server - ( CRS / Const ) ),( ( FirstVNF_CPU - ACS ) * AMS ) ) ) ,( CRS + ( FirstVNF_CPU - ( Max( ( ARS / MRS ),ARS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUM + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM * Max( MRS,PN ) ) + ( CRS / ( CRS + ( ( BR / PN ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( ( FirstVNF_Mem_Server - ( CRS / Const ) ),( ( FirstVNF_CPU - ACS ) * AMS ) ) ) ,( CRS + ( FirstVNF_CPU - ( Max( ( ARS / MRS ),ARS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUM + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( MDR * ( Const + ( MDR + FirstVNF_Mem ) ) ) * ( DDR - PN ) ),Max( ( MDR - PN ),( DDR / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( MUM ,Min( DS ,RRSe ) ) * Min( Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( RCSe ,MLU ) - DS ) ) - ( MUC + RRSe ) ) ) ,Min( DS ,RRSe ) ) ) - ( DS + ( MUC - RCSe ) ) )", "obj1": 0.044, "obj2": 0.7631237816687859}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( RRS + Min( MRS ,Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) ),( FirstVNF_RAM_Server * CRS ) ) ,( PN - ( FirstVNF_RAM_Server * Max( ( MDR * ACS ),( ( ACS * FirstVNF_CPU_Server ) * MDR ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( ( MUR * Min( ( MLU / DS ) ,Min( DS ,RCSe ) ) ) - Max( ( Max( MUM,MUM ) + ( MUR / RRSe ) ),RRSe ) ) ) - ( Max( MUM,MUM ) + ( MUR / RRSe ) ) ) ) - Max( MLU,( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.726, "obj2": 0.0912343673045168}, {"determining": "Min( Max( ( ( Max( ( AMS / FirstVNF_Mem ),( ARS + AMS ) ) + FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,( MDR / PN ) ) ),Max( DDR,AMS ) ) ,( ( FirstVNF_RAM_Server * ACS ) - Max( FirstVNF_RAM_Server,( MDR / PN ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / ( Max( RRSe,CS ) + ( DS - RRSe ) ) ) - ( MLU - ( Max( MUM,MUM ) + Min( RMSe ,DS ) ) ) )", "obj1": 0.81, "obj2": 0.069522799694433}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * ( ( FirstVNF_CPU + ( ( ( ARS / FirstVNF_Mem ) / FirstVNF_Mem_Server ) + CRS ) ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( Max( ( RMSe - RRSe ),RCSe ),MUM ) ) ,MUC ) + ( MUM - CS ) )", "obj1": 0.724, "obj2": 0.19760823880826422}, {"determining": "Min( ( Min( RRS ,FirstVNF_Mem ) * Const ) ,( ( ACS - FirstVNF_Mem_Server ) + ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( DS - CS ) - ( DS + DS ) )", "obj1": 0.142, "obj2": 0.609387530161014}, {"determining": "Min( Max( ( ( RRS + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Min( DDR ,AMS ) ) ,( ( MDR - Max( Max( MRS,Max( MDR,Min( CRS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( Min( ( DS + RRSe ) ,MUM ) / ( Max( MLU,RRSe ) - MUC ) ) - ( MLU - RCSe ) )", "obj1": 0.918, "obj2": 0.0665398197314886}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,Min( ( ARS * AMS ) ,ARS ) )", "choosing": "( ( Min( Min( MUM ,( MUM + ( MUC + RCSe ) ) ) ,( Max( DS,( ( MUR / MUC ) / MUC ) ) * ( RRSe + ( RMSe * ( MUM * CS ) ) ) ) ) + ( ( Max( ( MUC * DS ),Max( RRSe,( MUR + MUR ) ) ) - ( RMSe * ( MUM * CS ) ) ) - MUC ) ) - ( DS + DS ) )", "obj1": 0.102, "obj2": 0.6593506609559054}, {"determining": "Min( ( Min( ( DDR / Min( Const ,Max( ( AMS + FirstVNF_CPU_Server ),( PN - MDR ) ) ) ) ,FirstVNF_Mem ) - Const ) ,( Min( ( RRS / DDR ) ,MRS ) + ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( Max( MUM,Max( MLU,MUM ) ) * MUC ) - ( ( CS - DS ) + ( RRSe / MLU ) ) )", "obj1": 0.946, "obj2": 0.04371293785910977}, {"determining": "Min( Min( ( FirstVNF_RAM - Min( ( FirstVNF_RAM - AMS ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ,( AMS * ( Min( RRS ,FirstVNF_Mem ) + ( FirstVNF_CPU - BR ) ) ) ) ,( AMS * MDR ) )", "choosing": "Min( ( RRSe - CS ) ,( RCSe * DS ) )", "obj1": 0.466, "obj2": 0.37834399054095746}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ,FirstVNF_CPU_Server ) ,( ( ( BR * MRS ) + BR ) + Min( FirstVNF_Mem_Server ,( MRS + Max( RRS,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - DDR ) * Max( DDR,AMS ) ) ) ) ) ) )", "choosing": "( ( MUM / ( Max( ( CS * MLU ),( MUM + Min( Min( RMSe ,Max( MLU,MUC ) ) ,Min( Min( MLU ,MLU ) ,MUR ) ) ) ) - MUR ) ) - Max( CS,MUR ) )", "obj1": 0.368, "obj2": 0.4654070927574035}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( ( FirstVNF_RAM_Server * CRS ) + PN ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - ( Max( MUM,MUM ) + MUM ) ) ) - MUC ) ) - ( RRSe * DS ) )", "obj1": 0.086, "obj2": 0.7124658849159619}, {"determining": "Min( FirstVNF_Mem ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - DS ) ) )", "obj1": 0.512, "obj2": 0.3317954702460016}, {"determining": "( Min( FirstVNF_Mem ,( Const * FirstVNF_CPU ) ) / Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( BR - RRS ) ) ,Min( DDR ,( Const / Max( ( FirstVNF_Mem_Server - CRS ),FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) - ( ( ( RCSe - ( MLU * ( Min( ( RMSe * RRSe ) ,( MLU + RRSe ) ) / RMSe ) ) ) - ( ( ( ( ( RMSe * DS ) * DS ) / ( ( CS + MUC ) - RMSe ) ) - ( ( ( RMSe * MLU ) - RCSe ) - MLU ) ) + Min( ( ( Min( RCSe ,RMSe ) * RRSe ) - RCSe ) ,RCSe ) ) ) + MUC ) )", "obj1": 0.326, "obj2": 0.48265591116837536}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( ( ( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) - Max( Max( MRS,( FirstVNF_RAM_Server - Min( AMS ,MDR ) ) ),FirstVNF_Mem ) ) + PN ) )", "choosing": "( ( MUR / ( ( RMSe * ( MLU - MUC ) ) / MUC ) ) - ( RCSe - RCSe ) )", "obj1": 0.63, "obj2": 0.26997232035539}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_Mem + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( RMSe * MUC ) )", "obj1": 0.422, "obj2": 0.3941059733959131}, {"determining": "( Max( MRS,( FirstVNF_CPU / ( DDR * PN ) ) ) * MRS )", "choosing": "( ( RMSe * ( RCSe - ( MUM + ( DS + ( MLU + DS ) ) ) ) ) - ( ( CS + DS ) - ( MUM + ( RCSe - RCSe ) ) ) )", "obj1": 0.09, "obj2": 0.671849556005732}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) * ( DDR - PN ) ),Max( ( CRS - PN ),( Const / MDR ) ) ) ,( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( FirstVNF_Mem_Server + ( ( BR / ARS ) * AMS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RRSe ) ,MUM ) * ( ( RMSe * ( MLU - Max( RRSe,MLU ) ) ) - CS ) ) - ( RRSe * DS ) )", "obj1": 0.056, "obj2": 0.7205399295852166}, {"determining": "Min( ( ARS - BR ) ,( MDR * AMS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - ( MLU + ( Min( DS ,RCSe ) - ( ( ( ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) + MUM ) * ( ( Max( MLU,CS ) - RCSe ) - MUR ) ) / RMSe ) ) ) )", "obj1": 0.178, "obj2": 0.5952201758764212}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ACS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( DS / ( CS / MUC ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.562, "obj2": 0.3051305874109301}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS / ( CS / MUC ) ) * ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + MUM ) )", "obj1": 0.592, "obj2": 0.29085370514085196}, {"determining": "Min( Max( ( ( Max( FirstVNF_RAM,( AMS / FirstVNF_Mem ) ) + ( CRS / ( CRS + ( ( Const / MDR ) * AMS ) ) ) ) * ( Min( BR ,CRS ) + PN ) ),Max( DDR,AMS ) ) ,( CRS + ( ( Max( ( ARS / FirstVNF_Mem ),ARS ) - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( DS / CS ) ) * Min( MUM ,Max( RRSe,MLU ) ) ) - ( DS + ( Max( MUM,MUM ) + MUM ) ) )", "obj1": 0.39, "obj2": 0.4557554471092819}, {"determining": "Min( FirstVNF_Mem ,Min( PN ,MDR ) )", "choosing": "( ( DS / DS ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) )", "obj1": 0.294, "obj2": 0.5023808966953971}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,( DS / DS ) ) + ( CS - ( Min( Min( RRSe ,( Max( RRSe,MUC ) * ( DS / MUC ) ) ) ,MUC ) + ( RCSe - RMSe ) ) ) ) )", "obj1": 0.49, "obj2": 0.35698355662671344}, {"determining": "Min( Max( ( Min( ( MRS / ( ( FirstVNF_Mem - MDR ) * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( Min( Min( ARS ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUM + Max( MUC,MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.648, "obj2": 0.236414757640384}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.418, "obj2": 0.40803895893680553}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( MRS + ( Min( Min( ARS ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Min( ( RMSe * MUC ) ,MLU ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUM + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 0.688, "obj2": 0.1985577039066913}, {"determining": "( ( DDR + ( Const + DDR ) ) / Min( ACS ,RRS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.048, "obj2": 0.7477662588460262}, {"determining": "Max( ( ( MDR * Max( DDR,FirstVNF_CPU_Server ) ) - FirstVNF_CPU ),( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "( ( RRSe + Min( MLU ,( RRSe / Min( ( MUR - Min( RMSe ,Min( DS ,RMSe ) ) ) ,MUR ) ) ) ) - Min( ( Max( RCSe,RRSe ) * ( Min( Min( MLU ,MUR ) ,( ( RCSe + CS ) - Max( MUM,MUC ) ) ) * MUM ) ) ,Min( RRSe ,RMSe ) ) )", "obj1": 0.274, "obj2": 0.5166329803964922}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,( Const * ( ACS - FirstVNF_Mem_Server ) ) ) - ( ( MRS - ( FirstVNF_RAM / RRS ) ) - ARS ) ),( AMS * Const ) ) ,( ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_Mem + RRS ) ) / ( Max( ( FirstVNF_Mem + ( FirstVNF_CPU - FirstVNF_Mem ) ),CRS ) + MDR ) ) )", "choosing": "( ( CS / ( ( MUC * Min( ( Min( RCSe ,MUM ) - Min( MUR ,MLU ) ) ,( ( RRSe + RMSe ) / Min( MLU ,MUC ) ) ) ) - MUR ) ) - ( MLU * CS ) )", "obj1": 0.256, "obj2": 0.5231343023972789}, {"determining": "( ( ( RRS - ( RRS + PN ) ) - AMS ) / Min( ACS ,( ( RRS - RRS ) - AMS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( ( CS + RCSe ) / MUR ) * MUC ) * MUM ) * RCSe ) * RCSe ) ) * ( ( MUR - ( CS + RCSe ) ) * RRSe ) )", "obj1": 0.222, "obj2": 0.5523945938503058}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( ARS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( ( ( MUR - MUR ) * MUR ),MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.206, "obj2": 0.5652268692288371}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.312, "obj2": 0.4922398106186916}, {"determining": "Min( ( ( FirstVNF_CPU - ( ( FirstVNF_RAM + AMS ) * MDR ) ) - Const ) ,( ( FirstVNF_CPU - BR ) + Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( ( RCSe - Min( ( ( RMSe - ( RMSe / RMSe ) ) + ( RMSe + CS ) ) ,RMSe ) ) + MUC ) )", "obj1": 0.93, "obj2": 0.05819524434531731}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( DS + DS ) - ( ( ( RCSe - RCSe ) - ( ( ( ( RMSe - ( CS + MUC ) ) / ( ( RMSe * MUC ) * DS ) ) - ( Max( RMSe,MUC ) + ( CS - DS ) ) ) + CS ) ) + MUC ) )", "obj1": 0.544, "obj2": 0.3259801369312129}, {"determining": "Min( Min( DDR ,( RRS - Min( PN ,( MDR / ( Min( ( DDR / BR ) ,FirstVNF_Mem ) - Const ) ) ) ) ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( ( ( RCSe - ( MLU / RRSe ) ) - RCSe ),MUC ) + ( CS - DS ) ) )", "obj1": 0.486, "obj2": 0.365482640967631}, {"determining": "Min( Min( DDR ,DDR ) ,( ( ( BR + DDR ) + BR ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS + DS ) - ( Max( RMSe,Max( RRSe,( MUR - RMSe ) ) ) + ( CS - DS ) ) )", "obj1": 0.4, "obj2": 0.42873372865815673}, {"determining": "( Min( ( AMS + ( FirstVNF_CPU_Server * CRS ) ) ,AMS ) / ( ( ( FirstVNF_RAM_Server / Min( AMS ,Const ) ) - ( MDR / BR ) ) - Min( CRS ,CRS ) ) )", "choosing": "( Min( RCSe ,( Max( MUR,MUR ) + MUM ) ) + ( MUM / ( MLU - Max( ( CS * ( MUM - RCSe ) ),MUM ) ) ) )", "obj1": 0.972, "obj2": 0.010086531676309133}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_RAM_Server - CRS ) ,MDR ) - PN ) ),( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( ( MUC - RCSe ) - RCSe ) ) )", "obj1": 0.55, "obj2": 0.3197734874652802}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( Min( FirstVNF_Mem ,( Const * FirstVNF_CPU ) ) / Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( BR - RRS ) ) ,Min( DDR ,( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) - ( ( ( RCSe - ( ( RMSe - RMSe ) * ( Min( ( RMSe * RRSe ) ,( MLU + RRSe ) ) / RMSe ) ) ) - ( ( ( ( ( RMSe * DS ) * DS ) / ( ( CS + MUC ) - RMSe ) ) - ( ( ( RMSe * MLU ) - RCSe ) - MLU ) ) + Min( ( ( Min( RCSe ,RMSe ) * RRSe ) - RCSe ) ,RCSe ) ) ) + MUC ) )", "obj1": 0.248, "obj2": 0.5443483498882709}, {"determining": "( Min( ( AMS + ( FirstVNF_CPU_Server * CRS ) ) ,AMS ) / ( ( ( FirstVNF_RAM_Server / Min( AMS ,Const ) ) - ( MDR / BR ) ) - Min( CRS ,CRS ) ) )", "choosing": "( ( MUR + DS ) - ( ( ( ( RCSe + MUM ) - MUC ) - RCSe ) + ( ( ( ( ( RRSe - ( CS + RCSe ) ) * RMSe ) / Min( Min( ( RRSe * CS ) ,MUM ) ,( ( RMSe / MUM ) + ( RMSe * MUR ) ) ) ) + ( ( ( RCSe + ( DS - CS ) ) + CS ) + ( RRSe * RMSe ) ) ) - ( RMSe - ( ( Min( MUC ,Min( MUM ,CS ) ) + RRSe ) + RMSe ) ) ) ) )", "obj1": 0.974, "obj2": 0.007601856376055145}, {"determining": "Min( Max( ( MDR / Const ),( AMS * Const ) ) ,( ( ( FirstVNF_Mem * ( MDR / Const ) ) + ( FirstVNF_Mem + RRS ) ) / ( Max( ( FirstVNF_Mem + ( FirstVNF_CPU - FirstVNF_Mem ) ),CRS ) + MDR ) ) )", "choosing": "( ( CS / ( ( ( MUC * Min( Min( MUM ,( MUM * MUR ) ) ,( ( RRSe + RMSe ) / Min( MLU ,MUC ) ) ) ) - MUR ) - MUR ) ) - ( MLU * CS ) )", "obj1": 0.192, "obj2": 0.5844878746139038}, {"determining": "( Min( FirstVNF_Mem ,( Const * FirstVNF_CPU ) ) / Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( BR - RRS ) ) ,Min( DDR ,( Const / ( ( FirstVNF_Mem_Server * ARS ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - CS ) - ( ( ( RCSe - ( ( RMSe - RMSe ) * ( Min( ( RMSe * RRSe ) ,( MLU + RRSe ) ) / RMSe ) ) ) - ( ( RMSe - DS ) - MUM ) ) + MUC ) )", "obj1": 0.2, "obj2": 0.5809541872564633}, {"determining": "Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,Min( Max( ( ( MDR * ( Const + ( BR + FirstVNF_Mem ) ) ) * ( Min( MDR ,RRS ) - ( ( BR * ACS ) - MRS ) ) ),( Min( ( MRS / ( ARS * ( ARS + AMS ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ) ) ,( Max( FirstVNF_RAM_Server,CRS ) + PN ) ) )", "choosing": "( ( CS * Max( ( MUC * ( DS / Max( ( RMSe - MUR ),RMSe ) ) ),( Min( MUM ,( Min( MLU ,MLU ) - DS ) ) - Max( MUM,( MUM - ( CS / MUC ) ) ) ) ) ) - ( ( Max( MLU,RMSe ) / MUM ) + ( MUC - RCSe ) ) )", "obj1": 0.614, "obj2": 0.27944224934361295}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( Min( Min( FirstVNF_Mem ,DDR ) ,RRS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + ( ( MUM + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 0.662, "obj2": 0.21687658021009218}, {"determining": "Min( ( ARS - ( FirstVNF_Mem * RRS ) ) ,( Max( ( BR + ( ( ( RRS - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) * AMS ) * DDR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,DDR ) ) / ( BR * ( ( Const / MRS ) - Min( FirstVNF_Mem_Server ,BR ) ) ) ) )", "choosing": "( ( DS + DS ) - Min( ( MUR + ( Max( ( ( RRSe - CS ) - ( Min( RRSe ,MUM ) * ( RCSe * RRSe ) ) ),Min( ( RMSe + DS ) ,( CS - ( RCSe * CS ) ) ) ) / ( Min( Max( RRSe,DS ) ,RMSe ) - DS ) ) ) ,DS ) )", "obj1": 0.612, "obj2": 0.2854069964574116}, {"determining": "Min( Max( ( MDR / Const ),( AMS * Const ) ) ,( ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_Mem + RRS ) ) / ( Max( ( FirstVNF_Mem + ARS ),CRS ) + MDR ) ) )", "choosing": "( ( CS / ( ( MUC * Min( Min( MUM ,( MUM * MUR ) ) ,( ( RRSe + RMSe ) / Min( MLU ,MUC ) ) ) ) - ( RRSe / ( Min( RCSe ,MUM ) - Min( MUR ,MLU ) ) ) ) ) - ( MLU * CS ) )", "obj1": 0.242, "obj2": 0.5465728146458502}, {"determining": "Min( Max( ( Min( ( MRS / ( ARS * Min( ARS ,AMS ) ) ) ,( Min( AMS ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,MDR ) - PN ) ),( ( Min( ( MDR - ( FirstVNF_Mem_Server - ARS ) ) ,RRS ) - ( ( BR * ACS ) - MRS ) ) * ( MDR * ( Const + ( ( FirstVNF_RAM_Server + AMS ) + FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server - CRS ) + PN ) )", "choosing": "( Min( ( RMSe * MUC ) ,MLU ) - ( ( Max( MUC,RMSe ) / MUM ) + ( MUC - Min( ( Max( MUR,( Min( RMSe ,MUC ) - RCSe ) ) + RRSe ) ,( RRSe + ( ( MUC + Max( MUC,RMSe ) ) * DS ) ) ) ) ) )", "obj1": 0.656, "obj2": 0.2292623486398757}]}