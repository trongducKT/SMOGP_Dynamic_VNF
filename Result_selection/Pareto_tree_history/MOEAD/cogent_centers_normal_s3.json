{"1": [{"determining": "Min( ( PN * FirstVNF_CPU_Server ) ,( ( BR * AMS ) / ACS ) )", "choosing": "Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) )", "obj1": 0.4431137724550898, "obj2": 0.5499999774995995}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( MRS / Const ) ) )", "choosing": "Min( ( Min( ( RCSe * MUR ) ,Min( CS ,RRSe ) ) - Min( ( MLU * DS ) ,( RCSe * MLU ) ) ) ,( ( ( MUR * MUC ) + ( MUR + MUM ) ) + ( ( MUM * MLU ) * ( RCSe + RRSe ) ) ) )", "obj1": 0.3932135728542914, "obj2": 0.579720436852664}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_CPU ) ,( CRS * ( ( FirstVNF_CPU + Const ) / FirstVNF_Mem ) ) )", "choosing": "( ( RMSe + RRSe ) * Max( DS,( RRSe - MLU ) ) )", "obj1": 0.5349301397205589, "obj2": 0.48216485893976446}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( DDR * ( FirstVNF_CPU_Server - ( BR - ACS ) ) ) )", "choosing": "( ( DS + RRSe ) * Max( ( DS + ( MUM - MLU ) ),DS ) )", "obj1": 0.5469061876247505, "obj2": 0.414669775723175}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( DDR - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) - Max( DS,DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ACS ,RRS ),( ACS / BR ) )", "choosing": "Min( ( RMSe * MUM ) ,( MUR * MUM ) )", "obj1": 0.5149700598802395, "obj2": 0.48427439718204746}, {"determining": "( ( FirstVNF_RAM_Server / AMS ) * Min( BR ,PN ) )", "choosing": "( ( CS + RMSe ) - ( CS + MUC ) )", "obj1": 0.4251497005988024, "obj2": 0.5518219089425302}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( BR / Const ) )", "choosing": "Min( ( MLU / RCSe ) ,( RMSe + CS ) )", "obj1": 0.3652694610778443, "obj2": 0.6103363161538887}, {"determining": "( Max( MRS,FirstVNF_Mem_Server ) * Min( BR ,MDR ) )", "choosing": "( ( MUM / MUC ) + ( DS / CS ) )", "obj1": 0.5349301397205589, "obj2": 0.460584574062665}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,DDR ),( DDR + MRS ) )", "choosing": "Max( Min( MUM ,MUR ),Min( MUR ,( MUC - ( DS - ( CS * Min( CS ,( MUC * ( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.48502994011976047, "obj2": 0.503645667809339}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( MUC + ( Max( MLU,MUC ) / Max( Min( MUR ,RCSe ),( ( RMSe - ( RMSe * MLU ) ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4091816367265469, "obj2": 0.5625303501536565}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( AMS - AMS ) )", "choosing": "( ( MUR + DS ) - ( CS - MUC ) )", "obj1": 0.48902195608782434, "obj2": 0.48325402469774575}, {"determining": "( ( ACS / FirstVNF_Mem ) * ( MRS + ACS ) )", "choosing": "( ( RCSe - RCSe ) / ( MUR * MUR ) )", "obj1": 0.4091816367265469, "obj2": 0.6147450977455347}, {"determining": "( ( FirstVNF_CPU - Min( ( RRS / ( ( MRS + BR ) / Max( MRS,DDR ) ) ) ,( FirstVNF_CPU / ( ACS + ARS ) ) ) ) * Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( ( ( RCSe - MUM ) * MUM ) + Min( MUM ,( DS * RCSe ) ) )", "obj1": 0.9421157684630739, "obj2": 0.07235882405720567}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( ( ( MRS + FirstVNF_RAM_Server ) - Const ) * FirstVNF_RAM ) + ( PN + ( FirstVNF_CPU_Server * ARS ) ) ) ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * Max( Min( CS ,Min( RMSe ,CS ) ),Min( MUR ,( RRSe / RCSe ) ) ) ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.9880239520958084, "obj2": 0.01418156023378097}, {"determining": "Max( ( FirstVNF_CPU / Const ),Min( RRS ,MDR ) )", "choosing": "Min( ( RCSe + MUM ) ,( MLU / RRSe ) )", "obj1": 0.4111776447105788, "obj2": 0.5645353245197697}, {"determining": "( Max( CRS,AMS ) / ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUC - DS ) * ( MUM - DS ) )", "obj1": 0.40718562874251496, "obj2": 0.5789127016227307}, {"determining": "( Min( DDR ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "( ( ARS / RRS ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MUR,RRSe ),Min( CS ,RRSe ) )", "obj1": 0.500998003992016, "obj2": 0.4909728685290481}, {"determining": "( ( FirstVNF_RAM_Server - PN ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "Max( ( MUC - CS ),Min( RCSe ,DS ) )", "obj1": 0.5708582834331337, "obj2": 0.4045945660387127}, {"determining": "( ( MDR - DDR ) * ( RRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + RCSe ) + ( RRSe + MUC ) )", "obj1": 0.500998003992016, "obj2": 0.49024528006799023}, {"determining": "( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) )", "choosing": "( ( MUR + CS ) + Max( RCSe,DS ) )", "obj1": 0.437125748502994, "obj2": 0.5424053478353152}, {"determining": "Max( ( RRS + RRS ),( Const - ( CRS / ( ( ( Const * FirstVNF_CPU ) / AMS ) * ( ARS + ARS ) ) ) ) )", "choosing": "( ( MUC + MUR ) * ( CS + RMSe ) )", "obj1": 0.4810379241516966, "obj2": 0.5085679885453653}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( RCSe - MUM ) * ( RCSe / MUR ) )", "obj1": 0.39520958083832336, "obj2": 0.5902368743925801}, {"determining": "( ( PN + ACS ) / Min( RRS ,( MRS - FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MUC - DS ) )", "obj1": 0.4870259481037924, "obj2": 0.5291311098741512}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( MLU + RCSe ) + ( MUM * RMSe ) )", "obj1": 0.7425149700598802, "obj2": 0.23408599462560042}, {"determining": "( Min( MDR ,RRS ) / Max( MDR,FirstVNF_Mem ) )", "choosing": "( ( MUM - RRSe ) * ( MUR + DS ) )", "obj1": 0.4431137724550898, "obj2": 0.5561546829163534}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,( FirstVNF_CPU - Max( FirstVNF_RAM_Server,( RRS + ( ACS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RCSe / ( ( MUR + ( RCSe * Min( RCSe ,MUC ) ) ) + MUC ) ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( ( ARS * FirstVNF_RAM ) + ( MDR + AMS ) )", "choosing": "( ( RMSe * CS ) + ( RCSe + Min( ( RMSe / ( ( MUR / ( MLU * RRSe ) ) * ( MLU + DS ) ) ) ,MUM ) ) )", "obj1": 0.5149700598802395, "obj2": 0.5053932942511382}, {"determining": "Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,CS ) + Max( RCSe,DS ) )", "obj1": 0.4930139720558882, "obj2": 0.5318924167547409}, {"determining": "Max( ( RRS / DDR ),Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MLU ) ,( MUR / DS ) )", "obj1": 0.4151696606786427, "obj2": 0.5709684360244371}, {"determining": "( Min( FirstVNF_CPU ,AMS ) / ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUC ) + ( CS - MUC ) )", "obj1": 0.48502994011976047, "obj2": 0.534007451664042}, {"determining": "( ( AMS - MRS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MUR ) / Max( ( DS * DS ),MUR ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "( ( FirstVNF_Mem / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5662549410373751}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) + Max( ( DDR / RRS ),( Min( CRS ,Max( Const,FirstVNF_RAM ) ) / DDR ) ) )", "choosing": "Max( ( ( ( ( MLU - MUC ) * Max( ( DS - CS ),MUC ) ) * ( MUC / MUM ) ) / ( CS + ( MUM * ( ( ( MUR * ( CS + MUC ) ) * ( Min( MUR ,MUR ) + Max( MUM,RCSe ) ) ) * RRSe ) ) ) ),( RCSe - MUR ) )", "obj1": 0.4251497005988024, "obj2": 0.5875060100742879}, {"determining": "Min( ( MRS * FirstVNF_Mem_Server ) ,Max( ( ( BR * ( Const * RRS ) ) / ACS ),FirstVNF_Mem ) )", "choosing": "( ( ( MUR / Max( RRSe,( MLU + MUM ) ) ) + ( MUC + MUR ) ) - Max( Max( MUC,CS ),Max( MLU,RRSe ) ) )", "obj1": 0.5289421157684631, "obj2": 0.47097006739431574}, {"determining": "( ( Const / ( CRS / FirstVNF_Mem_Server ) ) + ( CRS / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) )", "obj1": 0.4930139720558882, "obj2": 0.4997378163214019}, {"determining": "( Max( ( MDR / DDR ),( FirstVNF_RAM_Server + AMS ) ) - ( Min( CRS ,Const ) + Max( PN,DDR ) ) )", "choosing": "( ( ( MUC - MUC ) * ( MLU / MUC ) ) / ( MUC + Max( MUC,MUC ) ) )", "obj1": 0.3772455089820359, "obj2": 0.6253076741282743}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ACS ) + Min( FirstVNF_RAM_Server ,DDR ) ) * ( Max( MRS,Const ) / ( FirstVNF_CPU - Const ) ) )", "choosing": "Min( ( Min( MLU ,MUC ) / Max( RMSe,MLU ) ) ,Min( Min( MUM ,RCSe ) ,( RMSe * DS ) ) )", "obj1": 0.5668662674650699, "obj2": 0.4221766541901518}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.2774451097804391, "obj2": 0.7001837146417388}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( AMS - PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( MLU - DS ) ),Max( MUM,( MLU / MUR ) ) )", "obj1": 0.3972055888223553, "obj2": 0.6002715279580906}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU + ( CRS / MDR ) ),( Const - FirstVNF_Mem_Server ) ) + ( Min( DDR ,CRS ) / ( Const - BR ) ) )", "choosing": "Max( ( Max( RRSe,DS ) / MLU ),Min( DS ,( ( RMSe * Min( DS ,MUC ) ) / ( MUR + MLU ) ) ) )", "obj1": 0.4590818363273453, "obj2": 0.5292370985316887}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Min( ( ( MDR / Const ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) )", "choosing": "( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) )", "obj1": 0.6626746506986028, "obj2": 0.37041720158399255}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( BR ,FirstVNF_RAM ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 0.41317365269461076, "obj2": 0.6000690960122372}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / CRS ) - ( FirstVNF_RAM_Server - CRS ) ) * ( ( Const / FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( RRSe - MUR ) - ( MUR + MUR ) )", "obj1": 0.4031936127744511, "obj2": 0.5940871900181935}, {"determining": "Max( Max( FirstVNF_RAM,MRS ),( Min( ACS ,Const ) / ( MDR * RRS ) ) )", "choosing": "Min( ( RMSe / MUC ) ,( ( CS / MUC ) + Min( RRSe ,MUM ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5864935617760035}, {"determining": "( ( Max( PN,FirstVNF_CPU_Server ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_CPU ,AMS ) ,( Const * FirstVNF_RAM ) ) )", "choosing": "( ( MUC / Max( RRSe,DS ) ) + Max( MUC,( RCSe - MUR ) ) )", "obj1": 0.47704590818363274, "obj2": 0.507746357309906}, {"determining": "( Min( PN ,CRS ) + ( Max( MDR,ARS ) + ( PN * Max( ( Const - MDR ),FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( RCSe ,( RRSe - ( ( DS - CS ) - CS ) ) ) ,Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.42714570858283435, "obj2": 0.5442364329384727}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),Max( RRS,BR ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.3592814371257485, "obj2": 0.5904584005101058}, {"determining": "Max( Max( ( ACS / FirstVNF_RAM ),( MRS - FirstVNF_CPU ) ),Max( ACS,( MRS - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MLU + MUC ) * MUM ) ,( Min( MUM ,MLU ) + MUM ) )", "obj1": 0.48303393213572854, "obj2": 0.4953599644892811}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + Max( ARS,ACS ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "Min( ( DS * MUC ) ,( MUR * MUR ) )", "obj1": 0.5469061876247505, "obj2": 0.4152448359891522}, {"determining": "( Min( PN ,Max( BR,FirstVNF_CPU ) ) / Min( PN ,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( CS + MUC ) ) ,Max( ( RMSe * MLU ),( DS + RRSe ) ) )", "obj1": 0.4630738522954092, "obj2": 0.5351516548210428}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Max( FirstVNF_Mem,AMS ) ,( MDR * CRS ) ),Max( ( FirstVNF_CPU - PN ),( PN / AMS ) ) )", "choosing": "Max( ( ( CS + MUM ) * ( RMSe / MLU ) ),( ( MUM / RCSe ) + ( CS / RCSe ) ) )", "obj1": 0.3812375249500998, "obj2": 0.6220448740174584}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / MDR ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( Max( CS,RRSe ) + RRSe ) )", "obj1": 0.5069860279441117, "obj2": 0.47851297525740544}, {"determining": "( ( FirstVNF_Mem_Server / ( ACS * FirstVNF_Mem_Server ) ) + ( AMS / AMS ) )", "choosing": "( ( Min( MUM ,MLU ) + MUR ) / Min( ( RRSe - MUC ) ,Max( MLU,RCSe ) ) )", "obj1": 0.43313373253493015, "obj2": 0.5769505455365366}, {"determining": "Min( Max( AMS,FirstVNF_Mem ) ,( ( FirstVNF_CPU / AMS ) + FirstVNF_RAM ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( MUM / RRSe ) ) ,( ( DS / RCSe ) + ( MLU * CS ) ) ) / ( ( ( RCSe * RMSe ) + ( MUC + DS ) ) - ( Min( RCSe ,CS ) - ( CS * DS ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.6197413027481877}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( MRS * Const ),Max( FirstVNF_Mem,ARS ) ) / ( Max( PN,DDR ) - Min( CRS ,RRS ) ) ),( ( Max( MRS,Const ) + Min( PN ,PN ) ) * Min( ( ARS / FirstVNF_Mem_Server ) ,Max( RRS,ACS ) ) ) )", "choosing": "Max( ( ( ( MLU - RMSe ) + ( CS / RCSe ) ) / MUR ),( CS - MUM ) )", "obj1": 0.46506986027944114, "obj2": 0.5351848989939018}, {"determining": "Max( ( MRS - MRS ),( AMS * ACS ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,( ( DS + RRSe ) / Min( CS ,MUM ) ) ) * Min( ( ( RRSe * DS ) - ( CS / RCSe ) ) ,( ( CS * RMSe ) / ( MUC + MUM ) ) ) )", "obj1": 0.48303393213572854, "obj2": 0.48009511161627927}, {"determining": "Min( ( PN + Min( Const ,AMS ) ) ,Max( ( ( FirstVNF_RAM / CRS ) * ( Max( ACS,AMS ) * FirstVNF_RAM_Server ) ),Max( ( Max( FirstVNF_RAM,Max( MDR,( ( MDR - ARS ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) - AMS ),ARS ) ) )", "choosing": "( ( ( ( Min( MUC ,CS ) * Min( Max( ( CS * RMSe ),MUC ) ,( RRSe - ( RRSe / ( RRSe + MUC ) ) ) ) ) - ( MUR + ( Min( Min( MUR ,MUM ) ,Min( RMSe ,Min( CS ,CS ) ) ) / RMSe ) ) ) * Min( Max( DS,DS ) ,( MUC - MUM ) ) ) - ( Min( Min( MLU ,MLU ) ,Max( CS,RCSe ) ) * ( ( RMSe * MUM ) + ( RCSe * MUR ) ) ) )", "obj1": 0.37325349301397204, "obj2": 0.6238137247578451}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,( ( DDR - DDR ) / FirstVNF_Mem ) )", "choosing": "( ( MUM * RRSe ) + Max( RMSe,Max( MUM,DS ) ) )", "obj1": 0.48902195608782434, "obj2": 0.5003443436465312}, {"determining": "( ( Min( FirstVNF_CPU_Server ,Const ) - Max( ( RRS / AMS ),( PN / FirstVNF_Mem_Server ) ) ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( RCSe - ( RRSe + MUR ) ) ) )", "obj1": 0.6526946107784432, "obj2": 0.33600637862805743}, {"determining": "( ( FirstVNF_Mem / ( FirstVNF_CPU_Server + DDR ) ) / ( ACS - CRS ) )", "choosing": "( Min( MLU ,MLU ) * Min( ( RRSe / RRSe ) ,( RMSe - MUR ) ) )", "obj1": 0.3812375249500998, "obj2": 0.6180043212683146}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( MDR / FirstVNF_CPU ),( PN - CRS ) ) + ( ( ARS * FirstVNF_CPU ) * ( PN / FirstVNF_RAM ) ) ),( ( Max( ACS,RRS ) + ( FirstVNF_CPU * Const ) ) - ( Min( ACS ,DDR ) * Min( FirstVNF_RAM_Server ,Const ) ) ) )", "choosing": "Max( ( MUM + ( Max( DS,MUM ) - RRSe ) ),( RRSe - Max( ( RMSe * MUC ),MUR ) ) )", "obj1": 0.4431137724550898, "obj2": 0.5450809056118894}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( RRS,MDR ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( ( DDR * PN ) + Max( AMS,ARS ) ) ) / Max( ( ( ARS * BR ) * Min( RRS ,FirstVNF_CPU ) ),Max( ( FirstVNF_RAM + DDR ),Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Min( Max( MLU,MLU ) ,MLU ) ,RCSe ) - ( Max( ( DS / RMSe ),RCSe ) * MUR ) )", "obj1": 0.44510978043912175, "obj2": 0.5350792208479583}, {"determining": "( ( CRS + ( ( FirstVNF_RAM / ( MRS / ( ARS + ( FirstVNF_CPU / Max( BR,DDR ) ) ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) * Max( ARS,AMS ) )", "choosing": "Max( ( MLU * ( Max( MUC,Min( MLU ,( MUC * RRSe ) ) ) + ( CS * MUM ) ) ),( MUR * RCSe ) )", "obj1": 0.3153692614770459, "obj2": 0.6780788491749005}, {"determining": "( ( AMS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( ( MUR - ( ( RMSe - MLU ) / Max( MUC,RRSe ) ) ) - Min( ( MUM + Min( MLU ,RMSe ) ) ,( ( DS * MLU ) / ( RRSe - MLU ) ) ) )", "obj1": 0.46107784431137727, "obj2": 0.5233754239046194}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( FirstVNF_Mem + CRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 0.5449101796407185, "obj2": 0.4471760556586103}, {"determining": "( ( RRS / MDR ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( MUR * MUC ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.5409181636726547, "obj2": 0.42134540998381526}, {"determining": "( ( FirstVNF_CPU / MRS ) * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( CS + ( MUC + ( MUR * DS ) ) ) - ( DS * RRSe ) )", "obj1": 0.500998003992016, "obj2": 0.5228149795493902}, {"determining": "Max( ( ( ( Const / RRS ) - ( ARS * DDR ) ) / Max( ( ACS / PN ),( CRS / BR ) ) ),( ( ( MDR + BR ) - ( ARS / MDR ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe - DS ) ) / ( ( DS + MUM ) + ( MUR / MUM ) ) ) / Min( ( ( MUC * MUC ) / ( MLU * MUC ) ) ,( ( DS + CS ) + Min( RMSe ,CS ) ) ) )", "obj1": 0.37524950099800397, "obj2": 0.6024618507950046}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + ( AMS + FirstVNF_CPU ) )", "choosing": "( Min( RRSe ,RRSe ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.42115768463073855, "obj2": 0.5760127046211179}, {"determining": "Max( ( ( ( Min( DDR ,BR ) - FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server / BR ) + ( PN / MDR ) ) ) * FirstVNF_RAM ),( ( FirstVNF_CPU_Server + BR ) / Const ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / Min( RMSe ,( ( CS / ( RRSe + MUR ) ) * RRSe ) ) ) + Max( RCSe,DS ) ) ) ,Min( ( ( RRSe / MUR ) + ( ( DS + RCSe ) - MUM ) ) ,( ( RRSe * DS ) * ( MUR - MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5510838581337576}, {"determining": "( ( ARS - ACS ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / CS ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * MUM ),Min( RRSe ,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 0.5369261477045908, "obj2": 0.4678781001851203}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( ARS / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - Min( Max( MUC,MUM ) ,( RMSe * CS ) ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( CS - MLU ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.9281437125748503, "obj2": 0.06568957311682262}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - MDR ) ) ) )", "choosing": "( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( RRSe * ( Max( MUR,DS ) / MUR ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.06505479113536707}, {"determining": "Max( ( ( ( FirstVNF_Mem / MRS ) / ( BR + FirstVNF_RAM ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ),( ( ( DDR - FirstVNF_Mem ) + ( MRS / Const ) ) * ( ( FirstVNF_RAM_Server - AMS ) * Max( ARS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - RMSe ) - ( MUM - RCSe ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ),( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) )", "obj1": 0.4750499001996008, "obj2": 0.49572794638357154}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.36926147704590817, "obj2": 0.5827948697718666}, {"determining": "( ( Min( ( AMS - RRS ) ,( FirstVNF_CPU - MRS ) ) * ( Min( DDR ,FirstVNF_CPU_Server ) - Max( PN,FirstVNF_Mem ) ) ) + Max( ( ( AMS + MRS ) * ( FirstVNF_CPU / FirstVNF_CPU ) ),( ( Const * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) + ( ( ( MUR - MLU ) + ( RMSe + RCSe ) ) - ( Max( RCSe,RMSe ) - ( MLU - RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.5166436003804105}, {"determining": "Max( ( ACS * Max( ACS,CRS ) ),( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe - Max( MLU,CS ) ) + RCSe ) ,Max( RCSe,Min( MUC ,RRSe ) ) )", "obj1": 0.5129740518962076, "obj2": 0.4952516484258274}], "2": [{"determining": "( AMS / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) )", "choosing": "( ( MUR / DS ) - ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6734752751298976}, {"determining": "( ( ACS * Max( ACS,CRS ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MUC ,RRSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.716566866267465, "obj2": 0.215067627666929}, {"determining": "Min( ( ( MDR / Const ) - Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) )", "choosing": "( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( MUR / DS ) )", "obj1": 0.6926147704590818, "obj2": 0.3357096740728788}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( DDR - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) - Max( DS,DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8682634730538922, "obj2": 0.0636933940736003}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / ( CS * RCSe ) ) ,Min( MUR ,MUM ) ) - Min( Max( MUC,MUM ) ,( RMSe * CS ) ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( CS - MLU ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.8323353293413174, "obj2": 0.16762975237796734}, {"determining": "Min( ( CRS - ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( BR / Const ) ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MLU / RCSe ) ,( RMSe + CS ) ) + ( RCSe / CS ) )", "obj1": 0.9421157684630739, "obj2": 0.04606832182841082}, {"determining": "Min( ( ( MDR / Const ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( Max( ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ),Const ),( CRS / ARS ) ) )", "choosing": "( ( ( RMSe * MUR ) * ( MUM - CS ) ) + MUR )", "obj1": 0.6107784431137725, "obj2": 0.3873546518673861}, {"determining": "Min( ( ( MDR / Const ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) )", "choosing": "( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) )", "obj1": 0.6626746506986028, "obj2": 0.37041720158399255}, {"determining": "( ( Min( FirstVNF_CPU_Server ,Const ) - Max( ( RRS / AMS ),( PN / FirstVNF_Mem_Server ) ) ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( RCSe - ( RRSe + MUR ) ) ) )", "obj1": 0.6526946107784432, "obj2": 0.33600637862805743}, {"determining": "( Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( ( MUC / MUR ) - ( RMSe / MLU ) ) + ( MUM * RMSe ) )", "obj1": 0.8622754491017964, "obj2": 0.12035558164342079}, {"determining": "( ( MRS / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( MUC * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9780439121756487, "obj2": 0.00797655757109081}, {"determining": "( ( ( Min( Max( FirstVNF_CPU,Max( FirstVNF_RAM,MRS ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) ) * Min( BR ,PN ) )", "choosing": "( RRSe - ( CS + MUC ) )", "obj1": 0.8562874251497006, "obj2": 0.13012829545979207}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,BR )", "choosing": "( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / ( MUM + CS ) )", "obj1": 0.9481037924151696, "obj2": 0.04116174310369936}, {"determining": "Max( ( ( ( Const / RRS ) - ( ARS * DDR ) ) / Max( ( ACS / PN ),( CRS / BR ) ) ),( ( ( MDR + BR ) - ( ARS / MDR ) ) - ( Max( FirstVNF_Mem_Server,( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) ) / ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe / ( ( DS + MUM ) + ( MUR / MUM ) ) ) / Min( ( ( MUC * MUC ) / ( MLU * MUC ) ) ,( ( DS + CS ) + Min( RMSe ,CS ) ) ) )", "obj1": 0.3972055888223553, "obj2": 0.5607908764793609}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - Const )", "choosing": "( DS * Max( DS,DS ) )", "obj1": 0.5708582834331337, "obj2": 0.4043563444836371}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( MRS / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( MUM ,CS ) + RCSe ) )", "obj1": 0.36127744510978044, "obj2": 0.5615768208124343}, {"determining": "( Min( ( ( MRS + MDR ) - ( ( PN + PN ) - ( PN * Const ) ) ) ,( MRS + DDR ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( MLU / MLU ) * ( ( Max( DS,RCSe ) * RCSe ) - ( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) / ( RMSe + Min( RCSe ,( MUC + Min( MUM ,MUM ) ) ) ) ) ) ) / ( MUR / Max( RRSe,Min( ( MUM / ( ( Min( CS ,RMSe ) - ( MUR * RMSe ) ) / RMSe ) ) ,RRSe ) ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6623819061423645}, {"determining": "Max( ( RRS + MRS ),Min( FirstVNF_RAM_Server ,Max( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + ( AMS + FirstVNF_CPU ) ),Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( MUM ,( ( RRSe * DS ) * ( MUR - MUM ) ) ) )", "obj1": 0.4311377245508982, "obj2": 0.5148472670000137}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( DDR * ( FirstVNF_CPU_Server - ( BR - ACS ) ) ) )", "choosing": "( ( DS + RRSe ) * Max( ( DS + ( MUM - MLU ) ),DS ) )", "obj1": 0.499001996007984, "obj2": 0.4506025436602334}, {"determining": "Max( ( ( ( Const / RRS ) - ( ARS - AMS ) ) / Max( ( ACS / PN ),( CRS / BR ) ) ),( ( ( MDR + BR ) - ( ARS / MDR ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe - DS ) ) / ( ( DS + MUM ) + ( MUR / MUM ) ) ) / ( Max( MUM,MUR ) * MUM ) )", "obj1": 0.34930139720558884, "obj2": 0.6064971803710669}, {"determining": "( ( AMS - MRS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MUR ) / Max( ( DS * DS ),MUR ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "Min( ( ARS + Max( ARS,PN ) ) ,( FirstVNF_CPU + ( Min( FirstVNF_Mem_Server ,ACS ) + Min( Min( ( ACS / Max( MRS,ARS ) ) ,Min( ( FirstVNF_Mem * Const ) ,Max( CRS,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) ,MDR ) ) ) )", "choosing": "( ( MLU + Max( DS,CS ) ) - ( ( ( RCSe + RCSe ) * MLU ) - Min( ( RMSe / ( MUC / ( Min( MUR ,( MUC + MUC ) ) * ( RRSe * MUC ) ) ) ) ,( ( MLU - MLU ) + ( MUM * MUR ) ) ) ) )", "obj1": 0.3393213572854291, "obj2": 0.6405492650634748}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.5276794683902458}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,FirstVNF_Mem )", "choosing": "( ( MUR + ( ( RCSe - RCSe ) / ( MUR * MUR ) ) ) - ( CS - MUC ) )", "obj1": 0.49500998003992014, "obj2": 0.4720215354736266}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,( FirstVNF_CPU - Max( FirstVNF_RAM_Server,( RRS + ( ACS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RCSe / ( ( MUR + ( RCSe * Min( RCSe ,MUC ) ) ) + MUC ) ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( Min( MUR ,RCSe ),( ( RMSe - ( RMSe * MLU ) ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4471057884231537, "obj2": 0.5020606507762071}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) - ( MLU / RCSe ) )", "obj1": 0.40718562874251496, "obj2": 0.5373456927893415}, {"determining": "( ( FirstVNF_RAM_Server - PN ) / ( ( ARS / RRS ) / ( ARS / FirstVNF_RAM ) ) )", "choosing": "Max( ( MUC - Min( DS ,( ( MUC - MUR ) - MUM ) ) ),Min( RCSe ,DS ) )", "obj1": 0.5269461077844312, "obj2": 0.43491699465265155}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( FirstVNF_Mem / ( DDR / AMS ) ) / ( ACS - CRS ) )", "choosing": "( Min( MLU ,MLU ) * Max( DS,MLU ) )", "obj1": 0.3473053892215569, "obj2": 0.6304181051081922}, {"determining": "( ( ( CRS / ACS ) + Min( FirstVNF_RAM_Server ,DDR ) ) * ( Max( MRS,Const ) / ( FirstVNF_CPU - Const ) ) )", "choosing": "Min( ( Min( MLU ,MUC ) / Max( RMSe,MLU ) ) ,Min( Min( MUM ,RCSe ) ,( RMSe * DS ) ) )", "obj1": 0.5668662674650699, "obj2": 0.4221766541901518}, {"determining": "Max( ( MRS - MRS ),( AMS * ACS ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,( ( DS + RRSe ) / Min( CS ,MUM ) ) ) * Min( ( ( RRSe * DS ) - ( CS / RCSe ) ) ,( ( CS * RMSe ) / ( MUC + MUM ) ) ) )", "obj1": 0.48303393213572854, "obj2": 0.48009511161627927}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,( ( DDR - DDR ) / FirstVNF_Mem ) )", "choosing": "( Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) + Max( RMSe,Max( MUM,DS ) ) )", "obj1": 0.47105788423153694, "obj2": 0.490475558570077}, {"determining": "( ( RRS / MDR ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( MUR * MUC ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.5409181636726547, "obj2": 0.42134540998381526}, {"determining": "( Max( ( FirstVNF_CPU + PN ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) + ( Min( DDR ,CRS ) / ( Const - BR ) ) )", "choosing": "Max( ( Max( RRSe,DS ) / MLU ),( ( RRSe + RRSe ) + MUM ) )", "obj1": 0.4550898203592814, "obj2": 0.49916071393037803}, {"determining": "( ( ARS + Max( ARS,ACS ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "Min( ( DS * MUC ) ,( MUR * MUR ) )", "obj1": 0.5469061876247505, "obj2": 0.4152448359891522}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),Max( RRS,BR ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.3592814371257485, "obj2": 0.5904584005101058}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.2874251497005988, "obj2": 0.6658436314402941}, {"determining": "Max( ( MRS - MRS ),( AMS * Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( ( ( MLU - RMSe ) + ( CS / RCSe ) ) * Min( ( ( RRSe * DS ) - ( CS / RCSe ) ) ,( ( CS * RMSe ) / ( MUC + MUM ) ) ) )", "obj1": 0.4630738522954092, "obj2": 0.4916429211257623}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( AMS - AMS ) )", "choosing": "( ( MUR + DS ) - ( CS - MUC ) )", "obj1": 0.48902195608782434, "obj2": 0.48325402469774575}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( AMS - ( ( ( RRS / MDR ) / ( FirstVNF_RAM + PN ) ) + CRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( MUR * MUC ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) ) / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 0.34530938123752497, "obj2": 0.6382668856336714}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( DDR * ( FirstVNF_CPU_Server - ( BR - ACS ) ) ) )", "choosing": "( ( DS + RRSe ) * Max( ( DS + ( MUM - MLU ) ),DS ) )", "obj1": 0.5469061876247505, "obj2": 0.414669775723175}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,Min( FirstVNF_RAM ,ACS ) ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( ( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) ) / ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( CS - MLU ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ( Const - DDR ) - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - MDR ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RMSe * MUR ) - DS ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.0007855272393569324}, {"determining": "( Min( DDR ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / Min( FirstVNF_CPU_Server ,( MRS + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( MUM - ( DS * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + FirstVNF_Mem_Server ) / ( PN - ( ACS - ( ( BR - Const ) / ( ( BR * FirstVNF_RAM ) - CRS ) ) ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ,( PN * MRS ) )", "choosing": "( ( Min( ( DS * Min( RCSe ,MLU ) ) ,( ( MLU - ( MUM + Min( Max( DS,MUC ) ,Max( CS,MUM ) ) ) ) - ( RMSe * ( Min( ( CS + RCSe ) ,DS ) * RRSe ) ) ) ) / MUC ) + ( ( CS * RMSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) - PN ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "Max( ( MUC - CS ),Min( ( ( MLU + RCSe ) + ( RRSe + MUC ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ACS ) / Min( RRS ,( MRS - FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MUC - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),MRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( Min( ( Min( MLU ,MUC ) / Max( RMSe,MLU ) ) ,Min( Min( MUM ,RCSe ) ,( RMSe * DS ) ) ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( AMS - PN ) ) ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( Max( Min( BR ,FirstVNF_RAM ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) ),BR ) ,PN ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( RMSe / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - Max( Max( ( ACS / FirstVNF_RAM ),( MRS - FirstVNF_CPU ) ),Max( ACS,( MRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Max( ARS,ACS ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * ( DS * MUC ) ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,Min( Min( ( RMSe / RMSe ) ,( CS + MUC ) ) ,Max( ( RMSe * MLU ),( DS + RRSe ) ) ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem_Server / ( ACS * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( RCSe + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( ( ( FirstVNF_Mem / ( FirstVNF_CPU_Server + DDR ) ) / ( ACS - CRS ) ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( RRSe / RRSe ) ,( RMSe - MUR ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( DDR * PN ) + Max( AMS,ARS ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( Max( ( DS / RMSe ),RCSe ) + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,AMS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,( DS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) / Min( CS ,MUM ) ) ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) - ( FirstVNF_Mem + CRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - MDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( FirstVNF_CPU ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) )", "choosing": "( ( MUR / DS ) - ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6734752751298976}, {"determining": "( ( ACS * Max( ACS,CRS ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MUC ,RRSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.716566866267465, "obj2": 0.215067627666929}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49700598802395207, "obj2": 0.3968015061310338}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / CS ) ) )", "obj1": 0.7864271457085829, "obj2": 0.1700773022919202}, {"determining": "( Max( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( AMS - AMS ) ),FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( MLU + RCSe ) + Min( MUM ,MUR ) )", "obj1": 0.6926147704590818, "obj2": 0.28779509979529366}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( MRS + BR ) / Max( MRS,DDR ) ) ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( MUC * DS ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 0.5988023952095808, "obj2": 0.35884321870280356}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.8483033932135728, "obj2": 0.08095143449087151}, {"determining": "( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.8223552894211577, "obj2": 0.14026944671509814}, {"determining": "( Max( MDR,( FirstVNF_CPU_Server / DDR ) ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( DS + RRSe ) - RRSe ) / ( MLU - DS ) ) - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.49101796407185627, "obj2": 0.45679754079104173}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8682634730538922, "obj2": 0.0636933940736003}, {"determining": "Min( ( ( ( MRS - ARS ) + RRS ) + FirstVNF_CPU ) ,FirstVNF_Mem )", "choosing": "( ( MUR + ( ( RCSe - RCSe ) / ( ( ( RMSe - ( RMSe * MLU ) ) + MUR ) * MUR ) ) ) - ( CS - MUC ) )", "obj1": 0.9401197604790419, "obj2": 0.05673130876559557}, {"determining": "( ( Min( FirstVNF_CPU_Server ,Const ) - Max( ( RRS / AMS ),( PN / FirstVNF_Mem_Server ) ) ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( RCSe - ( RRSe + MUR ) ) ) )", "obj1": 0.6526946107784432, "obj2": 0.33600637862805743}, {"determining": "( ( MRS / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( MUC * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9780439121756487, "obj2": 0.00797655757109081}, {"determining": "( ( FirstVNF_CPU - Min( ( RRS / ( ( MRS + BR ) / Max( MRS,DDR ) ) ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * Min( Max( MDR,PN ) ,MRS ) )", "choosing": "( ( DS * MUM ) + Min( MUM ,( RRSe - ( CS + MUC ) ) ) )", "obj1": 0.46107784431137727, "obj2": 0.47593371909348997}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server + ACS ) / ( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( DS - Min( MUC ,MUR ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.30218695717238186}, {"determining": "( Max( BR,( FirstVNF_Mem - AMS ) ) + ( FirstVNF_Mem + PN ) )", "choosing": "Min( ( Min( RRSe ,CS ) * ( ( RMSe - ( Min( MUR ,Min( CS ,MUC ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) ) * MLU ) ) ,Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.3872255489021956, "obj2": 0.5359742332929832}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( MRS / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( MUM ,CS ) + RCSe ) )", "obj1": 0.36127744510978044, "obj2": 0.5615768208124343}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,BR )", "choosing": "( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / ( MUM + CS ) )", "obj1": 0.9481037924151696, "obj2": 0.04116174310369936}, {"determining": "( ( ( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) + ACS ) / ( DDR - FirstVNF_Mem ) )", "choosing": "( ( DS + RRSe ) - Max( DS,DS ) )", "obj1": 0.812375249500998, "obj2": 0.1667711285048262}, {"determining": "Max( ( Min( Const ,RRS ) / ARS ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( ( RRSe + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.5796346505591775}, {"determining": "Max( ( ( ( Const / RRS ) - ( ARS - AMS ) ) / Max( ( ACS / PN ),( CRS / BR ) ) ),( ( ( MDR + BR ) - ( ARS / MDR ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe - DS ) ) / ( ( DS + MUM ) + ( MUR / MUM ) ) ) / ( Max( MUM,MUR ) * MUM ) )", "obj1": 0.34930139720558884, "obj2": 0.6064971803710669}, {"determining": "( Min( ( ( MRS + MDR ) - ( ( PN + PN ) - ( PN * Const ) ) ) ,( MRS + DDR ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( MLU / MLU ) * ( ( Max( DS,RCSe ) * RCSe ) - ( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) / ( RMSe + Min( RCSe ,( MUC + Min( MUM ,MUM ) ) ) ) ) ) ) / ( MUR / Max( RRSe,Min( ( MUM / ( ( Min( CS ,RMSe ) - ( MUR * RMSe ) ) / RMSe ) ) ,RRSe ) ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6623819061423645}, {"determining": "( ( CRS + ( ( FirstVNF_CPU_Server / CRS ) - Max( PN,FirstVNF_Mem_Server ) ) ) * Max( ARS,AMS ) )", "choosing": "Max( ( MLU * DS ),( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * MUM ) )", "obj1": 0.42115768463073855, "obj2": 0.5144859116433038}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 0.654690618762475, "obj2": 0.32615484834842895}, {"determining": "( Max( ( FirstVNF_CPU + PN ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) + ( Min( DDR ,CRS ) / ( Const - BR ) ) )", "choosing": "Max( ( Max( RRSe,DS ) / MLU ),( ( RRSe + RRSe ) + MUM ) )", "obj1": 0.4550898203592814, "obj2": 0.49916071393037803}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / CS ),MLU ) * MUM )", "obj1": 0.44510978043912175, "obj2": 0.5078427607182985}, {"determining": "( Max( ( MDR / DDR ),( FirstVNF_RAM_Server + AMS ) ) - ( Min( CRS ,( BR * ( Const * RRS ) ) ) + Max( PN,DDR ) ) )", "choosing": "( ( ( MUC - MUC ) * ( ( ( MUR / Max( RRSe,( MLU + MUM ) ) ) + ( MUC + ( ( ( MUC - MUC ) * ( MLU / MUC ) ) / ( MUC + Max( MUC,MUC ) ) ) ) ) - Max( Max( MUC,CS ),Max( MLU,RRSe ) ) ) ) / ( MUR / Max( RRSe,( MLU + MUM ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6490280256472616}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.5276794683902458}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.2874251497005988, "obj2": 0.6658436314402941}, {"determining": "( Max( ( MDR / DDR ),( FirstVNF_RAM_Server + AMS ) ) - ( Min( CRS ,( BR * ( ( BR * ( Const * RRS ) ) * RRS ) ) ) + Max( PN,DDR ) ) )", "choosing": "( ( ( ( ( MUC - MUC ) * ( MLU / MUC ) ) - MUC ) * ( MLU / MUC ) ) / ( MUR / Max( RRSe,( MLU + MUM ) ) ) )", "obj1": 0.34530938123752497, "obj2": 0.6220581476190878}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU )", "choosing": "( Max( MUM,MUM ) - ( RMSe / MLU ) )", "obj1": 0.3413173652694611, "obj2": 0.6231427763936291}, {"determining": "Min( ( CRS - ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( BR / Const ) ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MLU / RCSe ) ,( RMSe + CS ) ) + ( RCSe / CS ) )", "obj1": 0.9421157684630739, "obj2": 0.04606832182841082}, {"determining": "Min( ( ARS + Max( ARS,PN ) ) ,( FirstVNF_CPU + ( Min( FirstVNF_Mem_Server ,ACS ) + Min( Min( ( ACS / Max( MRS,ARS ) ) ,Min( ( FirstVNF_Mem * Const ) ,Max( CRS,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) ,MDR ) ) ) )", "choosing": "( ( MLU + Max( DS,CS ) ) - ( ( ( RCSe + RCSe ) * MLU ) - Min( ( RMSe / ( MUC / ( Min( MUR ,( MUC + MUC ) ) * ( RRSe * MUC ) ) ) ) ,( ( MLU - MLU ) + ( MUM * MUR ) ) ) ) )", "obj1": 0.3393213572854291, "obj2": 0.6405492650634748}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( Min( MUR ,RCSe ),( ( RMSe - ( RMSe * MLU ) ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4471057884231537, "obj2": 0.5020606507762071}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Min( ( ( ARS + FirstVNF_CPU ) + FirstVNF_CPU ) ,FirstVNF_Mem_Server )", "choosing": "( ( MUC / ( MUM * RMSe ) ) - ( RMSe / MLU ) )", "obj1": 0.3393213572854291, "obj2": 0.6405492650634748}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,Min( FirstVNF_RAM ,ACS ) ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( ( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) ) / ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( CS - MLU ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ( Const - DDR ) - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - MDR ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RMSe * MUR ) - DS ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.0007855272393569324}, {"determining": "( Min( DDR ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / Min( FirstVNF_CPU_Server ,( MRS + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( MUM - ( DS * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + FirstVNF_Mem_Server ) / ( PN - ( ACS - ( ( BR - Const ) / ( ( BR * FirstVNF_RAM ) - CRS ) ) ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ,( PN * MRS ) )", "choosing": "( ( Min( ( DS * Min( RCSe ,MLU ) ) ,( ( MLU - ( MUM + Min( Max( DS,MUC ) ,Max( CS,MUM ) ) ) ) - ( RMSe * ( Min( ( CS + RCSe ) ,DS ) * RRSe ) ) ) ) / MUC ) + ( ( CS * RMSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) - PN ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "Max( ( MUC - CS ),Min( ( ( MLU + RCSe ) + ( RRSe + MUC ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ACS ) / Min( RRS ,( MRS - FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MUC - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),MRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( Min( ( Min( MLU ,MUC ) / Max( RMSe,MLU ) ) ,Min( Min( MUM ,RCSe ) ,( RMSe * DS ) ) ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( AMS - PN ) ) ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( Max( Min( BR ,FirstVNF_RAM ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) ),BR ) ,PN ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( RMSe / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - Max( Max( ( ACS / FirstVNF_RAM ),( MRS - FirstVNF_CPU ) ),Max( ACS,( MRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Max( ARS,ACS ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * ( DS * MUC ) ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,Min( Min( ( RMSe / RMSe ) ,( CS + MUC ) ) ,Max( ( RMSe * MLU ),( DS + RRSe ) ) ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem_Server / ( ACS * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( RCSe + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( ( ( FirstVNF_Mem / ( FirstVNF_CPU_Server + DDR ) ) / ( ACS - CRS ) ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( RRSe / RRSe ) ,( RMSe - MUR ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( DDR * PN ) + Max( AMS,ARS ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( Max( ( DS / RMSe ),RCSe ) + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,AMS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,( DS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) / Min( CS ,MUM ) ) ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) - ( FirstVNF_Mem + CRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - MDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( Const / FirstVNF_RAM ) ) ) ) ) * ( AMS * Const ) )", "choosing": "( ( ( ( ( RMSe + Max( MLU,( RMSe * ( MUM * DS ) ) ) ) - RRSe ) + RRSe ) - RRSe ) / ( Max( Max( Min( Max( MUM,( Max( MLU,CS ) / ( RRSe - MUC ) ) ) ,Max( DS,RMSe ) ),( ( DS / ( DS + MUC ) ) + MUM ) ),MUR ) + ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( FirstVNF_CPU,Min( AMS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS + ( MUC * Max( ( RCSe + RRSe ),( RMSe * ( Max( MUR,MUC ) - Min( CS ,RMSe ) ) ) ) ) ) - RRSe ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) * ( FirstVNF_CPU + ( Max( MDR,BR ) / FirstVNF_CPU_Server ) ) )", "choosing": "( RRSe - ( CS + ( Max( ( Max( Min( ( RCSe - DS ) ,( DS * DS ) ),MUM ) * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( MUM - Min( MUR ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( ACS,FirstVNF_CPU ) ) ,( FirstVNF_RAM + ( BR / Const ) ) )", "choosing": "( Max( RRSe,( DS * RMSe ) ) + ( RCSe / ( ( ( RCSe + RMSe ) + ( RCSe / CS ) ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( BR - ( RRS - CRS ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,( MUR + CS ) ) + ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( BR - ( ( ACS - MDR ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - Max( ( ( RRS + PN ) * MRS ),( ARS + Max( Min( FirstVNF_CPU_Server ,ACS ),RRS ) ) ) ) ,( ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,DS ) + ( ( MUM / MUC ) + ( Max( MUC,Max( RCSe,DS ) ) / MUC ) ) ) + ( ( Max( CS,( ( ( MUR - ( RMSe / MUM ) ) - RCSe ) + ( RMSe / RRSe ) ) ) / Max( RCSe,DS ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM / ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / CS ) ) ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - Max( MRS,( ( FirstVNF_RAM * FirstVNF_CPU ) + ( RRS / MDR ) ) ) ) ,Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM_Server + RRS ) ) )", "choosing": "( Min( ( MUM * MLU ) ,RRSe ) + ( RCSe / Max( RRSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( FirstVNF_Mem_Server - RRS ) ) ,( FirstVNF_RAM + Min( ( RRS * ARS ) ,Const ) ) )", "choosing": "( ( ( MUM / MUM ) + Max( DS,RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),( ( ( MRS - ARS ) + RRS ) - AMS ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( Min( MUR ,RCSe ),( ( RMSe - ( RMSe * RMSe ) ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MRS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MUR ) / Max( ( DS * DS ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS / ( ( MUC * DS ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) ) / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Const )", "choosing": "( Min( Min( MUM ,RCSe ) ,( RMSe * DS ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,CRS ) ) + ( CRS - ( ( RRS + FirstVNF_Mem_Server ) + Const ) ) )", "choosing": "( ( CS + RRSe ) / Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,CRS ) ) + ( RRS - ( DDR + Const ) ) )", "choosing": "( Max( ( MUC - CS ),Min( RCSe ,DS ) ) / ( ( CS / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / FirstVNF_Mem_Server ) - PN ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "Max( ( MUC - CS ),Min( ( ( MLU + RCSe ) + CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * Max( ( ( RCSe - ( ( RCSe / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) )", "choosing": "( ( MUR / DS ) - ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6734752751298976}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) - Max( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( AMS - AMS ) ),ARS ) )", "choosing": "( ( MLU + RCSe ) + Min( MUM ,MUR ) )", "obj1": 0.6926147704590818, "obj2": 0.28721738601191693}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( ACS * Max( ACS,CRS ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MUC ,RRSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.716566866267465, "obj2": 0.215067627666929}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8682634730538922, "obj2": 0.0636933940736003}, {"determining": "Min( ( ( ( MRS - ARS ) + RRS ) + FirstVNF_CPU ) ,FirstVNF_Mem )", "choosing": "( ( MUR + ( ( RCSe - RCSe ) / ( ( ( RMSe - ( RMSe * MLU ) ) + MUR ) * MUR ) ) ) - ( CS - MUC ) )", "obj1": 0.9401197604790419, "obj2": 0.05673130876559557}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49700598802395207, "obj2": 0.3968015061310338}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.8483033932135728, "obj2": 0.08095143449087151}, {"determining": "( Max( ( MDR / DDR ),( MDR * MDR ) ) - ( DDR + Max( PN,DDR ) ) )", "choosing": "( Max( RRSe,( MLU + MUM ) ) / ( MUR / Max( RRSe,( MLU + MUM ) ) ) )", "obj1": 0.846307385229541, "obj2": 0.13920436834996655}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( ( ACS * FirstVNF_CPU ) ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( MUC * ( CS / MUR ) ) - ( ( MUC * ( CS / MUR ) ) - ( DS + RCSe ) ) )", "obj1": 0.48902195608782434, "obj2": 0.4622171099995266}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( MRS + BR ) / Max( MRS,DDR ) ) ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( MUC * DS ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 0.5988023952095808, "obj2": 0.35884321870280356}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server + ACS ) / ( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( DS - Min( MUC ,MUR ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.30218695717238186}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( Max( BR,( FirstVNF_Mem - AMS ) ) + ( FirstVNF_Mem + PN ) )", "choosing": "Min( ( Min( RRSe ,CS ) * ( ( RMSe - ( Min( MUR ,Min( CS ,MUC ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) ) * MLU ) ) ,Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.3872255489021956, "obj2": 0.5359742332929832}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( MRS / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( MUM ,CS ) + RCSe ) )", "obj1": 0.36127744510978044, "obj2": 0.5615768208124343}, {"determining": "( ( FirstVNF_CPU - Min( ( RRS / ( ( MRS + BR ) / Max( MRS,DDR ) ) ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * Min( Max( MDR,PN ) ,MRS ) )", "choosing": "( ( DS * MUM ) + Min( MUM ,( RRSe - ( CS + MUC ) ) ) )", "obj1": 0.46107784431137727, "obj2": 0.47593371909348997}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) ) ) - ( CRS / ( CRS + ( PN + ( FirstVNF_CPU_Server * ARS ) ) ) ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * Max( Min( CS ,Min( RMSe ,MUC ) ),Min( ( MUM * RMSe ) ,( RRSe / RCSe ) ) ) ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) ) ) - ( MLU / RCSe ) )", "obj1": 0.7844311377245509, "obj2": 0.1846092100194636}, {"determining": "( ( ( FirstVNF_RAM / CRS ) * ( Max( ACS,AMS ) * FirstVNF_RAM_Server ) ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( ( ( ( Min( MUC ,CS ) * RMSe ) - ( MUR + RCSe ) ) * Min( Max( DS,DS ) ,( MUC - MUM ) ) ) - ( Min( Min( MLU ,MLU ) ,Max( CS,RCSe ) ) * ( ( RMSe * MUM ) + ( RCSe * MUR ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.32934131736526945, "obj2": 0.6333406691493741}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ACS ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Min( MUR ,RMSe ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - Min( MUC ,MUR ) ) )", "obj1": 0.7584830339321357, "obj2": 0.21021917873017767}, {"determining": "( ( ( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) + ACS ) / ( DDR - FirstVNF_Mem ) )", "choosing": "( ( DS + RRSe ) - Max( DS,DS ) )", "obj1": 0.812375249500998, "obj2": 0.1667711285048262}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / DDR )", "choosing": "( MLU - Max( DS,DS ) )", "obj1": 0.3093812375249501, "obj2": 0.6601820071479543}, {"determining": "Max( ( ( ( Const / RRS ) - ( ARS - AMS ) ) / Max( ( ACS / PN ),( CRS / BR ) ) ),( ( ( MDR + BR ) - ( ARS / MDR ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe - DS ) ) / ( ( DS + MUM ) + ( MUR / MUM ) ) ) / ( Max( MUM,MUR ) * MUM ) )", "obj1": 0.34930139720558884, "obj2": 0.6064971803710669}, {"determining": "( ( ( ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,Min( MLU ,( MUM + ( MLU - MUC ) ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.024071271954964755}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / CS ) ) )", "obj1": 0.7864271457085829, "obj2": 0.1700773022919202}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Min( ( BR / Const ) ,AMS ) ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / ( MUM * RMSe ) ) ) )", "obj1": 0.7524950099800399, "obj2": 0.21055671514510788}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_CPU ) ,( CRS * ( ( ( DDR * ( FirstVNF_CPU_Server - ( BR - ACS ) ) ) + ( DDR - FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - Max( DS,DS ) ) + RRSe ) * Max( DS,( Max( ( DS + ( MUM - MLU ) ),DS ) - MLU ) ) )", "obj1": 0.6207584830339321, "obj2": 0.3575411172245158}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 0.654690618762475, "obj2": 0.32615484834842895}, {"determining": "( ( CRS + ( ( FirstVNF_CPU_Server / CRS ) - Max( PN,FirstVNF_Mem_Server ) ) ) * Max( ARS,AMS ) )", "choosing": "Max( ( MLU * DS ),( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * MUM ) )", "obj1": 0.42115768463073855, "obj2": 0.5144859116433038}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( MUM + ( MLU - MUC ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.4491017964071856, "obj2": 0.4922677007134611}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.9500998003992016, "obj2": 0.02060743412635363}, {"determining": "( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.8223552894211577, "obj2": 0.14026944671509814}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( MRS - ARS ) + RRS ),( Max( MDR,ARS ) - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe - ( RMSe * MLU ) ) + MUR ) ) ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) / ( RCSe / MUR ) )", "obj1": 0.8203592814371258, "obj2": 0.15202325637268269}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),Max( RRS,BR ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.35528942115768464, "obj2": 0.5850666017637113}, {"determining": "( Max( ( CRS + ( PN + ( FirstVNF_CPU_Server * ARS ) ) ),FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * Max( Min( CS ,Min( RMSe ,MUC ) ),Min( MUR ,( RRSe / RCSe ) ) ) ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) ) ) + ( MUM * RMSe ) )", "obj1": 0.6307385229540918, "obj2": 0.34527004150488977}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( AMS - MDR ) ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUC ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 0.43313373253493015, "obj2": 0.5057804296036904}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.5276794683902458}, {"determining": "( Max( MRS,Const ) / ( RRS + ( ( FirstVNF_Mem_Server + ( ( Min( MRS ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) - AMS ) ) - ( Const - MRS ) ) ) )", "choosing": "Max( MLU,( ( DS + MUR ) / Max( RCSe,MUR ) ) )", "obj1": 0.6367265469061876, "obj2": 0.33867044532820434}, {"determining": "( ( Min( FirstVNF_CPU_Server ,Const ) - Max( ( RRS / AMS ),( PN / FirstVNF_Mem_Server ) ) ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( RCSe - ( RRSe + MUR ) ) ) )", "obj1": 0.6526946107784432, "obj2": 0.33600637862805743}, {"determining": "Max( ( Min( Const ,RRS ) / ARS ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( ( RRSe + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.5796346505591775}, {"determining": "( ( MRS / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( MUC * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9780439121756487, "obj2": 0.00797655757109081}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.2874251497005988, "obj2": 0.6658436314402941}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU )", "choosing": "( Max( MUM,MUM ) - ( RMSe / MLU ) )", "obj1": 0.3413173652694611, "obj2": 0.6231427763936291}, {"determining": "( Max( ( MDR / DDR ),( FirstVNF_RAM_Server + AMS ) ) - ( Min( CRS ,( BR * ( ( BR * ( Const * RRS ) ) * RRS ) ) ) + Max( PN,DDR ) ) )", "choosing": "( ( ( ( ( MUC - MUC ) * ( MLU / MUC ) ) - MUC ) * ( MLU / MUC ) ) / ( MUR / Max( RRSe,( MLU + MUM ) ) ) )", "obj1": 0.34530938123752497, "obj2": 0.6220581476190878}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( Const / FirstVNF_RAM ) ) ) ) ) * ( AMS * Const ) )", "choosing": "( ( ( ( ( RMSe + Max( MLU,( RMSe * ( MUM * DS ) ) ) ) - RRSe ) + RRSe ) - RRSe ) / ( Max( Max( Min( Max( MUM,( Max( MLU,CS ) / ( RRSe - MUC ) ) ) ,Max( DS,RMSe ) ),( ( DS / ( DS + MUC ) ) + MUM ) ),MUR ) + ( RCSe + MUR ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( ( MRS * Const ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( MUR * ( MUC / MUR ) )", "obj1": 0.44510978043912175, "obj2": 0.5046028165152678}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( Min( MUR ,RCSe ),( ( RMSe - ( RMSe * MLU ) ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4471057884231537, "obj2": 0.5020606507762071}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( Const / FirstVNF_RAM ) ) ) ) ) * ( AMS * Const ) )", "choosing": "( ( ( ( ( RMSe + Max( MLU,( RMSe * ( MUM * DS ) ) ) ) - RRSe ) + RRSe ) - RRSe ) / ( Max( Max( Min( Max( MUM,( Max( MLU,CS ) / ( RRSe - MUC ) ) ) ,Max( DS,RMSe ) ),( ( DS / ( DS + MUC ) ) + MUM ) ),MUR ) + ( RCSe + MUR ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) ) / ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( CS - MLU ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,Min( FirstVNF_RAM ,ACS ) ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( ( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( BR * Max( ( ( Min( BR ,( Const + Const ) ) * ( FirstVNF_RAM_Server / RRS ) ) - BR ),BR ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ) * Max( DS,Min( ( MUR + DS ) ,( MLU + ( MLU * MLU ) ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ( Const - DDR ) - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - MDR ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RMSe * MUR ) - DS ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.0007855272393569324}, {"determining": "( AMS / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / Min( FirstVNF_CPU_Server ,( MRS + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( MUM - ( DS * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + FirstVNF_Mem_Server ) / ( PN - ( ACS - ( ( BR - Const ) / ( ( BR * FirstVNF_RAM ) - CRS ) ) ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ,( PN * MRS ) )", "choosing": "( ( Min( ( DS * Min( RCSe ,MLU ) ) ,( ( MLU - ( MUM + Min( Max( DS,MUC ) ,Max( CS,MUM ) ) ) ) - ( RMSe * ( Min( ( CS + RCSe ) ,DS ) * RRSe ) ) ) ) / MUC ) + ( ( CS * RMSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) - PN ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "Max( ( MUC - CS ),Min( ( ( MLU + RCSe ) + ( RRSe + MUC ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ACS ) / Min( RRS ,( MRS - FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MUC - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),MRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( Min( ( Min( MLU ,MUC ) / Max( RMSe,MLU ) ) ,Min( Min( MUM ,RCSe ) ,( RMSe * DS ) ) ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( AMS - PN ) ) ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( Max( Min( BR ,FirstVNF_RAM ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) ),BR ) ,PN ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( RMSe / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - Max( Max( ( ACS / FirstVNF_RAM ),( MRS - FirstVNF_CPU ) ),Max( ACS,( MRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Max( ARS,ACS ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * ( DS * MUC ) ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,Min( Min( ( RMSe / RMSe ) ,( CS + MUC ) ) ,Max( ( RMSe * MLU ),( DS + RRSe ) ) ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem_Server / ( ACS * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( RCSe + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( ( ( FirstVNF_Mem / ( FirstVNF_CPU_Server + DDR ) ) / ( ACS - CRS ) ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( RRSe / RRSe ) ,( RMSe - MUR ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( DDR * PN ) + Max( AMS,ARS ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( Max( ( DS / RMSe ),RCSe ) + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,AMS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,( DS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - MUR ) / Min( CS ,MUM ) ) ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) - ( FirstVNF_Mem + CRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - MDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( Const / FirstVNF_RAM ) ) ) ) ) * ( AMS * Const ) )", "choosing": "( ( ( ( ( RMSe + Max( MLU,( RMSe * ( MUM * DS ) ) ) ) - RRSe ) + RRSe ) - RRSe ) / ( Max( Max( Min( Max( MUM,( Max( MLU,CS ) / ( RRSe - MUC ) ) ) ,Max( DS,RMSe ) ),( ( DS / ( DS + MUC ) ) + MUM ) ),MUR ) + ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( FirstVNF_CPU,Min( AMS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS + ( MUC * Max( ( RCSe + RRSe ),( RMSe * ( Max( MUR,MUC ) - Min( CS ,RMSe ) ) ) ) ) ) - RRSe ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) * ( FirstVNF_CPU + ( Max( MDR,BR ) / FirstVNF_CPU_Server ) ) )", "choosing": "( RRSe - ( CS + ( Max( ( Max( Min( ( RCSe - DS ) ,( DS * DS ) ),MUM ) * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( MUM - Min( MUR ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( ACS,FirstVNF_CPU ) ) ,( FirstVNF_RAM + ( BR / Const ) ) )", "choosing": "( Max( RRSe,( DS * RMSe ) ) + ( RCSe / ( ( ( RCSe + RMSe ) + ( RCSe / CS ) ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( CRS - ( DDR + Const ) ) )", "choosing": "Max( MUR,Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * Max( ( ( RCSe - ( ( RCSe / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) )", "choosing": "( ( MUR / DS ) - ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6734752751298976}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( ACS * Max( ACS,CRS ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MUC ,RRSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.716566866267465, "obj2": 0.215067627666929}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49700598802395207, "obj2": 0.3968015061310338}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( MRS + BR ) / Max( MRS,DDR ) ) ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( MUC * DS ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 0.5988023952095808, "obj2": 0.35884321870280356}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) - Max( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( AMS - AMS ) ),ARS ) )", "choosing": "( ( MLU + RCSe ) + Min( MUM ,MUR ) )", "obj1": 0.6926147704590818, "obj2": 0.28721738601191693}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server + ACS ) / ( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( DS - Min( MUC ,MUR ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.30218695717238186}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( ( ACS * FirstVNF_CPU ) ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( MUC * ( CS / MUR ) ) - ( ( MUC * ( CS / MUR ) ) - ( DS + RCSe ) ) )", "obj1": 0.48902195608782434, "obj2": 0.4622171099995266}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.8483033932135728, "obj2": 0.08095143449087151}, {"determining": "( Max( ( MDR / DDR ),( MDR * MDR ) ) - ( DDR + Max( PN,DDR ) ) )", "choosing": "( Max( RRSe,( MLU + MUM ) ) / ( MUR / Max( RRSe,( MLU + MUM ) ) ) )", "obj1": 0.846307385229541, "obj2": 0.13920436834996655}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),FirstVNF_Mem ) - Min( CRS ,Const ) )", "choosing": "( ( ( RCSe * ( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( MLU / MUC ) ) ) / ( CS / MUR ) ) + ( MLU / MUC ) )", "obj1": 0.4471057884231537, "obj2": 0.472308559426652}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8682634730538922, "obj2": 0.0636933940736003}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) ) )", "choosing": "( ( MUC * ( CS / MUR ) ) - ( MUC * ( CS / MUR ) ) )", "obj1": 0.93812375249501, "obj2": 0.062095948258783576}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( MRS / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( MUM ,CS ) + RCSe ) )", "obj1": 0.36127744510978044, "obj2": 0.5615768208124343}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) ) ) - ( CRS / ( CRS + ( PN + ( FirstVNF_CPU_Server * ARS ) ) ) ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * Max( Min( CS ,Min( RMSe ,MUC ) ),Min( ( MUM * RMSe ) ,( RRSe / RCSe ) ) ) ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) ) ) - ( MLU / RCSe ) )", "obj1": 0.7844311377245509, "obj2": 0.1846092100194636}, {"determining": "( Max( BR,( FirstVNF_Mem - AMS ) ) + ( FirstVNF_Mem + PN ) )", "choosing": "Min( ( Min( RRSe ,CS ) * ( ( RMSe - ( Min( MUR ,Min( CS ,MUC ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) ) * MLU ) ) ,Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.3872255489021956, "obj2": 0.5359742332929832}, {"determining": "( ( ( FirstVNF_RAM / CRS ) * ( Max( ACS,AMS ) * FirstVNF_RAM_Server ) ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( ( ( ( Min( MUC ,CS ) * RMSe ) - ( MUR + RCSe ) ) * Min( Max( DS,DS ) ,( MUC - MUM ) ) ) - ( Min( Min( MLU ,MLU ) ,Max( CS,RCSe ) ) * ( ( RMSe * MUM ) + ( RCSe * MUR ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.32934131736526945, "obj2": 0.6333406691493741}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ACS ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Min( MUR ,RMSe ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - Min( MUC ,MUR ) ) )", "obj1": 0.7584830339321357, "obj2": 0.21021917873017767}, {"determining": "( ( ( DDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ) * Max( DS,Min( Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8063872255489022, "obj2": 0.166426853848359}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / DDR )", "choosing": "( MLU - Max( DS,DS ) )", "obj1": 0.3093812375249501, "obj2": 0.6601820071479543}, {"determining": "( ( MRS * Const ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( MUR * ( MUC / MUR ) )", "obj1": 0.44510978043912175, "obj2": 0.5046028165152678}, {"determining": "( ( ( ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,Min( MLU ,( MUM + ( MLU - MUC ) ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.024071271954964755}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,PN ) - ARS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( Max( ( MUR + DS ),MUC ) * MLU ),( ( RCSe * CS ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Min( ( BR / Const ) ,AMS ) ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / ( MUM * RMSe ) ) ) )", "obj1": 0.7524950099800399, "obj2": 0.21055671514510788}, {"determining": "Min( ( ( ( MRS - ARS ) + RRS ) + FirstVNF_CPU ) ,FirstVNF_Mem )", "choosing": "( ( MUR + ( ( RCSe - RCSe ) / ( ( ( RMSe - ( RMSe * MLU ) ) + MUR ) * MUR ) ) ) - ( CS - MUC ) )", "obj1": 0.9401197604790419, "obj2": 0.05673130876559557}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( MRS - ARS ) + RRS ),( Max( MDR,ARS ) - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe - ( RMSe * MLU ) ) + MUR ) ) ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) / ( RCSe / MUR ) )", "obj1": 0.8203592814371258, "obj2": 0.15202325637268269}, {"determining": "( ( CRS + ( ( FirstVNF_CPU_Server / CRS ) - Max( PN,FirstVNF_Mem_Server ) ) ) * Max( ARS,AMS ) )", "choosing": "Max( ( MLU * DS ),( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * MUM ) )", "obj1": 0.42115768463073855, "obj2": 0.5144859116433038}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / CS ) ) )", "obj1": 0.7864271457085829, "obj2": 0.1700773022919202}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / DDR ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Min( MUR ,RMSe ) ) * ( Max( ( ( RMSe + RRSe ) * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.6806387225548902, "obj2": 0.29364120978184405}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.9500998003992016, "obj2": 0.02060743412635363}, {"determining": "( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.8223552894211577, "obj2": 0.14026944671509814}, {"determining": "( ( ( ( PN + RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,( MUM + Max( ( ( ( RMSe / MUR ) + MUC ) / MLU ),CS ) ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06993032523692741}, {"determining": "Max( ( ( ( Const / RRS ) - ( ARS - AMS ) ) / Max( ( ACS / PN ),( CRS / BR ) ) ),( ( ( MDR + BR ) - ( ARS / MDR ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe - DS ) ) / ( ( DS + MUM ) + ( MUR / MUM ) ) ) / ( Max( MUM,MUR ) * MUM ) )", "obj1": 0.34930139720558884, "obj2": 0.6064971803710669}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( AMS - MDR ) ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUC ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 0.43313373253493015, "obj2": 0.5057804296036904}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.5276794683902458}, {"determining": "Max( ( Min( Const ,RRS ) / ARS ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( ( RRSe + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.5796346505591775}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( ( PN + ACS ) / Min( RRS ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.3532934131736527, "obj2": 0.5944573377478212}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.2874251497005988, "obj2": 0.6658436314402941}, {"determining": "( Max( ( MDR / DDR ),( FirstVNF_RAM_Server + AMS ) ) - ( Min( CRS ,( BR * ( ( BR * ( Const * RRS ) ) * RRS ) ) ) + Max( PN,DDR ) ) )", "choosing": "( ( ( ( ( MUC - MUC ) * ( MLU / MUC ) ) - MUC ) * ( MLU / MUC ) ) / ( MUR / Max( RRSe,( MLU + MUM ) ) ) )", "obj1": 0.34530938123752497, "obj2": 0.6220581476190878}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( ( Min( FirstVNF_CPU ,PN ) - ARS ) + RRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe * MLU ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4031936127744511, "obj2": 0.5354196116301827}, {"determining": "( ( MRS / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( MUC * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9780439121756487, "obj2": 0.00797655757109081}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( Const / FirstVNF_RAM ) ) ) ) ) * ( AMS * Const ) )", "choosing": "( ( ( ( ( RMSe + Max( MLU,( RMSe * ( MUM * DS ) ) ) ) - RRSe ) + RRSe ) - RRSe ) / ( Max( Max( Min( Max( MUM,( Max( MLU,CS ) / ( RRSe - MUC ) ) ) ,Max( DS,RMSe ) ),( ( DS / ( DS + MUC ) ) + MUM ) ),MUR ) + ( RCSe + MUR ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),Max( RRS,BR ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.35528942115768464, "obj2": 0.5850666017637113}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( RRS - ( DDR + Const ) ) )", "choosing": "( ( CS + ( ( ( MUM / MUM ) + RMSe ) + ( RCSe / CS ) ) ) / ( ( CS / DS ) + MUM ) )", "obj1": 0.688622754491018, "obj2": 0.2886431485835663}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,( FirstVNF_CPU - Max( FirstVNF_RAM_Server,( RRS + ( ACS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RCSe / ( ( MUR + ( RCSe * Min( RCSe ,MUC ) ) ) + MUC ) ) - ( RMSe / MLU ) )", "obj1": 0.3413173652694611, "obj2": 0.6231427763936291}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU )", "choosing": "( Max( MUM,MUM ) - ( RMSe / MLU ) )", "obj1": 0.3413173652694611, "obj2": 0.6231427763936291}, {"determining": "( ( ( PN - DDR ) / Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( ( MLU - MUC ) + MLU ) - RMSe ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) ) / ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( CS - MLU ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,Min( FirstVNF_RAM ,ACS ) ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( ( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Min( ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( RRS * DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9760479041916168, "obj2": 0.010688296413792679}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + DS ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "( ( ( PN - DDR ) * Min( DDR ,( FirstVNF_CPU_Server * DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( ( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,MUM ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.010890468891801078}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ( Const - DDR ) - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - MDR ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RMSe * MUR ) - DS ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.0007855272393569324}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * Min( Min( ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( MUM / MUC ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( BR * Max( ( ( Min( BR ,( Const + Const ) ) * ( FirstVNF_RAM_Server / RRS ) ) - BR ),BR ) ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ) * Max( DS,Min( ( MUR + DS ) ,( MLU + ( MLU * MLU ) ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( Min( FirstVNF_CPU ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / Min( FirstVNF_CPU_Server ,( MRS + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( MUM - ( DS * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + FirstVNF_Mem_Server ) / ( PN - ( ACS - ( ( BR - Const ) / ( ( BR * FirstVNF_RAM ) - CRS ) ) ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ,( PN * MRS ) )", "choosing": "( ( Min( ( DS * Min( RCSe ,MLU ) ) ,( ( MLU - ( MUM + Min( Max( DS,MUC ) ,Max( CS,MUM ) ) ) ) - ( RMSe * ( Min( ( CS + RCSe ) ,DS ) * RRSe ) ) ) ) / MUC ) + ( ( CS * RMSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) - PN ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "Max( ( MUC - CS ),Min( ( ( MLU + RCSe ) + ( RRSe + MUC ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ACS ) / Min( RRS ,( MRS - FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MUC - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),MRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( Min( ( Min( MLU ,MUC ) / Max( RMSe,MLU ) ) ,Min( Min( MUM ,RCSe ) ,( RMSe * DS ) ) ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( AMS - PN ) ) ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( Max( Min( BR ,FirstVNF_RAM ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) ),BR ) ,PN ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( RMSe / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - Max( Max( ( ACS / FirstVNF_RAM ),( MRS - FirstVNF_CPU ) ),Max( ACS,( MRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Max( ARS,ACS ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * ( DS * MUC ) ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,Min( Min( ( RMSe / RMSe ) ,( CS + MUC ) ) ,Max( ( RMSe * MLU ),( DS + RRSe ) ) ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem_Server / ( ACS * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( RCSe + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( ( ( FirstVNF_Mem / ( FirstVNF_CPU_Server + DDR ) ) / ( ACS - CRS ) ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( RRSe / RRSe ) ,( RMSe - MUR ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( DDR * PN ) + Max( AMS,ARS ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( Max( ( DS / RMSe ),RCSe ) + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,AMS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,( DS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,CRS ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( CRS - ( DDR + Const ) ) )", "choosing": "Max( MUR,Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) )", "choosing": "( ( MUR / DS ) - ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6734752751298976}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,AMS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * ( MUM + ( MUR / RCSe ) ) ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.624750499001996, "obj2": 0.28601450195648}, {"determining": "( ( ACS * Max( ACS,CRS ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MUC ,RRSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.716566866267465, "obj2": 0.215067627666929}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),FirstVNF_Mem ) - Min( CRS ,Const ) )", "choosing": "( ( ( RCSe * ( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( MLU / MUC ) ) ) / ( CS / MUR ) ) + ( MLU / MUC ) )", "obj1": 0.4471057884231537, "obj2": 0.472308559426652}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49700598802395207, "obj2": 0.3968015061310338}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,PN ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( RMSe + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.5868263473053892, "obj2": 0.34621063917048106}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( ( FirstVNF_Mem_Server - AMS ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4870259481037924, "obj2": 0.4305487615198347}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.8483033932135728, "obj2": 0.08095143449087151}, {"determining": "( Max( ( MDR / DDR ),( MDR * MDR ) ) - ( DDR + Max( PN,DDR ) ) )", "choosing": "( Max( RRSe,( MLU + MUM ) ) / ( MUR / Max( RRSe,( MLU + MUM ) ) ) )", "obj1": 0.846307385229541, "obj2": 0.13920436834996655}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8682634730538922, "obj2": 0.0636933940736003}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) ) )", "choosing": "( ( MUC * ( CS / MUR ) ) - ( MUC * ( CS / MUR ) ) )", "obj1": 0.93812375249501, "obj2": 0.062095948258783576}, {"determining": "( ( ( FirstVNF_RAM / CRS ) * ( Max( ACS,AMS ) * FirstVNF_RAM_Server ) ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( ( ( ( Min( MUC ,CS ) * RMSe ) - ( MUR + RCSe ) ) * Min( Max( DS,DS ) ,( MUC - MUM ) ) ) - ( Min( Min( MLU ,MLU ) ,Max( CS,RCSe ) ) * ( ( RMSe * MUM ) + ( RCSe * MUR ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.32934131736526945, "obj2": 0.6333406691493741}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) ) ) - ( CRS / ( CRS + ( PN + ( FirstVNF_CPU_Server * ARS ) ) ) ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * Max( Min( CS ,Min( RMSe ,MUC ) ),Min( ( MUM * RMSe ) ,( RRSe / RCSe ) ) ) ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) ) ) - ( MLU / RCSe ) )", "obj1": 0.7844311377245509, "obj2": 0.1846092100194636}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( BR * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( MUR + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,RCSe ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6482287930178547}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ACS ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Min( MUR ,RMSe ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - Min( MUC ,MUR ) ) )", "obj1": 0.7584830339321357, "obj2": 0.21021917873017767}, {"determining": "( ( ( DDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ) * Max( DS,Min( Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8063872255489022, "obj2": 0.166426853848359}, {"determining": "( ( MRS * Const ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( MUR * ( MUC / MUR ) )", "obj1": 0.44510978043912175, "obj2": 0.5046028165152678}, {"determining": "( ( ( ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,Min( MLU ,( MUM + ( MLU - MUC ) ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.024071271954964755}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( MDR * ( ACS + ( Const - ARS ) ) ) )", "choosing": "( Min( MUR ,( ( RCSe + ( ( MUC / ( MUC / RCSe ) ) - RMSe ) ) + Min( ( DS / Min( ( Min( MUM ,DS ) * ( MLU / DS ) ) ,DS ) ) ,( ( RRSe / ( RCSe - RRSe ) ) + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.3333333333333333, "obj2": 0.6144297891608806}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Min( ( BR / Const ) ,AMS ) ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / ( MUM * RMSe ) ) ) )", "obj1": 0.7524950099800399, "obj2": 0.21055671514510788}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( MRS / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( MUM ,CS ) + RCSe ) )", "obj1": 0.36127744510978044, "obj2": 0.5615768208124343}, {"determining": "Min( ( ( ( MRS - ARS ) + RRS ) + FirstVNF_CPU ) ,FirstVNF_Mem )", "choosing": "( ( MUR + ( ( RCSe - RCSe ) / ( ( ( RMSe - ( RMSe * MLU ) ) + MUR ) * MUR ) ) ) - ( CS - MUC ) )", "obj1": 0.9401197604790419, "obj2": 0.05673130876559557}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( MRS - ARS ) + RRS ),( Max( MDR,ARS ) - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe - ( RMSe * MLU ) ) + MUR ) ) ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) / ( RCSe / MUR ) )", "obj1": 0.8203592814371258, "obj2": 0.15202325637268269}, {"determining": "( ( CRS + ( ( FirstVNF_CPU_Server / CRS ) - Max( PN,FirstVNF_Mem_Server ) ) ) * Max( ARS,AMS ) )", "choosing": "Max( ( MLU * DS ),( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * MUM ) )", "obj1": 0.42115768463073855, "obj2": 0.5144859116433038}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / CS ) ) )", "obj1": 0.7864271457085829, "obj2": 0.1700773022919202}, {"determining": "Max( ( ( ( Const / RRS ) - ( ARS - AMS ) ) / Max( ( ACS / PN ),( CRS / BR ) ) ),( ( ( MDR + BR ) - ( ARS / MDR ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe - DS ) ) / ( ( DS + MUM ) + ( MUR / MUM ) ) ) / ( Max( MUM,MUR ) * MUM ) )", "obj1": 0.34930139720558884, "obj2": 0.6064971803710669}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.9500998003992016, "obj2": 0.02060743412635363}, {"determining": "( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.8223552894211577, "obj2": 0.14026944671509814}, {"determining": "( ( ( ( PN + RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,( MUM + Max( ( ( ( RMSe / MUR ) + MUC ) / MLU ),CS ) ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06993032523692741}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( ( FirstVNF_RAM_Server + RRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( Max( BR,( FirstVNF_Mem - AMS ) ) + ( FirstVNF_Mem + PN ) )", "choosing": "Min( ( Min( RRSe ,CS ) * ( ( RMSe - ( Min( MUR ,Min( CS ,MUC ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) ) * MLU ) ) ,Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.3872255489021956, "obj2": 0.5359742332929832}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.2874251497005988, "obj2": 0.6658436314402941}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( AMS - MDR ) ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUC ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 0.43313373253493015, "obj2": 0.5057804296036904}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.5276794683902458}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,PN ) - ARS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( Max( ( MUR + DS ),MUC ) * MLU ),( ( RCSe * CS ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - ACS ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( MUC * ( CS / MUR ) ) - ( ( MUC * ( CS / MUR ) ) + RCSe ) )", "obj1": 0.37325349301397204, "obj2": 0.5521299609579094}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( MLU / MUC ) )", "obj1": 0.38323353293413176, "obj2": 0.5519579691451807}, {"determining": "Max( ( Min( Const ,RRS ) / ARS ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( ( RRSe + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.5796346505591775}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( ( PN + ACS ) / Min( RRS ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.3532934131736527, "obj2": 0.5944573377478212}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( ( Min( FirstVNF_CPU ,PN ) - ARS ) + RRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe * MLU ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4031936127744511, "obj2": 0.5354196116301827}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( Const / FirstVNF_RAM ) ) ) ) ) * ( AMS * Const ) )", "choosing": "( ( ( ( ( RMSe + Max( MLU,( RMSe * ( MUM * DS ) ) ) ) - RRSe ) + RRSe ) - RRSe ) / ( Max( Max( Min( Max( MUM,( Max( MLU,CS ) / ( RRSe - MUC ) ) ) ,Max( DS,RMSe ) ),( ( DS / ( DS + MUC ) ) + MUM ) ),MUR ) + ( RCSe + MUR ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),Max( RRS,BR ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.35528942115768464, "obj2": 0.5850666017637113}, {"determining": "( ( MRS / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( MUC * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9780439121756487, "obj2": 0.00797655757109081}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Max( FirstVNF_RAM,ACS ) / ( RRS * ( Max( DDR,( FirstVNF_RAM_Server / RRS ) ) - MRS ) ) ) ) )", "choosing": "( ( ( DS + ( Min( ( RMSe * RMSe ) ,MLU ) + ( RCSe / CS ) ) ) - RRSe ) / ( ( RCSe + MLU ) / ( Max( Max( ( DS / ( MLU / MLU ) ),RMSe ),MUR ) + MUC ) ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ( PN - DDR ) / Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( ( MLU - MUC ) + MLU ) - RMSe ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Min( ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( RRS * DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9760479041916168, "obj2": 0.010688296413792679}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + DS ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( BR * Const ) / ( RRS * ( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) ) )", "choosing": "( ( DS - RRSe ) / Max( DS,( RMSe - CS ) ) )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( PN - DDR ) * Min( DDR ,( FirstVNF_CPU_Server * DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( ( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,MUM ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.010890468891801078}, {"determining": "( Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) ) / ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( CS - MLU ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ( Const - DDR ) - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - MDR ) ) ) )", "choosing": "( Max( Max( RCSe,( ( RMSe * MUR ) - DS ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.0007855272393569324}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( ( RMSe + MUR ) + ( MLU - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,Min( FirstVNF_RAM ,ACS ) ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( ( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * Min( Min( ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( MUM / MUC ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( Min( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * Max( ( ( RCSe - ( ( RCSe / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / Min( FirstVNF_CPU_Server ,( MRS + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( MUM - ( DS * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + FirstVNF_Mem_Server ) / ( PN - ( ACS - ( ( BR - Const ) / ( ( BR * FirstVNF_RAM ) - CRS ) ) ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ,( PN * MRS ) )", "choosing": "( ( Min( ( DS * Min( RCSe ,MLU ) ) ,( ( MLU - ( MUM + Min( Max( DS,MUC ) ,Max( CS,MUM ) ) ) ) - ( RMSe * ( Min( ( CS + RCSe ) ,DS ) * RRSe ) ) ) ) / MUC ) + ( ( CS * RMSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) - PN ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "Max( ( MUC - CS ),Min( ( ( MLU + RCSe ) + ( RRSe + MUC ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ACS ) / Min( RRS ,( MRS - FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MUC - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),MRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( Min( ( Min( MLU ,MUC ) / Max( RMSe,MLU ) ) ,Min( Min( MUM ,RCSe ) ,( RMSe * DS ) ) ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( AMS - PN ) ) ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( Max( Min( BR ,FirstVNF_RAM ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) ),BR ) ,PN ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( RMSe / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - Max( Max( ( ACS / FirstVNF_RAM ),( MRS - FirstVNF_CPU ) ),Max( ACS,( MRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Max( ARS,ACS ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * ( DS * MUC ) ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,Min( Min( ( RMSe / RMSe ) ,( CS + MUC ) ) ,Max( ( RMSe * MLU ),( DS + RRSe ) ) ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem_Server / ( ACS * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( RCSe + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( ( ( FirstVNF_Mem / ( FirstVNF_CPU_Server + DDR ) ) / ( ACS - CRS ) ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( Min( ( RRSe / RRSe ) ,( RMSe - MUR ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( DDR * PN ) + Max( AMS,ARS ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( Max( ( DS / RMSe ),RCSe ) + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,AMS ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,( DS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( MUR - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( Max( RRSe,( MLU + MUM ) ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,CRS ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) )", "choosing": "( ( MUR / DS ) - ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6734752751298976}, {"determining": "Min( ( ( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * ( CRS + FirstVNF_Mem ) ) * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( RMSe + RRSe ) * Max( DS,( Max( ( DS + ( ( DS + RRSe ) - ( ( DS + RRSe ) - RRSe ) ) ),( MUC - ( MUM * DS ) ) ) - MLU ) ) )", "obj1": 0.6806387225548902, "obj2": 0.27854900501324653}, {"determining": "( ( ACS * Max( ACS,CRS ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MUC ,RRSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.716566866267465, "obj2": 0.215067627666929}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,AMS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * ( MUM + ( MUR / RCSe ) ) ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.624750499001996, "obj2": 0.28601450195648}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),FirstVNF_Mem ) - Min( CRS ,Const ) )", "choosing": "( ( ( RCSe * ( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( MLU / MUC ) ) ) / ( CS / MUR ) ) + ( MLU / MUC ) )", "obj1": 0.4471057884231537, "obj2": 0.472308559426652}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49700598802395207, "obj2": 0.3968015061310338}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,PN ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( RMSe + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.5868263473053892, "obj2": 0.34621063917048106}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( ( FirstVNF_Mem_Server - AMS ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4870259481037924, "obj2": 0.4305487615198347}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.8483033932135728, "obj2": 0.08095143449087151}, {"determining": "( Max( ( MDR / DDR ),( MDR * MDR ) ) - ( DDR + Max( PN,DDR ) ) )", "choosing": "( Max( RRSe,( MLU + MUM ) ) / ( MUR / Max( RRSe,( MLU + MUM ) ) ) )", "obj1": 0.846307385229541, "obj2": 0.13920436834996655}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8682634730538922, "obj2": 0.0636933940736003}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) ) )", "choosing": "( ( MUC * ( CS / MUR ) ) - ( MUC * ( CS / MUR ) ) )", "obj1": 0.93812375249501, "obj2": 0.062095948258783576}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) ) ) - ( CRS / ( CRS + ( PN + ( FirstVNF_CPU_Server * ARS ) ) ) ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * Max( Min( CS ,Min( RMSe ,MUC ) ),Min( ( MUM * RMSe ) ,( RRSe / RCSe ) ) ) ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) ) ) - ( MLU / RCSe ) )", "obj1": 0.7844311377245509, "obj2": 0.1846092100194636}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ACS ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Min( MUR ,RMSe ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - Min( MUC ,MUR ) ) )", "obj1": 0.7584830339321357, "obj2": 0.21021917873017767}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( Max( ( ( FirstVNF_RAM / CRS ) * ( Max( ACS,AMS ) * FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem_Server,ARS ) ) + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( ( Min( MUC ,CS ) * Min( Max( ( CS * RMSe ),MUC ) ,( RRSe - RCSe ) ) ) - ( MUR + RCSe ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6458681050682077}, {"determining": "Max( Const,Max( RRS,( PN + ACS ) ) )", "choosing": "( Min( MUR ,( ( ( ( MUM * MLU ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - ( Min( MUR ,( ( ( ( MUM * MLU ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - RCSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.4994369018467321}, {"determining": "( ( ( ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,Min( MLU ,( MUM + ( MLU - MUC ) ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.024071271954964755}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Min( ( BR / Const ) ,AMS ) ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / ( MUM * RMSe ) ) ) )", "obj1": 0.7524950099800399, "obj2": 0.21055671514510788}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( MRS / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( MUM ,CS ) + RCSe ) )", "obj1": 0.36127744510978044, "obj2": 0.5615768208124343}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( MDR * ( ACS + ( Const - ARS ) ) ) )", "choosing": "( Min( MUR ,( ( RCSe + ( ( MUC / ( MUC / RCSe ) ) - RMSe ) ) + Min( ( DS / Min( ( Min( MUM ,DS ) * ( MLU / DS ) ) ,DS ) ) ,( ( RRSe / ( RCSe - RRSe ) ) + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.3333333333333333, "obj2": 0.6144297891608806}, {"determining": "Min( ( ( ( MRS - ARS ) + RRS ) + FirstVNF_CPU ) ,FirstVNF_Mem )", "choosing": "( ( MUR + ( ( RCSe - RCSe ) / ( ( ( RMSe - ( RMSe * MLU ) ) + MUR ) * MUR ) ) ) - ( CS - MUC ) )", "obj1": 0.9401197604790419, "obj2": 0.05673130876559557}, {"determining": "( ( CRS + ( ( FirstVNF_CPU_Server / CRS ) - Max( PN,FirstVNF_Mem_Server ) ) ) * Max( ARS,AMS ) )", "choosing": "Max( ( MLU * DS ),( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * MUM ) )", "obj1": 0.42115768463073855, "obj2": 0.5144859116433038}, {"determining": "( BR * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( MUR + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,RCSe ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6482287930178547}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.3273453093812375, "obj2": 0.628178311101064}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / CS ) ) )", "obj1": 0.7864271457085829, "obj2": 0.1700773022919202}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( MRS - ARS ) + RRS ),( Max( MDR,ARS ) - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe - ( RMSe * MLU ) ) + MUR ) ) ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) / ( RCSe / MUR ) )", "obj1": 0.8203592814371258, "obj2": 0.15202325637268269}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( AMS - MDR ) ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUC ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 0.43313373253493015, "obj2": 0.5057804296036904}, {"determining": "( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.8223552894211577, "obj2": 0.14026944671509814}, {"determining": "( ( ( ( PN + RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,( MUM + Max( ( ( ( RMSe / MUR ) + MUC ) / MLU ),CS ) ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06993032523692741}, {"determining": "Max( ( ( ( Const / RRS ) - ( ARS - AMS ) ) / Max( ( ACS / PN ),( CRS / BR ) ) ),( ( ( MDR + BR ) - ( ARS / MDR ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe - DS ) ) / ( ( DS + MUM ) + ( MUR / MUM ) ) ) / ( Max( MUM,MUR ) * MUM ) )", "obj1": 0.34930139720558884, "obj2": 0.6064971803710669}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( Max( BR,( FirstVNF_Mem - AMS ) ) + ( FirstVNF_Mem + PN ) )", "choosing": "Min( ( Min( RRSe ,CS ) * ( ( RMSe - ( Min( MUR ,Min( CS ,MUC ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) ) * MLU ) ) ,Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.3872255489021956, "obj2": 0.5359742332929832}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.2874251497005988, "obj2": 0.6658436314402941}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.5276794683902458}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,PN ) - ARS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( Max( ( MUR + DS ),MUC ) * MLU ),( ( RCSe * CS ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - ACS ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( MUC * ( CS / MUR ) ) - ( ( MUC * ( CS / MUR ) ) + RCSe ) )", "obj1": 0.37325349301397204, "obj2": 0.5521299609579094}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( MLU / MUC ) )", "obj1": 0.38323353293413176, "obj2": 0.5519579691451807}, {"determining": "Max( ( Min( Const ,RRS ) / ARS ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( ( RRSe + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.5796346505591775}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( DDR - FirstVNF_Mem ) ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.8083832335329342, "obj2": 0.16537209165058447}, {"determining": "( ( Max( BR,CRS ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( ( ( PN - DDR ) / Const ) * DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe - Min( ( MLU * ( MLU + MUC ) ) ,MUC ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) / Max( DS,DS ) )", "obj1": 0.9620758483033932, "obj2": 0.016515527149469487}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.9500998003992016, "obj2": 0.02060743412635363}, {"determining": "( ( ( DDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ) * Max( DS,Min( Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8063872255489022, "obj2": 0.166426853848359}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( ( Min( FirstVNF_CPU ,PN ) - ARS ) + RRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe * MLU ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4031936127744511, "obj2": 0.5354196116301827}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),Max( RRS,BR ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.35528942115768464, "obj2": 0.5850666017637113}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,AMS )", "choosing": "( Min( MUM ,MLU ) - ( RMSe / MLU ) )", "obj1": 0.35129740518962077, "obj2": 0.5955813758385716}, {"determining": "( ( MRS / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( MUC * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9780439121756487, "obj2": 0.00797655757109081}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( ( PN + ACS ) / Min( RRS ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.3532934131736527, "obj2": 0.5944573377478212}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM_Server + RRS ) ) )", "choosing": "( ( ( DS + ( ( ( Min( MUM ,RRSe ) + ( RCSe / CS ) ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005090035339460688}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( Const / FirstVNF_RAM ) ) ) ) ) * ( AMS * Const ) )", "choosing": "( ( ( ( ( RMSe + Max( MLU,( RMSe * ( MUM * DS ) ) ) ) - RRSe ) + RRSe ) - RRSe ) / ( Max( Max( Min( Max( MUM,( Max( MLU,CS ) / ( RRSe - MUC ) ) ) ,Max( DS,RMSe ) ),( ( DS / ( DS + MUC ) ) + MUM ) ),MUR ) + ( RCSe + MUR ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Min( ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( RRS * DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9760479041916168, "obj2": 0.010688296413792679}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + DS ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( BR * Const ) / ( RRS * ( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) ) )", "choosing": "( ( DS - RRSe ) / Max( DS,( RMSe - CS ) ) )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( PN - DDR ) * Min( DDR ,( FirstVNF_CPU_Server * DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( ( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,MUM ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.010890468891801078}, {"determining": "( ( ( PN - DDR ) / Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( ( MLU - MUC ) + MLU ) - RMSe ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) ) / ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( CS - MLU ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RRSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005850286447923677}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( PN - DDR ) / DDR ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( ( ( PN - DDR ) / ( FirstVNF_CPU_Server / ( RRS / Min( DDR ,( CRS + MRS ) ) ) ) ) * MDR )", "choosing": "( ( ( ( DS + RRSe ) + RRSe ) - RRSe ) / Min( RCSe ,CS ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( ( RMSe + MUR ) + ( MLU - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,Min( FirstVNF_RAM ,ACS ) ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + RRS ) ) ) )", "choosing": "( Max( RCSe,( ( ( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) * MUR ) - DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Max( FirstVNF_RAM,ACS ) / ( RRS * ( Max( DDR,( FirstVNF_RAM_Server / RRS ) ) - MRS ) ) ) ) )", "choosing": "( ( ( DS + ( Min( ( RMSe * RMSe ) ,MLU ) + ( RCSe / CS ) ) ) - RRSe ) / ( ( RCSe + MLU ) / ( Max( Max( ( DS / ( MLU / MLU ) ),RMSe ),MUR ) + MUC ) ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( CRS - ( DDR + Const ) ) )", "choosing": "Max( MUR,Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * Max( ( ( RCSe - ( ( RCSe / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / Min( FirstVNF_CPU_Server ,( MRS + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( MUM - ( DS * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + FirstVNF_Mem_Server ) / ( PN - ( ACS - ( ( BR - Const ) / ( ( BR * FirstVNF_RAM ) - CRS ) ) ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ,( PN * MRS ) )", "choosing": "( ( Min( ( DS * Min( RCSe ,MLU ) ) ,( ( MLU - ( MUM + Min( Max( DS,MUC ) ,Max( CS,MUM ) ) ) ) - ( RMSe * ( Min( ( CS + RCSe ) ,DS ) * RRSe ) ) ) ) / MUC ) + ( ( CS * RMSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) - PN ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "Max( ( MUC - CS ),Min( ( ( MLU + RCSe ) + ( RRSe + MUC ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ACS ) / Min( RRS ,( MRS - FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MUC - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),MRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( Min( ( Min( MLU ,MUC ) / Max( RMSe,MLU ) ) ,Min( Min( MUM ,RCSe ) ,( RMSe * DS ) ) ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( AMS - PN ) ) ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( ( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( Max( Min( BR ,FirstVNF_RAM ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) ),BR ) ,PN ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ),( FirstVNF_Mem - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( RMSe / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( DDR * Min( FirstVNF_CPU_Server ,( ( DDR * DDR ) - ARS ) ) ) * Max( ( ( ( ( ( DDR * DDR ) - ARS ) * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) - RRSe ) / Max( DS,Min( ( DS - MUR ) ,( MUM + ( MUM + ( MUR / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( MUR - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( Max( RRSe,( MLU + MUM ) ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) )", "choosing": "( ( MUR / DS ) - ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6734752751298976}, {"determining": "Min( ( ( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * ( CRS + FirstVNF_Mem ) ) * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( RMSe + RRSe ) * Max( DS,( Max( ( DS + ( ( DS + RRSe ) - ( ( DS + RRSe ) - RRSe ) ) ),( MUC - ( MUM * DS ) ) ) - MLU ) ) )", "obj1": 0.6806387225548902, "obj2": 0.27854900501324653}, {"determining": "( ( ACS * Max( ACS,CRS ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MUC ,RRSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.716566866267465, "obj2": 0.215067627666929}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,AMS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * ( MUM + ( MUR / RCSe ) ) ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.624750499001996, "obj2": 0.28601450195648}, {"determining": "( ( ( Min( Max( ACS,PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( DS - MUC ) ) * ( RRSe * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.936127744510978, "obj2": 0.03719504272937165}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),FirstVNF_Mem ) - Min( CRS ,Const ) )", "choosing": "( ( ( RCSe * ( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( MLU / MUC ) ) ) / ( CS / MUR ) ) + ( MLU / MUC ) )", "obj1": 0.4471057884231537, "obj2": 0.472308559426652}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49700598802395207, "obj2": 0.3968015061310338}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8682634730538922, "obj2": 0.0636933940736003}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( ( FirstVNF_Mem_Server - AMS ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4870259481037924, "obj2": 0.4305487615198347}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.8483033932135728, "obj2": 0.08095143449087151}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,PN ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( RMSe + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.5868263473053892, "obj2": 0.34621063917048106}, {"determining": "( Max( ( MDR / DDR ),( MDR * MDR ) ) - ( DDR + Max( PN,DDR ) ) )", "choosing": "( Max( RRSe,( MLU + MUM ) ) / ( MUR / Max( RRSe,( MLU + MUM ) ) ) )", "obj1": 0.846307385229541, "obj2": 0.13920436834996655}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) ) ) - ( CRS / ( CRS + ( PN + ( FirstVNF_CPU_Server * ARS ) ) ) ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * Max( Min( CS ,Min( RMSe ,MUC ) ),Min( ( MUM * RMSe ) ,( RRSe / RCSe ) ) ) ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) ) ) - ( MLU / RCSe ) )", "obj1": 0.7844311377245509, "obj2": 0.1846092100194636}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ACS ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Min( MUR ,RMSe ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - Min( MUC ,MUR ) ) )", "obj1": 0.7584830339321357, "obj2": 0.21021917873017767}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( Max( ( ( FirstVNF_RAM / CRS ) * ( Max( ACS,AMS ) * FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem_Server,ARS ) ) + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( ( Min( MUC ,CS ) * Min( Max( ( CS * RMSe ),MUC ) ,( RRSe - RCSe ) ) ) - ( MUR + RCSe ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6458681050682077}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( MDR * ( ACS + ( Const - ARS ) ) ) )", "choosing": "( Min( MUR ,( ( RCSe + ( ( MUC / ( MUC / RCSe ) ) - RMSe ) ) + Min( ( DS / Min( ( Min( MUM ,DS ) * ( MLU / DS ) ) ,DS ) ) ,( ( RRSe / ( RCSe - RRSe ) ) + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.3333333333333333, "obj2": 0.6144297891608806}, {"determining": "Max( Const,Max( RRS,( PN + ACS ) ) )", "choosing": "( Min( MUR ,( ( ( ( MUM * MLU ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - ( Min( MUR ,( ( ( ( MUM * MLU ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - RCSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.4994369018467321}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Min( ( BR / Const ) ,AMS ) ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / ( MUM * RMSe ) ) ) )", "obj1": 0.7524950099800399, "obj2": 0.21055671514510788}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( MRS / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( MUM ,CS ) + RCSe ) )", "obj1": 0.36127744510978044, "obj2": 0.5615768208124343}, {"determining": "( ( CRS + ( ( FirstVNF_CPU_Server / CRS ) - Max( PN,FirstVNF_Mem_Server ) ) ) * Max( ARS,AMS ) )", "choosing": "Max( ( MLU * DS ),( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * MUM ) )", "obj1": 0.42115768463073855, "obj2": 0.5144859116433038}, {"determining": "( BR * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( MUR + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,RCSe ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6482287930178547}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.3273453093812375, "obj2": 0.628178311101064}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( MRS - ARS ) + RRS ),( Max( MDR,ARS ) - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe - ( RMSe * MLU ) ) + MUR ) ) ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) / ( RCSe / MUR ) )", "obj1": 0.8203592814371258, "obj2": 0.15202325637268269}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( AMS - MDR ) ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUC ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 0.43313373253493015, "obj2": 0.5057804296036904}, {"determining": "( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.8223552894211577, "obj2": 0.14026944671509814}, {"determining": "( ( ( ( PN + RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,( MUM + Max( ( ( ( RMSe / MUR ) + MUC ) / MLU ),CS ) ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06993032523692741}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,( FirstVNF_CPU - Max( FirstVNF_RAM_Server,( RRS + ( ACS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RCSe / ( ( MUR + ( RCSe * Min( RCSe ,MUC ) ) ) + MUC ) ) - ( RMSe / MLU ) )", "obj1": 0.34930139720558884, "obj2": 0.5967318506164458}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.2874251497005988, "obj2": 0.6658436314402941}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.5276794683902458}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,PN ) - ARS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( Max( ( MUR + DS ),MUC ) * MLU ),( ( RCSe * CS ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - ACS ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( MUC * ( CS / MUR ) ) - ( ( MUC * ( CS / MUR ) ) + RCSe ) )", "obj1": 0.37325349301397204, "obj2": 0.5521299609579094}, {"determining": "( ( ( ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,Min( MLU ,( MUM + ( MLU - MUC ) ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.024071271954964755}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( MLU / MUC ) )", "obj1": 0.38323353293413176, "obj2": 0.5519579691451807}, {"determining": "Max( ( Min( Const ,RRS ) / ARS ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( ( RRSe + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.5796346505591775}, {"determining": "( Max( BR,( FirstVNF_Mem - AMS ) ) + ( FirstVNF_Mem + PN ) )", "choosing": "Min( ( Min( RRSe ,CS ) * ( ( RMSe - ( Min( MUR ,Min( CS ,MUC ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) ) * MLU ) ) ,Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.3872255489021956, "obj2": 0.5359742332929832}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( DDR - FirstVNF_Mem ) ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.8083832335329342, "obj2": 0.16537209165058447}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6027944111776448, "obj2": 0.33561484224902643}, {"determining": "( ( Max( BR,CRS ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( ( ( PN - DDR ) / Const ) * DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe - Min( ( MLU * ( MLU + MUC ) ) ,MUC ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) / Max( DS,DS ) )", "obj1": 0.9620758483033932, "obj2": 0.016515527149469487}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.9500998003992016, "obj2": 0.02060743412635363}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ARS ) ,FirstVNF_CPU_Server ) - ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ARS ) ,FirstVNF_CPU_Server ) - DDR ) / Const ) ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( ( ( ( DS + MUM ) - MUC ) - RRSe ) + RRSe ) - RRSe ) / Max( DS,( ( ( ( ( ( DS + MUM ) - MUC ) - RRSe ) - ( CS - ( RMSe + MUC ) ) ) + MLU ) - RMSe ) ) )", "obj1": 0.7884231536926147, "obj2": 0.1689521309874456}, {"determining": "( ( ( DDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ) * Max( DS,Min( Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8063872255489022, "obj2": 0.166426853848359}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / CS ) ) )", "obj1": 0.7864271457085829, "obj2": 0.1700773022919202}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),Max( RRS,BR ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.35528942115768464, "obj2": 0.5850666017637113}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6027944111776448, "obj2": 0.33561484224902643}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,Max( ( Const - MDR ),FirstVNF_RAM ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / ( ( ( MUR - ( MLU / MUM ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.39520958083832336, "obj2": 0.5355554882973808}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( ( Min( FirstVNF_CPU ,PN ) - ARS ) + RRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe * MLU ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4031936127744511, "obj2": 0.5354196116301827}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( ( PN + ACS ) / Min( RRS ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.3532934131736527, "obj2": 0.5944573377478212}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ( PN - DDR ) / ( BR - ( RRS - CRS ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,( MUR + CS ) ) + ( ( MUM / MUC ) + RMSe ) ) + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9820359281437125, "obj2": 0.006907577834544084}, {"determining": "( ( MRS / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( MUC * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9780439121756487, "obj2": 0.00797655757109081}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM_Server + RRS ) ) )", "choosing": "( ( ( DS + ( ( ( Min( MUM ,RRSe ) + ( RCSe / CS ) ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005090035339460688}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( Const / FirstVNF_RAM ) ) ) ) ) * ( AMS * Const ) )", "choosing": "( ( ( ( ( RMSe + Max( MLU,( RMSe * ( MUM * DS ) ) ) ) - RRSe ) + RRSe ) - RRSe ) / ( Max( Max( Min( Max( MUM,( Max( MLU,CS ) / ( RRSe - MUC ) ) ) ,Max( DS,RMSe ) ),( ( DS / ( DS + MUC ) ) + MUM ) ),MUR ) + ( RCSe + MUR ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Min( ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( RRS * DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9760479041916168, "obj2": 0.010688296413792679}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,AMS )", "choosing": "( Min( MUM ,MLU ) - ( RMSe / MLU ) )", "obj1": 0.35129740518962077, "obj2": 0.5955813758385716}, {"determining": "( ( ( PN - DDR ) * Min( DDR ,( FirstVNF_CPU_Server * DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( ( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,MUM ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.010890468891801078}, {"determining": "( ( ( PN - DDR ) / Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( ( MLU - MUC ) + MLU ) - RMSe ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( CRS - Max( MRS,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / ( Min( ( MUM * MLU ) ,RRSe ) + ( RCSe / CS ) ) ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003381711332599562}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / MUC ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( ( DS / Min( RRSe ,( RRSe / DS ) ) ) / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005812867708841387}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + DS ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( BR * Const ) / ( RRS * ( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) ) )", "choosing": "( ( DS - RRSe ) / Max( DS,( RMSe - CS ) ) )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * Max( ( ( RRS + PN ) * MRS ),( ARS + Max( Min( FirstVNF_CPU_Server ,ACS ),RRS ) ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / Max( RCSe,DS ) ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( ( ( PN - DDR ) / DDR ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( ( ( ( PN - DDR ) / Const ) * Max( FirstVNF_RAM,MRS ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) - RRSe ) / RRSe )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( PN - DDR ) / Const ) * DDR )", "choosing": "( ( DS - ( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + ( ( DS + RRSe ) - RRSe ) ) - RMSe ) ) ) ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( PN - DDR ) / ( FirstVNF_CPU_Server / ( RRS / Min( DDR ,( CRS + MRS ) ) ) ) ) * MDR )", "choosing": "( ( ( ( DS + RRSe ) + RRSe ) - RRSe ) / Min( RCSe ,CS ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( FirstVNF_RAM,( PN - DDR ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + ( ( DS + RRSe ) - RRSe ) ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "Min( Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,CRS ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( CRS - ( DDR + Const ) ) )", "choosing": "Max( MUR,Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * Max( ( ( RCSe - ( ( RCSe / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / Min( FirstVNF_CPU_Server ,( MRS + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( MUM - ( DS * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + FirstVNF_Mem_Server ) / ( PN - ( ACS - ( ( BR - Const ) / ( ( BR * FirstVNF_RAM ) - CRS ) ) ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) ,( PN * MRS ) )", "choosing": "( ( Min( ( DS * Min( RCSe ,MLU ) ) ,( ( MLU - ( MUM + Min( Max( DS,MUC ) ,Max( CS,MUM ) ) ) ) - ( RMSe * ( Min( ( CS + RCSe ) ,DS ) * RRSe ) ) ) ) / MUC ) + ( ( CS * RMSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) - PN ) / ( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "Max( ( MUC - CS ),Min( ( ( MLU + RCSe ) + ( RRSe + MUC ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ACS ) / Min( RRS ,( MRS - FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MUC - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,MUC ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( Max( DDR,FirstVNF_CPU ) + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( ( CRS - ( Max( DDR,FirstVNF_CPU ) + Const ) ) / PN ) ) )", "choosing": "Max( ( ( ( ( RRSe + Max( ( CS - CS ),( RMSe * RMSe ) ) ) / RRSe ) - ( ( ( RRSe + Max( ( CS - CS ),( RMSe * RMSe ) ) ) / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * Min( FirstVNF_CPU_Server ,( ( DDR * DDR ) - ARS ) ) ) * Max( ( ( ( ( ( DDR * DDR ) - ARS ) * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) - RRSe ) / Max( DS,Min( ( DS - MUR ) ,( MUM + ( MUM + ( MUR / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const * Max( MDR,( FirstVNF_CPU_Server / ACS ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( DS - RRSe ) / Max( DS,( ( Min( MUR ,( MUC + MUC ) ) * ( RRSe * MUC ) ) - CS ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.7017855846601725}, {"determining": "Min( ( ( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * ( CRS + FirstVNF_Mem ) ) * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( RMSe + RRSe ) * Max( DS,( Max( ( DS + ( ( DS + RRSe ) - ( ( DS + RRSe ) - RRSe ) ) ),( MUC - ( MUM * DS ) ) ) - MLU ) ) )", "obj1": 0.6806387225548902, "obj2": 0.27854900501324653}, {"determining": "( ( ACS * Max( ACS,CRS ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MUC ,RRSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.716566866267465, "obj2": 0.215067627666929}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,AMS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * ( MUM + ( MUR / RCSe ) ) ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.624750499001996, "obj2": 0.28601450195648}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49700598802395207, "obj2": 0.3968015061310338}, {"determining": "( ( ACS * ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * ( CS / MUR ) ) - ( DS + RCSe ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.9121756487025948, "obj2": 0.04608102246647821}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.8483033932135728, "obj2": 0.08095143449087151}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,PN ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( RMSe + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.5868263473053892, "obj2": 0.34621063917048106}, {"determining": "( Max( ( MDR / DDR ),( MDR * MDR ) ) - ( DDR + Max( PN,DDR ) ) )", "choosing": "( Max( RRSe,( MLU + MUM ) ) / ( MUR / Max( RRSe,( MLU + MUM ) ) ) )", "obj1": 0.846307385229541, "obj2": 0.13920436834996655}, {"determining": "( ( ( PN - DDR ) / Const ) * ( ( PN - DDR ) / Const ) )", "choosing": "( ( ( DS - RRSe ) / Max( DS,( RMSe - CS ) ) ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.4810379241516966, "obj2": 0.4663757055028512}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8682634730538922, "obj2": 0.0636933940736003}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) ) ) - ( CRS / ( CRS + ( PN + ( FirstVNF_CPU_Server * ARS ) ) ) ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * Max( Min( CS ,Min( RMSe ,MUC ) ),Min( ( MUM * RMSe ) ,( RRSe / RCSe ) ) ) ) / ( ( MUC - MUR ) * ( MUC / MUR ) ) ) ) ) - ( MLU / RCSe ) )", "obj1": 0.7844311377245509, "obj2": 0.1846092100194636}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),FirstVNF_Mem ) - Min( CRS ,Const ) )", "choosing": "( ( ( RCSe * ( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( MLU / MUC ) ) ) / ( CS / MUR ) ) + ( MLU / MUC ) )", "obj1": 0.4471057884231537, "obj2": 0.472308559426652}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ACS ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Min( MUR ,RMSe ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - Min( MUC ,MUR ) ) )", "obj1": 0.7584830339321357, "obj2": 0.21021917873017767}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( Max( ( ( FirstVNF_RAM / CRS ) * ( Max( ACS,AMS ) * FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem_Server,ARS ) ) + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( ( Min( MUC ,CS ) * Min( Max( ( CS * RMSe ),MUC ) ,( RRSe - RCSe ) ) ) - ( MUR + RCSe ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6458681050682077}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) )", "choosing": "( ( MUR / DS ) - ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6734752751298976}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( MDR * ( ACS + ( Const - ARS ) ) ) )", "choosing": "( Min( MUR ,( ( RCSe + ( ( MUC / ( MUC / RCSe ) ) - RMSe ) ) + Min( ( DS / Min( ( Min( MUM ,DS ) * ( MLU / DS ) ) ,DS ) ) ,( ( RRSe / ( RCSe - RRSe ) ) + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.3333333333333333, "obj2": 0.6144297891608806}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( ( FirstVNF_Mem_Server - AMS ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4870259481037924, "obj2": 0.4305487615198347}, {"determining": "( ( ( Min( Max( ACS,PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( DS - MUC ) ) * ( RRSe * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.936127744510978, "obj2": 0.03719504272937165}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,( FirstVNF_CPU - Max( FirstVNF_RAM_Server,PN ) ) ) )", "choosing": "( ( RCSe / ( ( MUR + ( Min( Min( MUR ,MUM ) ,Min( RMSe ,Min( CS ,CS ) ) ) / RMSe ) ) + MUC ) ) - ( RMSe / MLU ) )", "obj1": 0.3712574850299401, "obj2": 0.5494693914118722}, {"determining": "( ( FirstVNF_RAM_Server - PN ) / ( ( ( MDR / FirstVNF_RAM ) / ( ( ( RRS + BR ) - RRS ) + ( PN * MDR ) ) ) / ( RRS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC - CS ),( MUR - MUM ) )", "obj1": 0.4431137724550898, "obj2": 0.4963314915791039}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Min( ( BR / Const ) ,AMS ) ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / ( MUM * RMSe ) ) ) )", "obj1": 0.7524950099800399, "obj2": 0.21055671514510788}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( MRS / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( MUM ,CS ) + RCSe ) )", "obj1": 0.36127744510978044, "obj2": 0.5615768208124343}, {"determining": "( BR * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( MUR + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,RCSe ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6482287930178547}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( AMS - MDR ) ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUC ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 0.43313373253493015, "obj2": 0.5057804296036904}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.3273453093812375, "obj2": 0.628178311101064}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( MRS - ARS ) + RRS ),( Max( MDR,ARS ) - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe - ( RMSe * MLU ) ) + MUR ) ) ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) / ( RCSe / MUR ) )", "obj1": 0.8203592814371258, "obj2": 0.15202325637268269}, {"determining": "( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.8223552894211577, "obj2": 0.14026944671509814}, {"determining": "( Max( BR,( FirstVNF_Mem - AMS ) ) + ( FirstVNF_Mem + PN ) )", "choosing": "Min( ( Min( RRSe ,CS ) * ( ( RMSe - ( Min( MUR ,Min( CS ,MUC ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) ) * MLU ) ) ,Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.3872255489021956, "obj2": 0.5359742332929832}, {"determining": "( ( ( ( PN + RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,( MUM + Max( ( ( ( RMSe / MUR ) + MUC ) / MLU ),CS ) ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06993032523692741}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,( FirstVNF_CPU - Max( FirstVNF_RAM_Server,( RRS + ( ACS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RCSe / ( ( MUR + ( RCSe * Min( RCSe ,MUC ) ) ) + MUC ) ) - ( RMSe / MLU ) )", "obj1": 0.34930139720558884, "obj2": 0.5967318506164458}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.2874251497005988, "obj2": 0.6658436314402941}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,PN ) - ARS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( Max( ( MUR + DS ),MUC ) * MLU ),( ( RCSe * CS ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ( ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,Min( MLU ,( MUM + ( MLU - MUC ) ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.024071271954964755}, {"determining": "Max( ( Min( Const ,RRS ) / ARS ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( ( RRSe + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.5796346505591775}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.5276794683902458}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( DDR - FirstVNF_Mem ) ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.8083832335329342, "obj2": 0.16537209165058447}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6027944111776448, "obj2": 0.33561484224902643}, {"determining": "( ( Max( BR,CRS ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( ( ( PN - DDR ) / Const ) * DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe - Min( ( MLU * ( MLU + MUC ) ) ,MUC ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) / Max( DS,DS ) )", "obj1": 0.9620758483033932, "obj2": 0.016515527149469487}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.9500998003992016, "obj2": 0.02060743412635363}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ARS ) ,FirstVNF_CPU_Server ) - ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ARS ) ,FirstVNF_CPU_Server ) - DDR ) / Const ) ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( ( ( ( DS + MUM ) - MUC ) - RRSe ) + RRSe ) - RRSe ) / Max( DS,( ( ( ( ( ( DS + MUM ) - MUC ) - RRSe ) - ( CS - ( RMSe + MUC ) ) ) + MLU ) - RMSe ) ) )", "obj1": 0.7884231536926147, "obj2": 0.1689521309874456}, {"determining": "( ( ( DDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS + RRSe ) * Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ) * Max( DS,Min( Max( DS,Min( ( DS - MUR ) ,( MUM + ( MLU - MUC ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.8063872255489022, "obj2": 0.166426853848359}, {"determining": "( ( CRS + ( ( FirstVNF_CPU_Server / CRS ) - Max( PN,FirstVNF_Mem_Server ) ) ) * Max( ARS,AMS ) )", "choosing": "Max( ( MLU * DS ),( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * MUM ) )", "obj1": 0.42115768463073855, "obj2": 0.5144859116433038}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Max( ( MDR / DDR ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ) )", "obj1": 0.41916167664670656, "obj2": 0.5146102924405052}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Const ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / CS ) ) )", "obj1": 0.7864271457085829, "obj2": 0.1700773022919202}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),Max( RRS,BR ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / Max( MUR,Min( MLU ,MUM ) ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.35528942115768464, "obj2": 0.5850666017637113}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6027944111776448, "obj2": 0.33561484224902643}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,Max( ( Const - MDR ),FirstVNF_RAM ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / ( ( ( MUR - ( MLU / MUM ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.39520958083832336, "obj2": 0.5355554882973808}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( ( Min( FirstVNF_CPU ,PN ) - ARS ) + RRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe * MLU ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4031936127744511, "obj2": 0.5354196116301827}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( ( PN + ACS ) / Min( RRS ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUR ,( ( ( Max( ( MUC - ( DS - MLU ) ),Min( MUR ,CS ) ) + RMSe ) / ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ) ) - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.3532934131736527, "obj2": 0.5944573377478212}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ( PN - DDR ) / ( BR - ( RRS - CRS ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,( MUR + CS ) ) + ( ( MUM / MUC ) + RMSe ) ) + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9820359281437125, "obj2": 0.006907577834544084}, {"determining": "( ( MRS / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( MUC * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9780439121756487, "obj2": 0.00797655757109081}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM_Server + RRS ) ) )", "choosing": "( ( ( DS + ( ( ( Min( MUM ,RRSe ) + ( RCSe / CS ) ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005090035339460688}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( Const / FirstVNF_RAM ) ) ) ) ) * ( AMS * Const ) )", "choosing": "( ( ( ( ( RMSe + Max( MLU,( RMSe * ( MUM * DS ) ) ) ) - RRSe ) + RRSe ) - RRSe ) / ( Max( Max( Min( Max( MUM,( Max( MLU,CS ) / ( RRSe - MUC ) ) ) ,Max( DS,RMSe ) ),( ( DS / ( DS + MUC ) ) + MUM ) ),MUR ) + ( RCSe + MUR ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Min( ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( RRS * DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9760479041916168, "obj2": 0.010688296413792679}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,AMS )", "choosing": "( Min( MUM ,MLU ) - ( RMSe / MLU ) )", "obj1": 0.35129740518962077, "obj2": 0.5955813758385716}, {"determining": "( ( ( PN - DDR ) * Min( DDR ,( FirstVNF_CPU_Server * DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( ( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,MUM ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.010890468891801078}, {"determining": "( ( ( PN - DDR ) / Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( ( MLU - MUC ) + MLU ) - RMSe ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( CRS - Max( MRS,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / ( Min( ( MUM * MLU ) ,RRSe ) + ( RCSe / CS ) ) ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003381711332599562}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / MUC ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( ( DS / Min( RRSe ,( RRSe / DS ) ) ) / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005812867708841387}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + DS ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( BR * Const ) / ( RRS * ( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) ) )", "choosing": "( ( DS - RRSe ) / Max( DS,( RMSe - CS ) ) )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + MRS ) ,ARS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / ( MUM * MLU ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * Max( ( ( RRS + PN ) * MRS ),( ARS + Max( Min( FirstVNF_CPU_Server ,ACS ),RRS ) ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / Max( RCSe,DS ) ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( ( ( ( PN - DDR ) / Const ) * Max( FirstVNF_RAM,MRS ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) - RRSe ) / RRSe )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * PN ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( PN - DDR ) / Const ) * DDR )", "choosing": "( ( DS - ( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + ( ( DS + RRSe ) - RRSe ) ) - RMSe ) ) ) ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( FirstVNF_RAM,( PN - DDR ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + ( ( DS + RRSe ) - RRSe ) ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( MUR - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( Max( RRSe,( MLU + MUM ) ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,CRS ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( CRS - ( DDR + Const ) ) )", "choosing": "Max( MUR,Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * Max( ( ( RCSe - ( ( RCSe / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / Min( FirstVNF_CPU_Server ,( MRS + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( MUM - ( DS * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( Min( ( ( MRS + MDR ) - ( ( PN + PN ) - ( PN * Const ) ) ) ,( MRS + DDR ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( MLU / MLU ) * ( ( Max( DS,RCSe ) * RCSe ) - ( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) / ( RMSe + Min( RCSe ,( MUC + Min( MUM ,MUM ) ) ) ) ) ) ) / ( MUR / Max( RRSe,Min( ( MUM / ( ( Min( CS ,RMSe ) - ( MUR * RMSe ) ) / RMSe ) ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( Max( DDR,FirstVNF_CPU ) + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( ( CRS - ( Max( DDR,FirstVNF_CPU ) + Const ) ) / PN ) ) )", "choosing": "Max( ( ( ( ( RRSe + Max( ( CS - CS ),( RMSe * RMSe ) ) ) / RRSe ) - ( ( ( RRSe + Max( ( CS - CS ),( RMSe * RMSe ) ) ) / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const * Max( MDR,( FirstVNF_CPU_Server / ACS ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( DS - RRSe ) / Max( DS,( ( Min( MUR ,( MUC + MUC ) ) * ( RRSe * MUC ) ) - CS ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.7017855846601725}, {"determining": "Min( ( ( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * ( CRS + FirstVNF_Mem ) ) * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( RMSe + RRSe ) * Max( DS,( Max( ( DS + ( ( DS + RRSe ) - ( ( DS + RRSe ) - RRSe ) ) ),( MUC - ( MUM * DS ) ) ) - MLU ) ) )", "obj1": 0.6806387225548902, "obj2": 0.27854900501324653}, {"determining": "( ( ACS * Max( ACS,CRS ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MUC ,RRSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.716566866267465, "obj2": 0.215067627666929}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * CS ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.780439121756487, "obj2": 0.16143280895453305}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,AMS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * ( MUM + ( MUR / RCSe ) ) ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.624750499001996, "obj2": 0.28601450195648}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49700598802395207, "obj2": 0.3968015061310338}, {"determining": "( ( ACS * ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * ( CS / MUR ) ) - ( DS + RCSe ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.9121756487025948, "obj2": 0.04608102246647821}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.8483033932135728, "obj2": 0.08095143449087151}, {"determining": "( Max( ( MDR / DDR ),( MDR * MDR ) ) - ( DDR + Max( PN,DDR ) ) )", "choosing": "( Max( RRSe,( MLU + MUM ) ) / ( MUR / Max( RRSe,( MLU + MUM ) ) ) )", "obj1": 0.846307385229541, "obj2": 0.13920436834996655}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( ( PN - DDR ) / Const ) * ( ( PN - DDR ) / Const ) )", "choosing": "( ( ( DS - RRSe ) / Max( DS,( RMSe - CS ) ) ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.4810379241516966, "obj2": 0.4663757055028512}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,PN ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( RMSe + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.5868263473053892, "obj2": 0.34621063917048106}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ACS ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Min( MUR ,RMSe ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - Min( MUC ,MUR ) ) )", "obj1": 0.7584830339321357, "obj2": 0.21021917873017767}, {"determining": "( ( Const - Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / DDR ) ) ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / DDR ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( CS,DS ) )", "obj1": 0.8662674650698603, "obj2": 0.058419977820039104}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),FirstVNF_Mem ) - Min( CRS ,Const ) )", "choosing": "( ( ( RCSe * ( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( MLU / MUC ) ) ) / ( CS / MUR ) ) + ( MLU / MUC ) )", "obj1": 0.4471057884231537, "obj2": 0.472308559426652}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( MDR * ( ACS + ( Const - ARS ) ) ) )", "choosing": "( Min( MUR ,( ( RCSe + ( ( MUC / ( MUC / RCSe ) ) - RMSe ) ) + Min( ( DS / Min( ( Min( MUM ,DS ) * ( MLU / DS ) ) ,DS ) ) ,( ( RRSe / ( RCSe - RRSe ) ) + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.3333333333333333, "obj2": 0.6144297891608806}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( MRS - ARS ) + RRS ),( Max( MDR,ARS ) - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe - ( RMSe * MLU ) ) + MUR ) ) ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) / ( RCSe / MUR ) )", "obj1": 0.8203592814371258, "obj2": 0.15202325637268269}, {"determining": "( MRS * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / DDR ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( Max( CS,DS ) - DS ) )", "obj1": 0.5728542914171657, "obj2": 0.3857028740998197}, {"determining": "( RRS * Max( DDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( RCSe + RMSe ) / ( ( DS - MUR ) - DS ) )", "obj1": 0.34331337325349304, "obj2": 0.581826782653547}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) ) ) )", "choosing": "( ( MUC * ( CS / ( MUC * ( CS / MUR ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.3153692614770459, "obj2": 0.6322192518976912}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) )", "choosing": "( ( MUR / DS ) - ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6734752751298976}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( ( FirstVNF_Mem_Server - AMS ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4870259481037924, "obj2": 0.4305487615198347}, {"determining": "( ( ( Min( Max( ACS,PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( DS - MUC ) ) * ( RRSe * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.936127744510978, "obj2": 0.03719504272937165}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,( FirstVNF_CPU - Max( FirstVNF_RAM_Server,PN ) ) ) )", "choosing": "( ( RCSe / ( ( MUR + ( Min( Min( MUR ,MUM ) ,Min( RMSe ,Min( CS ,CS ) ) ) / RMSe ) ) + MUC ) ) - ( RMSe / MLU ) )", "obj1": 0.3712574850299401, "obj2": 0.5494693914118722}, {"determining": "( ( FirstVNF_RAM_Server - PN ) / ( ( ( MDR / FirstVNF_RAM ) / ( ( ( RRS + BR ) - RRS ) + ( PN * MDR ) ) ) / ( RRS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC - CS ),( MUR - MUM ) )", "obj1": 0.4431137724550898, "obj2": 0.4963314915791039}, {"determining": "( BR * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( MUR + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,RCSe ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6482287930178547}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Min( ( BR / Const ) ,AMS ) ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / ( MUM * RMSe ) ) ) )", "obj1": 0.7524950099800399, "obj2": 0.21055671514510788}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( MRS / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( MUM ,CS ) + RCSe ) )", "obj1": 0.36127744510978044, "obj2": 0.5615768208124343}, {"determining": "( ( ( ( PN + RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,( MUM + Max( ( ( ( RMSe / MUR ) + MUC ) / MLU ),CS ) ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06993032523692741}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( AMS - MDR ) ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUC ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 0.43313373253493015, "obj2": 0.5057804296036904}, {"determining": "( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( MLU - DS ) )", "obj1": 0.8223552894211577, "obj2": 0.14026944671509814}, {"determining": "Max( ( Min( Const ,RRS ) / ARS ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( ( RRSe + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.5796346505591775}, {"determining": "( Max( BR,( FirstVNF_Mem - AMS ) ) + ( FirstVNF_Mem + PN ) )", "choosing": "Min( ( Min( RRSe ,CS ) * ( ( RMSe - ( Min( MUR ,Min( CS ,MUC ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) ) * MLU ) ) ,Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.3872255489021956, "obj2": 0.5359742332929832}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.3273453093812375, "obj2": 0.628178311101064}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.2874251497005988, "obj2": 0.6658436314402941}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,PN ) - ARS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( Max( ( MUR + DS ),MUC ) * MLU ),( ( RCSe * CS ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ( ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,Min( MLU ,( MUM + ( MLU - MUC ) ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.024071271954964755}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6027944111776448, "obj2": 0.33561484224902643}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.9500998003992016, "obj2": 0.02060743412635363}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( ( Max( BR,CRS ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( ( ( PN - DDR ) / Const ) * DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe - Min( ( MLU * ( MLU + MUC ) ) ,MUC ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) / Max( DS,DS ) )", "obj1": 0.9620758483033932, "obj2": 0.016515527149469487}, {"determining": "( ( CRS + ( ( FirstVNF_CPU_Server / CRS ) - Max( PN,FirstVNF_Mem_Server ) ) ) * Max( ARS,AMS ) )", "choosing": "Max( ( MLU * DS ),( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * MUM ) )", "obj1": 0.42115768463073855, "obj2": 0.5144859116433038}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( ( DDR - DDR ) / ( FirstVNF_CPU_Server / ( RRS / Min( DDR ,( CRS + MRS ) ) ) ) ) * MDR )", "choosing": "( Max( DS,( ( RRSe + MLU ) - RMSe ) ) / Min( RCSe ,CS ) )", "obj1": 0.4171656686626746, "obj2": 0.5237181355502397}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6027944111776448, "obj2": 0.33561484224902643}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.5276794683902458}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,Max( ( Const - MDR ),FirstVNF_RAM ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / ( ( ( MUR - ( MLU / MUM ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.39520958083832336, "obj2": 0.5355554882973808}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( ( Min( FirstVNF_CPU ,PN ) - ARS ) + RRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe * MLU ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4031936127744511, "obj2": 0.5354196116301827}, {"determining": "Max( ( MDR / DDR ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ) )", "obj1": 0.41916167664670656, "obj2": 0.5146102924405052}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( ( PN - DDR ) / Const ) * DDR ) ) )", "choosing": "( ( ( ( DS + Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) / Max( DS,DS ) )", "obj1": 0.9680638722554891, "obj2": 0.013606660488159906}, {"determining": "( ( MRS / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( MUC * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9780439121756487, "obj2": 0.00797655757109081}, {"determining": "( ( ( PN - DDR ) / ( BR - ( RRS - CRS ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,( MUR + CS ) ) + ( ( MUM / MUC ) + RMSe ) ) + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9820359281437125, "obj2": 0.006907577834544084}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Min( ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( RRS * DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9760479041916168, "obj2": 0.010688296413792679}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM_Server + RRS ) ) )", "choosing": "( ( ( DS + ( ( ( Min( MUM ,RRSe ) + ( RCSe / CS ) ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005090035339460688}, {"determining": "( ( ( PN - DDR ) * Min( DDR ,( FirstVNF_CPU_Server * DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( ( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,MUM ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.010890468891801078}, {"determining": "( ( ( PN - DDR ) / Min( Max( FirstVNF_CPU,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) * MDR )", "choosing": "( ( ( ( DS + RRSe ) + RRSe ) - ( RMSe * CS ) ) / Min( RCSe ,CS ) )", "obj1": 0.9840319361277445, "obj2": 0.0063001923898644025}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( CRS - Max( MRS,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / ( Min( ( MUM * MLU ) ,RRSe ) + ( RCSe / CS ) ) ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003381711332599562}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / MUC ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( ( DS / Min( RRSe ,( RRSe / DS ) ) ) / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005812867708841387}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + DS ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( BR * Const ) / ( RRS * ( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) ) )", "choosing": "( ( DS - RRSe ) / Max( DS,( RMSe - CS ) ) )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( Min( Min( RRS ,MRS ) ,ARS ) - Max( ( PN - DDR ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / ( MUM + ( ( RCSe + Max( RRSe,RCSe ) ) + RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + MRS ) ,ARS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / ( MUM * MLU ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( ( ( ( PN - DDR ) / Const ) * Max( FirstVNF_RAM,MRS ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) - RRSe ) / RRSe )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( PN - DDR ) / Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( ( MLU - MUC ) + MLU ) - RMSe ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( BR * Const ) / ( RRS * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( DS - RRSe ) / Max( DS,( Max( MLU,RMSe ) - RMSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * PN ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( FirstVNF_RAM,( PN - DDR ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + ( ( DS + RRSe ) - RRSe ) ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( Const / FirstVNF_RAM ) ) ) ) ) * ( AMS * Const ) )", "choosing": "( ( ( ( ( RMSe + Max( MLU,( RMSe * ( MUM * DS ) ) ) ) - RRSe ) + RRSe ) - RRSe ) / ( Max( Max( Min( Max( MUM,( Max( MLU,CS ) / ( RRSe - MUC ) ) ) ,Max( DS,RMSe ) ),( ( DS / ( DS + MUC ) ) + MUM ) ),MUR ) + ( RCSe + MUR ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( ( DDR * Min( FirstVNF_CPU_Server ,( ( DDR * DDR ) - ARS ) ) ) * Max( ( ( ( ( ( DDR * DDR ) - ARS ) * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) - RRSe ) / Max( DS,Min( ( DS - MUR ) ,( MUM + ( MUM + ( MUR / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( MUR - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( Max( RRSe,( MLU + MUM ) ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,CRS ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( CRS - ( DDR + Const ) ) )", "choosing": "Max( MUR,Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * Max( ( ( RCSe - ( ( RCSe / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / Min( FirstVNF_CPU_Server ,( MRS + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( MUM - ( DS * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( DDR - ( ( ( ( DDR * ( ( DDR * FirstVNF_Mem ) + Const ) ) + Const ) + Const ) / FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,MUR ) - Max( DS,( Max( DS,( Max( ( DS + ( DS - MLU ) ),DS ) - ( DS - MLU ) ) ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( DDR - ( ( ( ( DDR * FirstVNF_Mem ) + Const ) + Const ) / FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,MUR ) - Max( DS,( Max( DS,( Max( ( DS + ( DS - MLU ) ),DS ) - ( ( DS - RCSe ) + MUC ) ) ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( Max( ( Min( ( CRS + MRS ) ,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ),CRS ) - ( Min( ACS ,Max( ACS,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) + MRS ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( ( ( MUM - ( MLU - ( ( ( RMSe + MUR ) - ( MUC * MUC ) ) - ( MUM * RMSe ) ) ) ) / Min( DS ,RMSe ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS + MDR ) - ( ( PN + PN ) - ( PN * Const ) ) ) ,( MRS + DDR ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( MLU / MLU ) * ( ( Max( DS,RCSe ) * RCSe ) - ( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) / ( RMSe + Min( RCSe ,( MUC + Min( MUM ,MUM ) ) ) ) ) ) ) / ( MUR / Max( RRSe,Min( ( MUM / ( ( Min( CS ,RMSe ) - ( MUR * RMSe ) ) / RMSe ) ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - DDR ) / ( FirstVNF_CPU_Server / ( ( ( PN - DDR ) / ( FirstVNF_Mem_Server - Min( ( BR - FirstVNF_RAM ) ,( FirstVNF_Mem - AMS ) ) ) ) / Min( DDR ,( CRS + MRS ) ) ) ) ) * MDR )", "choosing": "( ( ( ( ( CS * CS ) + RRSe ) + RRSe ) - MUR ) / Min( Max( DS,DS ) ,CS ) )", "obj1": 0.26746506986027946, "obj2": 0.7137593392033722}, {"determining": "( ( ( PN - MDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) / Min( MUM ,MUM ) ) )", "obj1": 0.7784431137724551, "obj2": 0.09631542655093396}, {"determining": "Min( ( ( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * ( CRS + FirstVNF_Mem ) ) * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( RMSe + RRSe ) * Max( DS,( Max( ( DS + ( ( DS + RRSe ) - ( ( DS + RRSe ) - RRSe ) ) ),( MUC - ( MUM * DS ) ) ) - MLU ) ) )", "obj1": 0.6806387225548902, "obj2": 0.27854900501324653}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ACS ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Min( MUR ,RMSe ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - Min( MUC ,MUR ) ) )", "obj1": 0.7584830339321357, "obj2": 0.21021917873017767}, {"determining": "( ( ACS * Max( ACS,CRS ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MUC ,RRSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.716566866267465, "obj2": 0.215067627666929}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49700598802395207, "obj2": 0.3968015061310338}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,AMS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * ( MUM + ( MUR / RCSe ) ) ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.624750499001996, "obj2": 0.28601450195648}, {"determining": "( ( ACS * ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * ( CS / MUR ) ) - ( DS + RCSe ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.9121756487025948, "obj2": 0.04608102246647821}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( Min( ( Min( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,ACS ) ,ACS ) - FirstVNF_RAM_Server ) ,RRS ) * ( BR / ( BR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RCSe,Min( CS ,Min( RCSe ,MUC ) ) ) / Max( DS,( Max( Max( Max( ( ( MUM - RRSe ) * MUR ),( ( MUC / DS ) - Max( DS,RMSe ) ) ),( MUM + MUR ) ),RMSe ) - RMSe ) ) )", "obj1": 0.846307385229541, "obj2": 0.09476509212147657}, {"determining": "( ( ( PN - DDR ) / Const ) * ( ( PN - DDR ) / Const ) )", "choosing": "( ( ( DS - RRSe ) / Max( DS,( RMSe - CS ) ) ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.4810379241516966, "obj2": 0.4663757055028512}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,PN ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( RMSe + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.5868263473053892, "obj2": 0.34621063917048106}, {"determining": "( ( Const - Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / DDR ) ) ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / DDR ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( CS,DS ) )", "obj1": 0.8662674650698603, "obj2": 0.058419977820039104}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),FirstVNF_Mem ) - Min( CRS ,Const ) )", "choosing": "( ( ( RCSe * ( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( MLU / MUC ) ) ) / ( CS / MUR ) ) + ( MLU / MUC ) )", "obj1": 0.4471057884231537, "obj2": 0.472308559426652}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( MDR * ( ACS + ( Const - ARS ) ) ) )", "choosing": "( Min( MUR ,( ( RCSe + ( ( MUC / ( MUC / RCSe ) ) - RMSe ) ) + Min( ( DS / Min( ( Min( MUM ,DS ) * ( MLU / DS ) ) ,DS ) ) ,( ( RRSe / ( RCSe - RRSe ) ) + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.3333333333333333, "obj2": 0.6144297891608806}, {"determining": "( MRS * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / DDR ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( Max( CS,DS ) - DS ) )", "obj1": 0.5728542914171657, "obj2": 0.3857028740998197}, {"determining": "( RRS * Max( DDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( RCSe + RMSe ) / ( ( DS - MUR ) - DS ) )", "obj1": 0.34331337325349304, "obj2": 0.581826782653547}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) )", "choosing": "( ( MUR / DS ) - ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6734752751298976}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( ( FirstVNF_Mem_Server - AMS ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4870259481037924, "obj2": 0.4305487615198347}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * ( FirstVNF_Mem - PN ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + ( ( ( ( DS + RRSe ) - RRSe ) / ( RMSe / CS ) ) - RRSe ) ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6227544910179641, "obj2": 0.32280898907378974}, {"determining": "( ( ( Min( Max( ACS,PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( DS - MUC ) ) * ( RRSe * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.936127744510978, "obj2": 0.03719504272937165}, {"determining": "( Const * Max( MDR,( FirstVNF_CPU_Server / ACS ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( DS - RRSe ) / Max( DS,( ( Min( MUR ,( MUC + MUC ) ) * ( RRSe * MUC ) ) - CS ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.7017855846601725}, {"determining": "( ( FirstVNF_RAM_Server - PN ) / ( ( ( MDR / FirstVNF_RAM ) / ( ( ( RRS + BR ) - RRS ) + ( PN * MDR ) ) ) / ( RRS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC - CS ),( MUR - MUM ) )", "obj1": 0.4431137724550898, "obj2": 0.4963314915791039}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Min( ( BR / Const ) ,AMS ) ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / ( MUM * RMSe ) ) ) )", "obj1": 0.7524950099800399, "obj2": 0.21055671514510788}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( AMS - MDR ) ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUC ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 0.43313373253493015, "obj2": 0.5057804296036904}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( MRS / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( MUM ,CS ) + RCSe ) )", "obj1": 0.36127744510978044, "obj2": 0.5615768208124343}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.8483033932135728, "obj2": 0.08095143449087151}, {"determining": "Min( PN ,( FirstVNF_RAM + ( MRS * ( PN * Const ) ) ) )", "choosing": "( MUM + ( RCSe / Max( ( MUC - CS ),Min( ( ( MLU + RCSe ) + ( RRSe + MUC ) ) ,Max( ( CS + Min( CS ,DS ) ),( MUR / Max( RRSe,( MLU + MUM ) ) ) ) ) ) ) )", "obj1": 0.4151696606786427, "obj2": 0.5136630827004522}, {"determining": "( ( ( ( PN + RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,( MUM + Max( ( ( ( RMSe / MUR ) + MUC ) / MLU ),CS ) ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06993032523692741}, {"determining": "( ( ( BR / Max( MRS,DDR ) ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / Min( FirstVNF_RAM ,( ( ( BR / Max( MRS,DDR ) ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( Max( DS,MUR ) + ( RCSe + MUR ) ) / ( Max( DS,MUR ) + DS ) )", "obj1": 0.313373253493014, "obj2": 0.6469960195093386}, {"determining": "Max( ( Min( Const ,RRS ) / ARS ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( ( RRSe + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.5796346505591775}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.3273453093812375, "obj2": 0.628178311101064}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.2874251497005988, "obj2": 0.6658436314402941}, {"determining": "( Max( BR,( FirstVNF_Mem - AMS ) ) + ( FirstVNF_Mem + PN ) )", "choosing": "Min( ( Min( RRSe ,CS ) * ( ( RMSe - ( Min( MUR ,Min( CS ,MUC ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) ) * MLU ) ) ,Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.3872255489021956, "obj2": 0.5359742332929832}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) ) ) )", "choosing": "( ( MUC * ( CS / ( MUC * ( CS / MUR ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.3153692614770459, "obj2": 0.6322192518976912}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,PN ) - ARS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( Max( ( MUR + DS ),MUC ) * MLU ),( ( RCSe * CS ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ( ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,Min( MLU ,( MUM + ( MLU - MUC ) ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.024071271954964755}, {"determining": "( BR * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( MUR + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,RCSe ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6482287930178547}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),Max( RRS,BR ) ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUR - RCSe ) )", "obj1": 0.37524950099800397, "obj2": 0.5492067920621154}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6027944111776448, "obj2": 0.33561484224902643}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.9500998003992016, "obj2": 0.02060743412635363}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.5276794683902458}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,( FirstVNF_CPU - Max( FirstVNF_RAM_Server,PN ) ) ) )", "choosing": "( ( RCSe / ( ( MUR + ( Min( Min( MUR ,MUM ) ,Min( RMSe ,Min( CS ,CS ) ) ) / RMSe ) ) + MUC ) ) - ( RMSe / MLU ) )", "obj1": 0.3712574850299401, "obj2": 0.5494693914118722}, {"determining": "( ( Max( BR,CRS ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( ( ( PN - DDR ) / Const ) * DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe - Min( ( MLU * ( MLU + MUC ) ) ,MUC ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) / Max( DS,DS ) )", "obj1": 0.9620758483033932, "obj2": 0.016515527149469487}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6027944111776448, "obj2": 0.33561484224902643}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,Max( ( Const - MDR ),FirstVNF_RAM ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / ( ( ( MUR - ( MLU / MUM ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.39520958083832336, "obj2": 0.5355554882973808}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( ( Min( FirstVNF_CPU ,PN ) - ARS ) + RRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe * MLU ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4031936127744511, "obj2": 0.5354196116301827}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( ( PN - DDR ) / Const ) * DDR ) ) )", "choosing": "( ( ( ( DS + Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) / Max( DS,DS ) )", "obj1": 0.9680638722554891, "obj2": 0.013606660488159906}, {"determining": "( ( MRS / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( MUC * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9780439121756487, "obj2": 0.00797655757109081}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( ( ( PN - DDR ) / ( BR - ( RRS - CRS ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,( MUR + CS ) ) + ( ( MUM / MUC ) + RMSe ) ) + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9820359281437125, "obj2": 0.006907577834544084}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Min( ( CRS - Max( MRS,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( RRS * DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9760479041916168, "obj2": 0.010688296413792679}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( ( BR / Const ) * DDR ) ) ) )", "choosing": "( ( ( ( DS + RRSe ) - RRSe ) / Max( ( ( ( DS + RRSe ) - RRSe ) / ( RMSe / CS ) ),( ( RRSe + MLU ) - RMSe ) ) ) / Max( DS,DS ) )", "obj1": 0.9740518962075848, "obj2": 0.010859119851280115}, {"determining": "( ( ( PN - DDR ) / Min( Max( FirstVNF_CPU,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) * MDR )", "choosing": "( ( ( ( DS + RRSe ) + RRSe ) - ( RMSe * CS ) ) / Min( RCSe ,CS ) )", "obj1": 0.9840319361277445, "obj2": 0.0063001923898644025}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( CRS - Max( MRS,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / ( Min( ( MUM * MLU ) ,RRSe ) + ( RCSe / CS ) ) ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003381711332599562}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / MUC ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "( ( ( ( ( FirstVNF_RAM - ( RRS / FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM - ( RRS / FirstVNF_RAM ) ) - ACS ) - DDR ) ) - DDR ) / Const ) * ( BR / ( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,Max( DS,( Max( Max( Max( MUM,DS ),( MLU + RMSe ) ),RMSe ) - RMSe ) ) ) / Max( DS,( Max( MLU,RMSe ) - RMSe ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005493782884495819}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + DS ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( RRS * ( Min( Min( RRS ,MRS ) ,ARS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( ( RCSe + MLU ) / CS ) ) ) - RRSe ) / ( ( RCSe + MLU ) / ( MUM + ( ( RCSe + Max( RRSe,RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005090035339460688}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( BR * Const ) / ( RRS * ( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) ) )", "choosing": "( ( DS - RRSe ) / Max( DS,( RMSe - CS ) ) )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( PN - DDR ) / ( ( ( PN - DDR ) / Const ) / ( RRS / Min( DDR ,( CRS + MRS ) ) ) ) ) * MDR )", "choosing": "( ( ( ( DS + RRSe ) + Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) - RRSe ) / Min( RCSe ,CS ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM_Server + RRS ) ) )", "choosing": "( ( ( DS + ( ( ( Min( MUM ,RRSe ) + ( RCSe / CS ) ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005090035339460688}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( Min( Min( RRS ,MRS ) ,ARS ) - Max( ( PN - DDR ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / ( MUM + ( ( RCSe + Max( RRSe,RCSe ) ) + RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( ( ( ( PN - DDR ) / Const ) * Max( FirstVNF_RAM,MRS ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) - RRSe ) / RRSe )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( PN - DDR ) / Const ) * MDR )", "choosing": "( ( ( ( DS + RRSe ) + Min( Max( DS,DS ) ,CS ) ) - RRSe ) / Min( Max( DS,DS ) ,CS ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - Max( DS,RMSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( BR * Const ) / ( RRS * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( DS - RRSe ) / Max( DS,( Max( MLU,RMSe ) - RMSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( FirstVNF_RAM,( PN - DDR ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + ( ( DS + RRSe ) - RRSe ) ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "( ( ( PN - DDR ) / Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( ( MLU - MUC ) + MLU ) - RMSe ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( Max( DDR,FirstVNF_CPU ) + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( ( CRS - ( Max( DDR,FirstVNF_CPU ) + Const ) ) / PN ) ) )", "choosing": "Max( ( ( ( ( RRSe + Max( ( CS - CS ),( RMSe * RMSe ) ) ) / RRSe ) - ( ( ( RRSe + Max( ( CS - CS ),( RMSe * RMSe ) ) ) / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * Min( FirstVNF_CPU_Server ,( ( DDR * DDR ) - ARS ) ) ) * Max( ( ( ( ( ( DDR * DDR ) - ARS ) * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) - RRSe ) / Max( DS,Min( ( DS - MUR ) ,( MUM + ( MUM + ( MUR / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( MUR - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( Max( RRSe,( MLU + MUM ) ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,CRS ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( CRS - ( DDR + Const ) ) )", "choosing": "Max( MUR,Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * Max( ( ( RCSe - ( ( RCSe / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / Min( FirstVNF_CPU_Server ,( MRS + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( MUM - ( DS * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem ) ) ) / ( Max( AMS,ARS ) * Min( ( BR - FirstVNF_RAM ) ,( FirstVNF_Mem - RRS ) ) ) )", "choosing": "Max( ( ( RCSe - ( ( ( RRSe + Max( ( CS - DS ),( RMSe * RMSe ) ) ) / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + ( MUC + MUC ) ),( CS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ( CRS + MRS ) ,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ),CRS ) - ( Min( ACS ,Max( ACS,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) + MRS ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( ( ( MUM - ( MLU - ( ( ( RMSe + MUR ) - ( MUC * MUC ) ) - ( MUM * RMSe ) ) ) ) / Min( DS ,RMSe ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - DDR ) / ( FirstVNF_CPU_Server / ( ( ( PN - DDR ) / ( FirstVNF_Mem_Server - Min( ( BR - FirstVNF_RAM ) ,( FirstVNF_Mem - AMS ) ) ) ) / Min( DDR ,( CRS + MRS ) ) ) ) ) * MDR )", "choosing": "( ( ( ( ( CS * CS ) + RRSe ) + RRSe ) - MUR ) / Min( Max( DS,DS ) ,CS ) )", "obj1": 0.26746506986027946, "obj2": 0.7137593392033722}, {"determining": "( ( ( PN - MDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) / Min( MUM ,MUM ) ) )", "obj1": 0.7784431137724551, "obj2": 0.09631542655093396}, {"determining": "Min( ( ( ( Min( Max( FirstVNF_CPU,Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * ( CRS + FirstVNF_Mem ) ) * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( RMSe + RRSe ) * Max( DS,( Max( ( DS + ( ( DS + RRSe ) - ( ( DS + RRSe ) - RRSe ) ) ),( MUC - ( MUM * DS ) ) ) - MLU ) ) )", "obj1": 0.6806387225548902, "obj2": 0.27854900501324653}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ACS ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Min( MUR ,RMSe ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( RMSe * CS ) ) ),RMSe ) / ( DS * RRSe ) ) ) - RRSe ) / ( MLU - Min( MUC ,MUR ) ) )", "obj1": 0.7584830339321357, "obj2": 0.21021917873017767}, {"determining": "( ( ACS * Max( ACS,CRS ) ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MUC ,RRSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.716566866267465, "obj2": 0.215067627666929}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49700598802395207, "obj2": 0.3968015061310338}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,AMS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * ( MUM + ( MUR / RCSe ) ) ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.624750499001996, "obj2": 0.28601450195648}, {"determining": "( Min( Max( DDR,FirstVNF_RAM ) ,Const ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / DDR ) ) )", "choosing": "( ( ( Max( CS,CS ) + RRSe ) - RRSe ) / ( Max( CS,DS ) - DS ) )", "obj1": 0.562874251497006, "obj2": 0.3903163770085829}, {"determining": "( ( ACS * ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / Max( MRS,DDR ) ) ) )", "choosing": "( ( MUC * ( CS / ( ( MUC * ( CS / MUR ) ) - ( DS + RCSe ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.9121756487025948, "obj2": 0.04608102246647821}, {"determining": "( Min( ( Min( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,ACS ) ,ACS ) - FirstVNF_RAM_Server ) ,RRS ) * ( BR / ( BR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RCSe,Min( CS ,Min( RCSe ,MUC ) ) ) / Max( DS,( Max( Max( Max( ( ( MUM - RRSe ) * MUR ),( ( MUC / DS ) - Max( DS,RMSe ) ) ),( MUM + MUR ) ),RMSe ) - RMSe ) ) )", "obj1": 0.846307385229541, "obj2": 0.09476509212147657}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,PN ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( RMSe + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.5868263473053892, "obj2": 0.34621063917048106}, {"determining": "( ( Const - Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / DDR ) ) ) * Max( MDR,( ( ( ( ARS + ( RRS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) / Max( MRS,BR ) ) / DDR ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( CS,DS ) )", "obj1": 0.8662674650698603, "obj2": 0.058419977820039104}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - RRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( MUM / DS ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.564870259481038, "obj2": 0.37027601285300205}, {"determining": "Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),( MDR * ( ACS + ( Const - ARS ) ) ) )", "choosing": "( Min( MUR ,( ( RCSe + ( ( MUC / ( MUC / RCSe ) ) - RMSe ) ) + Min( ( DS / Min( ( Min( MUM ,DS ) * ( MLU / DS ) ) ,DS ) ) ,( ( RRSe / ( RCSe - RRSe ) ) + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.3333333333333333, "obj2": 0.6144297891608806}, {"determining": "( RRS * Max( DDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( RCSe + RMSe ) / ( ( DS - MUR ) - DS ) )", "obj1": 0.34331337325349304, "obj2": 0.581826782653547}, {"determining": "( ( ( PN - DDR ) / Const ) * ( ( PN - DDR ) / Const ) )", "choosing": "( ( ( DS - RRSe ) / Max( DS,( RMSe - CS ) ) ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.4810379241516966, "obj2": 0.4663757055028512}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + Max( Max( FirstVNF_Mem,Const ),( CRS / ARS ) ) ) )", "choosing": "( ( MUR / DS ) - ( ( ( RMSe * MUR ) * ( MUM - CS ) ) + ( Max( MUC,MUR ) + Min( MUM ,RCSe ) ) ) )", "obj1": 0.2754491017964072, "obj2": 0.6734752751298976}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( ( FirstVNF_Mem_Server - AMS ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4870259481037924, "obj2": 0.4305487615198347}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * ( FirstVNF_Mem - PN ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + ( ( ( ( DS + RRSe ) - RRSe ) / ( RMSe / CS ) ) - RRSe ) ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6227544910179641, "obj2": 0.32280898907378974}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),FirstVNF_Mem ) - Min( CRS ,Const ) )", "choosing": "( ( ( RCSe * ( ( ( RCSe * CS ) / ( CS / MUR ) ) + ( MLU / MUC ) ) ) / ( CS / MUR ) ) + ( MLU / MUC ) )", "obj1": 0.4471057884231537, "obj2": 0.472308559426652}, {"determining": "( ( ( Min( Max( ACS,PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( DS - MUC ) ) * ( RRSe * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.936127744510978, "obj2": 0.03719504272937165}, {"determining": "( Const * Max( MDR,( FirstVNF_CPU_Server / ACS ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / ( ( DS - RRSe ) / Max( DS,( ( Min( MUR ,( MUC + MUC ) ) * ( RRSe * MUC ) ) - CS ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.7017855846601725}, {"determining": "( ( FirstVNF_RAM_Server - PN ) / ( ( ( MDR / FirstVNF_RAM ) / ( ( ( RRS + BR ) - RRS ) + ( PN * MDR ) ) ) / ( RRS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC - CS ),( MUR - MUM ) )", "obj1": 0.4431137724550898, "obj2": 0.4963314915791039}, {"determining": "( Min( DDR ,PN ) - Min( ( BR / Min( ( BR / Const ) ,AMS ) ) ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( ( RCSe + RMSe ) + ( RCSe / ( MUM * RMSe ) ) ) )", "obj1": 0.7524950099800399, "obj2": 0.21055671514510788}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( AMS - MDR ) ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUC ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 0.43313373253493015, "obj2": 0.5057804296036904}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.8483033932135728, "obj2": 0.08095143449087151}, {"determining": "Min( PN ,( FirstVNF_RAM + ( MRS * ( PN * Const ) ) ) )", "choosing": "( MUM + ( RCSe / Max( ( MUC - CS ),Min( ( ( MLU + RCSe ) + ( RRSe + MUC ) ) ,Max( ( CS + Min( CS ,DS ) ),( MUR / Max( RRSe,( MLU + MUM ) ) ) ) ) ) ) )", "obj1": 0.4151696606786427, "obj2": 0.5136630827004522}, {"determining": "( ( ( ( PN + RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,( MUM + Max( ( ( ( RMSe / MUR ) + MUC ) / MLU ),CS ) ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06993032523692741}, {"determining": "( ( ( BR / Max( MRS,DDR ) ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / Min( FirstVNF_RAM ,( ( ( BR / Max( MRS,DDR ) ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( Max( DS,MUR ) + ( RCSe + MUR ) ) / ( Max( DS,MUR ) + DS ) )", "obj1": 0.313373253493014, "obj2": 0.6469960195093386}, {"determining": "( ( FirstVNF_RAM_Server - PN ) / ( ( ( MDR / FirstVNF_RAM ) / ( ( Const - RRS ) + ( PN * MDR ) ) ) / ( RRS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC - CS ),( ( DS - CS ) - MUM ) )", "obj1": 0.46706586826347307, "obj2": 0.46842279750953536}, {"determining": "Max( ( Min( Const ,RRS ) / ARS ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( ( RRSe + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.5796346505591775}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.3273453093812375, "obj2": 0.628178311101064}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( ( MRS / FirstVNF_RAM_Server ),PN ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( RMSe + ( ( RCSe - MUM ) - MUC ) ) ) )", "obj1": 0.2874251497005988, "obj2": 0.6658436314402941}, {"determining": "( Max( BR,( FirstVNF_Mem - AMS ) ) + ( FirstVNF_Mem + PN ) )", "choosing": "Min( ( Min( RRSe ,CS ) * ( ( RMSe - ( Min( MUR ,Min( CS ,MUC ) ) + Min( Max( Min( DS ,MUR ),DS ) ,( Max( RRSe,MUR ) - Max( MLU,CS ) ) ) ) ) * MLU ) ) ,Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.3872255489021956, "obj2": 0.5359742332929832}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( CRS / ( ( ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) + BR ) / ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) ) ) ) )", "choosing": "( ( MUC * ( CS / ( MUC * ( CS / MUR ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.3153692614770459, "obj2": 0.6322192518976912}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,PN ) - ARS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( Max( ( MUR + DS ),MUC ) * MLU ),( ( RCSe * CS ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ( ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( MLU ,Min( MLU ,( MUM + ( MLU - MUC ) ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.024071271954964755}, {"determining": "( BR * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( MUR + RRSe ) - RRSe ) / Max( DS,Min( ( DS - Min( MLU ,Max( CS,Min( ( RRSe * MUM ) ,RCSe ) ) ) ) ,( MUM + ( MLU - MUC ) ) ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6482287930178547}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( ( Min( Const ,RRS ) / ( AMS / FirstVNF_CPU ) ),Max( RRS,BR ) ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUR - RCSe ) )", "obj1": 0.37524950099800397, "obj2": 0.5492067920621154}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6027944111776448, "obj2": 0.33561484224902643}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) - ( DDR * DDR ) ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.9500998003992016, "obj2": 0.02060743412635363}, {"determining": "( Max( ( ( PN + ACS ) / Min( Max( FirstVNF_Mem,PN ) ,( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( MUC + Min( ( DS / Min( RRSe ,( RRSe / DS ) ) ) ,( RMSe + Max( Max( MUM,DS ),( MLU + RMSe ) ) ) ) ) - ( DS - ( MUM * MLU ) ) ) - MUM ) * ( MUC / ( Max( ( ( MUM / Min( Max( CS,MUC ) ,MLU ) ) + MUM ),RCSe ) * Max( MUC,MUC ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.5276794683902458}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( MRS / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( Min( MUM ,CS ) + RCSe ) )", "obj1": 0.36127744510978044, "obj2": 0.5615768208124343}, {"determining": "( ( Max( BR,CRS ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( ( ( PN - DDR ) / Const ) * DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe - Min( ( MLU * ( MLU + MUC ) ) ,MUC ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) / Max( DS,DS ) )", "obj1": 0.9620758483033932, "obj2": 0.016515527149469487}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,( FirstVNF_CPU - Max( FirstVNF_RAM_Server,PN ) ) ) )", "choosing": "( ( RCSe / ( ( MUR + ( Min( Min( MUR ,MUM ) ,Min( RMSe ,Min( CS ,CS ) ) ) / RMSe ) ) + MUC ) ) - ( RMSe / MLU ) )", "obj1": 0.3712574850299401, "obj2": 0.5494693914118722}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,( FirstVNF_CPU - ( MDR - ARS ) ) ) )", "choosing": "( ( RCSe / ( ( MUR + ( Min( Min( MUR ,MUM ) ,Min( RMSe ,Min( CS ,CS ) ) ) / RMSe ) ) + MUC ) ) - ( RMSe / MLU ) )", "obj1": 0.36327345309381237, "obj2": 0.5604358194300136}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( ( Min( Max( ( Min( PN ,CRS ) / RRS ),PN ) ,Min( PN ,Const ) ) * ( ( Max( AMS,PN ) + ( FirstVNF_CPU / RRS ) ) / Max( FirstVNF_CPU,( DDR * Min( ( PN - FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( Max( ( ( MUC / Max( RCSe,Max( DS,MLU ) ) ) + MUR ),MUC ) + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,CS ) + ( DS - MUC ) ) * ( MUC * MUM ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6027944111776448, "obj2": 0.33561484224902643}, {"determining": "( ( MRS * FirstVNF_Mem ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( ( ( RRSe * ( RRSe + ( ( DS * ( MUC - RRSe ) ) + ( RRSe / MUM ) ) ) ) - MLU ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,Max( ( Const - MDR ),FirstVNF_RAM ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / ( ( ( MUR - ( MLU / MUM ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / Min( ( MLU + RMSe ) ,Min( RRSe ,CS ) ) )", "obj1": 0.39520958083832336, "obj2": 0.5355554882973808}, {"determining": "Max( ( ( MRS - ARS ) + RRS ),Max( ( ( Min( FirstVNF_CPU ,( ( Min( FirstVNF_CPU ,PN ) - ARS ) + RRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + ( Max( ( MUR + DS ),MUC ) / Max( ( RMSe * MLU ),( ( RMSe * MLU ) + MUR ) ) ) ) + RRSe ) / ( RCSe / MUR ) )", "obj1": 0.4031936127744511, "obj2": 0.5354196116301827}, {"determining": "Max( ( DDR - CRS ),Max( ( ( Min( ( PN - FirstVNF_RAM ) ,( ( AMS / FirstVNF_RAM_Server ) * CRS ) ) - ARS ) + RRS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( RCSe + ( ( Max( MUR,RRSe ) * Max( ( RCSe - MUR ),MUR ) ) - RCSe ) ) + ( Max( ( MUR + DS ),MUC ) / ( ( ( ( MUM / DS ) - ( MUR + RRSe ) ) / MUR ) - Min( MUC ,MUR ) ) ) ) + RRSe ) / ( ( ( MUR + ( Max( MUC,RCSe ) + ( ( Max( MUM,DS ) / CS ) / RMSe ) ) ) / RMSe ) / MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.4234533079711892}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( ( PN - DDR ) / Const ) * DDR ) ) )", "choosing": "( ( ( ( DS + Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) / Max( DS,DS ) )", "obj1": 0.9680638722554891, "obj2": 0.013606660488159906}, {"determining": "( ( MRS / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( MUC * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.9780439121756487, "obj2": 0.00797655757109081}, {"determining": "( ( ( Min( Max( ACS,PN ) ,PN ) * ( ( Max( AMS,PN ) + DDR ) / Max( FirstVNF_CPU,( DDR * Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,ARS ) ) ) ) ) ) * FirstVNF_CPU_Server ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,Min( ( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) * MUC ) * CS ) ,( ( RMSe + MUR ) + ( MLU - MUC ) ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.32381183556708026}, {"determining": "( ( ( PN - DDR ) / Min( DDR ,( CRS + MRS ) ) ) * MDR )", "choosing": "( ( ( ( ( CS * CS ) + RRSe ) + RRSe ) - RRSe ) / Min( Max( DS,RRSe ) ,CS ) )", "obj1": 0.9820359281437125, "obj2": 0.006901852130772534}, {"determining": "( ( ( PN - DDR ) / ( FirstVNF_CPU_Server / ( RRS / Min( DDR ,DDR ) ) ) ) * MDR )", "choosing": "( ( ( ( DS + RRSe ) + RRSe ) - RRSe ) / ( RMSe - Min( ( MLU * ( MLU + MUC ) ) ,MUC ) ) )", "obj1": 0.9760479041916168, "obj2": 0.010525801015163469}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( ( BR / Const ) * DDR ) ) ) )", "choosing": "( ( ( ( DS + RRSe ) - RRSe ) / Max( ( ( ( DS + RRSe ) - RRSe ) / ( RMSe / CS ) ),( ( RRSe + MLU ) - RMSe ) ) ) / Max( DS,DS ) )", "obj1": 0.9740518962075848, "obj2": 0.010859119851280115}, {"determining": "( ( ( PN - DDR ) / Min( Max( FirstVNF_CPU,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) * MDR )", "choosing": "( ( ( ( DS + RRSe ) + RRSe ) - ( RMSe * CS ) ) / Min( RCSe ,CS ) )", "obj1": 0.9840319361277445, "obj2": 0.0063001923898644025}, {"determining": "Min( ( ( PN - DDR ) / Const ) ,( ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,DS ) + ( ( MUM / MUC ) + ( Max( MUC,Max( RCSe,DS ) ) / MUC ) ) ) + ( ( Max( CS,( ( ( MUR - ( CS / MUM ) ) - RCSe ) + ( RMSe / RRSe ) ) ) / Max( RCSe,DS ) ) / CS ) )", "obj1": 0.9900199600798403, "obj2": 0.0031236857479501863}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( RCSe / MUC ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "( ( ( ( ( FirstVNF_RAM - ( RRS / FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM - ( RRS / FirstVNF_RAM ) ) - ACS ) - DDR ) ) - DDR ) / Const ) * ( BR / ( Max( ( FirstVNF_CPU - ARS ),PN ) - FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,Max( DS,( Max( Max( Max( MUM,DS ),( MLU + RMSe ) ),RMSe ) - RMSe ) ) ) / Max( DS,( Max( MLU,RMSe ) - RMSe ) ) )", "obj1": 0.998003992015968, "obj2": 0.0005493782884495819}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + DS ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM_Server + RRS ) ) )", "choosing": "( ( ( DS + ( ( ( Min( MUM ,RRSe ) + ( RCSe / CS ) ) + RMSe ) + ( RCSe / CS ) ) ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - RMSe ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005090035339460688}, {"determining": "( ( ( PN - DDR ) / ( ( ( PN - DDR ) / Const ) / ( RRS / Min( DDR ,( CRS + MRS ) ) ) ) ) * MDR )", "choosing": "( ( ( ( DS + RRSe ) + Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) - RRSe ) / Min( RCSe ,CS ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( ( BR * Const ) / ( RRS * ( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) ) ) )", "choosing": "( ( DS - RRSe ) / Max( DS,( RMSe - CS ) ) )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Max( FirstVNF_RAM,ACS ) / ( RRS * ( Max( DDR,( FirstVNF_RAM_Server / RRS ) ) - MRS ) ) ) ) )", "choosing": "( ( ( DS + ( Min( ( RMSe * RMSe ) ,MLU ) + ( RCSe / CS ) ) ) - RRSe ) / ( ( RCSe + MLU ) / ( Max( Max( ( DS / ( MLU / MLU ) ),RMSe ),MUR ) + MUC ) ) )", "obj1": 0.9880239520958084, "obj2": 0.0042026643159510215}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * ( RRS * ( Min( Min( RRS ,MRS ) ,ARS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + ( ( RCSe + MLU ) / CS ) ) ) - RRSe ) / ( ( RCSe + MLU ) / ( MUM + ( ( RCSe + Max( RRSe,RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005090035339460688}, {"determining": "( ( ( PN - DDR ) / Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( ( MLU - MUC ) + MLU ) - RMSe ) ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( ( ( ( PN - DDR ) / Const ) * Max( FirstVNF_RAM,MRS ) ) * Max( MDR,( FirstVNF_CPU_Server / ( RRS * DDR ) ) ) )", "choosing": "( ( ( DS + Max( DS,( ( RRSe + MLU ) - RMSe ) ) ) - RRSe ) / RRSe )", "obj1": 0.9920159680638723, "obj2": 0.0025800331632721543}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( FirstVNF_CPU_Server / ( Max( MRS,FirstVNF_Mem_Server ) * ( Min( Min( RRS ,MRS ) ,ARS ) - Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( ( MUM / MUC ) + RMSe ) + RCSe ) ) - RRSe ) / ( ( RCSe + MLU ) / ( MUM + ( ( RCSe + Max( RRSe,RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( MDR,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + MLU ) - Max( DS,RMSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( PN - DDR ) / Const ) * Max( FirstVNF_RAM,( PN - DDR ) ) )", "choosing": "( ( ( DS + RRSe ) - RRSe ) / Max( DS,( ( RRSe + ( ( DS + RRSe ) - RRSe ) ) - RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012522265756080389}, {"determining": "( ( ( PN - DDR ) / Const ) * MDR )", "choosing": "( ( ( ( DS + RRSe ) + Min( Max( DS,DS ) ,CS ) ) - RRSe ) / Min( Max( DS,DS ) ,CS ) )", "obj1": 0.9700598802395209, "obj2": 0.012921928468024674}, {"determining": "( Min( ( ( MRS + MDR ) - ( ( PN + PN ) - ( PN * Const ) ) ) ,( MRS + DDR ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( MLU / MLU ) * ( ( Max( DS,RCSe ) * RCSe ) - ( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) / ( RMSe + Min( RCSe ,( MUC + Min( MUM ,MUM ) ) ) ) ) ) ) / ( MUR / Max( RRSe,Min( ( MUM / ( ( Min( CS ,RMSe ) - ( MUR * RMSe ) ) / RMSe ) ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( Max( DDR,FirstVNF_CPU ) + Const ) ) ) ) / ( ( Min( MRS ,MDR ) - FirstVNF_CPU ) + ( ( CRS - ( Max( DDR,FirstVNF_CPU ) + Const ) ) / PN ) ) )", "choosing": "Max( ( ( ( ( RRSe + Max( ( CS - CS ),( RMSe * RMSe ) ) ) / RRSe ) - ( ( ( RRSe + Max( ( CS - CS ),( RMSe * RMSe ) ) ) / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * Min( FirstVNF_CPU_Server ,( ( DDR * DDR ) - ARS ) ) ) * Max( ( ( ( ( ( DDR * DDR ) - ARS ) * Max( MDR,( FirstVNF_CPU_Server / DDR ) ) ) * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( RRSe - MUC ) ) * ( MUM + ( MUR / RCSe ) ) ) - RRSe ) / Max( DS,Min( ( DS - MUR ) ,( MUM + ( MUM + ( MUR / RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( MUR - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( Max( RRSe,( MLU + MUM ) ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM - BR ) - FirstVNF_Mem_Server ) ,CRS ) ,( MDR * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( Max( MUC,RRSe ) / ( MLU / DS ) ) ,( ( MLU * Min( ( CS + Max( RRSe,RCSe ) ) ,MUM ) ) - ( RCSe + ( RCSe / Max( DS,MUR ) ) ) ) ) ,( Max( Min( Max( MLU,DS ) ,Max( Max( MLU,RMSe ),DS ) ),CS ) - RMSe ) ) - Max( Max( MUC,CS ),Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) / ( CRS - ( DDR + Const ) ) )", "choosing": "Max( MUR,Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_CPU - FirstVNF_CPU ),Max( FirstVNF_CPU,( CRS - ( DDR + Const ) ) ) ) ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * Max( ( ( RCSe - ( ( RCSe / RRSe ) - MUC ) ) + ( MLU - DS ) ),Max( ( ( CS / DS ) + MUM ),( MLU / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,DDR ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( RMSe * MUM ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( Max( MUC,RRSe ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * Max( ( AMS / DDR ),( MRS * FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) - ARS ) * Max( MDR,PN ) )", "choosing": "( ( ( ( RCSe - Max( MUM,Max( CS,CS ) ) ) * ( Max( ( MUC * Max( ( RCSe + RRSe ),( MUR + RCSe ) ) ),RMSe ) / ( DS * RRSe ) ) ) - ( DS * MLU ) ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,Min( Max( DDR,FirstVNF_RAM ) ,Const ) ) ,( ( FirstVNF_CPU / MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( Max( ( MLU * RCSe ),CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) + ( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),CRS ) - ( DDR + Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( Max( MUC,( ( DS * RRSe ) / ( ( MUM / Min( MUM ,MLU ) ) / ( MUC / ( ( Max( MLU,MUR ) - RMSe ) / ( RCSe - MUR ) ) ) ) ) ) / ( ( MUM / Min( MUC ,MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( CS ,MUM ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}