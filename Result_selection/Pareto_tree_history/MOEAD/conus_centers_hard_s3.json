{"1": [{"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( CRS * PN ) )", "choosing": "( ( MLU * MLU ) - Min( MLU ,MUC ) )", "obj1": 0.7414829659318637, "obj2": 0.2556352682679399}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / ( AMS * CRS ) )", "choosing": "( ( MLU - RMSe ) - ( RCSe + MUR ) )", "obj1": 0.627254509018036, "obj2": 0.27382082736042057}, {"determining": "Max( ( FirstVNF_CPU * MDR ),( FirstVNF_RAM_Server - MRS ) )", "choosing": "Max( ( MLU - MUM ),Max( RCSe,MUM ) )", "obj1": 0.7134268537074149, "obj2": 0.2906443601054443}, {"determining": "( Max( FirstVNF_CPU,Const ) / Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( CS * MUC ) / Max( MUC,RRSe ) )", "obj1": 0.7294589178356713, "obj2": 0.2517155478286778}, {"determining": "Min( ( FirstVNF_Mem / Const ) ,( AMS * FirstVNF_RAM ) )", "choosing": "( ( CS - MUC ) - Min( RMSe ,RCSe ) )", "obj1": 0.687374749498998, "obj2": 0.2830290340993583}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( RRSe - MLU ) )", "obj1": 0.7134268537074149, "obj2": 0.2562711832850926}, {"determining": "( ( ARS + MDR ) - ( AMS - ACS ) )", "choosing": "( ( MUM / MUC ) * ( MLU * RMSe ) )", "obj1": 0.7014028056112225, "obj2": 0.26494931854991305}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / RRS ) / ( MRS + MRS ) )", "choosing": "( ( DS / DS ) + ( MUC - RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.2666775122896255}, {"determining": "( Max( FirstVNF_CPU,BR ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,CS ) * ( CS - CS ) )", "obj1": 0.6993987975951904, "obj2": 0.25874838156535473}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( Min( AMS ,FirstVNF_CPU_Server ) / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( CS - MUM ) )", "obj1": 0.6953907815631263, "obj2": 0.27830487881564825}, {"determining": "Min( ( Const + ACS ) ,Max( RRS,PN ) )", "choosing": "Max( ( RCSe * CS ),( DS - MUC ) )", "obj1": 0.6973947895791583, "obj2": 0.2637442981057984}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,RCSe ) - ( DS * RMSe ) )", "obj1": 0.7094188376753507, "obj2": 0.25469005433649733}, {"determining": "Max( Max( DDR,ACS ),( DDR + FirstVNF_RAM ) )", "choosing": "( Max( RMSe,RRSe ) / ( RRSe + MUC ) )", "obj1": 0.7474949899799599, "obj2": 0.2565798913004873}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) + Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( DS - MLU ) - Max( RRSe,MUR ) )", "obj1": 0.7575150300601202, "obj2": 0.2208583468249009}, {"determining": "( ( CRS / BR ) - ( MRS / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,( MUC * MUR ) )", "obj1": 0.6773547094188377, "obj2": 0.2686729427249718}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * ( RRSe * RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * BR ),ACS ) * Max( BR,PN ) )", "choosing": "( ( Max( CS,MLU ) - Min( MUC ,MUR ) ) + Max( ( RCSe * RRSe ),( MUR / MUR ) ) )", "obj1": 0.7134268537074149, "obj2": 0.27296774513668903}, {"determining": "Max( ( ( BR * FirstVNF_Mem ) - ( FirstVNF_RAM_Server * Const ) ),( ( MDR * FirstVNF_CPU ) + ( RRS * MDR ) ) )", "choosing": "Max( Min( ( CS / RCSe ) ,( DS + MUR ) ),Max( Min( RRSe ,RCSe ),( MUM * DS ) ) )", "obj1": 0.6933867735470942, "obj2": 0.25714773387500633}, {"determining": "( ( MRS - MDR ) / ( CRS - DDR ) )", "choosing": "( Min( ( MUM + DS ) ,( MUM - RMSe ) ) + Max( Max( MUC,CS ),Max( MUC,CS ) ) )", "obj1": 0.6973947895791583, "obj2": 0.2808103110686764}, {"determining": "( Max( FirstVNF_RAM,MRS ) * Max( CRS,( DDR + ARS ) ) )", "choosing": "( Min( ( RCSe + RMSe ) ,( MLU * DS ) ) / ( ( CS / RRSe ) + Min( MLU ,RCSe ) ) )", "obj1": 0.7234468937875751, "obj2": 0.22859857688362634}, {"determining": "Max( ( FirstVNF_RAM / FirstVNF_RAM ),( FirstVNF_Mem_Server / PN ) )", "choosing": "( ( ( RCSe * CS ) + ( MUR * MLU ) ) / ( ( RMSe * DS ) / Max( MUC,MUM ) ) )", "obj1": 0.6392785571142284, "obj2": 0.3087299638327761}, {"determining": "Min( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) + DDR ) ,( ACS + FirstVNF_CPU ) )", "choosing": "( Min( ( MUM + MUC ) ,( RRSe - MUR ) ) / ( ( MLU + RRSe ) - Min( CS ,MUM ) ) )", "obj1": 0.7134268537074149, "obj2": 0.2562537037846236}, {"determining": "( ( ( DDR * BR ) * ( Const * ARS ) ) * Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,Max( CRS,FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + RCSe ) ,( ( MUC - CS ) * RMSe ) )", "obj1": 0.7014028056112225, "obj2": 0.25278114684004516}, {"determining": "Min( Min( RRS ,Max( PN,MDR ) ) ,Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( ( Max( MUC,RRSe ) / ( RCSe / MLU ) ) + ( Max( CS,MUC ) + ( DS / MUM ) ) )", "obj1": 0.7154308617234469, "obj2": 0.25421939633131085}, {"determining": "( Max( ( MDR + FirstVNF_CPU_Server ),AMS ) + ( ( ARS - ACS ) + FirstVNF_Mem ) )", "choosing": "Min( Max( ( RMSe / MUR ),( CS + RCSe ) ) ,Max( ( MUC - MUM ),( RMSe - MUR ) ) )", "obj1": 0.7454909819639278, "obj2": 0.25323429716999}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Max( MUR,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU_Server + ( MRS * FirstVNF_CPU_Server ) ),( BR + ( ACS * AMS ) ) )", "choosing": "( ( ( MUC * RCSe ) / ( DS + RCSe ) ) - ( Min( MUM ,MUM ) + ( RMSe - RRSe ) ) )", "obj1": 0.6953907815631263, "obj2": 0.26694272691951915}, {"determining": "Min( ( ( BR + ARS ) / MRS ) ,Min( CRS ,AMS ) )", "choosing": "( ( RCSe / MLU ) / ( RMSe + ( MUC + MUM ) ) )", "obj1": 0.6933867735470942, "obj2": 0.2663769541571268}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( AMS + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUM - MLU ) - ( MUR - RCSe ) ),Max( ( RCSe + MUR ),( CS + MUR ) ) )", "obj1": 0.6753507014028056, "obj2": 0.25073842659251094}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( CS,MUC ) / Min( RMSe ,( MUM * RMSe ) ) )", "obj1": 0.7294589178356713, "obj2": 0.25641398252850117}, {"determining": "( ( RRS * AMS ) - ( ( FirstVNF_CPU * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe * RRSe ) ,Max( RCSe,MLU ) ) + ( Max( DS,RCSe ) + ( MUM + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( FirstVNF_Mem / ( DDR / Min( ARS ,MRS ) ) ) )", "choosing": "Min( ( ( RRSe - MLU ) - RRSe ) ,( Min( MUM ,RCSe ) + ( MUM - Min( RRSe ,RMSe ) ) ) )", "obj1": 0.7014028056112225, "obj2": 0.26493547533031775}, {"determining": "Min( Max( RRS,( ( Const + ARS ) - FirstVNF_CPU ) ) ,( MRS / MRS ) )", "choosing": "( Max( ( Max( DS,MUR ) - ( MUM * RCSe ) ),( ( MLU + RMSe ) - ( MUR / RCSe ) ) ) - Min( ( Min( DS ,MUC ) * Max( RCSe,MLU ) ) ,Max( Max( RRSe,DS ),( CS / MUM ) ) ) )", "obj1": 0.6713426853707415, "obj2": 0.26835090364466224}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),( DS + DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - BR ) + ( BR + CRS ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + CS ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6893787575150301, "obj2": 0.24824947169388187}, {"determining": "Min( ( FirstVNF_RAM_Server / ( ( ACS * MRS ) + Min( FirstVNF_RAM ,ARS ) ) ) ,Min( BR ,FirstVNF_CPU ) )", "choosing": "( ( MUC / DS ) + ( RRSe / CS ) )", "obj1": 0.6733466933867736, "obj2": 0.309128587501353}, {"determining": "( Max( Max( BR,DDR ),Min( BR ,CRS ) ) * ( ARS + Const ) )", "choosing": "( Max( ( ( MUR - RRSe ) + ( CS + DS ) ),( ( MLU + RRSe ) * Min( MLU ,MUM ) ) ) * Max( ( ( RRSe * MUM ) + ( RMSe * MLU ) ),( ( DS / RCSe ) - ( MLU + RCSe ) ) ) )", "obj1": 0.7254509018036072, "obj2": 0.25578766152644844}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server / BR ) ,( MDR - MDR ) ) / ( ( DDR * FirstVNF_RAM ) * ( MRS / FirstVNF_CPU ) ) ) ,( Max( ( BR / MRS ),( BR / FirstVNF_Mem_Server ) ) / ( ( MDR * FirstVNF_Mem ) * ( ARS / BR ) ) ) )", "choosing": "Max( ( ( ( MUC - MUC ) - Min( CS ,RRSe ) ) - ( ( RRSe / CS ) + ( MLU + MUR ) ) ),( ( ( RRSe + RMSe ) + Min( MUM ,CS ) ) / ( Min( CS ,CS ) + Max( MUC,RCSe ) ) ) )", "obj1": 0.6813627254509018, "obj2": 0.2742796562382743}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUC - MLU ) ,( RRSe + ( ( MUC * MUM ) * ( DS / DS ) ) ) )", "obj1": 0.717434869739479, "obj2": 0.26977864104601046}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( ( RCSe + RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,Const ) ,( DDR + DDR ) ) / ( ( FirstVNF_Mem * MDR ) * ( BR / FirstVNF_Mem ) ) ) - ( ( ( MDR * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_Mem * MDR ) * ( AMS + DDR ) ) ) )", "choosing": "( Max( RMSe,( MUC * ( MLU + RRSe ) ) ) - ( CS - RMSe ) )", "obj1": 0.7194388777555111, "obj2": 0.2732337436025728}, {"determining": "Max( ( Min( ( Const + CRS ) ,( Const + FirstVNF_Mem ) ) + Max( ( FirstVNF_Mem - FirstVNF_Mem ),( CRS + ACS ) ) ),Max( Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ARS ,AMS ) ),Min( ( ACS / CRS ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( MUM ,MUM ) / Min( RRSe ,MUM ) ) - Min( ( MUR - MUC ) ,( RMSe + RRSe ) ) ) + ( ( Min( RMSe ,MUR ) - ( MUM * MLU ) ) - ( ( CS / MLU ) + ( RMSe - MUC ) ) ) )", "obj1": 0.7194388777555111, "obj2": 0.258828883288777}, {"determining": "Max( ( ( ( CRS / PN ) - Min( ACS ,BR ) ) / ( Min( CRS ,MRS ) - ( DDR / MDR ) ) ),( Min( ( FirstVNF_RAM_Server * FirstVNF_CPU ) ,( AMS * FirstVNF_Mem_Server ) ) * ( ( RRS / BR ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - RCSe ) + ( MUC / RMSe ) ) + ( Max( CS,MUC ) - ( MUC + MLU ) ) ),Min( Max( Min( MUM ,DS ),( MUR + RRSe ) ) ,( ( MUC / RCSe ) / ( DS - MUR ) ) ) )", "obj1": 0.6893787575150301, "obj2": 0.27601692838699843}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Max( BR,FirstVNF_CPU ) ),( Min( MDR ,FirstVNF_Mem ) - Min( ACS ,MRS ) ) ) / Max( ( ( FirstVNF_CPU * CRS ) * Max( FirstVNF_RAM_Server,BR ) ),( Min( FirstVNF_CPU ,RRS ) - ( FirstVNF_CPU_Server + RRS ) ) ) )", "choosing": "( ( ( ( RMSe + MLU ) + ( RRSe + DS ) ) + ( Max( MUR,CS ) + ( CS / RMSe ) ) ) - ( ( Max( MUR,MUR ) - ( RRSe * RMSe ) ) / ( ( DS * MUM ) / Max( CS,RCSe ) ) ) )", "obj1": 0.7294589178356713, "obj2": 0.24330659151654338}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( Max( Max( DS,CS ),Max( MUR,RRSe ) ) + RRSe ) * Max( RMSe,( RCSe - CS ) ) )", "obj1": 0.7194388777555111, "obj2": 0.25266641747734675}], "2": [{"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "Min( ( Max( ( ( Max( Min( ( CRS / FirstVNF_CPU ) ,Max( AMS,RRS ) ),Max( ( Const / CRS ),( Const + FirstVNF_Mem ) ) ) * ( ( Min( CRS ,FirstVNF_RAM_Server ) / Min( DDR ,MDR ) ) * Min( ( FirstVNF_RAM - BR ) ,( RRS * AMS ) ) ) ) + ( ( ( ( ACS - DDR ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( FirstVNF_CPU ,DDR ) ) ) / ( ( ( DDR / BR ) * ( ARS + MRS ) ) - ( ( MDR + FirstVNF_Mem_Server ) * ( MDR - FirstVNF_Mem ) ) ) ) ),( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Const ) ) * ( Min( MRS ,MDR ) / ( FirstVNF_RAM - BR ) ) ),( ( ( FirstVNF_RAM / AMS ) + ( PN / ARS ) ) / ( ( FirstVNF_RAM - ARS ) - ( FirstVNF_Mem_Server + AMS ) ) ) ) + Max( ( Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( PN * MRS ) ) + Max( ( PN * Const ),( CRS * PN ) ) ),( ( ( BR * RRS ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( DDR - BR ) ) ) ) ) ) / ( ( ( ( ( Min( Const ,Const ) + ( RRS * MDR ) ) / ( ( MRS / FirstVNF_CPU ) - Min( FirstVNF_RAM ,CRS ) ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( RRS / FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server * PN ),( MDR + FirstVNF_CPU_Server ) ) ) ) + Max( Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( ACS ,AMS ) ),Min( ( FirstVNF_RAM + AMS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ),( ( Min( MRS ,PN ) / ( ARS + FirstVNF_Mem ) ) + Max( ( MDR + FirstVNF_CPU_Server ),( BR / FirstVNF_Mem_Server ) ) ) ) ) - ( Max( ( ( Max( MDR,FirstVNF_RAM_Server ) * Min( CRS ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( ARS + PN ) ) ),Max( Min( ( AMS / PN ) ,( PN - FirstVNF_CPU_Server ) ),Max( ( MDR * FirstVNF_Mem_Server ),( FirstVNF_RAM * MRS ) ) ) ) * Min( Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ),( ( MRS - ACS ) - ( FirstVNF_RAM + MRS ) ) ) ,( Max( ( PN + FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) / Max( ( RRS + MDR ),( FirstVNF_CPU + MDR ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( ( PN - ARS ) / Min( AMS ,MRS ) ) + Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( ARS ,ARS ) ) ) - Max( ( ( CRS - FirstVNF_RAM ) / Min( RRS ,MDR ) ),( ( DDR - FirstVNF_CPU ) - ( ARS * AMS ) ) ) ) ,( ( ( ( AMS / CRS ) - ( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,Const ) ) / Min( ( DDR - MDR ) ,( AMS / AMS ) ) ) ) ) ,Min( ( ( Min( Max( PN,ACS ) ,( FirstVNF_RAM / Const ) ) / ( ( RRS * AMS ) / ( BR * MDR ) ) ) - Min( Max( ( AMS / MDR ),Max( FirstVNF_Mem_Server,MDR ) ) ,( ( AMS + FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) ) ) ,( Max( ( ( ACS * PN ) * ( FirstVNF_RAM + CRS ) ),( ( PN * BR ) + Min( Const ,Const ) ) ) - Max( ( Min( ACS ,BR ) * ( MRS / AMS ) ),( ( CRS + Const ) + ( FirstVNF_CPU / Const ) ) ) ) ) ),( ( ( ( ( ( BR * Const ) / ( BR + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - MRS ) / ( RRS * RRS ) ) ) - Min( ( ( BR * FirstVNF_Mem_Server ) * ( AMS * RRS ) ) ,Max( Min( PN ,CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) * Min( ( Max( Min( MDR ,PN ),( DDR / PN ) ) / ( Min( Const ,FirstVNF_RAM ) / ( PN + MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( MRS / RRS ) ) ,Max( ( CRS - FirstVNF_CPU ),( FirstVNF_RAM_Server / PN ) ) ) ) ) / Min( ( ( ( ( Const * CRS ) - ( ARS / CRS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( Max( DDR,FirstVNF_RAM ) / ( BR + MDR ) ) ) ) ,( Min( ( Max( AMS,AMS ) - Min( MRS ,ARS ) ) ,Max( Max( Const,PN ),( Const * PN ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / Max( MRS,CRS ) ) / ( ( FirstVNF_Mem_Server + ARS ) + ( Const * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( ( Max( ( RCSe * RMSe ),( RMSe + MUC ) ) * ( ( RMSe - MLU ) / Max( MUM,DS ) ) ) ,( Min( ( MLU * MUM ) ,( RMSe * MLU ) ) + ( ( RRSe / RMSe ) * ( DS - DS ) ) ) ) + ( ( ( Max( RRSe,MUC ) * ( CS - MUC ) ) * ( ( RRSe * RMSe ) * ( MUM - MUC ) ) ) * ( ( ( MUM * CS ) - ( MUR / RCSe ) ) / Min( ( DS + MUR ) ,( MUR * DS ) ) ) ) ) + ( ( Max( ( ( RRSe / RMSe ) - Min( DS ,MUC ) ),Max( ( MUR + MUC ),( DS + RMSe ) ) ) / Min( Min( ( DS / MUC ) ,Max( RMSe,MUC ) ) ,( ( MUC / MUR ) + ( RRSe - MLU ) ) ) ) - Max( Min( ( Min( RRSe ,RCSe ) * ( MLU + CS ) ) ,Min( ( MUC / RRSe ) ,( RMSe * MUM ) ) ),( ( ( DS + MUC ) + ( CS + RRSe ) ) / ( ( MLU + MUC ) * ( MUC + MUM ) ) ) ) ) ) + ( Max( ( ( Min( Max( RMSe,MUM ) ,( RRSe / MUC ) ) * ( Max( RCSe,RMSe ) - ( MLU - CS ) ) ) * ( ( Max( CS,CS ) * Max( RRSe,MUR ) ) - ( Min( RCSe ,MUR ) / Max( MUM,CS ) ) ) ),( ( ( Min( CS ,RMSe ) * ( DS * RMSe ) ) + ( Min( MUC ,RMSe ) - ( MUC * CS ) ) ) + ( Max( ( MLU + RCSe ),( CS * RMSe ) ) * ( ( MUM * CS ) - ( RRSe * MUM ) ) ) ) ) - Max( ( Max( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ),Max( Min( RRSe ,MLU ),( RMSe - DS ) ) ) - Min( ( ( RMSe + RMSe ) - Min( RCSe ,RMSe ) ) ,( Max( DS,MLU ) / ( RRSe + MUC ) ) ) ),( ( Max( Min( MUR ,MLU ),Max( MLU,CS ) ) - ( Min( MLU ,MUM ) / Min( DS ,MUR ) ) ) - ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) * Max( ( MUM - DS ),( CS * CS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( RRSe - CS ) * ( MUR - MUM ) ) ,( ( RRSe + MUR ) / Max( MLU,MUC ) ) ) / ( ( Max( RRSe,MUR ) - Max( CS,MUR ) ) * ( ( RMSe - MUM ) / ( MLU / RMSe ) ) ) ) * Min( Max( ( ( RRSe / CS ) / ( DS / RMSe ) ),( ( MUR * RMSe ) / ( CS / MUR ) ) ) ,( ( ( CS / DS ) / Max( MUC,MUM ) ) - Max( ( RRSe + RCSe ),Min( CS ,MUM ) ) ) ) ) * Max( Max( ( ( ( MUC + DS ) + ( MUR + DS ) ) / ( Min( RRSe ,MUR ) - Max( DS,RMSe ) ) ),Max( ( ( MUM / MUC ) / ( CS - DS ) ),Min( ( RMSe / MLU ) ,Max( DS,RCSe ) ) ) ),Max( ( Min( ( MUC / RCSe ) ,( MLU - MLU ) ) + Min( Max( CS,CS ) ,( MUC - MUR ) ) ),Min( Max( ( RMSe + RCSe ),( CS / CS ) ) ,( ( RMSe / RCSe ) / Min( MLU ,DS ) ) ) ) ) ) + Min( ( ( ( Min( ( MLU - MUC ) ,Max( DS,RMSe ) ) / Max( Max( RMSe,RRSe ),Max( CS,DS ) ) ) * ( ( ( CS * DS ) / Min( MUR ,CS ) ) * ( ( MLU * MLU ) - Min( RRSe ,MLU ) ) ) ) / ( Max( ( Max( MUC,DS ) + Min( MUC ,MUC ) ),( ( DS * MUR ) / ( RMSe / MUC ) ) ) / Max( ( ( DS * CS ) * ( DS - RMSe ) ),Min( ( CS - RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ,Min( ( ( ( Min( DS ,RMSe ) * Max( RRSe,RMSe ) ) + ( ( RMSe - MLU ) * Max( MUR,RCSe ) ) ) * ( Min( ( DS + MUM ) ,( RMSe * RCSe ) ) * ( ( MLU - MUC ) - ( DS - RCSe ) ) ) ) ,( ( ( ( MLU / DS ) / ( MUC + MLU ) ) / ( ( RRSe * RMSe ) * ( MUR * CS ) ) ) + Min( ( Min( DS ,CS ) + Max( DS,MUM ) ) ,( ( DS - MUC ) / ( MUM * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8697394789579158, "obj2": 0.08645112101686496}, {"determining": "( ( ( Max( Max( BR,DDR ),Min( BR ,CRS ) ) * ( ARS + Const ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( MLU - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.935871743486974, "obj2": 0.035400371342068984}, {"determining": "( FirstVNF_RAM_Server - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( Max( Max( DS,CS ),Max( MUR,RRSe ) ) + RRSe ) * Max( RMSe,( RCSe - Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ) ) )", "obj1": 0.8036072144288577, "obj2": 0.16522432846267024}, {"determining": "( Min( FirstVNF_CPU ,( AMS - ACS ) ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( ( MUM / MUC ) * ( MLU * RMSe ) ) )", "obj1": 0.7995991983967936, "obj2": 0.20087477018102093}, {"determining": "Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( CRS / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.6593186372745491, "obj2": 0.23375394426703733}, {"determining": "( Max( FirstVNF_CPU,BR ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,CS ) * ( CS - CS ) )", "obj1": 0.6452905811623246, "obj2": 0.2497742825973096}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + ( CS - MUM ) )", "obj1": 0.6152304609218436, "obj2": 0.2819557892583642}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Const + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.6052104208416834, "obj2": 0.28728033910793893}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * Const ) )", "choosing": "( ( MLU * MLU ) - Min( MLU ,MUR ) )", "obj1": 0.6392785571142284, "obj2": 0.2583470656969837}, {"determining": "( ( CRS * ARS ) / ( Const * ( Min( AMS ,FirstVNF_CPU_Server ) / Max( MDR,BR ) ) ) )", "choosing": "( ( RMSe + MUM ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * ( RRSe * RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Max( MUR,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( FirstVNF_CPU * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe * RRSe ) ,Max( RCSe,MLU ) ) + ( Max( DS,RCSe ) + ( MUM + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),( DS + DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( ( RCSe + RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + BR ) - ( MRS / FirstVNF_CPU_Server ) ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( MUR / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Min( ( MUR / DS ) ,( MUC * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * ( RRSe * RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( CRS ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * Min( ( MUR / DS ) ,( MUC * MUR ) ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Min( ( MUR / DS ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( PN * BR ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( Max( CS,MLU ) - Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ( ( ( FirstVNF_Mem_Server - PN ) + ( CRS * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,MRS ) / ( ARS - FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,ACS ) / ( MRS / CRS ) ) / ( ( CRS - MDR ) - ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ),( ( Min( ( Const * FirstVNF_Mem_Server ) ,( RRS / CRS ) ) - ( Max( DDR,Const ) / ( DDR + BR ) ) ) + ( Max( Min( RRS ,FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server / MRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) ) / ( ( ( Min( Max( MRS,AMS ) ,( ACS + DDR ) ) * Max( Min( BR ,FirstVNF_CPU_Server ),Min( RRS ,AMS ) ) ) - ( ( Min( Const ,FirstVNF_RAM ) / ( FirstVNF_RAM - CRS ) ) * Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ) - ( ( Min( ( RRS * FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server + BR ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( MDR - FirstVNF_CPU_Server ) ) ) * ( ( Min( Const ,AMS ) * Min( FirstVNF_CPU_Server ,RRS ) ) * ( Max( MDR,FirstVNF_RAM ) + Max( MRS,PN ) ) ) ) ) ) - ( ( ( Max( Min( ( RRS + ACS ) ,Min( DDR ,MRS ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( ARS / ACS ) ) ) - ( ( ( MRS + CRS ) - Max( ARS,DDR ) ) * Min( Max( ARS,FirstVNF_CPU ) ,Max( ACS,DDR ) ) ) ) * Min( Max( Max( ( CRS - FirstVNF_Mem ),Min( FirstVNF_Mem ,ARS ) ),( ( CRS + ARS ) * ( DDR * FirstVNF_CPU ) ) ) ,( ( ( ARS + MDR ) * Max( MRS,FirstVNF_Mem_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) ) ) / Min( ( ( Max( ( FirstVNF_RAM - AMS ),Min( DDR ,Const ) ) + ( ( ACS + MDR ) / ( ACS + FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( BR + BR ) ) + ( ( ACS + FirstVNF_Mem ) + ( CRS / FirstVNF_RAM_Server ) ) ) ) ,( ( ( ( FirstVNF_RAM / MRS ) + Min( PN ,AMS ) ) / Max( ( FirstVNF_Mem_Server + Const ),Max( FirstVNF_CPU_Server,CRS ) ) ) + Min( ( Min( Const ,AMS ) + Max( BR,BR ) ) ,Min( Min( RRS ,PN ) ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) ) + ( Min( ( ( ( ( ( Const + FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem ) ) * Min( ( CRS / FirstVNF_RAM_Server ) ,Min( MRS ,Const ) ) ) * ( ( ( ARS + FirstVNF_CPU_Server ) + ( ACS + PN ) ) * Min( ( Const + FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * ( ( ( ( MRS - DDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) * Min( ( Const * DDR ) ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) - Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ),( ( BR - FirstVNF_RAM_Server ) / Max( RRS,AMS ) ) ) ) ) ,( ( ( Min( ( MRS + FirstVNF_RAM ) ,Max( CRS,ACS ) ) / ( ( AMS * Const ) + Min( DDR ,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) + ( DDR * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU - RRS ) * ( CRS + DDR ) ) ) ) / Min( ( ( ( FirstVNF_Mem * CRS ) * ( MDR * AMS ) ) / ( ( RRS / AMS ) / ( RRS * FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( RRS * DDR ) ) + ( ( AMS - MRS ) * Min( FirstVNF_CPU ,Const ) ) ) ) ) ) / Min( ( Min( ( ( ( FirstVNF_CPU + CRS ) / ( ARS + FirstVNF_Mem ) ) + Min( Max( Const,AMS ) ,Max( FirstVNF_CPU_Server,BR ) ) ) ,Min( ( ( FirstVNF_CPU_Server + ARS ) * Min( FirstVNF_RAM_Server ,CRS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server - RRS ) ) ) ) * ( ( ( ( BR * FirstVNF_RAM ) - Max( RRS,MDR ) ) / Max( ( BR - FirstVNF_RAM ),( CRS - FirstVNF_Mem ) ) ) + Max( ( Max( Const,PN ) + ( BR - PN ) ),( Min( ARS ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) ) ,( Max( Max( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ),Min( Min( DDR ,ARS ) ,( MDR / DDR ) ) ),Min( ( ( AMS / BR ) / Max( MDR,DDR ) ) ,( Max( DDR,CRS ) * ( ARS / FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR + ARS ) ,Min( ARS ,ARS ) ) / ( Min( ACS ,ARS ) + ( CRS - FirstVNF_RAM ) ) ) / ( Max( ( FirstVNF_CPU_Server / MDR ),Min( PN ,FirstVNF_RAM_Server ) ) * Min( ( ACS - ARS ) ,Max( MRS,Const ) ) ) ) ) ) ) )", "choosing": "( Max( Max( Max( Max( ( ( ( MLU * DS ) * ( MLU - MUR ) ) + ( Min( CS ,CS ) * ( DS + RMSe ) ) ),( ( ( MUM * RMSe ) / Max( MLU,MLU ) ) - ( Min( MUR ,CS ) + ( RCSe / MUR ) ) ) ),( ( Min( ( MUR + CS ) ,Max( RRSe,MUC ) ) + ( ( RMSe * RMSe ) + ( RRSe - RRSe ) ) ) - Max( ( ( MLU + RCSe ) * Min( RMSe ,RRSe ) ),( ( MLU * DS ) * ( RMSe * MUC ) ) ) ) ),( Max( ( Max( ( MUM * RCSe ),( RRSe / MUC ) ) * ( Min( MUM ,RCSe ) + Min( MLU ,CS ) ) ),( Max( ( MUR * MLU ),Max( MLU,RMSe ) ) * ( Max( MUR,CS ) - Min( MUC ,RRSe ) ) ) ) - Max( ( ( ( MUC * CS ) * ( RRSe * CS ) ) / ( Max( DS,RMSe ) - Min( RRSe ,MLU ) ) ),( ( ( DS / MLU ) / ( MUM / RCSe ) ) / ( ( MUC / MUM ) * ( RRSe + MLU ) ) ) ) ) ),Min( ( ( ( Max( ( RRSe / RRSe ),( DS - MUM ) ) + Max( ( MLU + MUC ),( MUC / RCSe ) ) ) - ( ( Min( MUC ,RRSe ) - ( RMSe + RMSe ) ) - ( Min( RCSe ,CS ) / Min( MUR ,DS ) ) ) ) - ( ( Max( ( MUR / CS ),( RCSe / RRSe ) ) / Min( ( CS - RMSe ) ,Max( MUC,RCSe ) ) ) - Min( Min( ( CS + MUM ) ,Max( RCSe,MUR ) ) ,Min( ( RCSe / CS ) ,( DS / RRSe ) ) ) ) ) ,( ( ( ( ( RCSe - RCSe ) * ( RMSe * RMSe ) ) * ( ( DS / RCSe ) / ( RCSe - MUR ) ) ) * ( ( ( RRSe - MUM ) * Max( MUM,RMSe ) ) - Min( ( CS + MUR ) ,( RMSe + MLU ) ) ) ) + ( ( ( ( RRSe / RMSe ) * Max( DS,MUR ) ) - ( ( MUR + MUR ) / ( MLU - RRSe ) ) ) - Max( ( Min( RRSe ,MUM ) - ( RRSe * MLU ) ),( ( RCSe + MLU ) - Min( MUC ,MUM ) ) ) ) ) ) ) + ( Max( Max( ( ( ( ( RMSe + DS ) - Max( MUM,CS ) ) - ( Max( DS,MUR ) / ( DS + RRSe ) ) ) / ( ( ( MUC / DS ) + Max( RMSe,RMSe ) ) / Max( ( RMSe + CS ),( MLU / MUR ) ) ) ),( ( ( ( MLU - MUR ) - Min( RCSe ,MLU ) ) - Min( Min( RMSe ,MLU ) ,( MLU - RCSe ) ) ) * ( ( ( MUR - MLU ) - Min( RMSe ,MUM ) ) / ( ( CS + MUM ) * ( RRSe - MLU ) ) ) ) ),( ( ( ( Max( CS,RMSe ) - ( RRSe - RCSe ) ) / ( ( RMSe + MUC ) / ( RMSe + CS ) ) ) + Max( ( ( RRSe * MLU ) + Min( RMSe ,MUM ) ),( Min( CS ,MLU ) * ( MLU + MUM ) ) ) ) * ( ( ( ( MUM + RCSe ) - ( RRSe - MUM ) ) + ( ( MUM / RMSe ) + ( MUC * CS ) ) ) - ( ( Min( RRSe ,MUM ) - ( MLU / MUC ) ) / ( ( DS / DS ) - Min( DS ,CS ) ) ) ) ) ) + ( Max( Max( Min( ( Min( RRSe ,DS ) + ( MUM / RRSe ) ) ,Min( ( MUM + MLU ) ,Max( RMSe,RMSe ) ) ),Max( ( Min( MLU ,MLU ) - Min( RRSe ,CS ) ),( Min( RRSe ,MUR ) * ( RRSe * MUR ) ) ) ),Min( ( ( Max( RRSe,MLU ) - ( CS * MLU ) ) - ( ( MLU - MUM ) - ( MUR - MUM ) ) ) ,Max( ( ( MUC - MUM ) - ( MUC / CS ) ),Max( ( RMSe * CS ),( MUM - MUM ) ) ) ) ) - ( ( Min( ( ( RRSe - MUM ) / Max( MUM,RMSe ) ) ,( ( MUR * RRSe ) * ( CS / CS ) ) ) - Min( ( ( DS - RRSe ) - ( MUR + CS ) ) ,Max( ( RRSe / RCSe ),( DS * RRSe ) ) ) ) + ( ( ( Max( CS,RMSe ) / Max( MLU,MUR ) ) + ( ( MUR / DS ) + ( MUM * RCSe ) ) ) - Min( ( Min( DS ,MLU ) - ( RMSe - RMSe ) ) ,( ( CS * CS ) + ( MUC - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "Min( Max( ( RMSe / MUR ),( CS + RCSe ) ) ,Max( ( MUC - MUM ),( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( ACS,CRS ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / ( DS + RCSe ) ) ) ,( Max( MUR,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "( ( ( MUC * RCSe ) / ( DS + RCSe ) ) - ( Min( MUM ,MUM ) + ( RMSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) ) ,Min( CRS ,AMS ) )", "choosing": "( ( RCSe / MLU ) / ( RMSe + ( MUC + ( RCSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "( ( RCSe / MLU ) / ( RMSe + ( MUC + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( FirstVNF_CPU * Min( Max( RRS,( ( Const + ARS ) - FirstVNF_CPU ) ) ,( MRS / MRS ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * RCSe ) + ( Max( DS,RCSe ) + ( MUM + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( FirstVNF_CPU * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Max( DS,MUR ) - ( MUM * RCSe ) ),( ( MLU + RMSe ) - ( MUR / RCSe ) ) ) - Min( ( Min( DS ,MUC ) * Max( RCSe,MLU ) ) ,Max( Max( RRSe,DS ),( CS / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),( DS + DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) - ( ( ( ACS * MRS ) + Min( FirstVNF_RAM ,ARS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( MUC / DS ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),( DS + DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / ( ( ACS * MRS ) + Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( MDR / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU + RCSe ),( DS + DS ) ) + ( RRSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),( DS + DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( DS,Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( RRS + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / ( ( Min( Max( FirstVNF_RAM,Const ) ,( DDR + DDR ) ) / ( ( FirstVNF_Mem * MDR ) * ( BR / FirstVNF_Mem ) ) ) - ( ( ( MDR * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem * MDR ) * ( AMS + DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * ( MUC * ( MLU + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( RRS + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( Min( RCSe ,RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( ( RCSe + RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),( FirstVNF_CPU * CRS ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( ( RMSe + MLU ) + ( RRSe + DS ) ) + ( Max( MUR,CS ) + ( CS / RMSe ) ) ) - ( ( Max( MUR,MUR ) - ( RRSe * RMSe ) ) / ( ( DS * MUM ) / Max( CS,RCSe ) ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "Min( ( Max( ( ( Max( Min( ( CRS / FirstVNF_CPU ) ,Max( AMS,RRS ) ),Max( ( Const / CRS ),( Const + FirstVNF_Mem ) ) ) * ( ( Min( CRS ,FirstVNF_RAM_Server ) / Min( DDR ,MDR ) ) * Min( ( FirstVNF_RAM - BR ) ,( RRS * AMS ) ) ) ) + ( ( ( ( ACS - DDR ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( FirstVNF_CPU ,DDR ) ) ) / ( ( ( DDR / BR ) * ( ARS + MRS ) ) - ( ( MDR + FirstVNF_Mem_Server ) * ( MDR - FirstVNF_Mem ) ) ) ) ),( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Const ) ) * ( Min( MRS ,MDR ) / ( FirstVNF_RAM - BR ) ) ),( ( ( FirstVNF_RAM / AMS ) + ( PN / ARS ) ) / ( ( FirstVNF_RAM - ARS ) - ( FirstVNF_Mem_Server + AMS ) ) ) ) + Max( ( Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( PN * MRS ) ) + Max( ( PN * Const ),( CRS * PN ) ) ),( ( ( BR * RRS ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( DDR - BR ) ) ) ) ) ) / ( ( ( ( ( Min( Const ,Const ) + ( RRS * MDR ) ) / ( ( MRS / FirstVNF_CPU ) - Min( FirstVNF_RAM ,CRS ) ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( RRS / FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server * PN ),( MDR + FirstVNF_CPU_Server ) ) ) ) + Max( Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( ACS ,AMS ) ),Min( ( FirstVNF_RAM + AMS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ),( ( Min( MRS ,PN ) / ( ARS + FirstVNF_Mem ) ) + Max( ( MDR + FirstVNF_CPU_Server ),( BR / FirstVNF_Mem_Server ) ) ) ) ) - ( Max( ( ( Max( MDR,FirstVNF_RAM_Server ) * Min( CRS ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( ARS + PN ) ) ),Max( Min( ( AMS / PN ) ,( PN - FirstVNF_CPU_Server ) ),Max( ( MDR * FirstVNF_Mem_Server ),( FirstVNF_RAM * MRS ) ) ) ) * Min( Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ),( ( MRS - ACS ) - ( FirstVNF_RAM + MRS ) ) ) ,( Max( ( PN + FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) / Max( ( RRS + MDR ),( FirstVNF_CPU + MDR ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( ( PN - ARS ) / Min( AMS ,MRS ) ) + Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( ARS ,ARS ) ) ) - Max( ( ( CRS - FirstVNF_RAM ) / Min( RRS ,MDR ) ),( ( DDR - FirstVNF_CPU ) - ( ARS * AMS ) ) ) ) ,( ( ( ( AMS / CRS ) - ( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,Const ) ) / Min( ( DDR - MDR ) ,( AMS / AMS ) ) ) ) ) ,Min( ( ( Min( Max( PN,ACS ) ,( FirstVNF_RAM / Const ) ) / ( ( RRS * AMS ) / ( BR * MDR ) ) ) - Min( Max( ( AMS / MDR ),Max( FirstVNF_Mem_Server,MDR ) ) ,( ( AMS + FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) ) ) ,( Max( ( ( ACS * PN ) * ( FirstVNF_RAM + CRS ) ),( ( PN * BR ) + Min( Const ,Const ) ) ) - Max( ( Min( ACS ,BR ) * ( MRS / AMS ) ),( ( CRS + Const ) + ( FirstVNF_CPU / Const ) ) ) ) ) ),( ( ( ( ( ( BR * Const ) / ( BR + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - MRS ) / ( RRS * RRS ) ) ) - Min( ( ( BR * FirstVNF_Mem_Server ) * ( AMS * RRS ) ) ,Max( Min( PN ,CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) * Min( ( Max( Min( MDR ,PN ),( DDR / PN ) ) / ( Min( Const ,FirstVNF_RAM ) / ( PN + MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( MRS / RRS ) ) ,Max( ( CRS - FirstVNF_CPU ),( FirstVNF_RAM_Server / PN ) ) ) ) ) / Min( ( ( ( ( Const * CRS ) - ( ARS / CRS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( Max( DDR,FirstVNF_RAM ) / ( BR + MDR ) ) ) ) ,( Min( ( Max( AMS,AMS ) - Min( MRS ,ARS ) ) ,Max( Max( Const,PN ),( Const * PN ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / Max( MRS,CRS ) ) / ( ( FirstVNF_Mem_Server + ARS ) + ( Const * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( ( Max( ( RCSe * RMSe ),( RMSe + MUC ) ) * ( ( RMSe - MLU ) / Max( MUM,DS ) ) ) ,( Min( ( MLU * MUM ) ,( RMSe * MLU ) ) + ( ( RRSe / RMSe ) * ( DS - DS ) ) ) ) + ( ( ( Max( RRSe,MUC ) * ( CS - MUC ) ) * ( ( RRSe * RMSe ) * ( MUM - MUC ) ) ) * ( ( ( MUM * CS ) - ( MUR / RCSe ) ) / Min( ( DS + MUR ) ,( MUR * DS ) ) ) ) ) + ( ( Max( ( ( RRSe / RMSe ) - Min( DS ,MUC ) ),Max( ( MUR + MUC ),( DS + RMSe ) ) ) / Min( Min( ( DS / MUC ) ,Max( RMSe,MUC ) ) ,( ( MUC / MUR ) + ( RRSe - MLU ) ) ) ) - Max( Min( ( Min( RRSe ,RCSe ) * ( MLU + CS ) ) ,Min( ( MUC / RRSe ) ,( RMSe * MUM ) ) ),( ( ( DS + MUC ) + ( CS + RRSe ) ) / ( ( MLU + MUC ) * ( MUC + MUM ) ) ) ) ) ) + ( Max( ( ( Min( Max( RMSe,MUM ) ,( RRSe / MUC ) ) * ( Max( RCSe,RMSe ) - ( MLU - CS ) ) ) * ( ( Max( CS,CS ) * Max( RRSe,MUR ) ) - ( Min( RCSe ,MUR ) / Max( MUM,CS ) ) ) ),( ( ( Min( CS ,RMSe ) * ( DS * RMSe ) ) + ( Min( MUC ,RMSe ) - ( MUC * CS ) ) ) + ( Max( ( MLU + RCSe ),( CS * RMSe ) ) * ( ( MUM * CS ) - ( RRSe * MUM ) ) ) ) ) - Max( ( Max( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ),Max( Min( RRSe ,MLU ),( RMSe - DS ) ) ) - Min( ( ( RMSe + RMSe ) - Min( RCSe ,RMSe ) ) ,( Max( DS,MLU ) / ( RRSe + MUC ) ) ) ),( ( Max( Min( MUR ,MLU ),Max( MLU,CS ) ) - ( Min( MLU ,MUM ) / Min( DS ,MUR ) ) ) - ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) * Max( ( MUM - DS ),( CS * CS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( RRSe - CS ) * ( MUR - MUM ) ) ,( ( RRSe + MUR ) / Max( MLU,MUC ) ) ) / ( ( Max( RRSe,MUR ) - Max( CS,MUR ) ) * ( ( RMSe - MUM ) / ( MLU / RMSe ) ) ) ) * Min( Max( ( ( RRSe / CS ) / ( DS / RMSe ) ),( ( MUR * RMSe ) / ( CS / MUR ) ) ) ,( ( ( CS / DS ) / Max( MUC,MUM ) ) - Max( ( RRSe + RCSe ),Min( CS ,MUM ) ) ) ) ) * Max( Max( ( ( ( MUC + DS ) + ( MUR + DS ) ) / ( Min( RRSe ,MUR ) - Max( DS,RMSe ) ) ),Max( ( ( MUM / MUC ) / ( CS - DS ) ),Min( ( RMSe / MLU ) ,Max( DS,RCSe ) ) ) ),Max( ( Min( ( MUC / RCSe ) ,( MLU - MLU ) ) + Min( Max( CS,CS ) ,( MUC - MUR ) ) ),Min( Max( ( RMSe + RCSe ),( CS / CS ) ) ,( ( RMSe / RCSe ) / Min( MLU ,DS ) ) ) ) ) ) + Min( ( ( ( Min( ( MLU - MUC ) ,Max( DS,RMSe ) ) / Max( Max( RMSe,RRSe ),Max( CS,DS ) ) ) * ( ( ( CS * DS ) / Min( MUR ,CS ) ) * ( ( MLU * MLU ) - Min( RRSe ,MLU ) ) ) ) / ( Max( ( Max( MUC,DS ) + Min( MUC ,MUC ) ),( ( DS * MUR ) / ( RMSe / MUC ) ) ) / Max( ( ( DS * CS ) * ( DS - RMSe ) ),Min( ( CS - RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ,Min( ( ( ( Min( DS ,RMSe ) * Max( RRSe,RMSe ) ) + ( ( RMSe - MLU ) * Max( MUR,RCSe ) ) ) * ( Min( ( DS + MUM ) ,( RMSe * RCSe ) ) * ( ( MLU - MUC ) - ( DS - RCSe ) ) ) ) ,( ( ( ( MLU / DS ) / ( MUC + MLU ) ) / ( ( RRSe * RMSe ) * ( MUR * CS ) ) ) + Min( ( Min( DS ,CS ) + Max( DS,MUM ) ) ,( ( DS - MUC ) / ( MUM * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8697394789579158, "obj2": 0.08645112101686496}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.7755511022044088, "obj2": 0.15899023225045877}, {"determining": "( ( ( Max( Max( BR,DDR ),Min( BR ,CRS ) ) * ( ARS + Const ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( MLU - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.935871743486974, "obj2": 0.035400371342068984}, {"determining": "( ( ( FirstVNF_Mem_Server - ARS ) + Min( FirstVNF_RAM ,AMS ) ) / ( AMS * CRS ) )", "choosing": "( ( DS - MLU ) - ( RCSe + MUR ) )", "obj1": 0.7414829659318637, "obj2": 0.1926238288630502}, {"determining": "Min( ( FirstVNF_CPU_Server - ARS ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) / ( ( CRS - AMS ) / RRS ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RMSe ) )", "obj1": 0.9238476953907816, "obj2": 0.05609089331433256}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUC ) )", "obj1": 0.8316633266533067, "obj2": 0.15176367918977876}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.8416833667334669, "obj2": 0.14262016207093925}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) + FirstVNF_Mem_Server )", "choosing": "( ( ( MLU - RMSe ) - ( RCSe + MUR ) ) - Max( RRSe,MUR ) )", "obj1": 0.7214428857715431, "obj2": 0.20470191387717912}, {"determining": "( Max( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ),BR ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,CS ) * ( CS - CS ) )", "obj1": 0.6412825651302605, "obj2": 0.24048403702257515}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2725357384709045}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Const + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.6052104208416834, "obj2": 0.28728033910793893}, {"determining": "( CRS / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.6593186372745491, "obj2": 0.23375394426703733}, {"determining": "Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.8416833667334669, "obj2": 0.14262016207093925}, {"determining": "Min( ( ARS + MDR ) ,( AMS - ACS ) )", "choosing": "( Min( DS ,MLU ) - ( DS + MLU ) )", "obj1": 0.9298597194388778, "obj2": 0.05537511840801006}, {"determining": "( CRS / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.6593186372745491, "obj2": 0.23375394426703733}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * CRS ) ) )", "choosing": "( ( MUC - RMSe ) - ( RCSe + ( ( MUC - RMSe ) - ( RCSe + MUM ) ) ) )", "obj1": 0.6392785571142284, "obj2": 0.2570119096490944}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Min( ACS ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe + RMSe ) - MLU )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( Max( FirstVNF_CPU,Const ) / ( FirstVNF_RAM_Server * RRS ) )", "choosing": "( Max( RCSe,RMSe ) - ( RCSe + MUM ) )", "obj1": 0.6352705410821643, "obj2": 0.25993659088490645}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( ( CRS * ARS ) / ( Const * ( Min( AMS ,FirstVNF_CPU_Server ) / Max( MDR,BR ) ) ) )", "choosing": "( ( RMSe + MUM ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * CRS ) )", "choosing": "( Max( RCSe,RMSe ) - ( RCSe + MUM ) )", "obj1": 0.6352705410821643, "obj2": 0.25993659088490645}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * ( RRSe * RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Max( MUR,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( FirstVNF_CPU * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe * RRSe ) ,Max( RCSe,MLU ) ) + ( Max( DS,RCSe ) + ( MUM + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),( DS + DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( ( RCSe + RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + BR ) - ( MRS / FirstVNF_CPU_Server ) ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( MUR / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Min( ( MUR / DS ) ,( MUC * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * ( RRSe * RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( CRS ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * Min( ( MUR / DS ) ,( MUC * MUR ) ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Min( ( MUR / DS ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( PN * BR ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( Max( CS,MLU ) - Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ( ( ( FirstVNF_Mem_Server - PN ) + ( CRS * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,MRS ) / ( ARS - FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,ACS ) / ( MRS / CRS ) ) / ( ( CRS - MDR ) - ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ),( ( Min( ( Const * FirstVNF_Mem_Server ) ,( RRS / CRS ) ) - ( Max( DDR,Const ) / ( DDR + BR ) ) ) + ( Max( Min( RRS ,FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server / MRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) ) / ( ( ( Min( Max( MRS,AMS ) ,( ACS + DDR ) ) * Max( Min( BR ,FirstVNF_CPU_Server ),Min( RRS ,AMS ) ) ) - ( ( Min( Const ,FirstVNF_RAM ) / ( FirstVNF_RAM - CRS ) ) * Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ) - ( ( Min( ( RRS * FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server + BR ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( MDR - FirstVNF_CPU_Server ) ) ) * ( ( Min( Const ,AMS ) * Min( FirstVNF_CPU_Server ,RRS ) ) * ( Max( MDR,FirstVNF_RAM ) + Max( MRS,PN ) ) ) ) ) ) - ( ( ( Max( Min( ( RRS + ACS ) ,Min( DDR ,MRS ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( ARS / ACS ) ) ) - ( ( ( MRS + CRS ) - Max( ARS,DDR ) ) * Min( Max( ARS,FirstVNF_CPU ) ,Max( ACS,DDR ) ) ) ) * Min( Max( Max( ( CRS - FirstVNF_Mem ),Min( FirstVNF_Mem ,ARS ) ),( ( CRS + ARS ) * ( DDR * FirstVNF_CPU ) ) ) ,( ( ( ARS + MDR ) * Max( MRS,FirstVNF_Mem_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) ) ) / Min( ( ( Max( ( FirstVNF_RAM - AMS ),Min( DDR ,Const ) ) + ( ( ACS + MDR ) / ( ACS + FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( BR + BR ) ) + ( ( ACS + FirstVNF_Mem ) + ( CRS / FirstVNF_RAM_Server ) ) ) ) ,( ( ( ( FirstVNF_RAM / MRS ) + Min( PN ,AMS ) ) / Max( ( FirstVNF_Mem_Server + Const ),Max( FirstVNF_CPU_Server,CRS ) ) ) + Min( ( Min( Const ,AMS ) + Max( BR,BR ) ) ,Min( Min( RRS ,PN ) ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) ) + ( Min( ( ( ( ( ( Const + FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem ) ) * Min( ( CRS / FirstVNF_RAM_Server ) ,Min( MRS ,Const ) ) ) * ( ( ( ARS + FirstVNF_CPU_Server ) + ( ACS + PN ) ) * Min( ( Const + FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * ( ( ( ( MRS - DDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) * Min( ( Const * DDR ) ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) - Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ),( ( BR - FirstVNF_RAM_Server ) / Max( RRS,AMS ) ) ) ) ) ,( ( ( Min( ( MRS + FirstVNF_RAM ) ,Max( CRS,ACS ) ) / ( ( AMS * Const ) + Min( DDR ,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) + ( DDR * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU - RRS ) * ( CRS + DDR ) ) ) ) / Min( ( ( ( FirstVNF_Mem * CRS ) * ( MDR * AMS ) ) / ( ( RRS / AMS ) / ( RRS * FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( RRS * DDR ) ) + ( ( AMS - MRS ) * Min( FirstVNF_CPU ,Const ) ) ) ) ) ) / Min( ( Min( ( ( ( FirstVNF_CPU + CRS ) / ( ARS + FirstVNF_Mem ) ) + Min( Max( Const,AMS ) ,Max( FirstVNF_CPU_Server,BR ) ) ) ,Min( ( ( FirstVNF_CPU_Server + ARS ) * Min( FirstVNF_RAM_Server ,CRS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server - RRS ) ) ) ) * ( ( ( ( BR * FirstVNF_RAM ) - Max( RRS,MDR ) ) / Max( ( BR - FirstVNF_RAM ),( CRS - FirstVNF_Mem ) ) ) + Max( ( Max( Const,PN ) + ( BR - PN ) ),( Min( ARS ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) ) ,( Max( Max( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ),Min( Min( DDR ,ARS ) ,( MDR / DDR ) ) ),Min( ( ( AMS / BR ) / Max( MDR,DDR ) ) ,( Max( DDR,CRS ) * ( ARS / FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR + ARS ) ,Min( ARS ,ARS ) ) / ( Min( ACS ,ARS ) + ( CRS - FirstVNF_RAM ) ) ) / ( Max( ( FirstVNF_CPU_Server / MDR ),Min( PN ,FirstVNF_RAM_Server ) ) * Min( ( ACS - ARS ) ,Max( MRS,Const ) ) ) ) ) ) ) )", "choosing": "( Max( Max( Max( Max( ( ( ( MLU * DS ) * ( MLU - MUR ) ) + ( Min( CS ,CS ) * ( DS + RMSe ) ) ),( ( ( MUM * RMSe ) / Max( MLU,MLU ) ) - ( Min( MUR ,CS ) + ( RCSe / MUR ) ) ) ),( ( Min( ( MUR + CS ) ,Max( RRSe,MUC ) ) + ( ( RMSe * RMSe ) + ( RRSe - RRSe ) ) ) - Max( ( ( MLU + RCSe ) * Min( RMSe ,RRSe ) ),( ( MLU * DS ) * ( RMSe * MUC ) ) ) ) ),( Max( ( Max( ( MUM * RCSe ),( RRSe / MUC ) ) * ( Min( MUM ,RCSe ) + Min( MLU ,CS ) ) ),( Max( ( MUR * MLU ),Max( MLU,RMSe ) ) * ( Max( MUR,CS ) - Min( MUC ,RRSe ) ) ) ) - Max( ( ( ( MUC * CS ) * ( RRSe * CS ) ) / ( Max( DS,RMSe ) - Min( RRSe ,MLU ) ) ),( ( ( DS / MLU ) / ( MUM / RCSe ) ) / ( ( MUC / MUM ) * ( RRSe + MLU ) ) ) ) ) ),Min( ( ( ( Max( ( RRSe / RRSe ),( DS - MUM ) ) + Max( ( MLU + MUC ),( MUC / RCSe ) ) ) - ( ( Min( MUC ,RRSe ) - ( RMSe + RMSe ) ) - ( Min( RCSe ,CS ) / Min( MUR ,DS ) ) ) ) - ( ( Max( ( MUR / CS ),( RCSe / RRSe ) ) / Min( ( CS - RMSe ) ,Max( MUC,RCSe ) ) ) - Min( Min( ( CS + MUM ) ,Max( RCSe,MUR ) ) ,Min( ( RCSe / CS ) ,( DS / RRSe ) ) ) ) ) ,( ( ( ( ( RCSe - RCSe ) * ( RMSe * RMSe ) ) * ( ( DS / RCSe ) / ( RCSe - MUR ) ) ) * ( ( ( RRSe - MUM ) * Max( MUM,RMSe ) ) - Min( ( CS + MUR ) ,( RMSe + MLU ) ) ) ) + ( ( ( ( RRSe / RMSe ) * Max( DS,MUR ) ) - ( ( MUR + MUR ) / ( MLU - RRSe ) ) ) - Max( ( Min( RRSe ,MUM ) - ( RRSe * MLU ) ),( ( RCSe + MLU ) - Min( MUC ,MUM ) ) ) ) ) ) ) + ( Max( Max( ( ( ( ( RMSe + DS ) - Max( MUM,CS ) ) - ( Max( DS,MUR ) / ( DS + RRSe ) ) ) / ( ( ( MUC / DS ) + Max( RMSe,RMSe ) ) / Max( ( RMSe + CS ),( MLU / MUR ) ) ) ),( ( ( ( MLU - MUR ) - Min( RCSe ,MLU ) ) - Min( Min( RMSe ,MLU ) ,( MLU - RCSe ) ) ) * ( ( ( MUR - MLU ) - Min( RMSe ,MUM ) ) / ( ( CS + MUM ) * ( RRSe - MLU ) ) ) ) ),( ( ( ( Max( CS,RMSe ) - ( RRSe - RCSe ) ) / ( ( RMSe + MUC ) / ( RMSe + CS ) ) ) + Max( ( ( RRSe * MLU ) + Min( RMSe ,MUM ) ),( Min( CS ,MLU ) * ( MLU + MUM ) ) ) ) * ( ( ( ( MUM + RCSe ) - ( RRSe - MUM ) ) + ( ( MUM / RMSe ) + ( MUC * CS ) ) ) - ( ( Min( RRSe ,MUM ) - ( MLU / MUC ) ) / ( ( DS / DS ) - Min( DS ,CS ) ) ) ) ) ) + ( Max( Max( Min( ( Min( RRSe ,DS ) + ( MUM / RRSe ) ) ,Min( ( MUM + MLU ) ,Max( RMSe,RMSe ) ) ),Max( ( Min( MLU ,MLU ) - Min( RRSe ,CS ) ),( Min( RRSe ,MUR ) * ( RRSe * MUR ) ) ) ),Min( ( ( Max( RRSe,MLU ) - ( CS * MLU ) ) - ( ( MLU - MUM ) - ( MUR - MUM ) ) ) ,Max( ( ( MUC - MUM ) - ( MUC / CS ) ),Max( ( RMSe * CS ),( MUM - MUM ) ) ) ) ) - ( ( Min( ( ( RRSe - MUM ) / Max( MUM,RMSe ) ) ,( ( MUR * RRSe ) * ( CS / CS ) ) ) - Min( ( ( DS - RRSe ) - ( MUR + CS ) ) ,Max( ( RRSe / RCSe ),( DS * RRSe ) ) ) ) + ( ( ( Max( CS,RMSe ) / Max( MLU,MUR ) ) + ( ( MUR / DS ) + ( MUM * RCSe ) ) ) - Min( ( Min( DS ,MLU ) - ( RMSe - RMSe ) ) ,( ( CS * CS ) + ( MUC - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "Min( Max( ( RMSe / MUR ),( CS + RCSe ) ) ,Max( ( MUC - MUM ),( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( ACS,CRS ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / ( DS + RCSe ) ) ) ,( Max( MUR,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "( ( ( MUC * RCSe ) / ( DS + RCSe ) ) - ( Min( MUM ,MUM ) + ( RMSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) ) ,Min( CRS ,AMS ) )", "choosing": "( ( RCSe / MLU ) / ( RMSe + ( MUC + ( RCSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "( ( RCSe / MLU ) / ( RMSe + ( MUC + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( FirstVNF_CPU * Min( Max( RRS,( ( Const + ARS ) - FirstVNF_CPU ) ) ,( MRS / MRS ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * RCSe ) + ( Max( DS,RCSe ) + ( MUM + DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MLU ) - ( ( ( CS - MUC ) - Min( RMSe ,RCSe ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "Min( ( Max( ( ( Max( Min( ( CRS / FirstVNF_CPU ) ,Max( AMS,RRS ) ),Max( ( Const / CRS ),( Const + FirstVNF_Mem ) ) ) * ( ( Min( CRS ,FirstVNF_RAM_Server ) / Min( DDR ,MDR ) ) * Min( ( FirstVNF_RAM - BR ) ,( RRS * AMS ) ) ) ) + ( ( ( ( ACS - DDR ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( FirstVNF_CPU ,DDR ) ) ) / ( ( ( DDR / BR ) * ( ARS + MRS ) ) - ( ( MDR + FirstVNF_Mem_Server ) * ( MDR - FirstVNF_Mem ) ) ) ) ),( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Const ) ) * ( Min( MRS ,MDR ) / ( FirstVNF_RAM - BR ) ) ),( ( ( FirstVNF_RAM / AMS ) + ( PN / ARS ) ) / ( ( FirstVNF_RAM - ARS ) - ( FirstVNF_Mem_Server + AMS ) ) ) ) + Max( ( Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( PN * MRS ) ) + Max( ( PN * Const ),( CRS * PN ) ) ),( ( ( BR * RRS ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( DDR - BR ) ) ) ) ) ) / ( ( ( ( ( Min( Const ,Const ) + ( RRS * MDR ) ) / ( ( MRS / FirstVNF_CPU ) - Min( FirstVNF_RAM ,CRS ) ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( RRS / FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server * PN ),( MDR + FirstVNF_CPU_Server ) ) ) ) + Max( Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( ACS ,AMS ) ),Min( ( FirstVNF_RAM + AMS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ),( ( Min( MRS ,PN ) / ( ARS + FirstVNF_Mem ) ) + Max( ( MDR + FirstVNF_CPU_Server ),( BR / FirstVNF_Mem_Server ) ) ) ) ) - ( Max( ( ( Max( MDR,FirstVNF_RAM_Server ) * Min( CRS ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( ARS + PN ) ) ),Max( Min( ( AMS / PN ) ,( PN - FirstVNF_CPU_Server ) ),Max( ( MDR * FirstVNF_Mem_Server ),( FirstVNF_RAM * MRS ) ) ) ) * Min( Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ),( ( MRS - ACS ) - ( FirstVNF_RAM + MRS ) ) ) ,( Max( ( PN + FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) / Max( ( RRS + MDR ),( FirstVNF_CPU + MDR ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( ( PN - ARS ) / Min( AMS ,MRS ) ) + Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( ARS ,ARS ) ) ) - Max( ( ( CRS - FirstVNF_RAM ) / Min( RRS ,MDR ) ),( ( DDR - FirstVNF_CPU ) - ( ARS * AMS ) ) ) ) ,( ( ( ( AMS / CRS ) - ( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,Const ) ) / Min( ( DDR - MDR ) ,( AMS / AMS ) ) ) ) ) ,Min( ( ( Min( Max( PN,ACS ) ,( FirstVNF_RAM / Const ) ) / ( ( RRS * AMS ) / ( BR * MDR ) ) ) - Min( Max( ( AMS / MDR ),Max( FirstVNF_Mem_Server,MDR ) ) ,( ( AMS + FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) ) ) ,( Max( ( ( ACS * PN ) * ( FirstVNF_RAM + CRS ) ),( ( PN * BR ) + Min( Const ,Const ) ) ) - Max( ( Min( ACS ,BR ) * ( MRS / AMS ) ),( ( CRS + Const ) + ( FirstVNF_CPU / Const ) ) ) ) ) ),( ( ( ( ( ( BR * Const ) / ( BR + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - MRS ) / ( RRS * RRS ) ) ) - Min( ( ( BR * FirstVNF_Mem_Server ) * ( AMS * RRS ) ) ,Max( Min( PN ,CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) * Min( ( Max( Min( MDR ,PN ),( DDR / PN ) ) / ( Min( Const ,FirstVNF_RAM ) / ( PN + MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( MRS / RRS ) ) ,Max( ( CRS - FirstVNF_CPU ),( FirstVNF_RAM_Server / PN ) ) ) ) ) / Min( ( ( ( ( Const * CRS ) - ( ARS / CRS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( Max( DDR,FirstVNF_RAM ) / ( BR + MDR ) ) ) ) ,( Min( ( Max( AMS,AMS ) - Min( MRS ,ARS ) ) ,Max( Max( Const,PN ),( Const * PN ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / Max( MRS,CRS ) ) / ( ( FirstVNF_Mem_Server + ARS ) + ( Const * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( ( Max( ( RCSe * RMSe ),( RMSe + MUC ) ) * ( ( RMSe - MLU ) / Max( MUM,DS ) ) ) ,( Min( ( MLU * MUM ) ,( RMSe * MLU ) ) + ( ( RRSe / RMSe ) * ( DS - DS ) ) ) ) + ( ( ( Max( RRSe,MUC ) * ( CS - MUC ) ) * ( ( RRSe * RMSe ) * ( MUM - MUC ) ) ) * ( ( ( MUM * CS ) - ( MUR / RCSe ) ) / Min( ( DS + MUR ) ,( MUR * DS ) ) ) ) ) + ( ( Max( ( ( RRSe / RMSe ) - Min( DS ,MUC ) ),Max( ( MUR + MUC ),( DS + RMSe ) ) ) / Min( Min( ( DS / MUC ) ,Max( RMSe,MUC ) ) ,( ( MUC / MUR ) + ( RRSe - MLU ) ) ) ) - Max( Min( ( Min( RRSe ,RCSe ) * ( MLU + CS ) ) ,Min( ( MUC / RRSe ) ,( RMSe * MUM ) ) ),( ( ( DS + MUC ) + ( CS + RRSe ) ) / ( ( MLU + MUC ) * ( MUC + MUM ) ) ) ) ) ) + ( Max( ( ( Min( Max( RMSe,MUM ) ,( RRSe / MUC ) ) * ( Max( RCSe,RMSe ) - ( MLU - CS ) ) ) * ( ( Max( CS,CS ) * Max( RRSe,MUR ) ) - ( Min( RCSe ,MUR ) / Max( MUM,CS ) ) ) ),( ( ( Min( CS ,RMSe ) * ( DS * RMSe ) ) + ( Min( MUC ,RMSe ) - ( MUC * CS ) ) ) + ( Max( ( MLU + RCSe ),( CS * RMSe ) ) * ( ( MUM * CS ) - ( RRSe * MUM ) ) ) ) ) - Max( ( Max( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ),Max( Min( RRSe ,MLU ),( RMSe - DS ) ) ) - Min( ( ( RMSe + RMSe ) - Min( RCSe ,RMSe ) ) ,( Max( DS,MLU ) / ( RRSe + MUC ) ) ) ),( ( Max( Min( MUR ,MLU ),Max( MLU,CS ) ) - ( Min( MLU ,MUM ) / Min( DS ,MUR ) ) ) - ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) * Max( ( MUM - DS ),( CS * CS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( RRSe - CS ) * ( MUR - MUM ) ) ,( ( RRSe + MUR ) / Max( MLU,MUC ) ) ) / ( ( Max( RRSe,MUR ) - Max( CS,MUR ) ) * ( ( RMSe - MUM ) / ( MLU / RMSe ) ) ) ) * Min( Max( ( ( RRSe / CS ) / ( DS / RMSe ) ),( ( MUR * RMSe ) / ( CS / MUR ) ) ) ,( ( ( CS / DS ) / Max( MUC,MUM ) ) - Max( ( RRSe + RCSe ),Min( CS ,MUM ) ) ) ) ) * Max( Max( ( ( ( MUC + DS ) + ( MUR + DS ) ) / ( Min( RRSe ,MUR ) - Max( DS,RMSe ) ) ),Max( ( ( MUM / MUC ) / ( CS - DS ) ),Min( ( RMSe / MLU ) ,Max( DS,RCSe ) ) ) ),Max( ( Min( ( MUC / RCSe ) ,( MLU - MLU ) ) + Min( Max( CS,CS ) ,( MUC - MUR ) ) ),Min( Max( ( RMSe + RCSe ),( CS / CS ) ) ,( ( RMSe / RCSe ) / Min( MLU ,DS ) ) ) ) ) ) + Min( ( ( ( Min( ( MLU - MUC ) ,Max( DS,RMSe ) ) / Max( Max( RMSe,RRSe ),Max( CS,DS ) ) ) * ( ( ( CS * DS ) / Min( MUR ,CS ) ) * ( ( MLU * MLU ) - Min( RRSe ,MLU ) ) ) ) / ( Max( ( Max( MUC,DS ) + Min( MUC ,MUC ) ),( ( DS * MUR ) / ( RMSe / MUC ) ) ) / Max( ( ( DS * CS ) * ( DS - RMSe ) ),Min( ( CS - RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ,Min( ( ( ( Min( DS ,RMSe ) * Max( RRSe,RMSe ) ) + ( ( RMSe - MLU ) * Max( MUR,RCSe ) ) ) * ( Min( ( DS + MUM ) ,( RMSe * RCSe ) ) * ( ( MLU - MUC ) - ( DS - RCSe ) ) ) ) ,( ( ( ( MLU / DS ) / ( MUC + MLU ) ) / ( ( RRSe * RMSe ) * ( MUR * CS ) ) ) + Min( ( Min( DS ,CS ) + Max( DS,MUM ) ) ,( ( DS - MUC ) / ( MUM * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8697394789579158, "obj2": 0.08645112101686496}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.7755511022044088, "obj2": 0.15899023225045877}, {"determining": "( ( ( Max( Max( BR,DDR ),Min( BR ,CRS ) ) * ( ARS + Const ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( MLU - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.935871743486974, "obj2": 0.035400371342068984}, {"determining": "( ( ( FirstVNF_Mem_Server - ARS ) + Min( FirstVNF_RAM ,AMS ) ) / ( AMS * CRS ) )", "choosing": "( ( DS - MLU ) - ( RCSe + MUR ) )", "obj1": 0.7414829659318637, "obj2": 0.1926238288630502}, {"determining": "Min( ( FirstVNF_CPU_Server - ARS ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) / ( ( CRS - AMS ) / RRS ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RMSe ) )", "obj1": 0.9238476953907816, "obj2": 0.05609089331433256}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUC ) )", "obj1": 0.8316633266533067, "obj2": 0.15176367918977876}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.8416833667334669, "obj2": 0.14262016207093925}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) + FirstVNF_Mem_Server )", "choosing": "( ( ( MLU - RMSe ) - ( RCSe + MUR ) ) - Max( RRSe,MUR ) )", "obj1": 0.7214428857715431, "obj2": 0.20470191387717912}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) / AMS )", "choosing": "( ( ( MLU - RCSe ) - ( MLU * RRSe ) ) - ( RCSe + MUM ) )", "obj1": 0.6673346693386774, "obj2": 0.2327747953532403}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.8416833667334669, "obj2": 0.14262016207093925}, {"determining": "Min( ( ARS + MDR ) ,( AMS - ACS ) )", "choosing": "( Min( DS ,MLU ) - ( DS + MLU ) )", "obj1": 0.9298597194388778, "obj2": 0.05537511840801006}, {"determining": "( MRS / ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( ( MRS / ( AMS * Const ) ) * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) * Const ) )", "choosing": "( ( RCSe - ( RCSe - ( MLU - MUM ) ) ) - MLU )", "obj1": 0.6352705410821643, "obj2": 0.2472913337457896}, {"determining": "Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Const + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.6052104208416834, "obj2": 0.28728033910793893}, {"determining": "( Const - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( MLU - MUC ) / ( RRSe - MUC ) )", "obj1": 0.6332665330661322, "obj2": 0.25903847350851245}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2725357384709045}, {"determining": "( Min( CRS ,BR ) / ( Const - RRS ) )", "choosing": "( ( ( RCSe - Max( DS,MLU ) ) * ( CS + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6092184368737475, "obj2": 0.27312348156802424}, {"determining": "( Min( ARS ,FirstVNF_Mem ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( RCSe / ( RRSe - MUC ) )", "obj1": 0.6472945891783567, "obj2": 0.238362928812323}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe - RMSe ) - MLU )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( Max( ( ( Const * FirstVNF_CPU_Server ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + Min( DS ,RMSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28911524448661735}, {"determining": "( Max( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ),BR ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,CS ) * ( CS - CS ) )", "obj1": 0.6412825651302605, "obj2": 0.24048403702257515}, {"determining": "( CRS / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.6593186372745491, "obj2": 0.23375394426703733}, {"determining": "( CRS / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.6593186372745491, "obj2": 0.23375394426703733}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 0.6432865731462926, "obj2": 0.24022733903912769}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( Min( ACS ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe + RMSe ) - MLU )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * ( RRSe * RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Max( MUR,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( FirstVNF_CPU * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe * RRSe ) ,Max( RCSe,MLU ) ) + ( Max( DS,RCSe ) + ( MUM + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),( DS + DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( ( RCSe + RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + BR ) - ( MRS / FirstVNF_CPU_Server ) ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( MUR / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Min( ( MUR / DS ) ,( MUC * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * ( RRSe * RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( CRS ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * Min( ( MUR / DS ) ,( MUC * MUR ) ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Min( ( MUR / DS ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( PN * BR ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( Max( CS,MLU ) - Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ( ( ( FirstVNF_Mem_Server - PN ) + ( CRS * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,MRS ) / ( ARS - FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,ACS ) / ( MRS / CRS ) ) / ( ( CRS - MDR ) - ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ),( ( Min( ( Const * FirstVNF_Mem_Server ) ,( RRS / CRS ) ) - ( Max( DDR,Const ) / ( DDR + BR ) ) ) + ( Max( Min( RRS ,FirstVNF_RAM_Server ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server / MRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) ) / ( ( ( Min( Max( MRS,AMS ) ,( ACS + DDR ) ) * Max( Min( BR ,FirstVNF_CPU_Server ),Min( RRS ,AMS ) ) ) - ( ( Min( Const ,FirstVNF_RAM ) / ( FirstVNF_RAM - CRS ) ) * Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ) - ( ( Min( ( RRS * FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server + BR ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( MDR - FirstVNF_CPU_Server ) ) ) * ( ( Min( Const ,AMS ) * Min( FirstVNF_CPU_Server ,RRS ) ) * ( Max( MDR,FirstVNF_RAM ) + Max( MRS,PN ) ) ) ) ) ) - ( ( ( Max( Min( ( RRS + ACS ) ,Min( DDR ,MRS ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( ARS / ACS ) ) ) - ( ( ( MRS + CRS ) - Max( ARS,DDR ) ) * Min( Max( ARS,FirstVNF_CPU ) ,Max( ACS,DDR ) ) ) ) * Min( Max( Max( ( CRS - FirstVNF_Mem ),Min( FirstVNF_Mem ,ARS ) ),( ( CRS + ARS ) * ( DDR * FirstVNF_CPU ) ) ) ,( ( ( ARS + MDR ) * Max( MRS,FirstVNF_Mem_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU ,ACS ) ) ) ) ) / Min( ( ( Max( ( FirstVNF_RAM - AMS ),Min( DDR ,Const ) ) + ( ( ACS + MDR ) / ( ACS + FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( BR + BR ) ) + ( ( ACS + FirstVNF_Mem ) + ( CRS / FirstVNF_RAM_Server ) ) ) ) ,( ( ( ( FirstVNF_RAM / MRS ) + Min( PN ,AMS ) ) / Max( ( FirstVNF_Mem_Server + Const ),Max( FirstVNF_CPU_Server,CRS ) ) ) + Min( ( Min( Const ,AMS ) + Max( BR,BR ) ) ,Min( Min( RRS ,PN ) ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) ) + ( Min( ( ( ( ( ( Const + FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem ) ) * Min( ( CRS / FirstVNF_RAM_Server ) ,Min( MRS ,Const ) ) ) * ( ( ( ARS + FirstVNF_CPU_Server ) + ( ACS + PN ) ) * Min( ( Const + FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * ( ( ( ( MRS - DDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) * Min( ( Const * DDR ) ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) - Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ),( ( BR - FirstVNF_RAM_Server ) / Max( RRS,AMS ) ) ) ) ) ,( ( ( Min( ( MRS + FirstVNF_RAM ) ,Max( CRS,ACS ) ) / ( ( AMS * Const ) + Min( DDR ,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) + ( DDR * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU - RRS ) * ( CRS + DDR ) ) ) ) / Min( ( ( ( FirstVNF_Mem * CRS ) * ( MDR * AMS ) ) / ( ( RRS / AMS ) / ( RRS * FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( RRS * DDR ) ) + ( ( AMS - MRS ) * Min( FirstVNF_CPU ,Const ) ) ) ) ) ) / Min( ( Min( ( ( ( FirstVNF_CPU + CRS ) / ( ARS + FirstVNF_Mem ) ) + Min( Max( Const,AMS ) ,Max( FirstVNF_CPU_Server,BR ) ) ) ,Min( ( ( FirstVNF_CPU_Server + ARS ) * Min( FirstVNF_RAM_Server ,CRS ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server - RRS ) ) ) ) * ( ( ( ( BR * FirstVNF_RAM ) - Max( RRS,MDR ) ) / Max( ( BR - FirstVNF_RAM ),( CRS - FirstVNF_Mem ) ) ) + Max( ( Max( Const,PN ) + ( BR - PN ) ),( Min( ARS ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) ) ,( Max( Max( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ),Min( Min( DDR ,ARS ) ,( MDR / DDR ) ) ),Min( ( ( AMS / BR ) / Max( MDR,DDR ) ) ,( Max( DDR,CRS ) * ( ARS / FirstVNF_CPU ) ) ) ) - ( ( Min( ( MDR + ARS ) ,Min( ARS ,ARS ) ) / ( Min( ACS ,ARS ) + ( CRS - FirstVNF_RAM ) ) ) / ( Max( ( FirstVNF_CPU_Server / MDR ),Min( PN ,FirstVNF_RAM_Server ) ) * Min( ( ACS - ARS ) ,Max( MRS,Const ) ) ) ) ) ) ) )", "choosing": "( Max( Max( Max( Max( ( ( ( MLU * DS ) * ( MLU - MUR ) ) + ( Min( CS ,CS ) * ( DS + RMSe ) ) ),( ( ( MUM * RMSe ) / Max( MLU,MLU ) ) - ( Min( MUR ,CS ) + ( RCSe / MUR ) ) ) ),( ( Min( ( MUR + CS ) ,Max( RRSe,MUC ) ) + ( ( RMSe * RMSe ) + ( RRSe - RRSe ) ) ) - Max( ( ( MLU + RCSe ) * Min( RMSe ,RRSe ) ),( ( MLU * DS ) * ( RMSe * MUC ) ) ) ) ),( Max( ( Max( ( MUM * RCSe ),( RRSe / MUC ) ) * ( Min( MUM ,RCSe ) + Min( MLU ,CS ) ) ),( Max( ( MUR * MLU ),Max( MLU,RMSe ) ) * ( Max( MUR,CS ) - Min( MUC ,RRSe ) ) ) ) - Max( ( ( ( MUC * CS ) * ( RRSe * CS ) ) / ( Max( DS,RMSe ) - Min( RRSe ,MLU ) ) ),( ( ( DS / MLU ) / ( MUM / RCSe ) ) / ( ( MUC / MUM ) * ( RRSe + MLU ) ) ) ) ) ),Min( ( ( ( Max( ( RRSe / RRSe ),( DS - MUM ) ) + Max( ( MLU + MUC ),( MUC / RCSe ) ) ) - ( ( Min( MUC ,RRSe ) - ( RMSe + RMSe ) ) - ( Min( RCSe ,CS ) / Min( MUR ,DS ) ) ) ) - ( ( Max( ( MUR / CS ),( RCSe / RRSe ) ) / Min( ( CS - RMSe ) ,Max( MUC,RCSe ) ) ) - Min( Min( ( CS + MUM ) ,Max( RCSe,MUR ) ) ,Min( ( RCSe / CS ) ,( DS / RRSe ) ) ) ) ) ,( ( ( ( ( RCSe - RCSe ) * ( RMSe * RMSe ) ) * ( ( DS / RCSe ) / ( RCSe - MUR ) ) ) * ( ( ( RRSe - MUM ) * Max( MUM,RMSe ) ) - Min( ( CS + MUR ) ,( RMSe + MLU ) ) ) ) + ( ( ( ( RRSe / RMSe ) * Max( DS,MUR ) ) - ( ( MUR + MUR ) / ( MLU - RRSe ) ) ) - Max( ( Min( RRSe ,MUM ) - ( RRSe * MLU ) ),( ( RCSe + MLU ) - Min( MUC ,MUM ) ) ) ) ) ) ) + ( Max( Max( ( ( ( ( RMSe + DS ) - Max( MUM,CS ) ) - ( Max( DS,MUR ) / ( DS + RRSe ) ) ) / ( ( ( MUC / DS ) + Max( RMSe,RMSe ) ) / Max( ( RMSe + CS ),( MLU / MUR ) ) ) ),( ( ( ( MLU - MUR ) - Min( RCSe ,MLU ) ) - Min( Min( RMSe ,MLU ) ,( MLU - RCSe ) ) ) * ( ( ( MUR - MLU ) - Min( RMSe ,MUM ) ) / ( ( CS + MUM ) * ( RRSe - MLU ) ) ) ) ),( ( ( ( Max( CS,RMSe ) - ( RRSe - RCSe ) ) / ( ( RMSe + MUC ) / ( RMSe + CS ) ) ) + Max( ( ( RRSe * MLU ) + Min( RMSe ,MUM ) ),( Min( CS ,MLU ) * ( MLU + MUM ) ) ) ) * ( ( ( ( MUM + RCSe ) - ( RRSe - MUM ) ) + ( ( MUM / RMSe ) + ( MUC * CS ) ) ) - ( ( Min( RRSe ,MUM ) - ( MLU / MUC ) ) / ( ( DS / DS ) - Min( DS ,CS ) ) ) ) ) ) + ( Max( Max( Min( ( Min( RRSe ,DS ) + ( MUM / RRSe ) ) ,Min( ( MUM + MLU ) ,Max( RMSe,RMSe ) ) ),Max( ( Min( MLU ,MLU ) - Min( RRSe ,CS ) ),( Min( RRSe ,MUR ) * ( RRSe * MUR ) ) ) ),Min( ( ( Max( RRSe,MLU ) - ( CS * MLU ) ) - ( ( MLU - MUM ) - ( MUR - MUM ) ) ) ,Max( ( ( MUC - MUM ) - ( MUC / CS ) ),Max( ( RMSe * CS ),( MUM - MUM ) ) ) ) ) - ( ( Min( ( ( RRSe - MUM ) / Max( MUM,RMSe ) ) ,( ( MUR * RRSe ) * ( CS / CS ) ) ) - Min( ( ( DS - RRSe ) - ( MUR + CS ) ) ,Max( ( RRSe / RCSe ),( DS * RRSe ) ) ) ) + ( ( ( Max( CS,RMSe ) / Max( MLU,MUR ) ) + ( ( MUR / DS ) + ( MUM * RCSe ) ) ) - Min( ( Min( DS ,MLU ) - ( RMSe - RMSe ) ) ,( ( CS * CS ) + ( MUC - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MLU ) - ( ( ( CS - MUC ) - Min( RMSe ,RCSe ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.7755511022044088, "obj2": 0.15899023225045877}, {"determining": "( Const - ( DDR * ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( ( MUM - ( MLU - MUM ) ) / MUC ) / ( RRSe - MUC ) )", "obj1": 0.8176352705410822, "obj2": 0.09170508253966198}, {"determining": "Min( ( Max( ( ( Max( Min( ( CRS / FirstVNF_CPU ) ,Max( AMS,RRS ) ),Max( ( Const / CRS ),( Const + FirstVNF_Mem ) ) ) * ( ( Min( CRS ,FirstVNF_RAM_Server ) / Min( DDR ,MDR ) ) * Min( ( FirstVNF_RAM - BR ) ,( RRS * AMS ) ) ) ) + ( ( ( ( ACS - DDR ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( FirstVNF_CPU ,DDR ) ) ) / ( ( ( DDR / BR ) * ( ARS + MRS ) ) - ( ( MDR + FirstVNF_Mem_Server ) * ( MDR - FirstVNF_Mem ) ) ) ) ),( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Const ) ) * ( Min( MRS ,MDR ) / ( FirstVNF_RAM - BR ) ) ),( ( ( FirstVNF_RAM / AMS ) + ( PN / ARS ) ) / ( ( FirstVNF_RAM - ARS ) - ( FirstVNF_Mem_Server + AMS ) ) ) ) + Max( ( Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( PN * MRS ) ) + Max( ( PN * Const ),( CRS * PN ) ) ),( ( ( BR * RRS ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( DDR - BR ) ) ) ) ) ) / ( ( ( ( ( Min( Const ,Const ) + ( RRS * MDR ) ) / ( ( MRS / FirstVNF_CPU ) - Min( FirstVNF_RAM ,CRS ) ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( RRS / FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server * PN ),( MDR + FirstVNF_CPU_Server ) ) ) ) + Max( Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( ACS ,AMS ) ),Min( ( FirstVNF_RAM + AMS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ),( ( Min( MRS ,PN ) / ( ARS + FirstVNF_Mem ) ) + Max( ( MDR + FirstVNF_CPU_Server ),( BR / FirstVNF_Mem_Server ) ) ) ) ) - ( Max( ( ( Max( MDR,FirstVNF_RAM_Server ) * Min( CRS ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( ARS + PN ) ) ),Max( Min( ( AMS / PN ) ,( PN - FirstVNF_CPU_Server ) ),Max( ( MDR * FirstVNF_Mem_Server ),( FirstVNF_RAM * MRS ) ) ) ) * Min( Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ),( ( MRS - ACS ) - ( FirstVNF_RAM + MRS ) ) ) ,( Max( ( PN + FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) / Max( ( RRS + MDR ),( FirstVNF_CPU + MDR ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( ( PN - ARS ) / Min( AMS ,MRS ) ) + Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( ARS ,ARS ) ) ) - Max( ( ( CRS - FirstVNF_RAM ) / Min( RRS ,MDR ) ),( ( DDR - FirstVNF_CPU ) - ( ARS * AMS ) ) ) ) ,( ( ( ( AMS / CRS ) - ( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,Const ) ) / Min( ( DDR - MDR ) ,( AMS / AMS ) ) ) ) ) ,Min( ( ( Min( Max( PN,ACS ) ,( FirstVNF_RAM / Const ) ) / ( ( RRS * AMS ) / ( BR * MDR ) ) ) - Min( Max( ( AMS / MDR ),Max( FirstVNF_Mem_Server,MDR ) ) ,( ( AMS + FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) ) ) ,( Max( ( ( ACS * PN ) * ( FirstVNF_RAM + CRS ) ),( ( PN * BR ) + Min( Const ,Const ) ) ) - Max( ( Min( ACS ,BR ) * ( MRS / AMS ) ),( ( CRS + Const ) + ( FirstVNF_CPU / Const ) ) ) ) ) ),( ( ( ( ( ( BR * Const ) / ( BR + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - MRS ) / ( RRS * RRS ) ) ) - Min( ( ( BR * FirstVNF_Mem_Server ) * ( AMS * RRS ) ) ,Max( Min( PN ,CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) * Min( ( Max( Min( MDR ,PN ),( DDR / PN ) ) / ( Min( Const ,FirstVNF_RAM ) / ( PN + MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( MRS / RRS ) ) ,Max( ( CRS - FirstVNF_CPU ),( FirstVNF_RAM_Server / PN ) ) ) ) ) / Min( ( ( ( ( Const * CRS ) - ( ARS / CRS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( Max( DDR,FirstVNF_RAM ) / ( BR + MDR ) ) ) ) ,( Min( ( Max( AMS,AMS ) - Min( MRS ,ARS ) ) ,Max( Max( Const,PN ),( Const * PN ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / Max( MRS,CRS ) ) / ( ( FirstVNF_Mem_Server + ARS ) + ( Const * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( ( Max( ( RCSe * RMSe ),( RMSe + MUC ) ) * ( ( RMSe - MLU ) / Max( MUM,DS ) ) ) ,( Min( ( MLU * MUM ) ,( RMSe * MLU ) ) + ( ( RRSe / RMSe ) * ( DS - DS ) ) ) ) + ( ( ( Max( RRSe,MUC ) * ( CS - MUC ) ) * ( ( RRSe * RMSe ) * ( MUM - MUC ) ) ) * ( ( ( MUM * CS ) - ( MUR / RCSe ) ) / Min( ( DS + MUR ) ,( MUR * DS ) ) ) ) ) + ( ( Max( ( ( RRSe / RMSe ) - Min( DS ,MUC ) ),Max( ( MUR + MUC ),( DS + RMSe ) ) ) / Min( Min( ( DS / MUC ) ,Max( RMSe,MUC ) ) ,( ( MUC / MUR ) + ( RRSe - MLU ) ) ) ) - Max( Min( ( Min( RRSe ,RCSe ) * ( MLU + CS ) ) ,Min( ( MUC / RRSe ) ,( RMSe * MUM ) ) ),( ( ( DS + MUC ) + ( CS + RRSe ) ) / ( ( MLU + MUC ) * ( MUC + MUM ) ) ) ) ) ) + ( Max( ( ( Min( Max( RMSe,MUM ) ,( RRSe / MUC ) ) * ( Max( RCSe,RMSe ) - ( MLU - CS ) ) ) * ( ( Max( CS,CS ) * Max( RRSe,MUR ) ) - ( Min( RCSe ,MUR ) / Max( MUM,CS ) ) ) ),( ( ( Min( CS ,RMSe ) * ( DS * RMSe ) ) + ( Min( MUC ,RMSe ) - ( MUC * CS ) ) ) + ( Max( ( MLU + RCSe ),( CS * RMSe ) ) * ( ( MUM * CS ) - ( RRSe * MUM ) ) ) ) ) - Max( ( Max( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ),Max( Min( RRSe ,MLU ),( RMSe - DS ) ) ) - Min( ( ( RMSe + RMSe ) - Min( RCSe ,RMSe ) ) ,( Max( DS,MLU ) / ( RRSe + MUC ) ) ) ),( ( Max( Min( MUR ,MLU ),Max( MLU,CS ) ) - ( Min( MLU ,MUM ) / Min( DS ,MUR ) ) ) - ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) * Max( ( MUM - DS ),( CS * CS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( RRSe - CS ) * ( MUR - MUM ) ) ,( ( RRSe + MUR ) / Max( MLU,MUC ) ) ) / ( ( Max( RRSe,MUR ) - Max( CS,MUR ) ) * ( ( RMSe - MUM ) / ( MLU / RMSe ) ) ) ) * Min( Max( ( ( RRSe / CS ) / ( DS / RMSe ) ),( ( MUR * RMSe ) / ( CS / MUR ) ) ) ,( ( ( CS / DS ) / Max( MUC,MUM ) ) - Max( ( RRSe + RCSe ),Min( CS ,MUM ) ) ) ) ) * Max( Max( ( ( ( MUC + DS ) + ( MUR + DS ) ) / ( Min( RRSe ,MUR ) - Max( DS,RMSe ) ) ),Max( ( ( MUM / MUC ) / ( CS - DS ) ),Min( ( RMSe / MLU ) ,Max( DS,RCSe ) ) ) ),Max( ( Min( ( MUC / RCSe ) ,( MLU - MLU ) ) + Min( Max( CS,CS ) ,( MUC - MUR ) ) ),Min( Max( ( RMSe + RCSe ),( CS / CS ) ) ,( ( RMSe / RCSe ) / Min( MLU ,DS ) ) ) ) ) ) + Min( ( ( ( Min( ( MLU - MUC ) ,Max( DS,RMSe ) ) / Max( Max( RMSe,RRSe ),Max( CS,DS ) ) ) * ( ( ( CS * DS ) / Min( MUR ,CS ) ) * ( ( MLU * MLU ) - Min( RRSe ,MLU ) ) ) ) / ( Max( ( Max( MUC,DS ) + Min( MUC ,MUC ) ),( ( DS * MUR ) / ( RMSe / MUC ) ) ) / Max( ( ( DS * CS ) * ( DS - RMSe ) ),Min( ( CS - RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ,Min( ( ( ( Min( DS ,RMSe ) * Max( RRSe,RMSe ) ) + ( ( RMSe - MLU ) * Max( MUR,RCSe ) ) ) * ( Min( ( DS + MUM ) ,( RMSe * RCSe ) ) * ( ( MLU - MUC ) - ( DS - RCSe ) ) ) ) ,( ( ( ( MLU / DS ) / ( MUC + MLU ) ) / ( ( RRSe * RMSe ) * ( MUR * CS ) ) ) + Min( ( Min( DS ,CS ) + Max( DS,MUM ) ) ,( ( DS - MUC ) / ( MUM * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8697394789579158, "obj2": 0.08645112101686496}, {"determining": "( ( ( Max( Max( BR,DDR ),Min( BR ,CRS ) ) * ( ARS + Const ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( MLU - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.935871743486974, "obj2": 0.035400371342068984}, {"determining": "( Const - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU - ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) ) - MUC ) / ( RRSe - MUC ) )", "obj1": 0.7234468937875751, "obj2": 0.19237870404605525}, {"determining": "Min( ( FirstVNF_CPU_Server - ARS ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) / ( ( CRS - AMS ) / RRS ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RMSe ) )", "obj1": 0.9238476953907816, "obj2": 0.05609089331433256}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) + FirstVNF_Mem_Server )", "choosing": "( ( ( MLU - RMSe ) - ( RCSe + MUR ) ) - Max( RRSe,MUR ) )", "obj1": 0.7214428857715431, "obj2": 0.20470191387717912}, {"determining": "( Max( ( FirstVNF_CPU * Const ),Const ) / ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.5991983967935872, "obj2": 0.2786788767088929}, {"determining": "Min( ( ARS + MDR ) ,( AMS - ACS ) )", "choosing": "( Min( DS ,MLU ) - ( DS + MLU ) )", "obj1": 0.9298597194388778, "obj2": 0.05537511840801006}, {"determining": "Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) / AMS )", "choosing": "( ( ( MLU - RCSe ) - ( MLU * RRSe ) ) - ( RCSe + MUM ) )", "obj1": 0.6673346693386774, "obj2": 0.2327747953532403}, {"determining": "( MRS / ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( ( MRS / ( AMS * Const ) ) * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) * Const ) )", "choosing": "( ( RCSe - ( RCSe - ( MLU - MUM ) ) ) - MLU )", "obj1": 0.6352705410821643, "obj2": 0.2472913337457896}, {"determining": "( Min( ARS ,FirstVNF_Mem ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( RCSe / ( RRSe - MUC ) )", "obj1": 0.6472945891783567, "obj2": 0.238362928812323}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) ) )", "choosing": "( ( RCSe - RCSe ) - ( RCSe + MUM ) )", "obj1": 0.6673346693386774, "obj2": 0.2327747953532403}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / CRS )", "choosing": "( ( MLU * MLU ) - Min( MLU ,( ( RCSe - ( MLU - MUM ) ) * ( RCSe + MUM ) ) ) )", "obj1": 0.6292585170340681, "obj2": 0.2532912557416136}, {"determining": "( Max( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ),BR ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,CS ) * ( CS - CS ) )", "obj1": 0.6412825651302605, "obj2": 0.24048403702257515}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe - RMSe ) - MLU )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( Min( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe * ( MLU - ( RCSe * ( MLU - MUR ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.627254509018036, "obj2": 0.2553441973296298}, {"determining": "( CRS / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.6593186372745491, "obj2": 0.23375394426703733}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( CRS / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.6593186372745491, "obj2": 0.23375394426703733}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * Const ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) * ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.26770661052328804}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2725357384709045}, {"determining": "Max( ( CRS * ARS ),( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - Max( DS,MLU ) ) * ( CS + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.26770661052328804}, {"determining": "( Min( CRS ,BR ) / ( Const - RRS ) )", "choosing": "( ( ( RCSe - Max( DS,MLU ) ) * ( CS + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6092184368737475, "obj2": 0.27312348156802424}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6092184368737475, "obj2": 0.27312348156802424}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 0.6432865731462926, "obj2": 0.24022733903912769}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe - RMSe ) - MLU )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * ( RRSe * RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Max( MUR,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( FirstVNF_CPU * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe * RRSe ) ,Max( RCSe,MLU ) ) + ( Max( DS,RCSe ) + ( MUM + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),( DS + DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( ( RCSe + RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS + BR ) - ( MRS / FirstVNF_CPU_Server ) ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( MUR / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Min( ( MUR / DS ) ,( MUC * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * ( RRSe * RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( CRS ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * Min( ( MUR / DS ) ,( MUC * MUR ) ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Min( ( MUR / DS ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( Min( ( Min( RRS ,CRS ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ,( Const / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - DS ) * ( RMSe / MLU ) ) - ( ( MLU / CS ) - ( MUM - RCSe ) ) ) - ( ( ( RMSe + MLU ) / ( RRSe + MUM ) ) - ( ( CS / MLU ) * ( MUR * MUC ) ) ) ) * ( ( ( ( RCSe * MUR ) / Min( MUM ,MUM ) ) - ( Max( DS,RMSe ) * Max( MUC,MUC ) ) ) * ( ( ( CS - MUC ) / ( MUM * CS ) ) - ( ( RMSe * RCSe ) - ( RMSe * CS ) ) ) ) ) - ( ( ( ( Min( RMSe ,MUR ) * Min( MUC ,MUR ) ) + ( ( MLU * MUM ) * Max( RMSe,RMSe ) ) ) + ( ( ( RMSe - RCSe ) + Min( CS ,DS ) ) / Max( ( RCSe - CS ),( RCSe / RRSe ) ) ) ) * Min( ( Min( ( DS - RMSe ) ,( MUR - DS ) ) - ( ( MUC + MUC ) / ( CS - MUR ) ) ) ,( ( ( MUM + RMSe ) * Min( MUC ,MUM ) ) + Min( Max( MUM,DS ) ,Min( MUR ,RRSe ) ) ) ) ) ) * ( ( ( Max( ( ( DS + RRSe ) + Min( DS ,RCSe ) ),( Max( MUM,RMSe ) * ( RRSe + CS ) ) ) / ( ( ( MUM - MUR ) + ( RCSe * MLU ) ) + ( ( MUR * DS ) + ( CS * MUM ) ) ) ) * ( ( ( ( MLU / MLU ) + ( CS * MLU ) ) + ( ( RMSe - DS ) * ( MLU / MUC ) ) ) / ( ( ( MUR * MUR ) * Max( RMSe,MUR ) ) * Min( ( CS / MUR ) ,Max( RRSe,MUC ) ) ) ) ) * Max( ( ( ( ( RRSe - MUM ) + ( MUM * RMSe ) ) / ( ( RMSe - MUR ) * ( RRSe * DS ) ) ) - ( ( ( RRSe - CS ) + Max( RMSe,MLU ) ) * Max( ( RCSe / MUR ),( DS + CS ) ) ) ),( Min( ( Min( RCSe ,MLU ) * ( MUR - MUR ) ) ,( ( MUM + RCSe ) + Max( MUC,MLU ) ) ) / Max( Min( ( RRSe + RRSe ) ,( CS + MUM ) ),Max( Max( RRSe,MUR ),( MUM - MUC ) ) ) ) ) ) ) / Min( Min( ( ( Max( Max( ( MLU / MUC ),( MUM + RRSe ) ),( ( RRSe * DS ) + Max( MUC,DS ) ) ) * Max( Max( ( RRSe * RMSe ),Max( RCSe,MUM ) ),( Min( MLU ,DS ) / ( DS * MUC ) ) ) ) * ( ( Min( Min( MUM ,MUC ) ,( MUM - MUR ) ) * ( Max( MUC,RRSe ) / ( RMSe - MLU ) ) ) * ( ( ( RRSe + RCSe ) * Min( CS ,RCSe ) ) / ( ( RRSe * MLU ) / Max( CS,MUR ) ) ) ) ) ,( ( ( ( Max( RCSe,DS ) + ( MLU / CS ) ) + ( ( DS - DS ) * ( MUR + RMSe ) ) ) + ( ( ( CS - RMSe ) * ( MUC / MUM ) ) * ( Max( RMSe,RCSe ) - Max( RMSe,MUC ) ) ) ) / Min( Max( Max( ( MUM + MUM ),( RRSe / MUM ) ),( ( RRSe - DS ) * ( MUC * RRSe ) ) ) ,( ( ( MUR + RRSe ) - Min( MUC ,MUM ) ) - ( Max( MUR,CS ) + ( RCSe - DS ) ) ) ) ) ) ,Max( Min( Max( Max( ( ( MLU - MUR ) - Min( RRSe ,MLU ) ),( ( MUC + MUR ) * ( MUR / MUC ) ) ),( ( ( DS - MLU ) * ( MUM - RMSe ) ) + ( ( MUC - DS ) / ( RMSe * RRSe ) ) ) ) ,( ( ( ( RRSe * CS ) * ( CS - MUR ) ) - ( ( RMSe * MLU ) * Min( MLU ,MLU ) ) ) * Min( ( ( MUC + MUM ) * ( MUR - RCSe ) ) ,( Max( RCSe,MLU ) / Min( MUC ,CS ) ) ) ) ),( ( Min( ( ( DS - CS ) - Max( CS,RMSe ) ) ,( ( MLU + MUC ) - Max( RCSe,RCSe ) ) ) * ( ( ( MLU / RMSe ) + ( MUC + MUM ) ) * Max( ( MUM * DS ),Max( MUR,RCSe ) ) ) ) + ( ( ( ( RMSe - MUC ) * ( CS - RMSe ) ) / Min( ( DS / RRSe ) ,Max( RCSe,MUC ) ) ) * ( Min( ( MUC * DS ) ,Max( RRSe,RMSe ) ) + ( ( MUR / RCSe ) - Max( DS,RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.7755511022044088, "obj2": 0.15899023225045877}, {"determining": "( ( ( Max( Max( BR,DDR ),Min( BR ,CRS ) ) * ( ARS + Const ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( MLU - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.935871743486974, "obj2": 0.035400371342068984}, {"determining": "( Const - ( DDR * ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.7935871743486974, "obj2": 0.11464739340215646}, {"determining": "Min( ( Max( ( ( Max( Min( ( CRS / FirstVNF_CPU ) ,Max( AMS,RRS ) ),Max( ( Const / CRS ),( Const + FirstVNF_Mem ) ) ) * ( ( Min( CRS ,FirstVNF_RAM_Server ) / Min( DDR ,MDR ) ) * Min( ( FirstVNF_RAM - BR ) ,( RRS * AMS ) ) ) ) + ( ( ( ( ACS - DDR ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( FirstVNF_CPU ,DDR ) ) ) / ( ( ( DDR / BR ) * ( ARS + MRS ) ) - ( ( MDR + FirstVNF_Mem_Server ) * ( MDR - FirstVNF_Mem ) ) ) ) ),( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Const ) ) * ( Min( MRS ,MDR ) / ( FirstVNF_RAM - BR ) ) ),( ( ( FirstVNF_RAM / AMS ) + ( PN / ARS ) ) / ( ( FirstVNF_RAM - ARS ) - ( FirstVNF_Mem_Server + AMS ) ) ) ) + Max( ( Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( PN * MRS ) ) + Max( ( PN * Const ),( CRS * PN ) ) ),( ( ( BR * RRS ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( DDR - BR ) ) ) ) ) ) / ( ( ( ( ( Min( Const ,Const ) + ( RRS * MDR ) ) / ( ( MRS / FirstVNF_CPU ) - Min( FirstVNF_RAM ,CRS ) ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( RRS / FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server * PN ),( MDR + FirstVNF_CPU_Server ) ) ) ) + Max( Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( ACS ,AMS ) ),Min( ( FirstVNF_RAM + AMS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ),( ( Min( MRS ,PN ) / ( ARS + FirstVNF_Mem ) ) + Max( ( MDR + FirstVNF_CPU_Server ),( BR / FirstVNF_Mem_Server ) ) ) ) ) - ( Max( ( ( Max( MDR,FirstVNF_RAM_Server ) * Min( CRS ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( ARS + PN ) ) ),Max( Min( ( AMS / PN ) ,( PN - FirstVNF_CPU_Server ) ),Max( ( MDR * FirstVNF_Mem_Server ),( FirstVNF_RAM * MRS ) ) ) ) * Min( Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ),( ( MRS - ACS ) - ( FirstVNF_RAM + MRS ) ) ) ,( Max( ( PN + FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) / Max( ( RRS + MDR ),( FirstVNF_CPU + MDR ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( ( PN - ARS ) / Min( AMS ,MRS ) ) + Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( ARS ,ARS ) ) ) - Max( ( ( CRS - FirstVNF_RAM ) / Min( RRS ,MDR ) ),( ( DDR - FirstVNF_CPU ) - ( ARS * AMS ) ) ) ) ,( ( ( ( AMS / CRS ) - ( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,Const ) ) / Min( ( DDR - MDR ) ,( AMS / AMS ) ) ) ) ) ,Min( ( ( Min( Max( PN,ACS ) ,( FirstVNF_RAM / Const ) ) / ( ( RRS * AMS ) / ( BR * MDR ) ) ) - Min( Max( ( AMS / MDR ),Max( FirstVNF_Mem_Server,MDR ) ) ,( ( AMS + FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) ) ) ,( Max( ( ( ACS * PN ) * ( FirstVNF_RAM + CRS ) ),( ( PN * BR ) + Min( Const ,Const ) ) ) - Max( ( Min( ACS ,BR ) * ( MRS / AMS ) ),( ( CRS + Const ) + ( FirstVNF_CPU / Const ) ) ) ) ) ),( ( ( ( ( ( BR * Const ) / ( BR + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - MRS ) / ( RRS * RRS ) ) ) - Min( ( ( BR * FirstVNF_Mem_Server ) * ( AMS * RRS ) ) ,Max( Min( PN ,CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) * Min( ( Max( Min( MDR ,PN ),( DDR / PN ) ) / ( Min( Const ,FirstVNF_RAM ) / ( PN + MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( MRS / RRS ) ) ,Max( ( CRS - FirstVNF_CPU ),( FirstVNF_RAM_Server / PN ) ) ) ) ) / Min( ( ( ( ( Const * CRS ) - ( ARS / CRS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( Max( DDR,FirstVNF_RAM ) / ( BR + MDR ) ) ) ) ,( Min( ( Max( AMS,AMS ) - Min( MRS ,ARS ) ) ,Max( Max( Const,PN ),( Const * PN ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / Max( MRS,CRS ) ) / ( ( FirstVNF_Mem_Server + ARS ) + ( Const * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( ( Max( ( RCSe * RMSe ),( RMSe + MUC ) ) * ( ( RMSe - MLU ) / Max( MUM,DS ) ) ) ,( Min( ( MLU * MUM ) ,( RMSe * MLU ) ) + ( ( RRSe / RMSe ) * ( DS - DS ) ) ) ) + ( ( ( Max( RRSe,MUC ) * ( CS - MUC ) ) * ( ( RRSe * RMSe ) * ( MUM - MUC ) ) ) * ( ( ( MUM * CS ) - ( MUR / RCSe ) ) / Min( ( DS + MUR ) ,( MUR * DS ) ) ) ) ) + ( ( Max( ( ( RRSe / RMSe ) - Min( DS ,MUC ) ),Max( ( MUR + MUC ),( DS + RMSe ) ) ) / Min( Min( ( DS / MUC ) ,Max( RMSe,MUC ) ) ,( ( MUC / MUR ) + ( RRSe - MLU ) ) ) ) - Max( Min( ( Min( RRSe ,RCSe ) * ( MLU + CS ) ) ,Min( ( MUC / RRSe ) ,( RMSe * MUM ) ) ),( ( ( DS + MUC ) + ( CS + RRSe ) ) / ( ( MLU + MUC ) * ( MUC + MUM ) ) ) ) ) ) + ( Max( ( ( Min( Max( RMSe,MUM ) ,( RRSe / MUC ) ) * ( Max( RCSe,RMSe ) - ( MLU - CS ) ) ) * ( ( Max( CS,CS ) * Max( RRSe,MUR ) ) - ( Min( RCSe ,MUR ) / Max( MUM,CS ) ) ) ),( ( ( Min( CS ,RMSe ) * ( DS * RMSe ) ) + ( Min( MUC ,RMSe ) - ( MUC * CS ) ) ) + ( Max( ( MLU + RCSe ),( CS * RMSe ) ) * ( ( MUM * CS ) - ( RRSe * MUM ) ) ) ) ) - Max( ( Max( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ),Max( Min( RRSe ,MLU ),( RMSe - DS ) ) ) - Min( ( ( RMSe + RMSe ) - Min( RCSe ,RMSe ) ) ,( Max( DS,MLU ) / ( RRSe + MUC ) ) ) ),( ( Max( Min( MUR ,MLU ),Max( MLU,CS ) ) - ( Min( MLU ,MUM ) / Min( DS ,MUR ) ) ) - ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) * Max( ( MUM - DS ),( CS * CS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( RRSe - CS ) * ( MUR - MUM ) ) ,( ( RRSe + MUR ) / Max( MLU,MUC ) ) ) / ( ( Max( RRSe,MUR ) - Max( CS,MUR ) ) * ( ( RMSe - MUM ) / ( MLU / RMSe ) ) ) ) * Min( Max( ( ( RRSe / CS ) / ( DS / RMSe ) ),( ( MUR * RMSe ) / ( CS / MUR ) ) ) ,( ( ( CS / DS ) / Max( MUC,MUM ) ) - Max( ( RRSe + RCSe ),Min( CS ,MUM ) ) ) ) ) * Max( Max( ( ( ( MUC + DS ) + ( MUR + DS ) ) / ( Min( RRSe ,MUR ) - Max( DS,RMSe ) ) ),Max( ( ( MUM / MUC ) / ( CS - DS ) ),Min( ( RMSe / MLU ) ,Max( DS,RCSe ) ) ) ),Max( ( Min( ( MUC / RCSe ) ,( MLU - MLU ) ) + Min( Max( CS,CS ) ,( MUC - MUR ) ) ),Min( Max( ( RMSe + RCSe ),( CS / CS ) ) ,( ( RMSe / RCSe ) / Min( MLU ,DS ) ) ) ) ) ) + Min( ( ( ( Min( ( MLU - MUC ) ,Max( DS,RMSe ) ) / Max( Max( RMSe,RRSe ),Max( CS,DS ) ) ) * ( ( ( CS * DS ) / Min( MUR ,CS ) ) * ( ( MLU * MLU ) - Min( RRSe ,MLU ) ) ) ) / ( Max( ( Max( MUC,DS ) + Min( MUC ,MUC ) ),( ( DS * MUR ) / ( RMSe / MUC ) ) ) / Max( ( ( DS * CS ) * ( DS - RMSe ) ),Min( ( CS - RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ,Min( ( ( ( Min( DS ,RMSe ) * Max( RRSe,RMSe ) ) + ( ( RMSe - MLU ) * Max( MUR,RCSe ) ) ) * ( Min( ( DS + MUM ) ,( RMSe * RCSe ) ) * ( ( MLU - MUC ) - ( DS - RCSe ) ) ) ) ,( ( ( ( MLU / DS ) / ( MUC + MLU ) ) / ( ( RRSe * RMSe ) * ( MUR * CS ) ) ) + Min( ( Min( DS ,CS ) + Max( DS,MUM ) ) ,( ( DS - MUC ) / ( MUM * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8697394789579158, "obj2": 0.08645112101686496}, {"determining": "( Const - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU - ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) ) - MUC ) / ( RRSe - MUC ) )", "obj1": 0.7234468937875751, "obj2": 0.19237870404605525}, {"determining": "( Const - ( DDR * ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( ( MUM - ( MLU - MUM ) ) / MUC ) / ( RRSe - MUC ) )", "obj1": 0.8176352705410822, "obj2": 0.09170508253966198}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.8937875751503006, "obj2": 0.06030792821676119}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) + FirstVNF_Mem_Server )", "choosing": "( ( ( MLU - RMSe ) - ( RCSe + MUR ) ) - Max( RRSe,MUR ) )", "obj1": 0.7214428857715431, "obj2": 0.20470191387717912}, {"determining": "Min( ( FirstVNF_CPU_Server - ARS ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) / ( ( CRS - AMS ) / RRS ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RMSe ) )", "obj1": 0.9238476953907816, "obj2": 0.05609089331433256}, {"determining": "Min( ( ARS + MDR ) ,( AMS - ACS ) )", "choosing": "( Min( DS ,MLU ) - ( DS + MLU ) )", "obj1": 0.9298597194388778, "obj2": 0.05537511840801006}, {"determining": "( Max( ( FirstVNF_CPU * Const ),Const ) / ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.5991983967935872, "obj2": 0.2786788767088929}, {"determining": "Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) / AMS )", "choosing": "( ( ( MLU - RCSe ) - ( MLU * RRSe ) ) - ( RCSe + MUM ) )", "obj1": 0.6673346693386774, "obj2": 0.2327747953532403}, {"determining": "( MRS / ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( ( MRS / ( AMS * Const ) ) * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) * Const ) )", "choosing": "( ( RCSe - ( RCSe - ( MLU - MUM ) ) ) - MLU )", "obj1": 0.6352705410821643, "obj2": 0.2472913337457896}, {"determining": "( Min( ARS ,FirstVNF_Mem ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( RCSe / ( RRSe - MUC ) )", "obj1": 0.6472945891783567, "obj2": 0.238362928812323}, {"determining": "( ( CRS * ARS ) / ( AMS * Const ) )", "choosing": "( ( CS * MLU ) - ( Min( DS ,RMSe ) + ( CS - MUM ) ) )", "obj1": 0.5971943887775552, "obj2": 0.29174062240660104}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) ) )", "choosing": "( ( RCSe - RCSe ) - ( RCSe + MUM ) )", "obj1": 0.6673346693386774, "obj2": 0.2327747953532403}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / CRS )", "choosing": "( ( MLU * MLU ) - Min( MLU ,( ( RCSe - ( MLU - MUM ) ) * ( RCSe + MUM ) ) ) )", "obj1": 0.6292585170340681, "obj2": 0.2532912557416136}, {"determining": "( Max( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ),BR ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,CS ) * ( CS - CS ) )", "obj1": 0.6412825651302605, "obj2": 0.24048403702257515}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * DDR ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - Max( RCSe,MUR ) )", "obj1": 0.625250501002004, "obj2": 0.25662229582038165}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe - RMSe ) - MLU )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( CRS / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.6593186372745491, "obj2": 0.23375394426703733}, {"determining": "( CRS / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.6593186372745491, "obj2": 0.23375394426703733}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * Const ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) * ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.26770661052328804}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe - RMSe ) - MLU )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * Const ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) * ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.26770661052328804}, {"determining": "( Min( CRS ,BR ) / ( Const - RRS ) )", "choosing": "( ( ( RCSe - Max( DS,MLU ) ) * ( CS + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6092184368737475, "obj2": 0.27312348156802424}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6092184368737475, "obj2": 0.27312348156802424}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 0.6432865731462926, "obj2": 0.24022733903912769}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2725357384709045}, {"determining": "( Min( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe * ( MLU - ( RCSe * ( MLU - MUR ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.627254509018036, "obj2": 0.2553441973296298}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( RCSe * ( MLU - ( RCSe * ( MLU - MUR ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.627254509018036, "obj2": 0.2553441973296298}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2725357384709045}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MLU ) - ( ( ( CS - MUC ) - Min( RMSe ,RCSe ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) )", "choosing": "Max( ( MUM * ( RRSe * RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Max( MUR,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( FirstVNF_CPU * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe * RRSe ) ,Max( RCSe,MLU ) ) + ( Max( DS,RCSe ) + ( MUM + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),( DS + DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( ( RCSe + RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe + MUR ) - ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "Min( Min( ( Min( RRS ,CRS ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ,( Const / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - DS ) * ( RMSe / MLU ) ) - ( ( MLU / CS ) - ( MUM - RCSe ) ) ) - ( ( ( RMSe + MLU ) / ( RRSe + MUM ) ) - ( ( CS / MLU ) * ( MUR * MUC ) ) ) ) * ( ( ( ( RCSe * MUR ) / Min( MUM ,MUM ) ) - ( Max( DS,RMSe ) * Max( MUC,MUC ) ) ) * ( ( ( CS - MUC ) / ( MUM * CS ) ) - ( ( RMSe * RCSe ) - ( RMSe * CS ) ) ) ) ) - ( ( ( ( Min( RMSe ,MUR ) * Min( MUC ,MUR ) ) + ( ( MLU * MUM ) * Max( RMSe,RMSe ) ) ) + ( ( ( RMSe - RCSe ) + Min( CS ,DS ) ) / Max( ( RCSe - CS ),( RCSe / RRSe ) ) ) ) * Min( ( Min( ( DS - RMSe ) ,( MUR - DS ) ) - ( ( MUC + MUC ) / ( CS - MUR ) ) ) ,( ( ( MUM + RMSe ) * Min( MUC ,MUM ) ) + Min( Max( MUM,DS ) ,Min( MUR ,RRSe ) ) ) ) ) ) * ( ( ( Max( ( ( DS + RRSe ) + Min( DS ,RCSe ) ),( Max( MUM,RMSe ) * ( RRSe + CS ) ) ) / ( ( ( MUM - MUR ) + ( RCSe * MLU ) ) + ( ( MUR * DS ) + ( CS * MUM ) ) ) ) * ( ( ( ( MLU / MLU ) + ( CS * MLU ) ) + ( ( RMSe - DS ) * ( MLU / MUC ) ) ) / ( ( ( MUR * MUR ) * Max( RMSe,MUR ) ) * Min( ( CS / MUR ) ,Max( RRSe,MUC ) ) ) ) ) * Max( ( ( ( ( RRSe - MUM ) + ( MUM * RMSe ) ) / ( ( RMSe - MUR ) * ( RRSe * DS ) ) ) - ( ( ( RRSe - CS ) + Max( RMSe,MLU ) ) * Max( ( RCSe / MUR ),( DS + CS ) ) ) ),( Min( ( Min( RCSe ,MLU ) * ( MUR - MUR ) ) ,( ( MUM + RCSe ) + Max( MUC,MLU ) ) ) / Max( Min( ( RRSe + RRSe ) ,( CS + MUM ) ),Max( Max( RRSe,MUR ),( MUM - MUC ) ) ) ) ) ) ) / Min( Min( ( ( Max( Max( ( MLU / MUC ),( MUM + RRSe ) ),( ( RRSe * DS ) + Max( MUC,DS ) ) ) * Max( Max( ( RRSe * RMSe ),Max( RCSe,MUM ) ),( Min( MLU ,DS ) / ( DS * MUC ) ) ) ) * ( ( Min( Min( MUM ,MUC ) ,( MUM - MUR ) ) * ( Max( MUC,RRSe ) / ( RMSe - MLU ) ) ) * ( ( ( RRSe + RCSe ) * Min( CS ,RCSe ) ) / ( ( RRSe * MLU ) / Max( CS,MUR ) ) ) ) ) ,( ( ( ( Max( RCSe,DS ) + ( MLU / CS ) ) + ( ( DS - DS ) * ( MUR + RMSe ) ) ) + ( ( ( CS - RMSe ) * ( MUC / MUM ) ) * ( Max( RMSe,RCSe ) - Max( RMSe,MUC ) ) ) ) / Min( Max( Max( ( MUM + MUM ),( RRSe / MUM ) ),( ( RRSe - DS ) * ( MUC * RRSe ) ) ) ,( ( ( MUR + RRSe ) - Min( MUC ,MUM ) ) - ( Max( MUR,CS ) + ( RCSe - DS ) ) ) ) ) ) ,Max( Min( Max( Max( ( ( MLU - MUR ) - Min( RRSe ,MLU ) ),( ( MUC + MUR ) * ( MUR / MUC ) ) ),( ( ( DS - MLU ) * ( MUM - RMSe ) ) + ( ( MUC - DS ) / ( RMSe * RRSe ) ) ) ) ,( ( ( ( RRSe * CS ) * ( CS - MUR ) ) - ( ( RMSe * MLU ) * Min( MLU ,MLU ) ) ) * Min( ( ( MUC + MUM ) * ( MUR - RCSe ) ) ,( Max( RCSe,MLU ) / Min( MUC ,CS ) ) ) ) ),( ( Min( ( ( DS - CS ) - Max( CS,RMSe ) ) ,( ( MLU + MUC ) - Max( RCSe,RCSe ) ) ) * ( ( ( MLU / RMSe ) + ( MUC + MUM ) ) * Max( ( MUM * DS ),Max( MUR,RCSe ) ) ) ) + ( ( ( ( RMSe - MUC ) * ( CS - RMSe ) ) / Min( ( DS / RRSe ) ,Max( RCSe,MUC ) ) ) * ( Min( ( MUC * DS ) ,Max( RRSe,RMSe ) ) + ( ( MUR / RCSe ) - Max( DS,RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( ( ( Max( Max( BR,DDR ),Min( BR ,CRS ) ) * ( ARS + Const ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( MLU - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.935871743486974, "obj2": 0.035400371342068984}, {"determining": "( Const - ( DDR * ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.7935871743486974, "obj2": 0.11464739340215646}, {"determining": "( Const - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU - ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) ) - MUC ) / ( RRSe - MUC ) )", "obj1": 0.7234468937875751, "obj2": 0.19237870404605525}, {"determining": "( Const - ( DDR * ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( ( MUM - ( MLU - MUM ) ) / MUC ) / ( RRSe - MUC ) )", "obj1": 0.8176352705410822, "obj2": 0.09170508253966198}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.7755511022044088, "obj2": 0.15899023225045877}, {"determining": "Min( ( Max( ( ( Max( Min( ( CRS / FirstVNF_CPU ) ,Max( AMS,RRS ) ),Max( ( Const / CRS ),( Const + FirstVNF_Mem ) ) ) * ( ( Min( CRS ,FirstVNF_RAM_Server ) / Min( DDR ,MDR ) ) * Min( ( FirstVNF_RAM - BR ) ,( RRS * AMS ) ) ) ) + ( ( ( ( ACS - DDR ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( FirstVNF_CPU ,DDR ) ) ) / ( ( ( DDR / BR ) * ( ARS + MRS ) ) - ( ( MDR + FirstVNF_Mem_Server ) * ( MDR - FirstVNF_Mem ) ) ) ) ),( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Const ) ) * ( Min( MRS ,MDR ) / ( FirstVNF_RAM - BR ) ) ),( ( ( FirstVNF_RAM / AMS ) + ( PN / ARS ) ) / ( ( FirstVNF_RAM - ARS ) - ( FirstVNF_Mem_Server + AMS ) ) ) ) + Max( ( Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( PN * MRS ) ) + Max( ( PN * Const ),( CRS * PN ) ) ),( ( ( BR * RRS ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( DDR - BR ) ) ) ) ) ) / ( ( ( ( ( Min( Const ,Const ) + ( RRS * MDR ) ) / ( ( MRS / FirstVNF_CPU ) - Min( FirstVNF_RAM ,CRS ) ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( RRS / FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server * PN ),( MDR + FirstVNF_CPU_Server ) ) ) ) + Max( Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( ACS ,AMS ) ),Min( ( FirstVNF_RAM + AMS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ),( ( Min( MRS ,PN ) / ( ARS + FirstVNF_Mem ) ) + Max( ( MDR + FirstVNF_CPU_Server ),( BR / FirstVNF_Mem_Server ) ) ) ) ) - ( Max( ( ( Max( MDR,FirstVNF_RAM_Server ) * Min( CRS ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( ARS + PN ) ) ),Max( Min( ( AMS / PN ) ,( PN - FirstVNF_CPU_Server ) ),Max( ( MDR * FirstVNF_Mem_Server ),( FirstVNF_RAM * MRS ) ) ) ) * Min( Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ),( ( MRS - ACS ) - ( FirstVNF_RAM + MRS ) ) ) ,( Max( ( PN + FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) / Max( ( RRS + MDR ),( FirstVNF_CPU + MDR ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( ( PN - ARS ) / Min( AMS ,MRS ) ) + Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( ARS ,ARS ) ) ) - Max( ( ( CRS - FirstVNF_RAM ) / Min( RRS ,MDR ) ),( ( DDR - FirstVNF_CPU ) - ( ARS * AMS ) ) ) ) ,( ( ( ( AMS / CRS ) - ( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,Const ) ) / Min( ( DDR - MDR ) ,( AMS / AMS ) ) ) ) ) ,Min( ( ( Min( Max( PN,ACS ) ,( FirstVNF_RAM / Const ) ) / ( ( RRS * AMS ) / ( BR * MDR ) ) ) - Min( Max( ( AMS / MDR ),Max( FirstVNF_Mem_Server,MDR ) ) ,( ( AMS + FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) ) ) ,( Max( ( ( ACS * PN ) * ( FirstVNF_RAM + CRS ) ),( ( PN * BR ) + Min( Const ,Const ) ) ) - Max( ( Min( ACS ,BR ) * ( MRS / AMS ) ),( ( CRS + Const ) + ( FirstVNF_CPU / Const ) ) ) ) ) ),( ( ( ( ( ( BR * Const ) / ( BR + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - MRS ) / ( RRS * RRS ) ) ) - Min( ( ( BR * FirstVNF_Mem_Server ) * ( AMS * RRS ) ) ,Max( Min( PN ,CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) * Min( ( Max( Min( MDR ,PN ),( DDR / PN ) ) / ( Min( Const ,FirstVNF_RAM ) / ( PN + MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( MRS / RRS ) ) ,Max( ( CRS - FirstVNF_CPU ),( FirstVNF_RAM_Server / PN ) ) ) ) ) / Min( ( ( ( ( Const * CRS ) - ( ARS / CRS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( Max( DDR,FirstVNF_RAM ) / ( BR + MDR ) ) ) ) ,( Min( ( Max( AMS,AMS ) - Min( MRS ,ARS ) ) ,Max( Max( Const,PN ),( Const * PN ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / Max( MRS,CRS ) ) / ( ( FirstVNF_Mem_Server + ARS ) + ( Const * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( ( Max( ( RCSe * RMSe ),( RMSe + MUC ) ) * ( ( RMSe - MLU ) / Max( MUM,DS ) ) ) ,( Min( ( MLU * MUM ) ,( RMSe * MLU ) ) + ( ( RRSe / RMSe ) * ( DS - DS ) ) ) ) + ( ( ( Max( RRSe,MUC ) * ( CS - MUC ) ) * ( ( RRSe * RMSe ) * ( MUM - MUC ) ) ) * ( ( ( MUM * CS ) - ( MUR / RCSe ) ) / Min( ( DS + MUR ) ,( MUR * DS ) ) ) ) ) + ( ( Max( ( ( RRSe / RMSe ) - Min( DS ,MUC ) ),Max( ( MUR + MUC ),( DS + RMSe ) ) ) / Min( Min( ( DS / MUC ) ,Max( RMSe,MUC ) ) ,( ( MUC / MUR ) + ( RRSe - MLU ) ) ) ) - Max( Min( ( Min( RRSe ,RCSe ) * ( MLU + CS ) ) ,Min( ( MUC / RRSe ) ,( RMSe * MUM ) ) ),( ( ( DS + MUC ) + ( CS + RRSe ) ) / ( ( MLU + MUC ) * ( MUC + MUM ) ) ) ) ) ) + ( Max( ( ( Min( Max( RMSe,MUM ) ,( RRSe / MUC ) ) * ( Max( RCSe,RMSe ) - ( MLU - CS ) ) ) * ( ( Max( CS,CS ) * Max( RRSe,MUR ) ) - ( Min( RCSe ,MUR ) / Max( MUM,CS ) ) ) ),( ( ( Min( CS ,RMSe ) * ( DS * RMSe ) ) + ( Min( MUC ,RMSe ) - ( MUC * CS ) ) ) + ( Max( ( MLU + RCSe ),( CS * RMSe ) ) * ( ( MUM * CS ) - ( RRSe * MUM ) ) ) ) ) - Max( ( Max( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ),Max( Min( RRSe ,MLU ),( RMSe - DS ) ) ) - Min( ( ( RMSe + RMSe ) - Min( RCSe ,RMSe ) ) ,( Max( DS,MLU ) / ( RRSe + MUC ) ) ) ),( ( Max( Min( MUR ,MLU ),Max( MLU,CS ) ) - ( Min( MLU ,MUM ) / Min( DS ,MUR ) ) ) - ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) * Max( ( MUM - DS ),( CS * CS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( RRSe - CS ) * ( MUR - MUM ) ) ,( ( RRSe + MUR ) / Max( MLU,MUC ) ) ) / ( ( Max( RRSe,MUR ) - Max( CS,MUR ) ) * ( ( RMSe - MUM ) / ( MLU / RMSe ) ) ) ) * Min( Max( ( ( RRSe / CS ) / ( DS / RMSe ) ),( ( MUR * RMSe ) / ( CS / MUR ) ) ) ,( ( ( CS / DS ) / Max( MUC,MUM ) ) - Max( ( RRSe + RCSe ),Min( CS ,MUM ) ) ) ) ) * Max( Max( ( ( ( MUC + DS ) + ( MUR + DS ) ) / ( Min( RRSe ,MUR ) - Max( DS,RMSe ) ) ),Max( ( ( MUM / MUC ) / ( CS - DS ) ),Min( ( RMSe / MLU ) ,Max( DS,RCSe ) ) ) ),Max( ( Min( ( MUC / RCSe ) ,( MLU - MLU ) ) + Min( Max( CS,CS ) ,( MUC - MUR ) ) ),Min( Max( ( RMSe + RCSe ),( CS / CS ) ) ,( ( RMSe / RCSe ) / Min( MLU ,DS ) ) ) ) ) ) + Min( ( ( ( Min( ( MLU - MUC ) ,Max( DS,RMSe ) ) / Max( Max( RMSe,RRSe ),Max( CS,DS ) ) ) * ( ( ( CS * DS ) / Min( MUR ,CS ) ) * ( ( MLU * MLU ) - Min( RRSe ,MLU ) ) ) ) / ( Max( ( Max( MUC,DS ) + Min( MUC ,MUC ) ),( ( DS * MUR ) / ( RMSe / MUC ) ) ) / Max( ( ( DS * CS ) * ( DS - RMSe ) ),Min( ( CS - RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ,Min( ( ( ( Min( DS ,RMSe ) * Max( RRSe,RMSe ) ) + ( ( RMSe - MLU ) * Max( MUR,RCSe ) ) ) * ( Min( ( DS + MUM ) ,( RMSe * RCSe ) ) * ( ( MLU - MUC ) - ( DS - RCSe ) ) ) ) ,( ( ( ( MLU / DS ) / ( MUC + MLU ) ) / ( ( RRSe * RMSe ) * ( MUR * CS ) ) ) + Min( ( Min( DS ,CS ) + Max( DS,MUM ) ) ,( ( DS - MUC ) / ( MUM * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8697394789579158, "obj2": 0.08645112101686496}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.8937875751503006, "obj2": 0.06030792821676119}, {"determining": "Min( ( ( ( ( ( Min( ( FirstVNF_Mem_Server / RRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( MRS - FirstVNF_CPU ) / Min( MRS ,BR ) ) ) - ( ( ( ARS - MDR ) + ( FirstVNF_CPU - Const ) ) - ( ( Const * MDR ) + Max( PN,FirstVNF_Mem ) ) ) ) + Max( ( Min( ( ACS - MRS ) ,Max( ACS,ACS ) ) + Max( ( MDR + FirstVNF_CPU ),( PN * DDR ) ) ),( ( ( FirstVNF_CPU + BR ) - ( CRS / PN ) ) * ( Max( BR,ARS ) * ( FirstVNF_CPU_Server / DDR ) ) ) ) ) - ( ( ( Min( ( CRS * RRS ) ,Min( CRS ,FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) + ( ( Max( FirstVNF_CPU_Server,RRS ) / Max( FirstVNF_RAM_Server,CRS ) ) + Max( Min( MDR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + CRS ) ) ) ) / ( ( ( ( MRS + BR ) * Min( MRS ,Const ) ) + Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( ARS * FirstVNF_RAM_Server ) ) ) + Max( ( ( MDR / ARS ) / ( ARS * PN ) ),Min( ( ACS / AMS ) ,Min( PN ,Const ) ) ) ) ) ) / ( Max( Min( ( Max( ( MRS + FirstVNF_CPU ),( MDR - FirstVNF_CPU_Server ) ) - ( ( PN * ACS ) / ( PN * PN ) ) ) ,( Max( ( CRS - MRS ),( AMS - PN ) ) + ( ( FirstVNF_CPU_Server * CRS ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ),Max( ( ( Min( Const ,RRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( RRS / FirstVNF_CPU ) - Min( ARS ,CRS ) ) ),( ( Max( ARS,FirstVNF_Mem_Server ) - Max( PN,RRS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / PN ) ) ) ) ) + ( ( Min( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,PN ) ) ,( Min( CRS ,Const ) + Min( FirstVNF_RAM_Server ,RRS ) ) ) - ( Min( Min( MRS ,FirstVNF_RAM ) ,( ACS * DDR ) ) + ( ( BR + RRS ) * Max( DDR,AMS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) * ( ( RRS * BR ) - ( FirstVNF_Mem / ACS ) ) ) + ( ( Max( AMS,DDR ) - Min( FirstVNF_Mem ,RRS ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( ARS * FirstVNF_RAM_Server ) ) ) ) ) ) ) ,Min( ( ( ( ( ( Min( ARS ,Const ) / ( PN + Const ) ) + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) * ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( AMS / ARS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( BR,MDR ) ) ) ) + ( ( ( Max( AMS,ARS ) - Min( CRS ,ACS ) ) - Min( ( MDR * FirstVNF_Mem ) ,Min( AMS ,CRS ) ) ) / ( ( ( ARS - DDR ) + ( FirstVNF_CPU_Server / Const ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( RRS + AMS ) ) ) ) ) - ( Max( ( Max( ( BR + MRS ),( Const * CRS ) ) - ( ( FirstVNF_Mem_Server / CRS ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ),( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( FirstVNF_CPU_Server / RRS ) ) / ( Min( Const ,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,MRS ) ) ) ) / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( ARS + RRS ) ) + Max( ( FirstVNF_CPU * ACS ),Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( Max( CRS,AMS ) - ( RRS + DDR ) ) - ( ( Const + FirstVNF_Mem ) - ( DDR * FirstVNF_Mem ) ) ) ) ) ) ,( ( ( ( ( ( PN + PN ) / ( FirstVNF_CPU + MDR ) ) / Max( ( ARS - PN ),( ACS / RRS ) ) ) - Max( ( ( RRS * ACS ) + ( ARS * CRS ) ),( ( BR - MDR ) - Max( MRS,CRS ) ) ) ) / ( ( ( ( ACS + CRS ) * ( FirstVNF_Mem_Server + AMS ) ) / Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM + Const ) ) ) / Min( ( ( PN / PN ) * Min( MRS ,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) / ( RRS / ACS ) ) ) ) ) * ( ( ( Max( Max( MDR,MRS ),Max( FirstVNF_CPU_Server,CRS ) ) * Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),Min( Const ,CRS ) ) ) / Max( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),Min( MDR ,Const ) ),Min( Max( Const,FirstVNF_CPU_Server ) ,( MDR - FirstVNF_Mem_Server ) ) ) ) / Min( ( Max( Min( ARS ,FirstVNF_CPU_Server ),( CRS / Const ) ) * ( ( ARS + AMS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ,( ( Min( RRS ,MDR ) + ( RRS * MRS ) ) + Max( ( ACS - RRS ),( RRS - FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Max( Min( RRSe ,( MLU - Min( MUC ,MLU ) ) ),( Max( DS,( ( MUM + DS ) + ( Min( RRSe ,MUR ) + ( MUM - ( MUC + Min( RMSe ,MUC ) ) ) ) ) ) / MUC ) )", "obj1": 0.781563126252505, "obj2": 0.15194275752242017}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU - CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.8877755511022044, "obj2": 0.08430552627234252}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( ( FirstVNF_Mem_Server - ARS ) + FirstVNF_Mem_Server )", "choosing": "( ( ( MLU - RMSe ) - ( RCSe + MUR ) ) - Max( RRSe,MUR ) )", "obj1": 0.7214428857715431, "obj2": 0.20470191387717912}, {"determining": "Min( ( FirstVNF_CPU_Server - ARS ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) / ( ( CRS - AMS ) / RRS ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RMSe ) )", "obj1": 0.9238476953907816, "obj2": 0.05609089331433256}, {"determining": "Min( ( ARS + MDR ) ,( AMS - ACS ) )", "choosing": "( Min( DS ,MLU ) - ( DS + MLU ) )", "obj1": 0.9298597194388778, "obj2": 0.05537511840801006}, {"determining": "( Max( ( FirstVNF_CPU * Const ),Const ) / ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.5991983967935872, "obj2": 0.2786788767088929}, {"determining": "Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) / AMS )", "choosing": "( ( ( MLU - RCSe ) - ( MLU * RRSe ) ) - ( RCSe + MUM ) )", "obj1": 0.6673346693386774, "obj2": 0.2327747953532403}, {"determining": "( Min( ARS ,FirstVNF_Mem ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( RCSe / ( RRSe - MUC ) )", "obj1": 0.6472945891783567, "obj2": 0.238362928812323}, {"determining": "( ( CRS * ARS ) / ( AMS * Const ) )", "choosing": "( ( CS * MLU ) - ( Min( DS ,RMSe ) + ( CS - MUM ) ) )", "obj1": 0.5971943887775552, "obj2": 0.29174062240660104}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) ) )", "choosing": "( ( RCSe - RCSe ) - ( RCSe + MUM ) )", "obj1": 0.6673346693386774, "obj2": 0.2327747953532403}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) )", "choosing": "( ( RCSe - ( ( RCSe + CS ) + MUM ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.7775551102204409, "obj2": 0.15721330691709345}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe - RMSe ) - MLU )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( Max( ( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,AMS ) ),Const ) / Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( MLU - ( RCSe + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) ) ) / Max( MUC,RRSe ) )", "obj1": 0.6292585170340681, "obj2": 0.2530820773808224}, {"determining": "( CRS / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.6593186372745491, "obj2": 0.23375394426703733}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe - ( ( RCSe - ( MLU + MUM ) ) + MUM ) ) - ( RCSe + MUR ) )", "obj1": 0.6312625250501002, "obj2": 0.24768429101202022}, {"determining": "( MRS / ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( ( MRS / ( AMS * Const ) ) * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) * Const ) )", "choosing": "( ( RCSe - ( RCSe - ( MLU - MUM ) ) ) - MLU )", "obj1": 0.6352705410821643, "obj2": 0.2472913337457896}, {"determining": "( CRS / Max( MDR,BR ) )", "choosing": "( Min( DS ,RMSe ) + ( ( RMSe + RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.6593186372745491, "obj2": 0.23375394426703733}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * Const ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) * ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.26770661052328804}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe - RMSe ) - MLU )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * Const ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) * ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.26770661052328804}, {"determining": "( Min( CRS ,BR ) / ( Const - RRS ) )", "choosing": "( ( ( RCSe - Max( DS,MLU ) ) * ( CS + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6092184368737475, "obj2": 0.27312348156802424}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6092184368737475, "obj2": 0.27312348156802424}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 0.6432865731462926, "obj2": 0.24022733903912769}, {"determining": "( Max( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ),BR ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,CS ) * ( CS - CS ) )", "obj1": 0.6412825651302605, "obj2": 0.24048403702257515}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2725357384709045}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / FirstVNF_Mem_Server )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe - ( MLU - ( MLU + MUM ) ) ) )", "obj1": 0.6392785571142284, "obj2": 0.24360498024650115}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe + MUR ) )", "obj1": 0.625250501002004, "obj2": 0.25662229582038165}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * DDR ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - Max( RCSe,MUR ) )", "obj1": 0.625250501002004, "obj2": 0.25662229582038165}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe + MUM ) )", "obj1": 0.6392785571142284, "obj2": 0.24360498024650115}, {"determining": "( Min( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe * ( MLU - ( RCSe * ( MLU - MUR ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.627254509018036, "obj2": 0.2553441973296298}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( RCSe * ( MLU - ( RCSe * ( MLU - MUR ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.627254509018036, "obj2": 0.2553441973296298}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2725357384709045}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MLU ) - ( ( ( CS - MUC ) - Min( RMSe ,RCSe ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe + MUR ) - ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( ( ( Max( Max( BR,DDR ),Min( BR ,CRS ) ) * ( ARS + Const ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( MLU - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.935871743486974, "obj2": 0.035400371342068984}, {"determining": "( Const - ( DDR * ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.7935871743486974, "obj2": 0.11464739340215646}, {"determining": "( Const - ( DDR * ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( ( MUM - ( MLU - MUM ) ) / MUC ) / ( RRSe - MUC ) )", "obj1": 0.8176352705410822, "obj2": 0.09170508253966198}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - ( MLU + MLU ) ) - ( RCSe + MUR ) )", "obj1": 0.7695390781563126, "obj2": 0.17982493555228518}, {"determining": "( Const - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU - ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) ) - MUC ) / ( RRSe - MUC ) )", "obj1": 0.7234468937875751, "obj2": 0.19237870404605525}, {"determining": "Min( ( Max( ( ( Max( Min( ( CRS / FirstVNF_CPU ) ,Max( AMS,RRS ) ),Max( ( Const / CRS ),( Const + FirstVNF_Mem ) ) ) * ( ( Min( CRS ,FirstVNF_RAM_Server ) / Min( DDR ,MDR ) ) * Min( ( FirstVNF_RAM - BR ) ,( RRS * AMS ) ) ) ) + ( ( ( ( ACS - DDR ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( FirstVNF_CPU ,DDR ) ) ) / ( ( ( DDR / BR ) * ( ARS + MRS ) ) - ( ( MDR + FirstVNF_Mem_Server ) * ( MDR - FirstVNF_Mem ) ) ) ) ),( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Const ) ) * ( Min( MRS ,MDR ) / ( FirstVNF_RAM - BR ) ) ),( ( ( FirstVNF_RAM / AMS ) + ( PN / ARS ) ) / ( ( FirstVNF_RAM - ARS ) - ( FirstVNF_Mem_Server + AMS ) ) ) ) + Max( ( Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( PN * MRS ) ) + Max( ( PN * Const ),( CRS * PN ) ) ),( ( ( BR * RRS ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( DDR - BR ) ) ) ) ) ) / ( ( ( ( ( Min( Const ,Const ) + ( RRS * MDR ) ) / ( ( MRS / FirstVNF_CPU ) - Min( FirstVNF_RAM ,CRS ) ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( RRS / FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server * PN ),( MDR + FirstVNF_CPU_Server ) ) ) ) + Max( Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( ACS ,AMS ) ),Min( ( FirstVNF_RAM + AMS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ),( ( Min( MRS ,PN ) / ( ARS + FirstVNF_Mem ) ) + Max( ( MDR + FirstVNF_CPU_Server ),( BR / FirstVNF_Mem_Server ) ) ) ) ) - ( Max( ( ( Max( MDR,FirstVNF_RAM_Server ) * Min( CRS ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( ARS + PN ) ) ),Max( Min( ( AMS / PN ) ,( PN - FirstVNF_CPU_Server ) ),Max( ( MDR * FirstVNF_Mem_Server ),( FirstVNF_RAM * MRS ) ) ) ) * Min( Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ),( ( MRS - ACS ) - ( FirstVNF_RAM + MRS ) ) ) ,( Max( ( PN + FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) / Max( ( RRS + MDR ),( FirstVNF_CPU + MDR ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( ( PN - ARS ) / Min( AMS ,MRS ) ) + Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( ARS ,ARS ) ) ) - Max( ( ( CRS - FirstVNF_RAM ) / Min( RRS ,MDR ) ),( ( DDR - FirstVNF_CPU ) - ( ARS * AMS ) ) ) ) ,( ( ( ( AMS / CRS ) - ( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,Const ) ) / Min( ( DDR - MDR ) ,( AMS / AMS ) ) ) ) ) ,Min( ( ( Min( Max( PN,ACS ) ,( FirstVNF_RAM / Const ) ) / ( ( RRS * AMS ) / ( BR * MDR ) ) ) - Min( Max( ( AMS / MDR ),Max( FirstVNF_Mem_Server,MDR ) ) ,( ( AMS + FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) ) ) ,( Max( ( ( ACS * PN ) * ( FirstVNF_RAM + CRS ) ),( ( PN * BR ) + Min( Const ,Const ) ) ) - Max( ( Min( ACS ,BR ) * ( MRS / AMS ) ),( ( CRS + Const ) + ( FirstVNF_CPU / Const ) ) ) ) ) ),( ( ( ( ( ( BR * Const ) / ( BR + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - MRS ) / ( RRS * RRS ) ) ) - Min( ( ( BR * FirstVNF_Mem_Server ) * ( AMS * RRS ) ) ,Max( Min( PN ,CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) * Min( ( Max( Min( MDR ,PN ),( DDR / PN ) ) / ( Min( Const ,FirstVNF_RAM ) / ( PN + MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( MRS / RRS ) ) ,Max( ( CRS - FirstVNF_CPU ),( FirstVNF_RAM_Server / PN ) ) ) ) ) / Min( ( ( ( ( Const * CRS ) - ( ARS / CRS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( Max( DDR,FirstVNF_RAM ) / ( BR + MDR ) ) ) ) ,( Min( ( Max( AMS,AMS ) - Min( MRS ,ARS ) ) ,Max( Max( Const,PN ),( Const * PN ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / Max( MRS,CRS ) ) / ( ( FirstVNF_Mem_Server + ARS ) + ( Const * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( ( Max( ( RCSe * RMSe ),( RMSe + MUC ) ) * ( ( RMSe - MLU ) / Max( MUM,DS ) ) ) ,( Min( ( MLU * MUM ) ,( RMSe * MLU ) ) + ( ( RRSe / RMSe ) * ( DS - DS ) ) ) ) + ( ( ( Max( RRSe,MUC ) * ( CS - MUC ) ) * ( ( RRSe * RMSe ) * ( MUM - MUC ) ) ) * ( ( ( MUM * CS ) - ( MUR / RCSe ) ) / Min( ( DS + MUR ) ,( MUR * DS ) ) ) ) ) + ( ( Max( ( ( RRSe / RMSe ) - Min( DS ,MUC ) ),Max( ( MUR + MUC ),( DS + RMSe ) ) ) / Min( Min( ( DS / MUC ) ,Max( RMSe,MUC ) ) ,( ( MUC / MUR ) + ( RRSe - MLU ) ) ) ) - Max( Min( ( Min( RRSe ,RCSe ) * ( MLU + CS ) ) ,Min( ( MUC / RRSe ) ,( RMSe * MUM ) ) ),( ( ( DS + MUC ) + ( CS + RRSe ) ) / ( ( MLU + MUC ) * ( MUC + MUM ) ) ) ) ) ) + ( Max( ( ( Min( Max( RMSe,MUM ) ,( RRSe / MUC ) ) * ( Max( RCSe,RMSe ) - ( MLU - CS ) ) ) * ( ( Max( CS,CS ) * Max( RRSe,MUR ) ) - ( Min( RCSe ,MUR ) / Max( MUM,CS ) ) ) ),( ( ( Min( CS ,RMSe ) * ( DS * RMSe ) ) + ( Min( MUC ,RMSe ) - ( MUC * CS ) ) ) + ( Max( ( MLU + RCSe ),( CS * RMSe ) ) * ( ( MUM * CS ) - ( RRSe * MUM ) ) ) ) ) - Max( ( Max( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ),Max( Min( RRSe ,MLU ),( RMSe - DS ) ) ) - Min( ( ( RMSe + RMSe ) - Min( RCSe ,RMSe ) ) ,( Max( DS,MLU ) / ( RRSe + MUC ) ) ) ),( ( Max( Min( MUR ,MLU ),Max( MLU,CS ) ) - ( Min( MLU ,MUM ) / Min( DS ,MUR ) ) ) - ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) * Max( ( MUM - DS ),( CS * CS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( RRSe - CS ) * ( MUR - MUM ) ) ,( ( RRSe + MUR ) / Max( MLU,MUC ) ) ) / ( ( Max( RRSe,MUR ) - Max( CS,MUR ) ) * ( ( RMSe - MUM ) / ( MLU / RMSe ) ) ) ) * Min( Max( ( ( RRSe / CS ) / ( DS / RMSe ) ),( ( MUR * RMSe ) / ( CS / MUR ) ) ) ,( ( ( CS / DS ) / Max( MUC,MUM ) ) - Max( ( RRSe + RCSe ),Min( CS ,MUM ) ) ) ) ) * Max( Max( ( ( ( MUC + DS ) + ( MUR + DS ) ) / ( Min( RRSe ,MUR ) - Max( DS,RMSe ) ) ),Max( ( ( MUM / MUC ) / ( CS - DS ) ),Min( ( RMSe / MLU ) ,Max( DS,RCSe ) ) ) ),Max( ( Min( ( MUC / RCSe ) ,( MLU - MLU ) ) + Min( Max( CS,CS ) ,( MUC - MUR ) ) ),Min( Max( ( RMSe + RCSe ),( CS / CS ) ) ,( ( RMSe / RCSe ) / Min( MLU ,DS ) ) ) ) ) ) + Min( ( ( ( Min( ( MLU - MUC ) ,Max( DS,RMSe ) ) / Max( Max( RMSe,RRSe ),Max( CS,DS ) ) ) * ( ( ( CS * DS ) / Min( MUR ,CS ) ) * ( ( MLU * MLU ) - Min( RRSe ,MLU ) ) ) ) / ( Max( ( Max( MUC,DS ) + Min( MUC ,MUC ) ),( ( DS * MUR ) / ( RMSe / MUC ) ) ) / Max( ( ( DS * CS ) * ( DS - RMSe ) ),Min( ( CS - RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ,Min( ( ( ( Min( DS ,RMSe ) * Max( RRSe,RMSe ) ) + ( ( RMSe - MLU ) * Max( MUR,RCSe ) ) ) * ( Min( ( DS + MUM ) ,( RMSe * RCSe ) ) * ( ( MLU - MUC ) - ( DS - RCSe ) ) ) ) ,( ( ( ( MLU / DS ) / ( MUC + MLU ) ) / ( ( RRSe * RMSe ) * ( MUR * CS ) ) ) + Min( ( Min( DS ,CS ) + Max( DS,MUM ) ) ,( ( DS - MUC ) / ( MUM * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8697394789579158, "obj2": 0.08645112101686496}, {"determining": "( Const - ( DDR * FirstVNF_Mem ) )", "choosing": "Min( ( RCSe - ( RCSe + MUR ) ) ,( RCSe + MUR ) )", "obj1": 0.6452905811623246, "obj2": 0.22779023531213305}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.8937875751503006, "obj2": 0.06030792821676119}, {"determining": "Min( ( ( ( ( ( Min( ( FirstVNF_Mem_Server / RRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( MRS - FirstVNF_CPU ) / Min( MRS ,BR ) ) ) - ( ( ( ARS - MDR ) + ( FirstVNF_CPU - Const ) ) - ( ( Const * MDR ) + Max( PN,FirstVNF_Mem ) ) ) ) + Max( ( Min( ( ACS - MRS ) ,Max( ACS,ACS ) ) + Max( ( MDR + FirstVNF_CPU ),( PN * DDR ) ) ),( ( ( FirstVNF_CPU + BR ) - ( CRS / PN ) ) * ( Max( BR,ARS ) * ( FirstVNF_CPU_Server / DDR ) ) ) ) ) - ( ( ( Min( ( CRS * RRS ) ,Min( CRS ,FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) + ( ( Max( FirstVNF_CPU_Server,RRS ) / Max( FirstVNF_RAM_Server,CRS ) ) + Max( Min( MDR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + CRS ) ) ) ) / ( ( ( ( MRS + BR ) * Min( MRS ,Const ) ) + Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( ARS * FirstVNF_RAM_Server ) ) ) + Max( ( ( MDR / ARS ) / ( ARS * PN ) ),Min( ( ACS / AMS ) ,Min( PN ,Const ) ) ) ) ) ) / ( Max( Min( ( Max( ( MRS + FirstVNF_CPU ),( MDR - FirstVNF_CPU_Server ) ) - ( ( PN * ACS ) / ( PN * PN ) ) ) ,( Max( ( CRS - MRS ),( AMS - PN ) ) + ( ( FirstVNF_CPU_Server * CRS ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ),Max( ( ( Min( Const ,RRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( RRS / FirstVNF_CPU ) - Min( ARS ,CRS ) ) ),( ( Max( ARS,FirstVNF_Mem_Server ) - Max( PN,RRS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / PN ) ) ) ) ) + ( ( Min( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,PN ) ) ,( Min( CRS ,Const ) + Min( FirstVNF_RAM_Server ,RRS ) ) ) - ( Min( Min( MRS ,FirstVNF_RAM ) ,( ACS * DDR ) ) + ( ( BR + RRS ) * Max( DDR,AMS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) * ( ( RRS * BR ) - ( FirstVNF_Mem / ACS ) ) ) + ( ( Max( AMS,DDR ) - Min( FirstVNF_Mem ,RRS ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( ARS * FirstVNF_RAM_Server ) ) ) ) ) ) ) ,Min( ( ( ( ( ( Min( ARS ,Const ) / ( PN + Const ) ) + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) * ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( AMS / ARS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( BR,MDR ) ) ) ) + ( ( ( Max( AMS,ARS ) - Min( CRS ,ACS ) ) - Min( ( MDR * FirstVNF_Mem ) ,Min( AMS ,CRS ) ) ) / ( ( ( ARS - DDR ) + ( FirstVNF_CPU_Server / Const ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( RRS + AMS ) ) ) ) ) - ( Max( ( Max( ( BR + MRS ),( Const * CRS ) ) - ( ( FirstVNF_Mem_Server / CRS ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ),( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( FirstVNF_CPU_Server / RRS ) ) / ( Min( Const ,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,MRS ) ) ) ) / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( ARS + RRS ) ) + Max( ( FirstVNF_CPU * ACS ),Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( Max( CRS,AMS ) - ( RRS + DDR ) ) - ( ( Const + FirstVNF_Mem ) - ( DDR * FirstVNF_Mem ) ) ) ) ) ) ,( ( ( ( ( ( PN + PN ) / ( FirstVNF_CPU + MDR ) ) / Max( ( ARS - PN ),( ACS / RRS ) ) ) - Max( ( ( RRS * ACS ) + ( ARS * CRS ) ),( ( BR - MDR ) - Max( MRS,CRS ) ) ) ) / ( ( ( ( ACS + CRS ) * ( FirstVNF_Mem_Server + AMS ) ) / Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM + Const ) ) ) / Min( ( ( PN / PN ) * Min( MRS ,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) / ( RRS / ACS ) ) ) ) ) * ( ( ( Max( Max( MDR,MRS ),Max( FirstVNF_CPU_Server,CRS ) ) * Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),Min( Const ,CRS ) ) ) / Max( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),Min( MDR ,Const ) ),Min( Max( Const,FirstVNF_CPU_Server ) ,( MDR - FirstVNF_Mem_Server ) ) ) ) / Min( ( Max( Min( ARS ,FirstVNF_CPU_Server ),( CRS / Const ) ) * ( ( ARS + AMS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ,( ( Min( RRS ,MDR ) + ( RRS * MRS ) ) + Max( ( ACS - RRS ),( RRS - FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Max( Min( RRSe ,( MLU - Min( MUC ,MLU ) ) ),( Max( DS,( ( MUM + DS ) + ( Min( RRSe ,MUR ) + ( MUM - ( MUC + Min( RMSe ,MUC ) ) ) ) ) ) / MUC ) )", "obj1": 0.781563126252505, "obj2": 0.15194275752242017}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU - CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.8877755511022044, "obj2": 0.08430552627234252}, {"determining": "Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + DS )", "obj1": 0.7074148296593187, "obj2": 0.2046642506291194}, {"determining": "Min( ( FirstVNF_CPU_Server - ARS ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) / ( ( CRS - AMS ) / RRS ) ) )", "choosing": "( ( MUR / CS ) / Max( MUC,RMSe ) )", "obj1": 0.9238476953907816, "obj2": 0.05609089331433256}, {"determining": "Min( ( ARS + MDR ) ,( AMS - ACS ) )", "choosing": "( Min( DS ,MLU ) - ( DS + MLU ) )", "obj1": 0.9298597194388778, "obj2": 0.05537511840801006}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.7755511022044088, "obj2": 0.15899023225045877}, {"determining": "( Max( ( FirstVNF_CPU * Const ),Const ) / ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.5991983967935872, "obj2": 0.2786788767088929}, {"determining": "( ( ( RRS - CRS ) - ( FirstVNF_RAM_Server - PN ) ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + ( CS - Max( MLU,MUM ) ) ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.625250501002004, "obj2": 0.25138698761673983}, {"determining": "( ( CRS * ARS ) / ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( CRS * ARS ) / ( AMS * Const ) )", "choosing": "( ( CS * MLU ) - ( Min( DS ,RMSe ) + ( CS - MUM ) ) )", "obj1": 0.5971943887775552, "obj2": 0.29174062240660104}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 0.6432865731462926, "obj2": 0.24022733903912769}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe - RMSe ) - MLU )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) )", "choosing": "( ( RCSe - ( ( RCSe + CS ) + MUM ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.7775551102204409, "obj2": 0.15721330691709345}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe - ( ( RCSe - ( MLU + MUM ) ) + MUM ) ) - ( RCSe + MUR ) )", "obj1": 0.6312625250501002, "obj2": 0.24768429101202022}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( RCSe - RMSe ) - MLU )", "obj1": 0.6192384769539078, "obj2": 0.261160207763414}, {"determining": "( MRS / ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( ( MRS / ( AMS * Const ) ) * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) * Const ) )", "choosing": "( ( RCSe - ( RCSe - ( MLU - MUM ) ) ) - MLU )", "obj1": 0.6352705410821643, "obj2": 0.2472913337457896}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * Const ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) * ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.26770661052328804}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * Const ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) * ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.26770661052328804}, {"determining": "( Min( CRS ,BR ) / ( Const - RRS ) )", "choosing": "( ( ( RCSe - Max( DS,MLU ) ) * ( CS + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6092184368737475, "obj2": 0.27312348156802424}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6092184368737475, "obj2": 0.27312348156802424}, {"determining": "( Max( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ),BR ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,CS ) * ( CS - CS ) )", "obj1": 0.6412825651302605, "obj2": 0.24048403702257515}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2725357384709045}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / FirstVNF_Mem_Server )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe - ( MLU - ( MLU + MUM ) ) ) )", "obj1": 0.6392785571142284, "obj2": 0.24360498024650115}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe + MUM ) )", "obj1": 0.6392785571142284, "obj2": 0.24360498024650115}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2725357384709045}, {"determining": "Min( Min( ( Min( RRS ,CRS ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ,( Const / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - DS ) * ( RMSe / MLU ) ) - ( ( MLU / CS ) - ( MUM - RCSe ) ) ) - ( ( ( RMSe + MLU ) / ( RRSe + MUM ) ) - ( ( CS / MLU ) * ( MUR * MUC ) ) ) ) * ( ( ( ( RCSe * MUR ) / Min( MUM ,MUM ) ) - ( Max( DS,RMSe ) * Max( MUC,MUC ) ) ) * ( ( ( CS - MUC ) / ( MUM * CS ) ) - ( ( RMSe * RCSe ) - ( RMSe * CS ) ) ) ) ) - ( ( ( ( Min( RMSe ,MUR ) * Min( MUC ,MUR ) ) + ( ( MLU * MUM ) * Max( RMSe,RMSe ) ) ) + ( ( ( RMSe - RCSe ) + Min( CS ,DS ) ) / Max( ( RCSe - CS ),( RCSe / RRSe ) ) ) ) * Min( ( Min( ( DS - RMSe ) ,( MUR - DS ) ) - ( ( MUC + MUC ) / ( CS - MUR ) ) ) ,( ( ( MUM + RMSe ) * Min( MUC ,MUM ) ) + Min( Max( MUM,DS ) ,Min( MUR ,RRSe ) ) ) ) ) ) * ( ( ( Max( ( ( DS + RRSe ) + Min( DS ,RCSe ) ),( Max( MUM,RMSe ) * ( RRSe + CS ) ) ) / ( ( ( MUM - MUR ) + ( RCSe * MLU ) ) + ( ( MUR * DS ) + ( CS * MUM ) ) ) ) * ( ( ( ( MLU / MLU ) + ( CS * MLU ) ) + ( ( RMSe - DS ) * ( MLU / MUC ) ) ) / ( ( ( MUR * MUR ) * Max( RMSe,MUR ) ) * Min( ( CS / MUR ) ,Max( RRSe,MUC ) ) ) ) ) * Max( ( ( ( ( RRSe - MUM ) + ( MUM * RMSe ) ) / ( ( RMSe - MUR ) * ( RRSe * DS ) ) ) - ( ( ( RRSe - CS ) + Max( RMSe,MLU ) ) * Max( ( RCSe / MUR ),( DS + CS ) ) ) ),( Min( ( Min( RCSe ,MLU ) * ( MUR - MUR ) ) ,( ( MUM + RCSe ) + Max( MUC,MLU ) ) ) / Max( Min( ( RRSe + RRSe ) ,( CS + MUM ) ),Max( Max( RRSe,MUR ),( MUM - MUC ) ) ) ) ) ) ) / Min( Min( ( ( Max( Max( ( MLU / MUC ),( MUM + RRSe ) ),( ( RRSe * DS ) + Max( MUC,DS ) ) ) * Max( Max( ( RRSe * RMSe ),Max( RCSe,MUM ) ),( Min( MLU ,DS ) / ( DS * MUC ) ) ) ) * ( ( Min( Min( MUM ,MUC ) ,( MUM - MUR ) ) * ( Max( MUC,RRSe ) / ( RMSe - MLU ) ) ) * ( ( ( RRSe + RCSe ) * Min( CS ,RCSe ) ) / ( ( RRSe * MLU ) / Max( CS,MUR ) ) ) ) ) ,( ( ( ( Max( RCSe,DS ) + ( MLU / CS ) ) + ( ( DS - DS ) * ( MUR + RMSe ) ) ) + ( ( ( CS - RMSe ) * ( MUC / MUM ) ) * ( Max( RMSe,RCSe ) - Max( RMSe,MUC ) ) ) ) / Min( Max( Max( ( MUM + MUM ),( RRSe / MUM ) ),( ( RRSe - DS ) * ( MUC * RRSe ) ) ) ,( ( ( MUR + RRSe ) - Min( MUC ,MUM ) ) - ( Max( MUR,CS ) + ( RCSe - DS ) ) ) ) ) ) ,Max( Min( Max( Max( ( ( MLU - MUR ) - Min( RRSe ,MLU ) ),( ( MUC + MUR ) * ( MUR / MUC ) ) ),( ( ( DS - MLU ) * ( MUM - RMSe ) ) + ( ( MUC - DS ) / ( RMSe * RRSe ) ) ) ) ,( ( ( ( RRSe * CS ) * ( CS - MUR ) ) - ( ( RMSe * MLU ) * Min( MLU ,MLU ) ) ) * Min( ( ( MUC + MUM ) * ( MUR - RCSe ) ) ,( Max( RCSe,MLU ) / Min( MUC ,CS ) ) ) ) ),( ( Min( ( ( DS - CS ) - Max( CS,RMSe ) ) ,( ( MLU + MUC ) - Max( RCSe,RCSe ) ) ) * ( ( ( MLU / RMSe ) + ( MUC + MUM ) ) * Max( ( MUM * DS ),Max( MUR,RCSe ) ) ) ) + ( ( ( ( RMSe - MUC ) * ( CS - RMSe ) ) / Min( ( DS / RRSe ) ,Max( RCSe,MUC ) ) ) * ( Min( ( MUC * DS ) ,Max( RRSe,RMSe ) ) + ( ( MUR / RCSe ) - Max( DS,RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MLU ) - ( ( ( CS - MUC ) - Min( RMSe ,RCSe ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - Max( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - PN ) ) * CRS ),( FirstVNF_RAM_Server + Max( ( DDR * FirstVNF_Mem_Server ),( RRS - PN ) ) ) ) )", "choosing": "( ( CS * DS ) / ( RRSe - ( ( RCSe - ( RCSe * ( ( MUC + RMSe ) - MUM ) ) ) - ( RCSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "Min( ( MUC - ( MLU + MUM ) ) ,( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - Max( MLU,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) )", "choosing": "( ( CS - Max( MLU,MUM ) ) - Max( ( MLU - MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( CRS * ARS ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + ( CS - Max( ( Min( DS ,RMSe ) + ( CS - MUM ) ),MUM ) ) ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( Const - ( DDR * ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.7935871743486974, "obj2": 0.11464739340215646}, {"determining": "( Const - ( DDR * ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( ( MUM - ( MLU - MUM ) ) / MUC ) / ( RRSe - MUC ) )", "obj1": 0.8176352705410822, "obj2": 0.09170508253966198}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.9559118236472945, "obj2": 0.023613548898730807}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - ( MLU + MLU ) ) - ( RCSe + MUR ) )", "obj1": 0.7695390781563126, "obj2": 0.17982493555228518}, {"determining": "( Const - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU - ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) ) - MUC ) / ( RRSe - MUC ) )", "obj1": 0.7234468937875751, "obj2": 0.19237870404605525}, {"determining": "( ( ( Max( Max( BR,DDR ),Min( BR ,CRS ) ) * ( ARS + Const ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( MLU - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.935871743486974, "obj2": 0.035400371342068984}, {"determining": "Min( ( Max( ( ( Max( Min( ( CRS / FirstVNF_CPU ) ,Max( AMS,RRS ) ),Max( ( Const / CRS ),( Const + FirstVNF_Mem ) ) ) * ( ( Min( CRS ,FirstVNF_RAM_Server ) / Min( DDR ,MDR ) ) * Min( ( FirstVNF_RAM - BR ) ,( RRS * AMS ) ) ) ) + ( ( ( ( ACS - DDR ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( FirstVNF_CPU ,DDR ) ) ) / ( ( ( DDR / BR ) * ( ARS + MRS ) ) - ( ( MDR + FirstVNF_Mem_Server ) * ( MDR - FirstVNF_Mem ) ) ) ) ),( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Const ) ) * ( Min( MRS ,MDR ) / ( FirstVNF_RAM - BR ) ) ),( ( ( FirstVNF_RAM / AMS ) + ( PN / ARS ) ) / ( ( FirstVNF_RAM - ARS ) - ( FirstVNF_Mem_Server + AMS ) ) ) ) + Max( ( Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( PN * MRS ) ) + Max( ( PN * Const ),( CRS * PN ) ) ),( ( ( BR * RRS ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( DDR - BR ) ) ) ) ) ) / ( ( ( ( ( Min( Const ,Const ) + ( RRS * MDR ) ) / ( ( MRS / FirstVNF_CPU ) - Min( FirstVNF_RAM ,CRS ) ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( RRS / FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server * PN ),( MDR + FirstVNF_CPU_Server ) ) ) ) + Max( Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( ACS ,AMS ) ),Min( ( FirstVNF_RAM + AMS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ),( ( Min( MRS ,PN ) / ( ARS + FirstVNF_Mem ) ) + Max( ( MDR + FirstVNF_CPU_Server ),( BR / FirstVNF_Mem_Server ) ) ) ) ) - ( Max( ( ( Max( MDR,FirstVNF_RAM_Server ) * Min( CRS ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( ARS + PN ) ) ),Max( Min( ( AMS / PN ) ,( PN - FirstVNF_CPU_Server ) ),Max( ( MDR * FirstVNF_Mem_Server ),( FirstVNF_RAM * MRS ) ) ) ) * Min( Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ),( ( MRS - ACS ) - ( FirstVNF_RAM + MRS ) ) ) ,( Max( ( PN + FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) / Max( ( RRS + MDR ),( FirstVNF_CPU + MDR ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( ( PN - ARS ) / Min( AMS ,MRS ) ) + Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( ARS ,ARS ) ) ) - Max( ( ( CRS - FirstVNF_RAM ) / Min( RRS ,MDR ) ),( ( DDR - FirstVNF_CPU ) - ( ARS * AMS ) ) ) ) ,( ( ( ( AMS / CRS ) - ( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,Const ) ) / Min( ( DDR - MDR ) ,( AMS / AMS ) ) ) ) ) ,Min( ( ( Min( Max( PN,ACS ) ,( FirstVNF_RAM / Const ) ) / ( ( RRS * AMS ) / ( BR * MDR ) ) ) - Min( Max( ( AMS / MDR ),Max( FirstVNF_Mem_Server,MDR ) ) ,( ( AMS + FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) ) ) ,( Max( ( ( ACS * PN ) * ( FirstVNF_RAM + CRS ) ),( ( PN * BR ) + Min( Const ,Const ) ) ) - Max( ( Min( ACS ,BR ) * ( MRS / AMS ) ),( ( CRS + Const ) + ( FirstVNF_CPU / Const ) ) ) ) ) ),( ( ( ( ( ( BR * Const ) / ( BR + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - MRS ) / ( RRS * RRS ) ) ) - Min( ( ( BR * FirstVNF_Mem_Server ) * ( AMS * RRS ) ) ,Max( Min( PN ,CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) * Min( ( Max( Min( MDR ,PN ),( DDR / PN ) ) / ( Min( Const ,FirstVNF_RAM ) / ( PN + MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( MRS / RRS ) ) ,Max( ( CRS - FirstVNF_CPU ),( FirstVNF_RAM_Server / PN ) ) ) ) ) / Min( ( ( ( ( Const * CRS ) - ( ARS / CRS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( Max( DDR,FirstVNF_RAM ) / ( BR + MDR ) ) ) ) ,( Min( ( Max( AMS,AMS ) - Min( MRS ,ARS ) ) ,Max( Max( Const,PN ),( Const * PN ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / Max( MRS,CRS ) ) / ( ( FirstVNF_Mem_Server + ARS ) + ( Const * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( ( Max( ( RCSe * RMSe ),( RMSe + MUC ) ) * ( ( RMSe - MLU ) / Max( MUM,DS ) ) ) ,( Min( ( MLU * MUM ) ,( RMSe * MLU ) ) + ( ( RRSe / RMSe ) * ( DS - DS ) ) ) ) + ( ( ( Max( RRSe,MUC ) * ( CS - MUC ) ) * ( ( RRSe * RMSe ) * ( MUM - MUC ) ) ) * ( ( ( MUM * CS ) - ( MUR / RCSe ) ) / Min( ( DS + MUR ) ,( MUR * DS ) ) ) ) ) + ( ( Max( ( ( RRSe / RMSe ) - Min( DS ,MUC ) ),Max( ( MUR + MUC ),( DS + RMSe ) ) ) / Min( Min( ( DS / MUC ) ,Max( RMSe,MUC ) ) ,( ( MUC / MUR ) + ( RRSe - MLU ) ) ) ) - Max( Min( ( Min( RRSe ,RCSe ) * ( MLU + CS ) ) ,Min( ( MUC / RRSe ) ,( RMSe * MUM ) ) ),( ( ( DS + MUC ) + ( CS + RRSe ) ) / ( ( MLU + MUC ) * ( MUC + MUM ) ) ) ) ) ) + ( Max( ( ( Min( Max( RMSe,MUM ) ,( RRSe / MUC ) ) * ( Max( RCSe,RMSe ) - ( MLU - CS ) ) ) * ( ( Max( CS,CS ) * Max( RRSe,MUR ) ) - ( Min( RCSe ,MUR ) / Max( MUM,CS ) ) ) ),( ( ( Min( CS ,RMSe ) * ( DS * RMSe ) ) + ( Min( MUC ,RMSe ) - ( MUC * CS ) ) ) + ( Max( ( MLU + RCSe ),( CS * RMSe ) ) * ( ( MUM * CS ) - ( RRSe * MUM ) ) ) ) ) - Max( ( Max( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ),Max( Min( RRSe ,MLU ),( RMSe - DS ) ) ) - Min( ( ( RMSe + RMSe ) - Min( RCSe ,RMSe ) ) ,( Max( DS,MLU ) / ( RRSe + MUC ) ) ) ),( ( Max( Min( MUR ,MLU ),Max( MLU,CS ) ) - ( Min( MLU ,MUM ) / Min( DS ,MUR ) ) ) - ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) * Max( ( MUM - DS ),( CS * CS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( RRSe - CS ) * ( MUR - MUM ) ) ,( ( RRSe + MUR ) / Max( MLU,MUC ) ) ) / ( ( Max( RRSe,MUR ) - Max( CS,MUR ) ) * ( ( RMSe - MUM ) / ( MLU / RMSe ) ) ) ) * Min( Max( ( ( RRSe / CS ) / ( DS / RMSe ) ),( ( MUR * RMSe ) / ( CS / MUR ) ) ) ,( ( ( CS / DS ) / Max( MUC,MUM ) ) - Max( ( RRSe + RCSe ),Min( CS ,MUM ) ) ) ) ) * Max( Max( ( ( ( MUC + DS ) + ( MUR + DS ) ) / ( Min( RRSe ,MUR ) - Max( DS,RMSe ) ) ),Max( ( ( MUM / MUC ) / ( CS - DS ) ),Min( ( RMSe / MLU ) ,Max( DS,RCSe ) ) ) ),Max( ( Min( ( MUC / RCSe ) ,( MLU - MLU ) ) + Min( Max( CS,CS ) ,( MUC - MUR ) ) ),Min( Max( ( RMSe + RCSe ),( CS / CS ) ) ,( ( RMSe / RCSe ) / Min( MLU ,DS ) ) ) ) ) ) + Min( ( ( ( Min( ( MLU - MUC ) ,Max( DS,RMSe ) ) / Max( Max( RMSe,RRSe ),Max( CS,DS ) ) ) * ( ( ( CS * DS ) / Min( MUR ,CS ) ) * ( ( MLU * MLU ) - Min( RRSe ,MLU ) ) ) ) / ( Max( ( Max( MUC,DS ) + Min( MUC ,MUC ) ),( ( DS * MUR ) / ( RMSe / MUC ) ) ) / Max( ( ( DS * CS ) * ( DS - RMSe ) ),Min( ( CS - RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ,Min( ( ( ( Min( DS ,RMSe ) * Max( RRSe,RMSe ) ) + ( ( RMSe - MLU ) * Max( MUR,RCSe ) ) ) * ( Min( ( DS + MUM ) ,( RMSe * RCSe ) ) * ( ( MLU - MUC ) - ( DS - RCSe ) ) ) ) ,( ( ( ( MLU / DS ) / ( MUC + MLU ) ) / ( ( RRSe * RMSe ) * ( MUR * CS ) ) ) + Min( ( Min( DS ,CS ) + Max( DS,MUM ) ) ,( ( DS - MUC ) / ( MUM * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8697394789579158, "obj2": 0.08645112101686496}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUR ) )", "obj1": 0.9138276553106213, "obj2": 0.05497672953467169}, {"determining": "Min( ( ( ( ( ( Min( ( FirstVNF_Mem_Server / RRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( MRS - FirstVNF_CPU ) / Min( MRS ,BR ) ) ) - ( ( ( ARS - MDR ) + ( FirstVNF_CPU - Const ) ) - ( ( Const * MDR ) + Max( PN,FirstVNF_Mem ) ) ) ) + Max( ( Min( ( ACS - MRS ) ,Max( ACS,ACS ) ) + Max( ( MDR + FirstVNF_CPU ),( PN * DDR ) ) ),( ( ( FirstVNF_CPU + BR ) - ( CRS / PN ) ) * ( Max( BR,ARS ) * ( FirstVNF_CPU_Server / DDR ) ) ) ) ) - ( ( ( Min( ( CRS * RRS ) ,Min( CRS ,FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) + ( ( Max( FirstVNF_CPU_Server,RRS ) / Max( FirstVNF_RAM_Server,CRS ) ) + Max( Min( MDR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + CRS ) ) ) ) / ( ( ( ( MRS + BR ) * Min( MRS ,Const ) ) + Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( ARS * FirstVNF_RAM_Server ) ) ) + Max( ( ( MDR / ARS ) / ( ARS * PN ) ),Min( ( ACS / AMS ) ,Min( PN ,Const ) ) ) ) ) ) / ( Max( Min( ( Max( ( MRS + FirstVNF_CPU ),( MDR - FirstVNF_CPU_Server ) ) - ( ( PN * ACS ) / ( PN * PN ) ) ) ,( Max( ( CRS - MRS ),( AMS - PN ) ) + ( ( FirstVNF_CPU_Server * CRS ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ),Max( ( ( Min( Const ,RRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( RRS / FirstVNF_CPU ) - Min( ARS ,CRS ) ) ),( ( Max( ARS,FirstVNF_Mem_Server ) - Max( PN,RRS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / PN ) ) ) ) ) + ( ( Min( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,PN ) ) ,( Min( CRS ,Const ) + Min( FirstVNF_RAM_Server ,RRS ) ) ) - ( Min( Min( MRS ,FirstVNF_RAM ) ,( ACS * DDR ) ) + ( ( BR + RRS ) * Max( DDR,AMS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) * ( ( RRS * BR ) - ( FirstVNF_Mem / ACS ) ) ) + ( ( Max( AMS,DDR ) - Min( FirstVNF_Mem ,RRS ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( ARS * FirstVNF_RAM_Server ) ) ) ) ) ) ) ,Min( ( ( ( ( ( Min( ARS ,Const ) / ( PN + Const ) ) + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) * ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( AMS / ARS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( BR,MDR ) ) ) ) + ( ( ( Max( AMS,ARS ) - Min( CRS ,ACS ) ) - Min( ( MDR * FirstVNF_Mem ) ,Min( AMS ,CRS ) ) ) / ( ( ( ARS - DDR ) + ( FirstVNF_CPU_Server / Const ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( RRS + AMS ) ) ) ) ) - ( Max( ( Max( ( BR + MRS ),( Const * CRS ) ) - ( ( FirstVNF_Mem_Server / CRS ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ),( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( FirstVNF_CPU_Server / RRS ) ) / ( Min( Const ,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,MRS ) ) ) ) / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( ARS + RRS ) ) + Max( ( FirstVNF_CPU * ACS ),Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( Max( CRS,AMS ) - ( RRS + DDR ) ) - ( ( Const + FirstVNF_Mem ) - ( DDR * FirstVNF_Mem ) ) ) ) ) ) ,( ( ( ( ( ( PN + PN ) / ( FirstVNF_CPU + MDR ) ) / Max( ( ARS - PN ),( ACS / RRS ) ) ) - Max( ( ( RRS * ACS ) + ( ARS * CRS ) ),( ( BR - MDR ) - Max( MRS,CRS ) ) ) ) / ( ( ( ( ACS + CRS ) * ( FirstVNF_Mem_Server + AMS ) ) / Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM + Const ) ) ) / Min( ( ( PN / PN ) * Min( MRS ,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) / ( RRS / ACS ) ) ) ) ) * ( ( ( Max( Max( MDR,MRS ),Max( FirstVNF_CPU_Server,CRS ) ) * Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),Min( Const ,CRS ) ) ) / Max( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),Min( MDR ,Const ) ),Min( Max( Const,FirstVNF_CPU_Server ) ,( MDR - FirstVNF_Mem_Server ) ) ) ) / Min( ( Max( Min( ARS ,FirstVNF_CPU_Server ),( CRS / Const ) ) * ( ( ARS + AMS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ,( ( Min( RRS ,MDR ) + ( RRS * MRS ) ) + Max( ( ACS - RRS ),( RRS - FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Max( Min( RRSe ,( MLU - Min( MUC ,MLU ) ) ),( Max( DS,( ( MUM + DS ) + ( Min( RRSe ,MUR ) + ( MUM - ( MUC + Min( RMSe ,MUC ) ) ) ) ) ) / MUC ) )", "obj1": 0.781563126252505, "obj2": 0.15194275752242017}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.8937875751503006, "obj2": 0.06030792821676119}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU - CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.8877755511022044, "obj2": 0.08430552627234252}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) / ( AMS * Const ) )", "choosing": "( ( RCSe - ( MLU + ( CS - Max( MLU,MUM ) ) ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.6492985971943888, "obj2": 0.22543339436777493}, {"determining": "Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + DS )", "obj1": 0.7074148296593187, "obj2": 0.2046642506291194}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.7755511022044088, "obj2": 0.15899023225045877}, {"determining": "( Min( DDR ,BR ) - ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( CS * ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ) / ( RRSe - MUR ) )", "obj1": 0.6172344689378757, "obj2": 0.25799323166232363}, {"determining": "( Max( ( FirstVNF_CPU * Const ),Const ) / ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.5991983967935872, "obj2": 0.2786788767088929}, {"determining": "( ( ( RRS - CRS ) - ( FirstVNF_RAM_Server - PN ) ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + ( CS - Max( MLU,MUM ) ) ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.625250501002004, "obj2": 0.25138698761673983}, {"determining": "( Const - ( DDR * FirstVNF_Mem ) )", "choosing": "Min( ( RCSe - ( RCSe + MUR ) ) ,( RCSe + MUR ) )", "obj1": 0.6452905811623246, "obj2": 0.22779023531213305}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( ( FirstVNF_RAM_Server - PN ) / ( AMS * Const ) )", "choosing": "( MLU - Min( MLU ,DS ) )", "obj1": 0.5971943887775552, "obj2": 0.28702210951837914}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 0.6432865731462926, "obj2": 0.24022733903912769}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) )", "choosing": "( ( RCSe - ( ( RCSe + CS ) + MUM ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.7775551102204409, "obj2": 0.15721330691709345}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe - ( ( RCSe - ( MLU + MUM ) ) + MUM ) ) - ( RCSe + MUR ) )", "obj1": 0.6312625250501002, "obj2": 0.24768429101202022}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * Const ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) * ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.26770661052328804}, {"determining": "( MRS / ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( ( MRS / ( AMS * Const ) ) * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) * Const ) )", "choosing": "( ( RCSe - ( RCSe - ( MLU - MUM ) ) ) - MLU )", "obj1": 0.6352705410821643, "obj2": 0.2472913337457896}, {"determining": "( Min( CRS ,BR ) / ( Const - RRS ) )", "choosing": "( ( ( RCSe - Max( DS,MLU ) ) * ( CS + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6092184368737475, "obj2": 0.27312348156802424}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / ( AMS * Const ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) * ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.26770661052328804}, {"determining": "( ( CRS * ARS ) / ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.6092184368737475, "obj2": 0.27312348156802424}, {"determining": "( Max( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ),BR ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,CS ) * ( CS - CS ) )", "obj1": 0.6412825651302605, "obj2": 0.24048403702257515}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2725357384709045}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / FirstVNF_Mem_Server )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe - ( MLU - ( MLU + MUM ) ) ) )", "obj1": 0.6392785571142284, "obj2": 0.24360498024650115}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe + MUM ) )", "obj1": 0.6392785571142284, "obj2": 0.24360498024650115}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2725357384709045}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe + MUR ) - ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( RRS ,CRS ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ,( Const / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - DS ) * ( RMSe / MLU ) ) - ( ( MLU / CS ) - ( MUM - RCSe ) ) ) - ( ( ( RMSe + MLU ) / ( RRSe + MUM ) ) - ( ( CS / MLU ) * ( MUR * MUC ) ) ) ) * ( ( ( ( RCSe * MUR ) / Min( MUM ,MUM ) ) - ( Max( DS,RMSe ) * Max( MUC,MUC ) ) ) * ( ( ( CS - MUC ) / ( MUM * CS ) ) - ( ( RMSe * RCSe ) - ( RMSe * CS ) ) ) ) ) - ( ( ( ( Min( RMSe ,MUR ) * Min( MUC ,MUR ) ) + ( ( MLU * MUM ) * Max( RMSe,RMSe ) ) ) + ( ( ( RMSe - RCSe ) + Min( CS ,DS ) ) / Max( ( RCSe - CS ),( RCSe / RRSe ) ) ) ) * Min( ( Min( ( DS - RMSe ) ,( MUR - DS ) ) - ( ( MUC + MUC ) / ( CS - MUR ) ) ) ,( ( ( MUM + RMSe ) * Min( MUC ,MUM ) ) + Min( Max( MUM,DS ) ,Min( MUR ,RRSe ) ) ) ) ) ) * ( ( ( Max( ( ( DS + RRSe ) + Min( DS ,RCSe ) ),( Max( MUM,RMSe ) * ( RRSe + CS ) ) ) / ( ( ( MUM - MUR ) + ( RCSe * MLU ) ) + ( ( MUR * DS ) + ( CS * MUM ) ) ) ) * ( ( ( ( MLU / MLU ) + ( CS * MLU ) ) + ( ( RMSe - DS ) * ( MLU / MUC ) ) ) / ( ( ( MUR * MUR ) * Max( RMSe,MUR ) ) * Min( ( CS / MUR ) ,Max( RRSe,MUC ) ) ) ) ) * Max( ( ( ( ( RRSe - MUM ) + ( MUM * RMSe ) ) / ( ( RMSe - MUR ) * ( RRSe * DS ) ) ) - ( ( ( RRSe - CS ) + Max( RMSe,MLU ) ) * Max( ( RCSe / MUR ),( DS + CS ) ) ) ),( Min( ( Min( RCSe ,MLU ) * ( MUR - MUR ) ) ,( ( MUM + RCSe ) + Max( MUC,MLU ) ) ) / Max( Min( ( RRSe + RRSe ) ,( CS + MUM ) ),Max( Max( RRSe,MUR ),( MUM - MUC ) ) ) ) ) ) ) / Min( Min( ( ( Max( Max( ( MLU / MUC ),( MUM + RRSe ) ),( ( RRSe * DS ) + Max( MUC,DS ) ) ) * Max( Max( ( RRSe * RMSe ),Max( RCSe,MUM ) ),( Min( MLU ,DS ) / ( DS * MUC ) ) ) ) * ( ( Min( Min( MUM ,MUC ) ,( MUM - MUR ) ) * ( Max( MUC,RRSe ) / ( RMSe - MLU ) ) ) * ( ( ( RRSe + RCSe ) * Min( CS ,RCSe ) ) / ( ( RRSe * MLU ) / Max( CS,MUR ) ) ) ) ) ,( ( ( ( Max( RCSe,DS ) + ( MLU / CS ) ) + ( ( DS - DS ) * ( MUR + RMSe ) ) ) + ( ( ( CS - RMSe ) * ( MUC / MUM ) ) * ( Max( RMSe,RCSe ) - Max( RMSe,MUC ) ) ) ) / Min( Max( Max( ( MUM + MUM ),( RRSe / MUM ) ),( ( RRSe - DS ) * ( MUC * RRSe ) ) ) ,( ( ( MUR + RRSe ) - Min( MUC ,MUM ) ) - ( Max( MUR,CS ) + ( RCSe - DS ) ) ) ) ) ) ,Max( Min( Max( Max( ( ( MLU - MUR ) - Min( RRSe ,MLU ) ),( ( MUC + MUR ) * ( MUR / MUC ) ) ),( ( ( DS - MLU ) * ( MUM - RMSe ) ) + ( ( MUC - DS ) / ( RMSe * RRSe ) ) ) ) ,( ( ( ( RRSe * CS ) * ( CS - MUR ) ) - ( ( RMSe * MLU ) * Min( MLU ,MLU ) ) ) * Min( ( ( MUC + MUM ) * ( MUR - RCSe ) ) ,( Max( RCSe,MLU ) / Min( MUC ,CS ) ) ) ) ),( ( Min( ( ( DS - CS ) - Max( CS,RMSe ) ) ,( ( MLU + MUC ) - Max( RCSe,RCSe ) ) ) * ( ( ( MLU / RMSe ) + ( MUC + MUM ) ) * Max( ( MUM * DS ),Max( MUR,RCSe ) ) ) ) + ( ( ( ( RMSe - MUC ) * ( CS - RMSe ) ) / Min( ( DS / RRSe ) ,Max( RCSe,MUC ) ) ) * ( Min( ( MUC * DS ) ,Max( RRSe,RMSe ) ) + ( ( MUR / RCSe ) - Max( DS,RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MLU ) - ( ( ( CS - MUC ) - Min( RMSe ,RCSe ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - Max( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - PN ) ) * CRS ),( FirstVNF_RAM_Server + Max( ( DDR * FirstVNF_Mem_Server ),( RRS - PN ) ) ) ) )", "choosing": "( ( CS * DS ) / ( RRSe - ( ( RCSe - ( RCSe * ( ( MUC + RMSe ) - MUM ) ) ) - ( RCSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "Min( ( MUC - ( MLU + MUM ) ) ,( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - Max( MLU,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( CRS * ARS ) / ( ( CRS - FirstVNF_Mem ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + ( CS - Max( ( Min( DS ,RMSe ) + ( CS - MUM ) ),MUM ) ) ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,Min( DS ,RMSe ) ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.591182364729459, "obj2": 0.29519650848454215}, {"determining": "( Const - ( DDR * ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.7935871743486974, "obj2": 0.11464739340215646}, {"determining": "( Const - ( DDR * ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( ( MUM - ( MLU - MUM ) ) / MUC ) / ( RRSe - MUC ) )", "obj1": 0.8176352705410822, "obj2": 0.09170508253966198}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - ( MLU + MLU ) ) - ( RCSe + MUR ) )", "obj1": 0.7695390781563126, "obj2": 0.17982493555228518}, {"determining": "( Const - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU - ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) ) - MUC ) / ( RRSe - MUC ) )", "obj1": 0.7234468937875751, "obj2": 0.19237870404605525}, {"determining": "Min( ( Max( ( ( Max( Min( ( CRS / FirstVNF_CPU ) ,Max( AMS,RRS ) ),Max( ( Const / CRS ),( Const + FirstVNF_Mem ) ) ) * ( ( Min( CRS ,FirstVNF_RAM_Server ) / Min( DDR ,MDR ) ) * Min( ( FirstVNF_RAM - BR ) ,( RRS * AMS ) ) ) ) + ( ( ( ( ACS - DDR ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( FirstVNF_CPU ,DDR ) ) ) / ( ( ( DDR / BR ) * ( ARS + MRS ) ) - ( ( MDR + FirstVNF_Mem_Server ) * ( MDR - FirstVNF_Mem ) ) ) ) ),( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Const ) ) * ( Min( MRS ,MDR ) / ( FirstVNF_RAM - BR ) ) ),( ( ( FirstVNF_RAM / AMS ) + ( PN / ARS ) ) / ( ( FirstVNF_RAM - ARS ) - ( FirstVNF_Mem_Server + AMS ) ) ) ) + Max( ( Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( PN * MRS ) ) + Max( ( PN * Const ),( CRS * PN ) ) ),( ( ( BR * RRS ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( DDR - BR ) ) ) ) ) ) / ( ( ( ( ( Min( Const ,Const ) + ( RRS * MDR ) ) / ( ( MRS / FirstVNF_CPU ) - Min( FirstVNF_RAM ,CRS ) ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( RRS / FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server * PN ),( MDR + FirstVNF_CPU_Server ) ) ) ) + Max( Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( ACS ,AMS ) ),Min( ( FirstVNF_RAM + AMS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ),( ( Min( MRS ,PN ) / ( ARS + FirstVNF_Mem ) ) + Max( ( MDR + FirstVNF_CPU_Server ),( BR / FirstVNF_Mem_Server ) ) ) ) ) - ( Max( ( ( Max( MDR,FirstVNF_RAM_Server ) * Min( CRS ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( ARS + PN ) ) ),Max( Min( ( AMS / PN ) ,( PN - FirstVNF_CPU_Server ) ),Max( ( MDR * FirstVNF_Mem_Server ),( FirstVNF_RAM * MRS ) ) ) ) * Min( Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ),( ( MRS - ACS ) - ( FirstVNF_RAM + MRS ) ) ) ,( Max( ( PN + FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) / Max( ( RRS + MDR ),( FirstVNF_CPU + MDR ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( ( PN - ARS ) / Min( AMS ,MRS ) ) + Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( ARS ,ARS ) ) ) - Max( ( ( CRS - FirstVNF_RAM ) / Min( RRS ,MDR ) ),( ( DDR - FirstVNF_CPU ) - ( ARS * AMS ) ) ) ) ,( ( ( ( AMS / CRS ) - ( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,Const ) ) / Min( ( DDR - MDR ) ,( AMS / AMS ) ) ) ) ) ,Min( ( ( Min( Max( PN,ACS ) ,( FirstVNF_RAM / Const ) ) / ( ( RRS * AMS ) / ( BR * MDR ) ) ) - Min( Max( ( AMS / MDR ),Max( FirstVNF_Mem_Server,MDR ) ) ,( ( AMS + FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) ) ) ,( Max( ( ( ACS * PN ) * ( FirstVNF_RAM + CRS ) ),( ( PN * BR ) + Min( Const ,Const ) ) ) - Max( ( Min( ACS ,BR ) * ( MRS / AMS ) ),( ( CRS + Const ) + ( FirstVNF_CPU / Const ) ) ) ) ) ),( ( ( ( ( ( BR * Const ) / ( BR + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - MRS ) / ( RRS * RRS ) ) ) - Min( ( ( BR * FirstVNF_Mem_Server ) * ( AMS * RRS ) ) ,Max( Min( PN ,CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) * Min( ( Max( Min( MDR ,PN ),( DDR / PN ) ) / ( Min( Const ,FirstVNF_RAM ) / ( PN + MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( MRS / RRS ) ) ,Max( ( CRS - FirstVNF_CPU ),( FirstVNF_RAM_Server / PN ) ) ) ) ) / Min( ( ( ( ( Const * CRS ) - ( ARS / CRS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( Max( DDR,FirstVNF_RAM ) / ( BR + MDR ) ) ) ) ,( Min( ( Max( AMS,AMS ) - Min( MRS ,ARS ) ) ,Max( Max( Const,PN ),( Const * PN ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / Max( MRS,CRS ) ) / ( ( FirstVNF_Mem_Server + ARS ) + ( Const * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( ( Max( ( RCSe * RMSe ),( RMSe + MUC ) ) * ( ( RMSe - MLU ) / Max( MUM,DS ) ) ) ,( Min( ( MLU * MUM ) ,( RMSe * MLU ) ) + ( ( RRSe / RMSe ) * ( DS - DS ) ) ) ) + ( ( ( Max( RRSe,MUC ) * ( CS - MUC ) ) * ( ( RRSe * RMSe ) * ( MUM - MUC ) ) ) * ( ( ( MUM * CS ) - ( MUR / RCSe ) ) / Min( ( DS + MUR ) ,( MUR * DS ) ) ) ) ) + ( ( Max( ( ( RRSe / RMSe ) - Min( DS ,MUC ) ),Max( ( MUR + MUC ),( DS + RMSe ) ) ) / Min( Min( ( DS / MUC ) ,Max( RMSe,MUC ) ) ,( ( MUC / MUR ) + ( RRSe - MLU ) ) ) ) - Max( Min( ( Min( RRSe ,RCSe ) * ( MLU + CS ) ) ,Min( ( MUC / RRSe ) ,( RMSe * MUM ) ) ),( ( ( DS + MUC ) + ( CS + RRSe ) ) / ( ( MLU + MUC ) * ( MUC + MUM ) ) ) ) ) ) + ( Max( ( ( Min( Max( RMSe,MUM ) ,( RRSe / MUC ) ) * ( Max( RCSe,RMSe ) - ( MLU - CS ) ) ) * ( ( Max( CS,CS ) * Max( RRSe,MUR ) ) - ( Min( RCSe ,MUR ) / Max( MUM,CS ) ) ) ),( ( ( Min( CS ,RMSe ) * ( DS * RMSe ) ) + ( Min( MUC ,RMSe ) - ( MUC * CS ) ) ) + ( Max( ( MLU + RCSe ),( CS * RMSe ) ) * ( ( MUM * CS ) - ( RRSe * MUM ) ) ) ) ) - Max( ( Max( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ),Max( Min( RRSe ,MLU ),( RMSe - DS ) ) ) - Min( ( ( RMSe + RMSe ) - Min( RCSe ,RMSe ) ) ,( Max( DS,MLU ) / ( RRSe + MUC ) ) ) ),( ( Max( Min( MUR ,MLU ),Max( MLU,CS ) ) - ( Min( MLU ,MUM ) / Min( DS ,MUR ) ) ) - ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) * Max( ( MUM - DS ),( CS * CS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( RRSe - CS ) * ( MUR - MUM ) ) ,( ( RRSe + MUR ) / Max( MLU,MUC ) ) ) / ( ( Max( RRSe,MUR ) - Max( CS,MUR ) ) * ( ( RMSe - MUM ) / ( MLU / RMSe ) ) ) ) * Min( Max( ( ( RRSe / CS ) / ( DS / RMSe ) ),( ( MUR * RMSe ) / ( CS / MUR ) ) ) ,( ( ( CS / DS ) / Max( MUC,MUM ) ) - Max( ( RRSe + RCSe ),Min( CS ,MUM ) ) ) ) ) * Max( Max( ( ( ( MUC + DS ) + ( MUR + DS ) ) / ( Min( RRSe ,MUR ) - Max( DS,RMSe ) ) ),Max( ( ( MUM / MUC ) / ( CS - DS ) ),Min( ( RMSe / MLU ) ,Max( DS,RCSe ) ) ) ),Max( ( Min( ( MUC / RCSe ) ,( MLU - MLU ) ) + Min( Max( CS,CS ) ,( MUC - MUR ) ) ),Min( Max( ( RMSe + RCSe ),( CS / CS ) ) ,( ( RMSe / RCSe ) / Min( MLU ,DS ) ) ) ) ) ) + Min( ( ( ( Min( ( MLU - MUC ) ,Max( DS,RMSe ) ) / Max( Max( RMSe,RRSe ),Max( CS,DS ) ) ) * ( ( ( CS * DS ) / Min( MUR ,CS ) ) * ( ( MLU * MLU ) - Min( RRSe ,MLU ) ) ) ) / ( Max( ( Max( MUC,DS ) + Min( MUC ,MUC ) ),( ( DS * MUR ) / ( RMSe / MUC ) ) ) / Max( ( ( DS * CS ) * ( DS - RMSe ) ),Min( ( CS - RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ,Min( ( ( ( Min( DS ,RMSe ) * Max( RRSe,RMSe ) ) + ( ( RMSe - MLU ) * Max( MUR,RCSe ) ) ) * ( Min( ( DS + MUM ) ,( RMSe * RCSe ) ) * ( ( MLU - MUC ) - ( DS - RCSe ) ) ) ) ,( ( ( ( MLU / DS ) / ( MUC + MLU ) ) / ( ( RRSe * RMSe ) * ( MUR * CS ) ) ) + Min( ( Min( DS ,CS ) + Max( DS,MUM ) ) ,( ( DS - MUC ) / ( MUM * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8697394789579158, "obj2": 0.08645112101686496}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( MUM * ( RRSe * RRSe ) ) )", "obj1": 0.9619238476953907, "obj2": 0.020263618986644114}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUR ) )", "obj1": 0.9138276553106213, "obj2": 0.05497672953467169}, {"determining": "Min( ( ( ( ( ( Min( ( FirstVNF_Mem_Server / RRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( MRS - FirstVNF_CPU ) / Min( MRS ,BR ) ) ) - ( ( ( ARS - MDR ) + ( FirstVNF_CPU - Const ) ) - ( ( Const * MDR ) + Max( PN,FirstVNF_Mem ) ) ) ) + Max( ( Min( ( ACS - MRS ) ,Max( ACS,ACS ) ) + Max( ( MDR + FirstVNF_CPU ),( PN * DDR ) ) ),( ( ( FirstVNF_CPU + BR ) - ( CRS / PN ) ) * ( Max( BR,ARS ) * ( FirstVNF_CPU_Server / DDR ) ) ) ) ) - ( ( ( Min( ( CRS * RRS ) ,Min( CRS ,FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) + ( ( Max( FirstVNF_CPU_Server,RRS ) / Max( FirstVNF_RAM_Server,CRS ) ) + Max( Min( MDR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + CRS ) ) ) ) / ( ( ( ( MRS + BR ) * Min( MRS ,Const ) ) + Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( ARS * FirstVNF_RAM_Server ) ) ) + Max( ( ( MDR / ARS ) / ( ARS * PN ) ),Min( ( ACS / AMS ) ,Min( PN ,Const ) ) ) ) ) ) / ( Max( Min( ( Max( ( MRS + FirstVNF_CPU ),( MDR - FirstVNF_CPU_Server ) ) - ( ( PN * ACS ) / ( PN * PN ) ) ) ,( Max( ( CRS - MRS ),( AMS - PN ) ) + ( ( FirstVNF_CPU_Server * CRS ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ),Max( ( ( Min( Const ,RRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( RRS / FirstVNF_CPU ) - Min( ARS ,CRS ) ) ),( ( Max( ARS,FirstVNF_Mem_Server ) - Max( PN,RRS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / PN ) ) ) ) ) + ( ( Min( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,PN ) ) ,( Min( CRS ,Const ) + Min( FirstVNF_RAM_Server ,RRS ) ) ) - ( Min( Min( MRS ,FirstVNF_RAM ) ,( ACS * DDR ) ) + ( ( BR + RRS ) * Max( DDR,AMS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) * ( ( RRS * BR ) - ( FirstVNF_Mem / ACS ) ) ) + ( ( Max( AMS,DDR ) - Min( FirstVNF_Mem ,RRS ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( ARS * FirstVNF_RAM_Server ) ) ) ) ) ) ) ,Min( ( ( ( ( ( Min( ARS ,Const ) / ( PN + Const ) ) + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) * ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( AMS / ARS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( BR,MDR ) ) ) ) + ( ( ( Max( AMS,ARS ) - Min( CRS ,ACS ) ) - Min( ( MDR * FirstVNF_Mem ) ,Min( AMS ,CRS ) ) ) / ( ( ( ARS - DDR ) + ( FirstVNF_CPU_Server / Const ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( RRS + AMS ) ) ) ) ) - ( Max( ( Max( ( BR + MRS ),( Const * CRS ) ) - ( ( FirstVNF_Mem_Server / CRS ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ),( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( FirstVNF_CPU_Server / RRS ) ) / ( Min( Const ,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,MRS ) ) ) ) / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( ARS + RRS ) ) + Max( ( FirstVNF_CPU * ACS ),Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( Max( CRS,AMS ) - ( RRS + DDR ) ) - ( ( Const + FirstVNF_Mem ) - ( DDR * FirstVNF_Mem ) ) ) ) ) ) ,( ( ( ( ( ( PN + PN ) / ( FirstVNF_CPU + MDR ) ) / Max( ( ARS - PN ),( ACS / RRS ) ) ) - Max( ( ( RRS * ACS ) + ( ARS * CRS ) ),( ( BR - MDR ) - Max( MRS,CRS ) ) ) ) / ( ( ( ( ACS + CRS ) * ( FirstVNF_Mem_Server + AMS ) ) / Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM + Const ) ) ) / Min( ( ( PN / PN ) * Min( MRS ,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) / ( RRS / ACS ) ) ) ) ) * ( ( ( Max( Max( MDR,MRS ),Max( FirstVNF_CPU_Server,CRS ) ) * Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),Min( Const ,CRS ) ) ) / Max( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),Min( MDR ,Const ) ),Min( Max( Const,FirstVNF_CPU_Server ) ,( MDR - FirstVNF_Mem_Server ) ) ) ) / Min( ( Max( Min( ARS ,FirstVNF_CPU_Server ),( CRS / Const ) ) * ( ( ARS + AMS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ,( ( Min( RRS ,MDR ) + ( RRS * MRS ) ) + Max( ( ACS - RRS ),( RRS - FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Max( Min( RRSe ,( MLU - Min( MUC ,MLU ) ) ),( Max( DS,( ( MUM + DS ) + ( Min( RRSe ,MUR ) + ( MUM - ( MUC + Min( RMSe ,MUC ) ) ) ) ) ) / MUC ) )", "obj1": 0.781563126252505, "obj2": 0.15194275752242017}, {"determining": "( ( ( Max( Max( BR,DDR ),Min( BR ,CRS ) ) * ( ARS + Const ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( MLU - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.935871743486974, "obj2": 0.035400371342068984}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU - CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.8877755511022044, "obj2": 0.08430552627234252}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.8937875751503006, "obj2": 0.06030792821676119}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * DDR ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - Max( RCSe,MUR ) )", "obj1": 0.6633266533066132, "obj2": 0.22260780812309175}, {"determining": "( Max( ( FirstVNF_CPU * Const ),Const ) / ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.5991983967935872, "obj2": 0.2786788767088929}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + DS )", "obj1": 0.7074148296593187, "obj2": 0.2046642506291194}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) / ( AMS * Const ) )", "choosing": "( Min( DS ,RMSe ) + ( CS - MUM ) )", "obj1": 0.6072144288577155, "obj2": 0.2594721146566821}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.7755511022044088, "obj2": 0.15899023225045877}, {"determining": "Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.9498997995991983, "obj2": 0.0281659430559444}, {"determining": "( Min( DDR ,BR ) - ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( CS * ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ) / ( RRSe - MUR ) )", "obj1": 0.6172344689378757, "obj2": 0.25799323166232363}, {"determining": "( Const - ( DDR * FirstVNF_Mem ) )", "choosing": "Min( ( RCSe - ( RCSe + MUR ) ) ,( RCSe + MUR ) )", "obj1": 0.6452905811623246, "obj2": 0.22779023531213305}, {"determining": "( ( CRS * ARS ) / ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) / ( AMS * Const ) )", "choosing": "( ( RCSe - ( MLU + ( CS - Max( MLU,MUM ) ) ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.6492985971943888, "obj2": 0.22543339436777493}, {"determining": "( ( FirstVNF_RAM_Server - PN ) / ( AMS * Const ) )", "choosing": "( MLU - Min( MLU ,DS ) )", "obj1": 0.5971943887775552, "obj2": 0.28702210951837914}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.9559118236472945, "obj2": 0.023613548898730807}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 0.6432865731462926, "obj2": 0.24022733903912769}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) )", "choosing": "( ( RCSe - ( ( RCSe + CS ) + MUM ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.7775551102204409, "obj2": 0.15721330691709345}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe - ( ( RCSe - ( MLU + MUM ) ) + MUM ) ) - ( RCSe + MUR ) )", "obj1": 0.6312625250501002, "obj2": 0.24768429101202022}, {"determining": "( ( ( RRS - CRS ) - ( FirstVNF_RAM_Server - PN ) ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + ( CS - Max( MLU,MUM ) ) ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.625250501002004, "obj2": 0.25138698761673983}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.8937875751503006, "obj2": 0.06030792821676119}, {"determining": "( ( ( RRS - CRS ) - ( FirstVNF_RAM_Server - PN ) ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + ( CS - Max( MLU,MUM ) ) ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.625250501002004, "obj2": 0.25138698761673983}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / Max( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - PN ) ) * CRS ),( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,( RRS * PN ) ) ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( MLU - MUM ) ) * ( ( MUC + RMSe ) + MUM ) ) ) - ( RCSe - MUR ) )", "obj1": 0.6372745490981964, "obj2": 0.24705963906588976}, {"determining": "( Max( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ),BR ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,CS ) * ( CS - CS ) )", "obj1": 0.6412825651302605, "obj2": 0.24048403702257515}, {"determining": "( MRS / ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( ( MRS / ( AMS * Const ) ) * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) * Const ) )", "choosing": "( ( RCSe - ( RCSe - ( MLU - MUM ) ) ) - MLU )", "obj1": 0.6352705410821643, "obj2": 0.2472913337457896}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe + MUM ) )", "obj1": 0.6392785571142284, "obj2": 0.24360498024650115}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / FirstVNF_Mem_Server )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe - ( MLU - ( MLU + MUM ) ) ) )", "obj1": 0.6392785571142284, "obj2": 0.24360498024650115}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe + MUR ) - ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( RRS ,CRS ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ,( Const / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - DS ) * ( RMSe / MLU ) ) - ( ( MLU / CS ) - ( MUM - RCSe ) ) ) - ( ( ( RMSe + MLU ) / ( RRSe + MUM ) ) - ( ( CS / MLU ) * ( MUR * MUC ) ) ) ) * ( ( ( ( RCSe * MUR ) / Min( MUM ,MUM ) ) - ( Max( DS,RMSe ) * Max( MUC,MUC ) ) ) * ( ( ( CS - MUC ) / ( MUM * CS ) ) - ( ( RMSe * RCSe ) - ( RMSe * CS ) ) ) ) ) - ( ( ( ( Min( RMSe ,MUR ) * Min( MUC ,MUR ) ) + ( ( MLU * MUM ) * Max( RMSe,RMSe ) ) ) + ( ( ( RMSe - RCSe ) + Min( CS ,DS ) ) / Max( ( RCSe - CS ),( RCSe / RRSe ) ) ) ) * Min( ( Min( ( DS - RMSe ) ,( MUR - DS ) ) - ( ( MUC + MUC ) / ( CS - MUR ) ) ) ,( ( ( MUM + RMSe ) * Min( MUC ,MUM ) ) + Min( Max( MUM,DS ) ,Min( MUR ,RRSe ) ) ) ) ) ) * ( ( ( Max( ( ( DS + RRSe ) + Min( DS ,RCSe ) ),( Max( MUM,RMSe ) * ( RRSe + CS ) ) ) / ( ( ( MUM - MUR ) + ( RCSe * MLU ) ) + ( ( MUR * DS ) + ( CS * MUM ) ) ) ) * ( ( ( ( MLU / MLU ) + ( CS * MLU ) ) + ( ( RMSe - DS ) * ( MLU / MUC ) ) ) / ( ( ( MUR * MUR ) * Max( RMSe,MUR ) ) * Min( ( CS / MUR ) ,Max( RRSe,MUC ) ) ) ) ) * Max( ( ( ( ( RRSe - MUM ) + ( MUM * RMSe ) ) / ( ( RMSe - MUR ) * ( RRSe * DS ) ) ) - ( ( ( RRSe - CS ) + Max( RMSe,MLU ) ) * Max( ( RCSe / MUR ),( DS + CS ) ) ) ),( Min( ( Min( RCSe ,MLU ) * ( MUR - MUR ) ) ,( ( MUM + RCSe ) + Max( MUC,MLU ) ) ) / Max( Min( ( RRSe + RRSe ) ,( CS + MUM ) ),Max( Max( RRSe,MUR ),( MUM - MUC ) ) ) ) ) ) ) / Min( Min( ( ( Max( Max( ( MLU / MUC ),( MUM + RRSe ) ),( ( RRSe * DS ) + Max( MUC,DS ) ) ) * Max( Max( ( RRSe * RMSe ),Max( RCSe,MUM ) ),( Min( MLU ,DS ) / ( DS * MUC ) ) ) ) * ( ( Min( Min( MUM ,MUC ) ,( MUM - MUR ) ) * ( Max( MUC,RRSe ) / ( RMSe - MLU ) ) ) * ( ( ( RRSe + RCSe ) * Min( CS ,RCSe ) ) / ( ( RRSe * MLU ) / Max( CS,MUR ) ) ) ) ) ,( ( ( ( Max( RCSe,DS ) + ( MLU / CS ) ) + ( ( DS - DS ) * ( MUR + RMSe ) ) ) + ( ( ( CS - RMSe ) * ( MUC / MUM ) ) * ( Max( RMSe,RCSe ) - Max( RMSe,MUC ) ) ) ) / Min( Max( Max( ( MUM + MUM ),( RRSe / MUM ) ),( ( RRSe - DS ) * ( MUC * RRSe ) ) ) ,( ( ( MUR + RRSe ) - Min( MUC ,MUM ) ) - ( Max( MUR,CS ) + ( RCSe - DS ) ) ) ) ) ) ,Max( Min( Max( Max( ( ( MLU - MUR ) - Min( RRSe ,MLU ) ),( ( MUC + MUR ) * ( MUR / MUC ) ) ),( ( ( DS - MLU ) * ( MUM - RMSe ) ) + ( ( MUC - DS ) / ( RMSe * RRSe ) ) ) ) ,( ( ( ( RRSe * CS ) * ( CS - MUR ) ) - ( ( RMSe * MLU ) * Min( MLU ,MLU ) ) ) * Min( ( ( MUC + MUM ) * ( MUR - RCSe ) ) ,( Max( RCSe,MLU ) / Min( MUC ,CS ) ) ) ) ),( ( Min( ( ( DS - CS ) - Max( CS,RMSe ) ) ,( ( MLU + MUC ) - Max( RCSe,RCSe ) ) ) * ( ( ( MLU / RMSe ) + ( MUC + MUM ) ) * Max( ( MUM * DS ),Max( MUR,RCSe ) ) ) ) + ( ( ( ( RMSe - MUC ) * ( CS - RMSe ) ) / Min( ( DS / RRSe ) ,Max( RCSe,MUC ) ) ) * ( Min( ( MUC * DS ) ,Max( RRSe,RMSe ) ) + ( ( MUR / RCSe ) - Max( DS,RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MLU ) - ( ( ( CS - MUC ) - Min( RMSe ,RCSe ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - Max( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - PN ) ) * CRS ),( FirstVNF_RAM_Server + Max( ( DDR * FirstVNF_Mem_Server ),( RRS - PN ) ) ) ) )", "choosing": "( ( CS * DS ) / ( RRSe - ( ( RCSe - ( RCSe * ( ( MUC + RMSe ) - MUM ) ) ) - ( RCSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( Min( ( Min( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) + ( Max( AMS,AMS ) * ( ACS - MRS ) ) ) * ( ( ( RRS - CRS ) / Min( FirstVNF_CPU ,BR ) ) * Min( ( FirstVNF_RAM_Server / MDR ) ,Min( MRS ,MDR ) ) ) ) ,( ( ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_Mem * RRS ) ) - Max( Max( MDR,FirstVNF_CPU_Server ),( RRS + FirstVNF_CPU_Server ) ) ) / Min( Min( ( FirstVNF_CPU_Server - MRS ) ,Min( ARS ,FirstVNF_CPU ) ) ,Max( ( DDR * PN ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ) * ( Min( ( ( ( AMS / MDR ) - ( FirstVNF_Mem_Server + ACS ) ) - Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ,Min( ( ( BR * DDR ) * ( MDR * DDR ) ) ,( ( PN - FirstVNF_Mem_Server ) * ( AMS / MDR ) ) ) ) / Min( ( ( ( MRS / MDR ) + ( BR - FirstVNF_CPU ) ) * Min( Min( Const ,BR ) ,Max( RRS,MRS ) ) ) ,Max( Max( ( RRS * FirstVNF_Mem ),Min( FirstVNF_CPU ,DDR ) ),( ( ARS * FirstVNF_CPU ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) ) ,Max( ( Max( ( ( ( MRS + AMS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - DDR ) ) ),( Max( ( BR / ACS ),Min( PN ,BR ) ) * ( Min( MDR ,BR ) - ( BR * MRS ) ) ) ) - Max( ( ( ( FirstVNF_Mem_Server * DDR ) * Max( BR,PN ) ) + Max( ( AMS * RRS ),( ARS + MRS ) ) ),( ( ( DDR * FirstVNF_RAM ) - ( AMS - FirstVNF_RAM ) ) + ( ( FirstVNF_RAM * MRS ) + ( MRS * RRS ) ) ) ) ),( ( ( ( Min( AMS ,FirstVNF_Mem_Server ) * Min( BR ,DDR ) ) * Max( ( ARS - DDR ),( RRS - FirstVNF_CPU_Server ) ) ) - ( ( ( DDR - ARS ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem * ACS ) * ( DDR * FirstVNF_RAM_Server ) ) ) ) * ( ( ( Max( FirstVNF_Mem,PN ) - Max( AMS,ACS ) ) / ( Max( FirstVNF_CPU_Server,MDR ) / ( Const - PN ) ) ) * Max( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) - Min( AMS ,AMS ) ),( ( ACS * FirstVNF_Mem ) / ( FirstVNF_CPU_Server + ARS ) ) ) ) ) ) ) + ( ( ( ( ( Max( Min( FirstVNF_Mem_Server ,MDR ),Max( ARS,Const ) ) + Max( ( MDR / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) / Max( ( ( FirstVNF_Mem / ARS ) - Max( Const,ARS ) ),( Max( AMS,BR ) + Max( ARS,FirstVNF_CPU_Server ) ) ) ) - Min( ( ( ( FirstVNF_RAM_Server * ARS ) - ( MDR * FirstVNF_RAM ) ) + ( ( PN + MRS ) + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ,Min( ( Max( AMS,AMS ) + Min( AMS ,FirstVNF_CPU ) ) ,Max( Max( RRS,FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,DDR ) ) ) ) ) / ( Max( Min( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( MDR / ACS ) ) ,( ( Const / FirstVNF_Mem ) / ( MDR - FirstVNF_RAM_Server ) ) ),Min( ( ( AMS + CRS ) + ( Const + BR ) ) ,Max( ( FirstVNF_Mem + MRS ),Min( PN ,FirstVNF_Mem_Server ) ) ) ) / ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,Const ) / ( ARS / RRS ) ) ) / ( Max( ( FirstVNF_RAM_Server - MRS ),( FirstVNF_CPU * PN ) ) * ( ( FirstVNF_CPU - AMS ) - Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - Max( ( Min( ( ( Min( Const ,AMS ) - Min( FirstVNF_CPU ,CRS ) ) - Max( ( AMS + FirstVNF_Mem ),Min( FirstVNF_CPU ,MDR ) ) ) ,( ( ( FirstVNF_RAM + DDR ) * Min( FirstVNF_RAM_Server ,AMS ) ) * ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ARS - ARS ) ) ) ) + ( Max( ( ( ACS * FirstVNF_RAM ) / Min( FirstVNF_Mem ,CRS ) ),( ( DDR * FirstVNF_Mem ) + ( MRS / Const ) ) ) + ( ( ( AMS * ACS ) * Min( AMS ,FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_RAM ,RRS ) * Max( Const,FirstVNF_Mem ) ) ) ) ),( Min( ( ( ( Const + PN ) - ( FirstVNF_CPU + PN ) ) + ( ( CRS * RRS ) - ( BR - PN ) ) ) ,( Min( ( Const / ARS ) ,( FirstVNF_Mem * DDR ) ) / ( ( BR - RRS ) * ( FirstVNF_RAM_Server * MDR ) ) ) ) - Min( ( ( Min( DDR ,DDR ) - Max( MDR,Const ) ) + Min( Min( AMS ,ARS ) ,Min( RRS ,FirstVNF_Mem_Server ) ) ) ,( ( ( DDR - PN ) * ( ARS / MRS ) ) / ( ( MRS / PN ) / ( FirstVNF_RAM_Server - BR ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( DS + DS ) ,( ( MLU * ( MLU - RMSe ) ) - MUM ) ) / ( RCSe / MLU ) ) - Max( Min( ( ( RRSe - MUC ) - RRSe ) ,DS ),( ( MUC - ( ( RMSe + RRSe ) * MUR ) ) + Min( Min( MUC ,DS ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( ( CRS - FirstVNF_Mem ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,Min( DS ,RMSe ) ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.591182364729459, "obj2": 0.29519650848454215}, {"determining": "( Const - ( DDR * ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.7935871743486974, "obj2": 0.11464739340215646}, {"determining": "( Const - ( DDR * ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( ( ( MUM - ( MLU - MUM ) ) / MUC ) / ( RRSe - MUC ) )", "obj1": 0.8176352705410822, "obj2": 0.09170508253966198}, {"determining": "( ( ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * DDR ) - ( FirstVNF_RAM_Server - PN ) ) ) ) + ARS ) / FirstVNF_Mem )", "choosing": "Min( ( RCSe - ( RCSe + MUR ) ) ,MLU )", "obj1": 0.7074148296593187, "obj2": 0.18630186256460873}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - ( MLU + MLU ) ) - ( RCSe + MUR ) )", "obj1": 0.7695390781563126, "obj2": 0.17982493555228518}, {"determining": "Min( ( Max( ( ( Max( Min( ( CRS / FirstVNF_CPU ) ,Max( AMS,RRS ) ),Max( ( Const / CRS ),( Const + FirstVNF_Mem ) ) ) * ( ( Min( CRS ,FirstVNF_RAM_Server ) / Min( DDR ,MDR ) ) * Min( ( FirstVNF_RAM - BR ) ,( RRS * AMS ) ) ) ) + ( ( ( ( ACS - DDR ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( FirstVNF_CPU ,DDR ) ) ) / ( ( ( DDR / BR ) * ( ARS + MRS ) ) - ( ( MDR + FirstVNF_Mem_Server ) * ( MDR - FirstVNF_Mem ) ) ) ) ),( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Const ) ) * ( Min( MRS ,MDR ) / ( FirstVNF_RAM - BR ) ) ),( ( ( FirstVNF_RAM / AMS ) + ( PN / ARS ) ) / ( ( FirstVNF_RAM - ARS ) - ( FirstVNF_Mem_Server + AMS ) ) ) ) + Max( ( Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( PN * MRS ) ) + Max( ( PN * Const ),( CRS * PN ) ) ),( ( ( BR * RRS ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( DDR - BR ) ) ) ) ) ) / ( ( ( ( ( Min( Const ,Const ) + ( RRS * MDR ) ) / ( ( MRS / FirstVNF_CPU ) - Min( FirstVNF_RAM ,CRS ) ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( RRS / FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU_Server * PN ),( MDR + FirstVNF_CPU_Server ) ) ) ) + Max( Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( ACS ,AMS ) ),Min( ( FirstVNF_RAM + AMS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ),( ( Min( MRS ,PN ) / ( ARS + FirstVNF_Mem ) ) + Max( ( MDR + FirstVNF_CPU_Server ),( BR / FirstVNF_Mem_Server ) ) ) ) ) - ( Max( ( ( Max( MDR,FirstVNF_RAM_Server ) * Min( CRS ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( ARS + PN ) ) ),Max( Min( ( AMS / PN ) ,( PN - FirstVNF_CPU_Server ) ),Max( ( MDR * FirstVNF_Mem_Server ),( FirstVNF_RAM * MRS ) ) ) ) * Min( Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ),( ( MRS - ACS ) - ( FirstVNF_RAM + MRS ) ) ) ,( Max( ( PN + FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) / Max( ( RRS + MDR ),( FirstVNF_CPU + MDR ) ) ) ) ) ) ) ,Max( Min( Min( ( ( ( ( PN - ARS ) / Min( AMS ,MRS ) ) + Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( ARS ,ARS ) ) ) - Max( ( ( CRS - FirstVNF_RAM ) / Min( RRS ,MDR ) ),( ( DDR - FirstVNF_CPU ) - ( ARS * AMS ) ) ) ) ,( ( ( ( AMS / CRS ) - ( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( BR + FirstVNF_RAM_Server ) / Min( MRS ,Const ) ) / Min( ( DDR - MDR ) ,( AMS / AMS ) ) ) ) ) ,Min( ( ( Min( Max( PN,ACS ) ,( FirstVNF_RAM / Const ) ) / ( ( RRS * AMS ) / ( BR * MDR ) ) ) - Min( Max( ( AMS / MDR ),Max( FirstVNF_Mem_Server,MDR ) ) ,( ( AMS + FirstVNF_Mem ) * ( FirstVNF_Mem / PN ) ) ) ) ,( Max( ( ( ACS * PN ) * ( FirstVNF_RAM + CRS ) ),( ( PN * BR ) + Min( Const ,Const ) ) ) - Max( ( Min( ACS ,BR ) * ( MRS / AMS ) ),( ( CRS + Const ) + ( FirstVNF_CPU / Const ) ) ) ) ) ),( ( ( ( ( ( BR * Const ) / ( BR + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - MRS ) / ( RRS * RRS ) ) ) - Min( ( ( BR * FirstVNF_Mem_Server ) * ( AMS * RRS ) ) ,Max( Min( PN ,CRS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) * Min( ( Max( Min( MDR ,PN ),( DDR / PN ) ) / ( Min( Const ,FirstVNF_RAM ) / ( PN + MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( MRS / RRS ) ) ,Max( ( CRS - FirstVNF_CPU ),( FirstVNF_RAM_Server / PN ) ) ) ) ) / Min( ( ( ( ( Const * CRS ) - ( ARS / CRS ) ) - ( Min( MDR ,CRS ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / ( Max( DDR,FirstVNF_RAM ) / ( BR + MDR ) ) ) ) ,( Min( ( Max( AMS,AMS ) - Min( MRS ,ARS ) ) ,Max( Max( Const,PN ),( Const * PN ) ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / Max( MRS,CRS ) ) / ( ( FirstVNF_Mem_Server + ARS ) + ( Const * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( ( Max( ( RCSe * RMSe ),( RMSe + MUC ) ) * ( ( RMSe - MLU ) / Max( MUM,DS ) ) ) ,( Min( ( MLU * MUM ) ,( RMSe * MLU ) ) + ( ( RRSe / RMSe ) * ( DS - DS ) ) ) ) + ( ( ( Max( RRSe,MUC ) * ( CS - MUC ) ) * ( ( RRSe * RMSe ) * ( MUM - MUC ) ) ) * ( ( ( MUM * CS ) - ( MUR / RCSe ) ) / Min( ( DS + MUR ) ,( MUR * DS ) ) ) ) ) + ( ( Max( ( ( RRSe / RMSe ) - Min( DS ,MUC ) ),Max( ( MUR + MUC ),( DS + RMSe ) ) ) / Min( Min( ( DS / MUC ) ,Max( RMSe,MUC ) ) ,( ( MUC / MUR ) + ( RRSe - MLU ) ) ) ) - Max( Min( ( Min( RRSe ,RCSe ) * ( MLU + CS ) ) ,Min( ( MUC / RRSe ) ,( RMSe * MUM ) ) ),( ( ( DS + MUC ) + ( CS + RRSe ) ) / ( ( MLU + MUC ) * ( MUC + MUM ) ) ) ) ) ) + ( Max( ( ( Min( Max( RMSe,MUM ) ,( RRSe / MUC ) ) * ( Max( RCSe,RMSe ) - ( MLU - CS ) ) ) * ( ( Max( CS,CS ) * Max( RRSe,MUR ) ) - ( Min( RCSe ,MUR ) / Max( MUM,CS ) ) ) ),( ( ( Min( CS ,RMSe ) * ( DS * RMSe ) ) + ( Min( MUC ,RMSe ) - ( MUC * CS ) ) ) + ( Max( ( MLU + RCSe ),( CS * RMSe ) ) * ( ( MUM * CS ) - ( RRSe * MUM ) ) ) ) ) - Max( ( Max( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ),Max( Min( RRSe ,MLU ),( RMSe - DS ) ) ) - Min( ( ( RMSe + RMSe ) - Min( RCSe ,RMSe ) ) ,( Max( DS,MLU ) / ( RRSe + MUC ) ) ) ),( ( Max( Min( MUR ,MLU ),Max( MLU,CS ) ) - ( Min( MLU ,MUM ) / Min( DS ,MUR ) ) ) - ( ( ( MUM + RCSe ) / Max( MLU,MLU ) ) * Max( ( MUM - DS ),( CS * CS ) ) ) ) ) ) ) / ( ( ( ( Min( ( ( RRSe - CS ) * ( MUR - MUM ) ) ,( ( RRSe + MUR ) / Max( MLU,MUC ) ) ) / ( ( Max( RRSe,MUR ) - Max( CS,MUR ) ) * ( ( RMSe - MUM ) / ( MLU / RMSe ) ) ) ) * Min( Max( ( ( RRSe / CS ) / ( DS / RMSe ) ),( ( MUR * RMSe ) / ( CS / MUR ) ) ) ,( ( ( CS / DS ) / Max( MUC,MUM ) ) - Max( ( RRSe + RCSe ),Min( CS ,MUM ) ) ) ) ) * Max( Max( ( ( ( MUC + DS ) + ( MUR + DS ) ) / ( Min( RRSe ,MUR ) - Max( DS,RMSe ) ) ),Max( ( ( MUM / MUC ) / ( CS - DS ) ),Min( ( RMSe / MLU ) ,Max( DS,RCSe ) ) ) ),Max( ( Min( ( MUC / RCSe ) ,( MLU - MLU ) ) + Min( Max( CS,CS ) ,( MUC - MUR ) ) ),Min( Max( ( RMSe + RCSe ),( CS / CS ) ) ,( ( RMSe / RCSe ) / Min( MLU ,DS ) ) ) ) ) ) + Min( ( ( ( Min( ( MLU - MUC ) ,Max( DS,RMSe ) ) / Max( Max( RMSe,RRSe ),Max( CS,DS ) ) ) * ( ( ( CS * DS ) / Min( MUR ,CS ) ) * ( ( MLU * MLU ) - Min( RRSe ,MLU ) ) ) ) / ( Max( ( Max( MUC,DS ) + Min( MUC ,MUC ) ),( ( DS * MUR ) / ( RMSe / MUC ) ) ) / Max( ( ( DS * CS ) * ( DS - RMSe ) ),Min( ( CS - RCSe ) ,Max( MLU,RCSe ) ) ) ) ) ,Min( ( ( ( Min( DS ,RMSe ) * Max( RRSe,RMSe ) ) + ( ( RMSe - MLU ) * Max( MUR,RCSe ) ) ) * ( Min( ( DS + MUM ) ,( RMSe * RCSe ) ) * ( ( MLU - MUC ) - ( DS - RCSe ) ) ) ) ,( ( ( ( MLU / DS ) / ( MUC + MLU ) ) / ( ( RRSe * RMSe ) * ( MUR * CS ) ) ) + Min( ( Min( DS ,CS ) + Max( DS,MUM ) ) ,( ( DS - MUC ) / ( MUM * RRSe ) ) ) ) ) ) ) )", "obj1": 0.8697394789579158, "obj2": 0.08645112101686496}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * DS ) / ( RRSe - MUR ) )", "obj1": 0.9138276553106213, "obj2": 0.05497672953467169}, {"determining": "Min( ( ( ( ( ( Min( ( FirstVNF_Mem_Server / RRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( MRS - FirstVNF_CPU ) / Min( MRS ,BR ) ) ) - ( ( ( ARS - MDR ) + ( FirstVNF_CPU - Const ) ) - ( ( Const * MDR ) + Max( PN,FirstVNF_Mem ) ) ) ) + Max( ( Min( ( ACS - MRS ) ,Max( ACS,ACS ) ) + Max( ( MDR + FirstVNF_CPU ),( PN * DDR ) ) ),( ( ( FirstVNF_CPU + BR ) - ( CRS / PN ) ) * ( Max( BR,ARS ) * ( FirstVNF_CPU_Server / DDR ) ) ) ) ) - ( ( ( Min( ( CRS * RRS ) ,Min( CRS ,FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) + ( ( Max( FirstVNF_CPU_Server,RRS ) / Max( FirstVNF_RAM_Server,CRS ) ) + Max( Min( MDR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + CRS ) ) ) ) / ( ( ( ( MRS + BR ) * Min( MRS ,Const ) ) + Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( ARS * FirstVNF_RAM_Server ) ) ) + Max( ( ( MDR / ARS ) / ( ARS * PN ) ),Min( ( ACS / AMS ) ,Min( PN ,Const ) ) ) ) ) ) / ( Max( Min( ( Max( ( MRS + FirstVNF_CPU ),( MDR - FirstVNF_CPU_Server ) ) - ( ( PN * ACS ) / ( PN * PN ) ) ) ,( Max( ( CRS - MRS ),( AMS - PN ) ) + ( ( FirstVNF_CPU_Server * CRS ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ),Max( ( ( Min( Const ,RRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( RRS / FirstVNF_CPU ) - Min( ARS ,CRS ) ) ),( ( Max( ARS,FirstVNF_Mem_Server ) - Max( PN,RRS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / PN ) ) ) ) ) + ( ( Min( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,PN ) ) ,( Min( CRS ,Const ) + Min( FirstVNF_RAM_Server ,RRS ) ) ) - ( Min( Min( MRS ,FirstVNF_RAM ) ,( ACS * DDR ) ) + ( ( BR + RRS ) * Max( DDR,AMS ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) * ( ( RRS * BR ) - ( FirstVNF_Mem / ACS ) ) ) + ( ( Max( AMS,DDR ) - Min( FirstVNF_Mem ,RRS ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( ARS * FirstVNF_RAM_Server ) ) ) ) ) ) ) ,Min( ( ( ( ( ( Min( ARS ,Const ) / ( PN + Const ) ) + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) * ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( AMS / ARS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( BR,MDR ) ) ) ) + ( ( ( Max( AMS,ARS ) - Min( CRS ,ACS ) ) - Min( ( MDR * FirstVNF_Mem ) ,Min( AMS ,CRS ) ) ) / ( ( ( ARS - DDR ) + ( FirstVNF_CPU_Server / Const ) ) - Max( ( ACS + FirstVNF_RAM_Server ),( RRS + AMS ) ) ) ) ) - ( Max( ( Max( ( BR + MRS ),( Const * CRS ) ) - ( ( FirstVNF_Mem_Server / CRS ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ),( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( FirstVNF_CPU_Server / RRS ) ) / ( Min( Const ,FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,MRS ) ) ) ) / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( ARS + RRS ) ) + Max( ( FirstVNF_CPU * ACS ),Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( Max( CRS,AMS ) - ( RRS + DDR ) ) - ( ( Const + FirstVNF_Mem ) - ( DDR * FirstVNF_Mem ) ) ) ) ) ) ,( ( ( ( ( ( PN + PN ) / ( FirstVNF_CPU + MDR ) ) / Max( ( ARS - PN ),( ACS / RRS ) ) ) - Max( ( ( RRS * ACS ) + ( ARS * CRS ) ),( ( BR - MDR ) - Max( MRS,CRS ) ) ) ) / ( ( ( ( ACS + CRS ) * ( FirstVNF_Mem_Server + AMS ) ) / Max( ( DDR - FirstVNF_RAM ),( FirstVNF_RAM + Const ) ) ) / Min( ( ( PN / PN ) * Min( MRS ,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) / ( RRS / ACS ) ) ) ) ) * ( ( ( Max( Max( MDR,MRS ),Max( FirstVNF_CPU_Server,CRS ) ) * Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),Min( Const ,CRS ) ) ) / Max( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),Min( MDR ,Const ) ),Min( Max( Const,FirstVNF_CPU_Server ) ,( MDR - FirstVNF_Mem_Server ) ) ) ) / Min( ( Max( Min( ARS ,FirstVNF_CPU_Server ),( CRS / Const ) ) * ( ( ARS + AMS ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ,( ( Min( RRS ,MDR ) + ( RRS * MRS ) ) + Max( ( ACS - RRS ),( RRS - FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Max( Min( RRSe ,( MLU - Min( MUC ,MLU ) ) ),( Max( DS,( ( MUM + DS ) + ( Min( RRSe ,MUR ) + ( MUM - ( MUC + Min( RMSe ,MUC ) ) ) ) ) ) / MUC ) )", "obj1": 0.781563126252505, "obj2": 0.15194275752242017}, {"determining": "( ( ( Max( Max( BR,DDR ),Min( BR ,CRS ) ) * ( ARS + Const ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( MLU - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.935871743486974, "obj2": 0.035400371342068984}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( CRS / DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( MUM * ( RRSe * RRSe ) ) )", "obj1": 0.9619238476953907, "obj2": 0.020263618986644114}, {"determining": "( Min( ( ( Min( Max( Max( Min( AMS ,RRS ),( MDR * BR ) ),( Max( ARS,FirstVNF_RAM_Server ) / Max( AMS,MRS ) ) ) ,Min( ( ( MRS / DDR ) * Max( FirstVNF_Mem,ARS ) ) ,Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( ARS - AMS ) ) ) ) - Min( ( Max( ( BR / FirstVNF_Mem ),( Const + FirstVNF_Mem_Server ) ) - ( Min( MDR ,ACS ) - ( Const / CRS ) ) ) ,Max( Min( ( MDR + CRS ) ,Max( Const,FirstVNF_RAM ) ),( ( FirstVNF_RAM / ACS ) - Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) / Max( ( ( Min( ( BR - FirstVNF_RAM_Server ) ,Min( PN ,FirstVNF_RAM ) ) / Min( ( ARS - BR ) ,Min( MRS ,AMS ) ) ) - ( Min( ( ARS / FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) - Max( ( ARS - BR ),( ARS / BR ) ) ) ),( ( ( ( FirstVNF_RAM_Server + CRS ) * ( AMS - ARS ) ) * ( ( MDR / FirstVNF_RAM_Server ) / Min( ARS ,ARS ) ) ) - ( ( ( RRS / ARS ) - ( FirstVNF_Mem - Const ) ) * Min( ( ARS + BR ) ,Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ,( ( ( Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( BR * PN ) ),Min( Max( Const,RRS ) ,( AMS - FirstVNF_CPU_Server ) ) ) + ( ( ( ARS - ACS ) / Max( Const,ACS ) ) / Min( Max( FirstVNF_Mem,CRS ) ,Min( CRS ,ACS ) ) ) ) * ( Max( Min( Max( RRS,RRS ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ),( ( MDR / ACS ) * ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU_Server - Const ) * ( BR - FirstVNF_RAM_Server ) ) - ( ( RRS * MDR ) / ( FirstVNF_RAM + CRS ) ) ) ) ) + Min( ( ( ( ( FirstVNF_CPU_Server * DDR ) + ( ACS - FirstVNF_CPU ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),( DDR / RRS ) ) ) + Min( ( ( BR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM * AMS ) ) ,( ( FirstVNF_CPU + ARS ) - ( FirstVNF_Mem_Server * PN ) ) ) ) ,( ( Min( ( BR - FirstVNF_RAM_Server ) ,Min( PN ,FirstVNF_RAM ) ) / Min( ( ARS - BR ) ,Min( MRS ,AMS ) ) ) - ( Min( ( ARS / FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) - Max( ( ARS - BR ),( ARS / BR ) ) ) ) ) ) ) - ( Max( ( Max( ( ( ( PN * DDR ) / ( Const / CRS ) ) * Max( Max( FirstVNF_CPU_Server,ACS ),( FirstVNF_Mem / MDR ) ) ),( ( ( FirstVNF_Mem_Server - ARS ) + ( FirstVNF_CPU_Server + AMS ) ) * ( Min( DDR ,FirstVNF_CPU ) - Max( CRS,FirstVNF_CPU ) ) ) ) / Max( ( ( Max( Const,RRS ) + Min( ARS ,PN ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU ) - Min( AMS ,DDR ) ) ),( Max( Min( FirstVNF_CPU_Server ,RRS ),( FirstVNF_CPU_Server + ACS ) ) - ( ( Const - PN ) * ( FirstVNF_CPU / MDR ) ) ) ) ),Min( ( Max( ( ( FirstVNF_Mem_Server * Const ) / ( MDR * PN ) ),( ( AMS * ARS ) / Max( Const,PN ) ) ) - ( Min( ( BR + DDR ) ,( Const * DDR ) ) * ( ( DDR / CRS ) + ( ARS - FirstVNF_RAM ) ) ) ) ,( Min( ( ( MDR * FirstVNF_CPU ) * Max( ACS,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM - FirstVNF_CPU ) / Min( FirstVNF_RAM_Server ,BR ) ) ) - ( Max( Max( ACS,FirstVNF_Mem_Server ),( DDR / BR ) ) / ( ( CRS / FirstVNF_Mem ) * Min( MRS ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( Max( Min( Min( ( AMS + FirstVNF_CPU ) ,Max( RRS,PN ) ) ,( ( ARS * CRS ) * ( FirstVNF_Mem_Server / CRS ) ) ),Min( ( Max( CRS,MRS ) * ( RRS - FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server * DDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) * Min( ( Min( Max( MRS,FirstVNF_Mem ) ,( DDR + FirstVNF_Mem ) ) + ( ( ARS / RRS ) / ( MDR - DDR ) ) ) ,Max( ( ( PN * FirstVNF_CPU_Server ) + ( DDR - ACS ) ),( Max( ARS,CRS ) / ( FirstVNF_CPU - PN ) ) ) ) ) * ( ( ( ( Max( FirstVNF_Mem_Server,Const ) + ( FirstVNF_Mem * RRS ) ) / Max( Max( FirstVNF_RAM,CRS ),Min( MRS ,CRS ) ) ) + ( ( ( FirstVNF_Mem / MDR ) + ( FirstVNF_RAM - DDR ) ) - Max( Max( RRS,BR ),( FirstVNF_CPU_Server + AMS ) ) ) ) + Min( ( ( ( DDR / FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) * ( Min( FirstVNF_CPU ,RRS ) * Max( CRS,AMS ) ) ) ,( ( ( DDR * FirstVNF_CPU ) - ( Const - PN ) ) + ( ( MRS + FirstVNF_Mem ) + ( ACS / AMS ) ) ) ) ) ) ) )", "choosing": "( ( CS / ( RRSe - MUM ) ) + Max( RMSe,CS ) )", "obj1": 0.9979959919839679, "obj2": 0.0023864352914466955}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU - CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.8877755511022044, "obj2": 0.08430552627234252}, {"determining": "( Min( ( FirstVNF_CPU * CRS ) ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * DDR ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - Max( ( ( RCSe - ( MLU + MUM ) ) - Max( RCSe,MUR ) ),MUR ) )", "obj1": 0.6593186372745491, "obj2": 0.21700269516730256}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.8937875751503006, "obj2": 0.06030792821676119}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * DDR ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "Min( ( RCSe - ( RCSe + MUR ) ) ,( RMSe + RRSe ) )", "obj1": 0.687374749498998, "obj2": 0.2083072104692495}, {"determining": "( Max( ( FirstVNF_CPU * Const ),Const ) / ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( MLU - MUM ) ) - ( RCSe + MUM ) ) / Max( MUC,RRSe ) )", "obj1": 0.5991983967935872, "obj2": 0.2786788767088929}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) / ( AMS * Const ) )", "choosing": "( Min( DS ,RMSe ) + ( CS - MUM ) )", "obj1": 0.6072144288577155, "obj2": 0.2594721146566821}, {"determining": "( MRS / ( ARS - Const ) )", "choosing": "( ( MLU - MUC ) - MUC )", "obj1": 0.7755511022044088, "obj2": 0.15899023225045877}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.9498997995991983, "obj2": 0.0281659430559444}, {"determining": "( ( CRS * ARS ) / ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( Min( DDR ,BR ) - ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( CS * ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ) / ( RRSe - MUR ) )", "obj1": 0.6172344689378757, "obj2": 0.25799323166232363}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) / ( AMS * Const ) )", "choosing": "( ( CS * MUM ) - Min( MLU ,DS ) )", "obj1": 0.625250501002004, "obj2": 0.2492172379628265}, {"determining": "( Const - ( DDR * FirstVNF_Mem ) )", "choosing": "Min( ( RCSe - ( RCSe + MUR ) ) ,( RCSe + MUR ) )", "obj1": 0.6452905811623246, "obj2": 0.22779023531213305}, {"determining": "( ( FirstVNF_RAM_Server - PN ) / ( AMS * Const ) )", "choosing": "( MLU - Min( MLU ,DS ) )", "obj1": 0.5971943887775552, "obj2": 0.28702210951837914}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * DDR ) - ACS ) ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - Max( RCSe,( ( RRSe * ( MUC - MUM ) ) - ( RCSe + MUM ) ) ) )", "obj1": 0.6513026052104208, "obj2": 0.22318708285892086}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 0.6432865731462926, "obj2": 0.24022733903912769}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) )", "choosing": "( ( RCSe - ( ( RCSe + CS ) + MUM ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.7775551102204409, "obj2": 0.15721330691709345}, {"determining": "( ( CRS * ARS ) / ( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RMSe ) + Min( DS ,RMSe ) )", "obj1": 0.6953907815631263, "obj2": 0.20624670135196496}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.8937875751503006, "obj2": 0.06030792821676119}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe - ( ( RCSe - ( MLU + MUM ) ) + MUM ) ) - ( RCSe + MUR ) )", "obj1": 0.6312625250501002, "obj2": 0.24768429101202022}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) / ( AMS * Const ) )", "choosing": "( ( RCSe - ( MLU + ( CS - Max( MLU,MUM ) ) ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 0.6492985971943888, "obj2": 0.22543339436777493}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.9559118236472945, "obj2": 0.023613548898730807}, {"determining": "( ( RRS / ( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.9559118236472945, "obj2": 0.023613548898730807}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / Max( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - PN ) ) * CRS ),( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,( RRS * PN ) ) ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( MLU - MUM ) ) * ( ( MUC + RMSe ) + MUM ) ) ) - ( RCSe - MUR ) )", "obj1": 0.6372745490981964, "obj2": 0.24705963906588976}, {"determining": "( Max( ( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) ),BR ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,CS ) * ( CS - CS ) )", "obj1": 0.6412825651302605, "obj2": 0.24048403702257515}, {"determining": "( MRS / ( ( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( ( MRS / ( AMS * Const ) ) * CRS ),( FirstVNF_RAM_Server - MRS ) ) ) * Const ) )", "choosing": "( ( RCSe - ( RCSe - ( MLU - MUM ) ) ) - MLU )", "obj1": 0.6352705410821643, "obj2": 0.2472913337457896}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / FirstVNF_Mem_Server )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe - ( MLU - ( MLU + MUM ) ) ) )", "obj1": 0.6392785571142284, "obj2": 0.24360498024650115}, {"determining": "( Min( FirstVNF_Mem_Server ,AMS ) / Max( ( FirstVNF_CPU * CRS ),( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe + MUM ) )", "obj1": 0.6392785571142284, "obj2": 0.24360498024650115}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}, {"determining": "( ( CRS * ARS ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) )", "choosing": "( ( RCSe - ( MLU + ( CS - Max( ( Min( DS ,RMSe ) + ( CS - MUM ) ),MUM ) ) ) ) - ( RCSe - ( MLU - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) ) )", "choosing": "( ( RCSe - ( MLU + MUM ) ) - ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) / ( ( FirstVNF_CPU * CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( FirstVNF_CPU * CRS ) - ( FirstVNF_RAM_Server - PN ) ) ) ) )", "choosing": "( ( RCSe + MUR ) - ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( RRS ,CRS ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ,( Const / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - DS ) * ( RMSe / MLU ) ) - ( ( MLU / CS ) - ( MUM - RCSe ) ) ) - ( ( ( RMSe + MLU ) / ( RRSe + MUM ) ) - ( ( CS / MLU ) * ( MUR * MUC ) ) ) ) * ( ( ( ( RCSe * MUR ) / Min( MUM ,MUM ) ) - ( Max( DS,RMSe ) * Max( MUC,MUC ) ) ) * ( ( ( CS - MUC ) / ( MUM * CS ) ) - ( ( RMSe * RCSe ) - ( RMSe * CS ) ) ) ) ) - ( ( ( ( Min( RMSe ,MUR ) * Min( MUC ,MUR ) ) + ( ( MLU * MUM ) * Max( RMSe,RMSe ) ) ) + ( ( ( RMSe - RCSe ) + Min( CS ,DS ) ) / Max( ( RCSe - CS ),( RCSe / RRSe ) ) ) ) * Min( ( Min( ( DS - RMSe ) ,( MUR - DS ) ) - ( ( MUC + MUC ) / ( CS - MUR ) ) ) ,( ( ( MUM + RMSe ) * Min( MUC ,MUM ) ) + Min( Max( MUM,DS ) ,Min( MUR ,RRSe ) ) ) ) ) ) * ( ( ( Max( ( ( DS + RRSe ) + Min( DS ,RCSe ) ),( Max( MUM,RMSe ) * ( RRSe + CS ) ) ) / ( ( ( MUM - MUR ) + ( RCSe * MLU ) ) + ( ( MUR * DS ) + ( CS * MUM ) ) ) ) * ( ( ( ( MLU / MLU ) + ( CS * MLU ) ) + ( ( RMSe - DS ) * ( MLU / MUC ) ) ) / ( ( ( MUR * MUR ) * Max( RMSe,MUR ) ) * Min( ( CS / MUR ) ,Max( RRSe,MUC ) ) ) ) ) * Max( ( ( ( ( RRSe - MUM ) + ( MUM * RMSe ) ) / ( ( RMSe - MUR ) * ( RRSe * DS ) ) ) - ( ( ( RRSe - CS ) + Max( RMSe,MLU ) ) * Max( ( RCSe / MUR ),( DS + CS ) ) ) ),( Min( ( Min( RCSe ,MLU ) * ( MUR - MUR ) ) ,( ( MUM + RCSe ) + Max( MUC,MLU ) ) ) / Max( Min( ( RRSe + RRSe ) ,( CS + MUM ) ),Max( Max( RRSe,MUR ),( MUM - MUC ) ) ) ) ) ) ) / Min( Min( ( ( Max( Max( ( MLU / MUC ),( MUM + RRSe ) ),( ( RRSe * DS ) + Max( MUC,DS ) ) ) * Max( Max( ( RRSe * RMSe ),Max( RCSe,MUM ) ),( Min( MLU ,DS ) / ( DS * MUC ) ) ) ) * ( ( Min( Min( MUM ,MUC ) ,( MUM - MUR ) ) * ( Max( MUC,RRSe ) / ( RMSe - MLU ) ) ) * ( ( ( RRSe + RCSe ) * Min( CS ,RCSe ) ) / ( ( RRSe * MLU ) / Max( CS,MUR ) ) ) ) ) ,( ( ( ( Max( RCSe,DS ) + ( MLU / CS ) ) + ( ( DS - DS ) * ( MUR + RMSe ) ) ) + ( ( ( CS - RMSe ) * ( MUC / MUM ) ) * ( Max( RMSe,RCSe ) - Max( RMSe,MUC ) ) ) ) / Min( Max( Max( ( MUM + MUM ),( RRSe / MUM ) ),( ( RRSe - DS ) * ( MUC * RRSe ) ) ) ,( ( ( MUR + RRSe ) - Min( MUC ,MUM ) ) - ( Max( MUR,CS ) + ( RCSe - DS ) ) ) ) ) ) ,Max( Min( Max( Max( ( ( MLU - MUR ) - Min( RRSe ,MLU ) ),( ( MUC + MUR ) * ( MUR / MUC ) ) ),( ( ( DS - MLU ) * ( MUM - RMSe ) ) + ( ( MUC - DS ) / ( RMSe * RRSe ) ) ) ) ,( ( ( ( RRSe * CS ) * ( CS - MUR ) ) - ( ( RMSe * MLU ) * Min( MLU ,MLU ) ) ) * Min( ( ( MUC + MUM ) * ( MUR - RCSe ) ) ,( Max( RCSe,MLU ) / Min( MUC ,CS ) ) ) ) ),( ( Min( ( ( DS - CS ) - Max( CS,RMSe ) ) ,( ( MLU + MUC ) - Max( RCSe,RCSe ) ) ) * ( ( ( MLU / RMSe ) + ( MUC + MUM ) ) * Max( ( MUM * DS ),Max( MUR,RCSe ) ) ) ) + ( ( ( ( RMSe - MUC ) * ( CS - RMSe ) ) / Min( ( DS / RRSe ) ,Max( RCSe,MUC ) ) ) * ( Min( ( MUC * DS ) ,Max( RRSe,RMSe ) ) + ( ( MUR / RCSe ) - Max( DS,RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MLU ) - ( ( ( CS - MUC ) - Min( RMSe ,RCSe ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}]}