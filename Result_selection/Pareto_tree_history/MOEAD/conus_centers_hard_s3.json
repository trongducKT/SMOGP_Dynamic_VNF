{"1": [{"determining": "Max( Min( ACS ,DDR ),Min( DDR ,AMS ) )", "choosing": "Min( ( MUC + RMSe ) ,( CS + MUR ) )", "obj1": 0.6953907815631263, "obj2": 0.26626547456355176}, {"determining": "( ( ( ( FirstVNF_RAM - CRS ) - ( MDR * ACS ) ) / Max( ( FirstVNF_Mem_Server - MRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) / ( Min( ( ACS - ACS ) ,( Const + FirstVNF_CPU ) ) - ( Min( RRS ,FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM / MUC ) * ( ( MUC - ( RRSe - MUR ) ) / DS ) )", "obj1": 0.6613226452905812, "obj2": 0.2954659653319858}, {"determining": "( Min( BR ,Const ) * ( ARS - CRS ) )", "choosing": "Min( ( RRSe - RMSe ) ,Min( MUM ,CS ) )", "obj1": 0.7234468937875751, "obj2": 0.2812412239969986}, {"determining": "Max( Min( ARS ,Const ),( FirstVNF_RAM + Const ) )", "choosing": "Min( ( RCSe - MUM ) ,Min( RMSe ,MUR ) )", "obj1": 0.6953907815631263, "obj2": 0.2733895023537367}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Min( MRS ,CRS ) )", "choosing": "( Max( MUM,DS ) + ( RCSe * CS ) )", "obj1": 0.6713426853707415, "obj2": 0.2739498695865808}, {"determining": "Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RMSe + RRSe ) * ( RRSe / DS ) )", "obj1": 0.6813627254509018, "obj2": 0.3054029604887545}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) )", "choosing": "( Min( MLU ,MUC ) / ( MUR * RRSe ) )", "obj1": 0.7054108216432866, "obj2": 0.2571237518011294}, {"determining": "( ( PN + MDR ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,Max( MUR,( ( ( Min( ( MUM / MUR ) ,MUR ) - CS ) + Max( Max( ( MUC * MUR ),MUM ),( RRSe - CS ) ) ) / RRSe ) ) ) + ( MUM * ( DS * ( ( Min( ( ( RMSe - DS ) + RCSe ) ,( ( DS - MUC ) * Max( MLU,MUC ) ) ) + ( ( MUR + DS ) + MUM ) ) - RRSe ) ) ) )", "obj1": 0.7394789579158316, "obj2": 0.23045159244658678}, {"determining": "( ( Const * FirstVNF_CPU_Server ) / ( Const - FirstVNF_Mem ) )", "choosing": "Max( ( RRSe + MUC ),( CS * Min( RMSe ,( MUM - RCSe ) ) ) )", "obj1": 0.6773547094188377, "obj2": 0.25204802877355725}, {"determining": "Min( ( ACS / MRS ) ,( MRS / MRS ) )", "choosing": "Min( ( RMSe / RRSe ) ,( MLU * CS ) )", "obj1": 0.6953907815631263, "obj2": 0.27527943711442987}, {"determining": "( Min( BR ,ARS ) + Min( PN ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUR ),( MUM - CS ) )", "obj1": 0.7014028056112225, "obj2": 0.2941194756550835}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN / DDR ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "Min( ( RCSe + CS ) ,( MLU * RRSe ) )", "obj1": 0.6893787575150301, "obj2": 0.2654416816290405}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_Mem ),( AMS / BR ) )", "choosing": "( ( RMSe - MUC ) + Max( RRSe,RRSe ) )", "obj1": 0.7154308617234469, "obj2": 0.28472998628308754}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM ) * FirstVNF_Mem_Server ) ,Min( ( FirstVNF_Mem / ( ( PN - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) + MRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe * RMSe ) * ( RMSe - ( DS / ( MLU - RCSe ) ) ) )", "obj1": 0.7274549098196392, "obj2": 0.23788004169474333}, {"determining": "Min( ( RRS * BR ) ,( FirstVNF_CPU + Min( ( ( AMS / FirstVNF_Mem_Server ) - MDR ) ,DDR ) ) )", "choosing": "( ( RCSe * DS ) + Min( ( MUM - Min( RCSe ,( MLU * Max( MUR,RMSe ) ) ) ) ,( ( ( MUR * Max( MUR,Max( MUM,Max( DS,MUM ) ) ) ) - ( MLU * ( ( RMSe * MUC ) - DS ) ) ) - ( MUR * MLU ) ) ) )", "obj1": 0.685370741482966, "obj2": 0.22234114992475715}, {"determining": "( ( BR - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + DDR ) ) ) + ( AMS / ARS ) )", "choosing": "( ( Min( ( ( MUM - MLU ) - CS ) ,MLU ) * CS ) / Max( RRSe,RCSe ) )", "obj1": 0.7114228456913828, "obj2": 0.26134643488828363}, {"determining": "( ( PN / CRS ) - Min( CRS ,AMS ) )", "choosing": "( ( Max( MLU,( Min( RCSe ,Min( DS ,CS ) ) * MLU ) ) - MUM ) + ( RRSe - MLU ) )", "obj1": 0.6913827655310621, "obj2": 0.26851046447248106}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( MRS + PN ) )", "choosing": "Max( Min( RRSe ,CS ),( RCSe / MUR ) )", "obj1": 0.6933867735470942, "obj2": 0.2621685325820581}, {"determining": "( ( FirstVNF_RAM * BR ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / RRSe ) - ( RCSe - RMSe ) )", "obj1": 0.7374749498997996, "obj2": 0.2233472465624496}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Max( PN,FirstVNF_CPU ) )", "choosing": "( ( RMSe + DS ) - ( MUC * RRSe ) )", "obj1": 0.7094188376753507, "obj2": 0.24060968280140246}, {"determining": "( ( RRS * AMS ) * ( FirstVNF_CPU / Const ) )", "choosing": "Max( ( RMSe + DS ),Max( MUM,CS ) )", "obj1": 0.7254509018036072, "obj2": 0.23358553804580662}, {"determining": "( ( ACS - AMS ) * ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( RCSe ,MUR ) - Min( DS ,MLU ) )", "obj1": 0.7074148296593187, "obj2": 0.2985743056704553}, {"determining": "Max( Max( MDR,BR ),( BR * FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM + RMSe ),( MUM * RMSe ) )", "obj1": 0.6833667334669339, "obj2": 0.26764676556636335}, {"determining": "Min( ( RRS + FirstVNF_RAM ) ,( FirstVNF_CPU / ACS ) )", "choosing": "( Min( MLU ,CS ) * ( RCSe * MUR ) )", "obj1": 0.7114228456913828, "obj2": 0.28186210948395135}, {"determining": "Min( ( PN / PN ) ,( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( CS / MUM ) + ( MLU / RRSe ) )", "obj1": 0.7194388777555111, "obj2": 0.265250449881768}, {"determining": "( Min( PN ,Const ) / ( AMS - FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) - Min( RCSe ,MUC ) )", "obj1": 0.811623246492986, "obj2": 0.16120657325289328}, {"determining": "( ( ACS / RRS ) + Min( AMS ,DDR ) )", "choosing": "( ( MUR / CS ) - ( MUM - RCSe ) )", "obj1": 0.7154308617234469, "obj2": 0.26015696688275497}, {"determining": "( ( BR / ACS ) * Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( MUC + DS ) * ( MUR * DS ) )", "obj1": 0.7154308617234469, "obj2": 0.23441670139135534}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( CRS,CRS ) )", "choosing": "( ( CS - MUC ) + Min( DS ,MUC ) )", "obj1": 0.7134268537074149, "obj2": 0.2634824418193885}, {"determining": "Max( ( PN * FirstVNF_RAM ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUR ) + ( DS + MUC ) )", "obj1": 0.7034068136272545, "obj2": 0.2379624069210865}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( FirstVNF_RAM + DDR ) )", "choosing": "( Min( MUM ,MLU ) / Max( RRSe,MLU ) )", "obj1": 0.6833667334669339, "obj2": 0.2756063343072731}, {"determining": "( ( AMS + CRS ) + ( BR + ACS ) )", "choosing": "( ( DS / MUM ) / ( CS + RRSe ) )", "obj1": 0.6953907815631263, "obj2": 0.2646006870467158}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU_Server ) - ( RRS - FirstVNF_RAM ) )", "choosing": "Min( ( RRSe / DS ) ,Max( MUR,MUM ) )", "obj1": 0.7194388777555111, "obj2": 0.2786790698409747}, {"determining": "( ( BR / Max( AMS,DDR ) ) / ( ( CRS + FirstVNF_Mem ) / ( MRS / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( RRSe * MUR ) ,RMSe ) )", "obj1": 0.6753507014028056, "obj2": 0.31172204261689107}, {"determining": "Max( ( ( BR / PN ) - FirstVNF_CPU_Server ),( MRS + ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - Min( CS ,RCSe ) ) - ( CS + MUM ) )", "obj1": 0.7294589178356713, "obj2": 0.24636899283168714}, {"determining": "Min( ( Max( FirstVNF_CPU,BR ) / ( FirstVNF_Mem - PN ) ) ,( Max( FirstVNF_CPU,ARS ) + ( CRS / PN ) ) )", "choosing": "( Min( ( MUM * MLU ) ,MUC ) * ( ( MUR + MUC ) / DS ) )", "obj1": 0.6753507014028056, "obj2": 0.326098871835557}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( Min( ( DS * MUC ) ,( DS + MLU ) ) ,( ( RRSe + MLU ) - ( DS * MUM ) ) )", "obj1": 0.7154308617234469, "obj2": 0.23400998514521493}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( PN * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) )", "obj1": 0.6352705410821643, "obj2": 0.2973216430583313}, {"determining": "( ( ( FirstVNF_Mem_Server / MRS ) * ( ARS * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) )", "choosing": "( ( RCSe * MUM ) + ( Min( MUC ,RMSe ) / MUC ) )", "obj1": 0.7114228456913828, "obj2": 0.28184298646148537}, {"determining": "( Min( FirstVNF_CPU_Server ,( BR * RRS ) ) + ( MDR * ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * MLU ) - Min( RCSe ,RMSe ) ) + Max( ( CS / RCSe ),( RMSe / MLU ) ) )", "obj1": 0.6933867735470942, "obj2": 0.2639197961086847}, {"determining": "( ( BR * FirstVNF_RAM ) + Min( DDR ,Const ) )", "choosing": "( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( ( MUM + MUM ) * ( RMSe + MUM ) ) )", "obj1": 0.7034068136272545, "obj2": 0.26418486242641825}, {"determining": "( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) + ( PN / RRS ) )", "choosing": "( Min( MUR ,( ( Max( RCSe,( RMSe * ( MLU / MUC ) ) ) + Max( CS,Max( ( ( RCSe * MUR ) * ( MUM / RMSe ) ),( RRSe + ( MUC * RRSe ) ) ) ) ) - ( MUR * CS ) ) ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.6933867735470942, "obj2": 0.2482505761094722}, {"determining": "Max( ( ( Const - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + Const ) ),Min( ( MDR / MDR ) ,( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUR ) + ( MUM - DS ) ) - Max( ( CS * MLU ),( RCSe + DS ) ) )", "obj1": 0.6292585170340681, "obj2": 0.29959438223434925}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 0.6933867735470942, "obj2": 0.2613132900808734}, {"determining": "( Min( ( MRS + Const ) ,( FirstVNF_CPU_Server - BR ) ) * Min( Min( RRS ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) )", "obj1": 0.6893787575150301, "obj2": 0.2581721112167598}, {"determining": "Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) )", "choosing": "( ( Min( CS ,RRSe ) - MUC ) * ( DS * RRSe ) )", "obj1": 0.7855711422845691, "obj2": 0.18055056115656506}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "Max( ( ( FirstVNF_RAM / ( MDR * FirstVNF_RAM_Server ) ) * DDR ),( Const - CRS ) )", "choosing": "( ( MUR + DS ) / Min( Min( MUR ,MUM ) ,Min( ( ( ( CS - DS ) / RCSe ) - ( MUM * ( CS + RRSe ) ) ) ,RMSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.20920630284718206}, {"determining": "( ( ( PN * RRS ) / ( PN * FirstVNF_RAM_Server ) ) / ( Max( BR,Max( CRS,Const ) ) * Min( PN ,ARS ) ) )", "choosing": "( Max( ( RMSe - RCSe ),CS ) + ( MUM / CS ) )", "obj1": 0.6893787575150301, "obj2": 0.2761230241557391}, {"determining": "( ( RRS * PN ) / ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( RRSe / RMSe ) ) - ( Min( MUR ,MUC ) + DS ) )", "obj1": 0.6993987975951904, "obj2": 0.2923798657070568}, {"determining": "Max( ( MDR * CRS ),( ( ARS + ACS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( MLU ,MUC ),MUM ) / ( RMSe - RMSe ) )", "obj1": 0.7535070140280561, "obj2": 0.24691177355753713}, {"determining": "( ( ( MRS * FirstVNF_Mem_Server ) / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( ( PN * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),( ( RRSe - CS ) * MUC ) )", "obj1": 0.717434869739479, "obj2": 0.2838794087637273}, {"determining": "Min( ( ( FirstVNF_RAM * CRS ) + ( MRS - MRS ) ) ,( ( ACS * MDR ) * Min( AMS ,CRS ) ) )", "choosing": "Max( Min( CS ,Max( RRSe,MLU ) ),( RMSe * MLU ) )", "obj1": 0.6953907815631263, "obj2": 0.26717630497884287}, {"determining": "( ( ARS - FirstVNF_Mem_Server ) / ( ACS / ( MRS * ARS ) ) )", "choosing": "Max( Min( Max( MLU,CS ) ,( Max( MUM,CS ) * CS ) ),Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) )", "obj1": 0.7154308617234469, "obj2": 0.2698213121033232}, {"determining": "( Min( ( FirstVNF_CPU * DDR ) ,( ACS + ACS ) ) * ( ( CRS - MRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) )", "choosing": "( ( MLU - ( MUC + RCSe ) ) + Max( MUR,CS ) )", "obj1": 0.7234468937875751, "obj2": 0.26780479264655116}, {"determining": "( ( ( ( MDR * ( ( Max( CRS,ARS ) * FirstVNF_Mem ) + BR ) ) / FirstVNF_CPU ) * FirstVNF_RAM_Server ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "Max( ( ( MUM - MUR ) / Max( RMSe,RMSe ) ),Min( ( MLU - MLU ) ,DS ) )", "obj1": 0.7294589178356713, "obj2": 0.25779578445657664}, {"determining": "Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) )", "choosing": "( ( RCSe / Max( CS,CS ) ) / Max( RCSe,DS ) )", "obj1": 0.7274549098196392, "obj2": 0.26987718559250023}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM / FirstVNF_CPU ) ) - Min( RRS ,( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe - CS ) / ( MLU / ( RMSe - MUM ) ) )", "obj1": 0.717434869739479, "obj2": 0.2768653971752073}, {"determining": "( ( DDR + MRS ) + ( Const / RRS ) )", "choosing": "Min( Max( CS,RCSe ) ,( DS + MUC ) )", "obj1": 0.6412825651302605, "obj2": 0.2782068521949652}, {"determining": "Max( ( FirstVNF_RAM - BR ),( ( FirstVNF_CPU_Server * MRS ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe * ( MUM - RRSe ) ) * ( MLU / MUC ) )", "obj1": 0.7535070140280561, "obj2": 0.25255276522762293}, {"determining": "( ( ( RRS + FirstVNF_CPU_Server ) * ( ARS + FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_Mem + MDR ),( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS + RCSe ) ,( RMSe / MUM ) )", "obj1": 0.6492985971943888, "obj2": 0.2697472704931213}, {"determining": "Min( Min( Const ,FirstVNF_Mem_Server ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "( Max( Min( MUC ,RMSe ),( MUR / MLU ) ) * Min( MLU ,MUC ) )", "obj1": 0.6593186372745491, "obj2": 0.2852114069860005}, {"determining": "Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) )", "choosing": "( Max( ( RCSe * CS ),( RMSe - MUM ) ) / ( ( RCSe * MLU ) - Min( MUM ,RRSe ) ) )", "obj1": 0.6733466933867736, "obj2": 0.2640143120330643}, {"determining": "Min( Min( DDR ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( RRSe / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6513026052104208, "obj2": 0.25436283241520713}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + Min( MDR ,Const ) ) ,( ( ( BR / MRS ) * MDR ) + ARS ) )", "choosing": "Max( Min( Max( ( RCSe * RRSe ),( RRSe / MUM ) ) ,( ( RCSe * DS ) / Min( MUR ,RMSe ) ) ),( Min( ( RCSe / CS ) ,( RCSe + MUC ) ) + ( ( MUM * MUC ) + Min( MUR ,MLU ) ) ) )", "obj1": 0.7054108216432866, "obj2": 0.2808194378619051}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( Min( ( MRS - ( ( MDR / ACS ) + MDR ) ) ,FirstVNF_RAM ),AMS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,( RMSe * Min( MUM ,MLU ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( CRS - FirstVNF_Mem ),( Const * FirstVNF_RAM_Server ) ) * ( Max( AMS,ACS ) / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ),( ( Max( DDR,PN ) / ( ARS * FirstVNF_CPU_Server ) ) - ( Max( Min( ( Const * ACS ) ,Max( ACS,DDR ) ),Const ) - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUR ,RRSe ) + Max( ( ( RCSe / ( MUM - MUR ) ) / ( ( MUR / MUM ) + ( DS + DS ) ) ),Min( RMSe ,( MUC * ( RMSe * Min( Max( ( RMSe - MUR ),RCSe ) ,( RMSe + ( CS + MUC ) ) ) ) ) ) ) )", "obj1": 0.6793587174348698, "obj2": 0.2752266583033508}, {"determining": "( ( ( Min( FirstVNF_RAM ,BR ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( ACS / FirstVNF_CPU_Server ) ) ) * ( Max( Max( BR,FirstVNF_Mem_Server ),( AMS / MRS ) ) / ( Max( MRS,RRS ) + ( FirstVNF_Mem + AMS ) ) ) )", "choosing": "( ( MUR / Max( RMSe,Max( RMSe,RMSe ) ) ) + ( Min( ( RCSe + RMSe ) ,MLU ) / DS ) )", "obj1": 0.6533066132264529, "obj2": 0.2912247121329876}, {"determining": "( ( ( Max( DDR,DDR ) + ( ACS + Const ) ) - ( ( CRS * AMS ) / ( MDR - FirstVNF_CPU_Server ) ) ) / Max( ( ( CRS - FirstVNF_Mem_Server ) * Min( ACS ,ARS ) ),( ( AMS / ACS ) - Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "Max( ( Min( ( MUR * MUM ) ,( RMSe / CS ) ) + ( ( CS + RCSe ) / Max( RMSe,MUM ) ) ),Min( ( ( MUM * MUM ) - ( RCSe + RCSe ) ) ,Max( ( CS - MUR ),Max( MUR,MUR ) ) ) )", "obj1": 0.749498997995992, "obj2": 0.24036509115762322}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_RAM - ( DDR + DDR ) ) ) )", "choosing": "( ( MLU - ( RRSe + DS ) ) - ( MUR - MUC ) )", "obj1": 0.6653306613226453, "obj2": 0.2563713467487035}, {"determining": "( Max( FirstVNF_RAM_Server,MRS ) + ( PN - ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "( ( RRSe + MUC ) / ( MUC * ( Max( MUC,CS ) * ( MUM + DS ) ) ) )", "obj1": 0.781563126252505, "obj2": 0.17551822117459367}, {"determining": "( Min( Max( ( FirstVNF_RAM + PN ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,( Min( AMS ,Const ) / Max( PN,BR ) ) ) / Min( Max( ( ACS / Const ),Min( PN ,FirstVNF_CPU ) ) ,( ( ACS - ACS ) * ( MRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MLU ,RCSe ) * Max( RRSe,DS ) ) - ( Min( RMSe ,MUC ) - ( MUC / RCSe ) ) ) + Min( ( ( MUM * RCSe ) * Max( DS,MLU ) ) ,( ( RMSe * RMSe ) + ( MUC / CS ) ) ) )", "obj1": 0.6953907815631263, "obj2": 0.2735200618196822}, {"determining": "( ( Min( ( FirstVNF_CPU_Server * BR ) ,( FirstVNF_Mem / RRS ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( ( RCSe - MUC ) + Max( ( DS - ( RRSe / RRSe ) ),( CS - DS ) ) ) * Max( ( RRSe / MUR ),( RMSe - RRSe ) ) ) / Min( ( Max( RRSe,MUR ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.6492985971943888, "obj2": 0.2642801689166924}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR + MDR ) + ( RRS - FirstVNF_Mem ) ) + Min( ( ACS / FirstVNF_Mem ) ,( FirstVNF_Mem - RRS ) ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( ( DS / MUC ) ,( DS - MLU ) ),( ( MUM - MUM ) / MUM ) ) )", "obj1": 0.6653306613226453, "obj2": 0.2646769871754916}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( AMS - RRS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * Max( ( RCSe / MUC ),( RRSe - RMSe ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.6673346693386774, "obj2": 0.2613023899397137}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "Max( ( FirstVNF_Mem - BR ),( ( Min( PN ,PN ) + Max( RRS,CRS ) ) / ( ( PN + MRS ) * ( CRS * AMS ) ) ) )", "choosing": "( ( ( ( MUC * MUM ) * Min( CS ,RMSe ) ) - ( ( ( ( MLU / ( DS * Min( MUM ,MUC ) ) ) * Max( ( CS * Max( MUC,RRSe ) ),MLU ) ) * ( MUC / RRSe ) ) + Max( Max( MLU,DS ),Max( MUR,CS ) ) ) ) * ( ( ( RCSe * RCSe ) + ( MUR / MUR ) ) - Max( ( RCSe - MUC ),( MLU - RMSe ) ) ) )", "obj1": 0.6833667334669339, "obj2": 0.2593302836506032}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / ( Const + RRS ) ) ) * ( FirstVNF_CPU - Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server + PN ) ) ) )", "choosing": "Max( ( RCSe - RCSe ),( Min( Min( CS ,MUC ) ,Min( MUC ,RCSe ) ) + ( RCSe * ( CS + RCSe ) ) ) )", "obj1": 0.7675350701402806, "obj2": 0.2332105856832324}, {"determining": "Min( Max( ( ARS * FirstVNF_Mem ),FirstVNF_RAM ) ,( FirstVNF_Mem + ACS ) )", "choosing": "( ( DS + ( MUM / ( MUR - RMSe ) ) ) / ( MLU / CS ) )", "obj1": 0.655310621242485, "obj2": 0.268200586635344}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( ( ( ( FirstVNF_CPU * ARS ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * Max( Min( DDR ,AMS ),( PN / AMS ) ) ) / Min( Min( Max( FirstVNF_Mem,CRS ) ,Max( FirstVNF_Mem_Server,ARS ) ) ,( ( BR / BR ) - ( DDR + PN ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - ( DS * DS ) ) / ( Max( RRSe,DS ) - ( MUR * RCSe ) ) ) / Min( ( ( MUM / MUM ) + Min( MUR ,MUC ) ) ,( ( MUM * MUR ) + ( CS + MUC ) ) ) )", "obj1": 0.7134268537074149, "obj2": 0.2623377501749437}, {"determining": "( Max( ( Min( FirstVNF_CPU ,PN ) - ( AMS + PN ) ),( ( MDR / FirstVNF_Mem ) * ( CRS * AMS ) ) ) + ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MLU + MLU ) - Min( RMSe ,RRSe ) ) - ( Min( RRSe ,CS ) / Min( DS ,RCSe ) ) ) ,( Max( Max( DS,MLU ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) )", "obj1": 0.6913827655310621, "obj2": 0.27297450875504126}, {"determining": "( ( CRS + MRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MLU ) * ( MUM + RMSe ) )", "obj1": 0.6773547094188377, "obj2": 0.2798049593537301}, {"determining": "( ( ARS - Const ) * ( MRS * BR ) )", "choosing": "Max( ( MUM / RRSe ),( ( RMSe * ( CS - MLU ) ) - MUR ) )", "obj1": 0.7975951903807615, "obj2": 0.17554695026306907}, {"determining": "( ( Const - FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( DS * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( RRSe ,MUM ) ) ,( ( CS - MUC ) / Min( RMSe ,MLU ) ) ) )", "obj1": 0.6693386773547094, "obj2": 0.2977093124594911}, {"determining": "( ( Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS * RRS ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) * Min( ARS ,BR ) ) ) / ( Max( Max( BR,FirstVNF_CPU_Server ),( RRS / FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) / ( Const + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUR ,DS ) / MLU ) / Max( RRSe,RCSe ) )", "obj1": 0.7274549098196392, "obj2": 0.26555972028490593}, {"determining": "Min( ( ( CRS * MDR ) / ACS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / Min( DS ,RRSe ) ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( Min( MUC ,CS ),( MUC - ( RRSe - ( RCSe + RRSe ) ) ) ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7094188376753507, "obj2": 0.2590858397805668}, {"determining": "( ( ( ( PN / MRS ) - ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / ( ( MRS - ARS ) + Max( Const,FirstVNF_Mem_Server ) ) ) + ( ( ( MDR * FirstVNF_CPU_Server ) / Min( MRS ,Const ) ) + Max( ( ACS - FirstVNF_CPU_Server ),Min( AMS ,MRS ) ) ) )", "choosing": "( ( ( Min( MUM ,MUR ) / ( RCSe / MUM ) ) + ( Min( RRSe ,CS ) * Min( DS ,DS ) ) ) - ( Min( Min( RMSe ,MLU ) ,Min( DS ,MUM ) ) * ( ( CS - RCSe ) - Min( RRSe ,RRSe ) ) ) )", "obj1": 0.7615230460921844, "obj2": 0.22487969200441482}, {"determining": "Max( Max( ( Max( ( PN - ( FirstVNF_CPU_Server + ( ACS * ACS ) ) ),ACS ) / Min( DDR ,RRS ) ),( ( FirstVNF_RAM / DDR ) + ( Const - MDR ) ) ),Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - Max( PN,AMS ) ),( ( BR + Const ) - Max( MRS,MRS ) ) ) )", "choosing": "Min( ( MUM / RMSe ) ,( ( ( RRSe * RMSe ) - ( ( MLU * MUC ) * Min( MLU ,Max( RCSe,RRSe ) ) ) ) - ( ( RRSe + MUR ) - ( MUR / DS ) ) ) )", "obj1": 0.6593186372745491, "obj2": 0.2943916292029697}, {"determining": "Max( ( ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) - Min( FirstVNF_CPU_Server ,RRS ) ),( DDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( MLU - ( MUR - DS ) ),( DS + ( MUR - CS ) ) )", "obj1": 0.7334669338677354, "obj2": 0.266643095500579}, {"determining": "Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ,Max( ( DDR + PN ),( RRS * FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_Mem - ARS ) + ( FirstVNF_CPU / AMS ) ) * ( Max( CRS,FirstVNF_Mem_Server ) - Min( ARS ,RRS ) ) ) )", "choosing": "Min( ( ( Max( MUC,RRSe ) * ( MUR * CS ) ) + ( ( RRSe * MUC ) * ( DS * MUM ) ) ) ,( ( ( MUR / MUM ) / Max( RRSe,RRSe ) ) + Min( Min( MLU ,MUC ) ,Max( DS,RRSe ) ) ) )", "obj1": 0.7194388777555111, "obj2": 0.259499719583854}, {"determining": "( Min( ( Max( Const,MDR ) + Min( FirstVNF_Mem_Server ,AMS ) ) ,( ( FirstVNF_RAM_Server / ARS ) - Min( BR ,PN ) ) ) - ( ( ( ARS - FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,RRS ) ) / ( ( DDR * MRS ) * Max( PN,ARS ) ) ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( RCSe + RMSe ) ) - Max( ( MUC / CS ),( RRSe + MUC ) ) ) )", "obj1": 0.8156312625250501, "obj2": 0.14445099254216726}], "2": [{"determining": "Min( ( CRS - ARS ) ,Max( ( Const - FirstVNF_CPU ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( ( ( CS - MUC ) / Min( RMSe ,MLU ) ) * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,Max( BR,MDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUC / CS ) ) / Min( ( Max( RRSe,MUR ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.6212424849699398, "obj2": 0.2695482371964865}, {"determining": "Max( ( ( FirstVNF_RAM / ( MDR * FirstVNF_RAM_Server ) ) * DDR ),( Const - CRS ) )", "choosing": "( ( MUR + DS ) / Min( Min( MUR ,MUM ) ,Min( ( ( ( CS - DS ) / RCSe ) - ( MUM * ( CS + RRSe ) ) ) ,RMSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.20920630284718206}, {"determining": "( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) ) / Min( Min( Max( FirstVNF_Mem,CRS ) ,Max( FirstVNF_Mem_Server,ARS ) ) ,( ( BR / BR ) - ( DDR + PN ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - ( DS * DS ) ) / ( Max( RRSe,DS ) - ( MUR * RCSe ) ) ) / Min( ( ( MUM / MUM ) + Min( MUR ,MUC ) ) ,( ( MUM * MUR ) + ( CS + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.7474949899799599, "obj2": 0.14422633340611932}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( ( ( Min( FirstVNF_RAM ,BR ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( ACS / FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM - ( DDR + DDR ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUR ),( RCSe / RMSe ) ) ) + ( Min( ( RCSe + RMSe ) ,( MLU - ( RRSe + DS ) ) ) / DS ) )", "obj1": 0.9599198396793587, "obj2": 0.01933790056298824}, {"determining": "Min( Max( ( ARS * FirstVNF_Mem ),FirstVNF_RAM ) ,( FirstVNF_Mem + Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) ) ) )", "choosing": "( ( DS + ( MUM / ( MUR - ( MUM + MLU ) ) ) ) / ( MLU / CS ) )", "obj1": 0.8977955911823647, "obj2": 0.06911930163198471}, {"determining": "( ( AMS / BR ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + RRSe )", "obj1": 0.9478957915831663, "obj2": 0.054918397527513006}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( ( ARS * FirstVNF_Mem_Server ) / ARS ) )", "choosing": "( Min( MLU ,DS ) / Max( RRSe,RCSe ) )", "obj1": 0.8697394789579158, "obj2": 0.10765923688273486}, {"determining": "( ( ( ( MDR * ( ( Max( CRS,ARS ) * FirstVNF_Mem ) + BR ) ) / FirstVNF_CPU ) * FirstVNF_RAM_Server ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "Max( ( ( MUM - MUR ) / Max( RMSe,RMSe ) ),Min( ( MLU - MLU ) ,DS ) )", "obj1": 0.9258517034068137, "obj2": 0.0675649253002923}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + ( DDR + PN ) )", "choosing": "( ( DS * RMSe ) + MLU )", "obj1": 0.6773547094188377, "obj2": 0.24164791475888098}, {"determining": "Min( Min( Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( ( RCSe * CS ),( RMSe - MUM ) ) / ( ( RCSe * MLU ) - Min( MUM ,RRSe ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6392785571142284, "obj2": 0.25529566742630866}, {"determining": "Min( Min( DDR ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( RRSe / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6513026052104208, "obj2": 0.25436283241520713}, {"determining": "( Min( PN ,DDR ) / ( AMS - FirstVNF_RAM ) )", "choosing": "( MUM - Min( RCSe ,MUC ) )", "obj1": 0.8637274549098196, "obj2": 0.11505426602405755}, {"determining": "Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU + ( FirstVNF_RAM + AMS ) ) )", "choosing": "( ( RCSe * DS ) + Min( ( DS + CS ) ,DS ) )", "obj1": 0.6913827655310621, "obj2": 0.21208521447063244}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( Min( ( CRS - ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,RCSe ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.9939879759519038, "obj2": 0.006794936819028679}, {"determining": "Min( Max( ( ARS * FirstVNF_Mem ),FirstVNF_RAM ) ,Max( Min( ( Max( RRS,DDR ) / Max( FirstVNF_RAM_Server,CRS ) ) ,( ( PN * FirstVNF_RAM_Server ) / Max( ACS,Const ) ) ),( ( Min( PN ,PN ) + Max( RRS,CRS ) ) / ( ( PN + MRS ) * ( CRS * AMS ) ) ) ) )", "choosing": "( ( DS + ( MUM / ( ( RCSe - MUC ) - RMSe ) ) ) / ( MLU / CS ) )", "obj1": 0.6833667334669339, "obj2": 0.22972114219936632}, {"determining": "Min( ( RRS * BR ) ,( FirstVNF_CPU + Min( ( ( AMS / FirstVNF_Mem_Server ) - MDR ) ,DDR ) ) )", "choosing": "( ( RCSe * DS ) + Min( ( MUM - Min( RCSe ,( MLU * Max( MUR,RMSe ) ) ) ) ,( ( ( MUR * Max( MUR,Max( MUM,Max( DS,MUM ) ) ) ) - ( MLU * ( ( RMSe * MUC ) - DS ) ) ) - ( MUR * MLU ) ) ) )", "obj1": 0.685370741482966, "obj2": 0.22234114992475715}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( Min( MUC ,CS ),( MUC - ( RRSe - ( RCSe + RRSe ) ) ) ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.9939879759519038, "obj2": 0.006794936819028679}, {"determining": "Min( ( ( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - BR ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / RRSe ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 0.6492985971943888, "obj2": 0.255181846309497}, {"determining": "Min( ( ( MDR + ACS ) * ( MDR - ARS ) ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002244934190539509}, {"determining": "( ( Max( Max( ( BR / Min( MRS ,FirstVNF_RAM ) ),( Const - CRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),Min( RMSe ,DS ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( Min( ( MRS - ( ( MDR / ACS ) + MDR ) ) ,FirstVNF_RAM ),AMS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,( RMSe * Min( MUM ,MLU ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( CRS * MDR ) / ACS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / Min( DS ,RRSe ) ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - Max( FirstVNF_Mem,DDR ) )", "choosing": "( ( RMSe / RMSe ) + Min( ( RCSe + CS ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( ( DDR / ( Max( ( DDR - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * AMS ) ) + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( ( MLU + Max( ( CS * MUC ),RCSe ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( Min( Max( CRS,DDR ) ,( ( AMS - Const ) * ( FirstVNF_CPU * AMS ) ) ) - Min( Const ,Const ) ) )", "choosing": "( RMSe * Min( ( ( Min( ( MUR + ( ( MLU * DS ) - Max( DS,MUM ) ) ) ,( DS / ( Max( MLU,CS ) * ( MLU / RRSe ) ) ) ) + CS ) + ( ( MUM / RMSe ) / RMSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ARS ) - Min( CRS ,AMS ) )", "choosing": "( ( MUM - MUM ) + ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( AMS,DDR ) ) / ( ( RRS - FirstVNF_RAM ) / ( MRS / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( RRSe * MUR ) ,Min( ( RRSe / DS ) ,Max( MUR,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( ( DS * MUC ) ,( DS + MLU ) ) ,( ( RRSe + MLU ) - ( DS * MUM ) ) ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) + Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( Min( ( DS * MUC ) ,( DS + MLU ) ) ,( RCSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( RCSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS + Const ) ,( FirstVNF_CPU_Server - BR ) ) * Min( ( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ,( PN / FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( Max( ( RMSe + CS ),( CS * MUC ) ) + MLU ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / ( ( MUR + MLU ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR * ( ( Max( CRS,ARS ) * ( AMS - FirstVNF_CPU_Server ) ) + BR ) ) / FirstVNF_CPU ) * FirstVNF_RAM_Server ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "Max( ( MLU / ( RMSe - MUM ) ),Min( ( MLU - MLU ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) ) ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( RRSe / MUR ) ) ,( ( MUM / RRSe ) * Max( ( RRSe * RMSe ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) ) ,( ( ( BR / MRS ) * MDR ) + ARS ) )", "choosing": "Max( Min( Max( ( RCSe * RRSe ),( RRSe / MUM ) ) ,( ( MUR * CS ) / Min( MUR ,RMSe ) ) ),( Min( ( RCSe / CS ) ,( RCSe + MUC ) ) + ( ( MUM * MUC ) + Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( DDR,PN ) / ( ARS * FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( MUM / RCSe ) - RCSe ) / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( Min( ( MRS - ( ( MDR / ACS ) + MDR ) ) ,FirstVNF_RAM ),AMS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,( RMSe * Min( MUM ,MLU ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + ( ( Min( ( FirstVNF_CPU_Server * BR ) ,Max( BR,MDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / MUC ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR + MDR ) + ( RRS - FirstVNF_Mem ) ) + Min( ( ACS / FirstVNF_Mem ) ,( FirstVNF_Mem - RRS ) ) ) * ( Min( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,BR ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUM * RRSe ) - Max( Min( ( DS / MUC ) ,( DS - MLU ) ),( ( MUM - MUM ) / MUM ) ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( Max( BR,MDR ) ,CRS ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( Min( MLU ,( MUR - MUM ) ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( MUR,( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,( BR - FirstVNF_Mem_Server ) ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,( MUR / CS ) ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * Max( ( RCSe / MUC ),( RRSe - RMSe ) ) ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Const + RRS ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),( RCSe * ( CS + RCSe ) ) ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( DS + ( MUM / ( MUR - RMSe ) ) ) / ( MLU / CS ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( ACS,MRS ) ) ) )", "choosing": "Max( ( MUM * ( DS + ( MUM / ( MUR - RMSe ) ) ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( Min( PN ,PN ) + Max( RRS,CRS ) ) * ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) )", "choosing": "( MUM + ( Min( MUC ,RMSe ) / ( ( ( RCSe * RCSe ) + ( MUR / MUR ) ) - Max( ( RCSe - MUC ),( MLU - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( Const - FirstVNF_CPU ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( ( ( CS - MUC ) / Min( RMSe ,MLU ) ) * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * FirstVNF_RAM ),FirstVNF_RAM_Server ) + ( Const / RRS ) )", "choosing": "Min( MUR ,( DS + MUC ) )", "obj1": 0.6192384769539078, "obj2": 0.2734107311782709}, {"determining": "Max( ( ( FirstVNF_RAM / ( MDR * FirstVNF_RAM_Server ) ) * DDR ),( Const - CRS ) )", "choosing": "( ( MUR + DS ) / Min( Min( MUR ,MUM ) ,Min( ( ( ( CS - DS ) / RCSe ) - ( MUM * ( CS + RRSe ) ) ) ,RMSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.20920630284718206}, {"determining": "( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) ) / Min( Min( Max( FirstVNF_Mem,CRS ) ,Max( FirstVNF_Mem_Server,ARS ) ) ,( ( BR / BR ) - ( DDR + PN ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - ( DS * DS ) ) / ( Max( RRSe,DS ) - ( MUR * RCSe ) ) ) / Min( ( ( MUM / MUM ) + Min( MUR ,MUC ) ) ,( ( MUM * MUR ) + ( CS + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.7474949899799599, "obj2": 0.14422633340611932}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( ( ( Min( FirstVNF_RAM ,BR ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( ACS / FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM - ( DDR + DDR ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUR ),( RCSe / RMSe ) ) ) + ( Min( ( RCSe + RMSe ) ,( MLU - ( RRSe + DS ) ) ) / DS ) )", "obj1": 0.9599198396793587, "obj2": 0.01933790056298824}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 0.8777555110220441, "obj2": 0.08241133126442314}, {"determining": "( ( ( ( MDR * ( ( Max( CRS,ARS ) * FirstVNF_Mem ) + BR ) ) / FirstVNF_CPU ) * FirstVNF_RAM_Server ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "Max( ( ( MUM - MUR ) / Max( RMSe,RMSe ) ),Min( ( MLU - MLU ) ,DS ) )", "obj1": 0.9258517034068137, "obj2": 0.0675649253002923}, {"determining": "Min( Max( ( ARS * FirstVNF_Mem ),FirstVNF_RAM ) ,( FirstVNF_Mem + Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) ) ) )", "choosing": "( ( DS + ( MUM / ( MUR - ( MUM + MLU ) ) ) ) / ( MLU / CS ) )", "obj1": 0.8977955911823647, "obj2": 0.06911930163198471}, {"determining": "( ( AMS / BR ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( ( ( MLU * RMSe ) + RRSe ) * RMSe ) + RRSe )", "obj1": 0.9498997995991983, "obj2": 0.05319606155920293}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( ( ARS * FirstVNF_Mem_Server ) / ARS ) )", "choosing": "( Min( MLU ,DS ) / Max( RRSe,RCSe ) )", "obj1": 0.8697394789579158, "obj2": 0.10765923688273486}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) * FirstVNF_CPU_Server ) + ( DDR + PN ) )", "choosing": "( ( DS * RMSe ) + ( ( MLU - MUC ) + ( DS + CS ) ) )", "obj1": 0.9799599198396793, "obj2": 0.009795407663273666}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe * MUM ) * Min( ( ( RCSe * DS ) + Min( RRSe ,DS ) ) ,DS ) )", "obj1": 0.6653306613226453, "obj2": 0.228444802800824}, {"determining": "Max( ( BR / Min( MRS ,( ( Max( PN,( FirstVNF_RAM / DDR ) ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) ),( Const - CRS ) )", "choosing": "( ( ( MUR + MUC ) * ( Max( ( MLU - DS ),Max( CS,MUM ) ) / Max( Max( MUC,MLU ),Max( MUM,DS ) ) ) ) / Min( Min( MUR ,MUM ) ,RMSe ) )", "obj1": 0.6633266533066132, "obj2": 0.24745804848508127}, {"determining": "( Min( PN ,DDR ) / ( AMS - FirstVNF_RAM ) )", "choosing": "( MUM - Min( RCSe ,MUC ) )", "obj1": 0.8637274549098196, "obj2": 0.11505426602405755}, {"determining": "Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU + ( FirstVNF_RAM + AMS ) ) )", "choosing": "( ( RCSe * DS ) + Min( ( DS + CS ) ,DS ) )", "obj1": 0.6913827655310621, "obj2": 0.21208521447063244}, {"determining": "( ( BR - ( FirstVNF_CPU - ( FirstVNF_RAM + DDR ) ) ) + ( AMS / ARS ) )", "choosing": "( ( Min( ( ( MUM - MLU ) - CS ) ,MLU ) * CS ) / Max( ( RCSe * DS ),RCSe ) )", "obj1": 0.6452905811623246, "obj2": 0.24873701377697527}, {"determining": "Min( Min( Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( ( RCSe * CS ),( RMSe - MUM ) ) / ( ( RCSe * MLU ) - Min( MUM ,RRSe ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6392785571142284, "obj2": 0.25529566742630866}, {"determining": "Min( ( RRS * BR ) ,( FirstVNF_CPU + Min( ( ( AMS / FirstVNF_Mem_Server ) - MDR ) ,DDR ) ) )", "choosing": "( ( RCSe * DS ) + Min( ( MUM - Min( RCSe ,( MLU * Max( MUR,RMSe ) ) ) ) ,( ( ( MUR * Max( MUR,Max( MUM,Max( DS,MUM ) ) ) ) - ( MLU * ( ( RMSe * MUC ) - DS ) ) ) - ( MUR * MLU ) ) ) )", "obj1": 0.685370741482966, "obj2": 0.22234114992475715}, {"determining": "Max( Min( DDR ,RRS ),( Const - CRS ) )", "choosing": "( ( ( MUR + MUC ) * DS ) / Min( Min( MUR ,MUM ) ,RMSe ) )", "obj1": 0.6773547094188377, "obj2": 0.22265685361984866}, {"determining": "( ( AMS / BR ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + RRSe )", "obj1": 0.9478957915831663, "obj2": 0.054918397527513006}, {"determining": "Min( CRS ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( RRSe / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MUR ) ) )", "obj1": 0.6312625250501002, "obj2": 0.266394096882181}, {"determining": "( ( FirstVNF_RAM_Server / ( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) ) ) + ( DDR + PN ) )", "choosing": "( RRSe + MLU )", "obj1": 0.6332665330661322, "obj2": 0.2612537972248114}, {"determining": "( ( Min( ACS ,Max( BR,MDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUC / CS ) ) / Min( ( Max( RRSe,MUR ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.6212424849699398, "obj2": 0.2695482371964865}, {"determining": "( ( AMS / BR ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + RRSe )", "obj1": 0.9478957915831663, "obj2": 0.054918397527513006}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( Min( ( CRS - ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,RCSe ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.9939879759519038, "obj2": 0.006794936819028679}, {"determining": "Min( ( ( MDR + ACS ) * ( MDR - ARS ) ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002244934190539509}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( Min( MUC ,CS ),( MUC - ( RRSe - ( RCSe + RRSe ) ) ) ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.9939879759519038, "obj2": 0.006794936819028679}, {"determining": "( ( Max( Max( ( BR / Min( MRS ,FirstVNF_RAM ) ),( Const - CRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),Min( RMSe ,DS ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( Min( ( MRS - ( ( MDR / ACS ) + MDR ) ) ,FirstVNF_RAM ),AMS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,( RMSe * Min( MUM ,MLU ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( CRS * MDR ) / ACS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / Min( DS ,RRSe ) ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - Max( FirstVNF_Mem,DDR ) )", "choosing": "( ( RMSe / RMSe ) + Min( ( RCSe + CS ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( ( DDR / ( Max( ( DDR - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * AMS ) ) + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( ( MLU + Max( ( CS * MUC ),RCSe ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( Min( Max( CRS,DDR ) ,( ( AMS - Const ) * ( FirstVNF_CPU * AMS ) ) ) - Min( Const ,Const ) ) )", "choosing": "( RMSe * Min( ( ( Min( ( MUR + ( ( MLU * DS ) - Max( DS,MUM ) ) ) ,( DS / ( Max( MLU,CS ) * ( MLU / RRSe ) ) ) ) + CS ) + ( ( MUM / RMSe ) / RMSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ARS ) - Min( CRS ,AMS ) )", "choosing": "( ( MUM - MUM ) + ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( AMS,DDR ) ) / ( ( RRS - FirstVNF_RAM ) / ( MRS / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( RRSe * MUR ) ,Min( ( RRSe / DS ) ,Max( MUR,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( ( DS * MUC ) ,( DS + MLU ) ) ,( ( RRSe + MLU ) - ( DS * MUM ) ) ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) + Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( Min( ( DS * MUC ) ,( DS + MLU ) ) ,( RCSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( RCSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS + Const ) ,( FirstVNF_CPU_Server - BR ) ) * Min( ( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ,( PN / FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( Max( ( RMSe + CS ),( CS * MUC ) ) + MLU ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / ( ( MUR + MLU ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR * ( ( Max( CRS,ARS ) * ( AMS - FirstVNF_CPU_Server ) ) + BR ) ) / FirstVNF_CPU ) * FirstVNF_RAM_Server ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "Max( ( MLU / ( RMSe - MUM ) ),Min( ( MLU - MLU ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) ) ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( RRSe / MUR ) ) ,( ( MUM / RRSe ) * Max( ( RRSe * RMSe ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) ) ,( ( ( BR / MRS ) * MDR ) + ARS ) )", "choosing": "Max( Min( Max( ( RCSe * RRSe ),( RRSe / MUM ) ) ,( ( MUR * CS ) / Min( MUR ,RMSe ) ) ),( Min( ( RCSe / CS ) ,( RCSe + MUC ) ) + ( ( MUM * MUC ) + Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( DDR,PN ) / ( ARS * FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( MUM / RCSe ) - RCSe ) / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( Min( ( MRS - ( ( MDR / ACS ) + MDR ) ) ,FirstVNF_RAM ),AMS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,( RMSe * Min( MUM ,MLU ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + ( ( Min( ( FirstVNF_CPU_Server * BR ) ,Max( BR,MDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / MUC ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR + MDR ) + ( RRS - FirstVNF_Mem ) ) + Min( ( ACS / FirstVNF_Mem ) ,( FirstVNF_Mem - RRS ) ) ) * ( Min( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,BR ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUM * RRSe ) - Max( Min( ( DS / MUC ) ,( DS - MLU ) ),( ( MUM - MUM ) / MUM ) ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( Max( BR,MDR ) ,CRS ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( Min( MLU ,( MUR - MUM ) ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( MUR,( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,( BR - FirstVNF_Mem_Server ) ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,( MUR / CS ) ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * Max( ( RCSe / MUC ),( RRSe - RMSe ) ) ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Const + RRS ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),( RCSe * ( CS + RCSe ) ) ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( DS + ( MUM / ( MUR - RMSe ) ) ) / ( MLU / CS ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( ACS,MRS ) ) ) )", "choosing": "Max( ( MUM * ( DS + ( MUM / ( MUR - RMSe ) ) ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - DDR ) - FirstVNF_CPU_Server ) + Const ) * Min( RRS ,FirstVNF_RAM ) )", "choosing": "Min( ( Min( MLU ,( ( MLU * DS ) - ( ( ( Min( RRSe ,MUM ) + MLU ) * DS ) * ( ( Max( MUC,RRSe ) - RMSe ) * ( MUR * ( RMSe - RCSe ) ) ) ) ) ) - RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,MRS ) * RRS ) + AMS ) - Max( FirstVNF_Mem,AMS ) )", "choosing": "( ( MLU * Min( RMSe ,MLU ) ) + ( ( RRSe / RRSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( DS + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_CPU_Server ) + ( DDR + PN ) ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + DDR ) ) - ( MRS + PN ) )", "choosing": "Max( Min( RRSe ,CS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( ( FirstVNF_Mem_Server - CRS ) / MRS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( Max( MLU,( Min( ( MLU * RRSe ) ,Min( DS ,CS ) ) * MLU ) ) - MUM ) + ( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( ( FirstVNF_Mem_Server - PN ) / MRS ) )", "choosing": "( ( MLU * ( Max( MLU,( Min( RCSe ,Min( DS ,CS ) ) * MLU ) ) - MUM ) ) + Min( ( RCSe + CS ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - BR ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) )", "choosing": "Max( Min( RRSe ,( ( MLU * RMSe ) + ( MLU - Min( Min( RRSe ,DS ) ,Max( DS,RRSe ) ) ) ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem_Server - ( MDR * ( ( PN - Max( DDR,FirstVNF_RAM_Server ) ) - BR ) ) ) / MRS ) )", "choosing": "( ( Min( ( RCSe + CS ) ,( MLU * RRSe ) ) * RMSe ) + Min( ( RCSe + CS ) ,( Min( RRSe ,DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) )", "choosing": "( ( MLU * RMSe ) + Min( ( RCSe + CS ) ,( MLU * Min( ( RCSe + CS ) ,( MLU * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + AMS ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) )", "choosing": "( ( MLU * RMSe ) + Min( ( RCSe + CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / ( AMS - ( MDR / BR ) ) )", "choosing": "( ( ( DS + CS ) / RCSe ) - Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) - ( FirstVNF_RAM / BR ) )", "choosing": "( DS + ( DS + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS - ( MDR / BR ) )", "choosing": "( ( RRSe / RCSe ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( ( DDR / ( Max( ( DDR - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * AMS ) ) + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( ( MLU + Max( ( CS * MUC ),RCSe ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( ( DDR / ( Max( ( DDR - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * AMS ) ) + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( ( MLU + Max( ( CS * MUC ),RCSe ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,( Max( FirstVNF_CPU,MRS ) - ( MDR + RRS ) ) ) - ( MDR + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( Min( MUR ,Max( MLU,DS ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( BR - ( MDR + RRS ) ) )", "choosing": "( Max( ( Max( Min( MUR ,MUC ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) * Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( MDR + RRS ) ) - FirstVNF_Mem_Server )", "choosing": "( DS + ( Max( ( Min( MLU ,DS ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUM - MUM ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( ( MDR - ARS ) - Min( CRS ,AMS ) ) )", "choosing": "( RMSe * Min( ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ARS ) - Min( CRS ,( ARS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM - MUM ) + ( ( ( RMSe * Min( MLU ,DS ) ) * CS ) / Max( RRSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * CRS ) ,( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) * Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + PN ) - ARS ) - Min( CRS ,AMS ) )", "choosing": "( ( MUM - MUM ) + ( ( RMSe * CS ) / Max( RRSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,RRS ) ) ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - ARS ) / Const ) ,( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( Min( MUC ,MLU ) ,CS ) / RRSe ) * ( ( RMSe / RCSe ) * DS ) ) * ( RMSe / MLU ) ) + ( MLU / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - ARS ) / Const ) ,( Min( AMS ,DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( Min( MUC ,( RRSe / DS ) ) ,CS ) / RRSe ) * ( ( RMSe / RCSe ) * DS ) ) * ( RMSe / MLU ) ) + ( MLU / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_RAM - ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - ( RRSe + DS ) ) - ( MUR - Min( Min( ( DS * MUC ) ,( DS + MLU ) ) ,( ( MUR - Min( CS ,RCSe ) ) - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( ( Min( ( ( MRS - ARS ) / Const ) ,( BR + FirstVNF_Mem_Server ) ) - ARS ) / Const ) ,( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( Min( MUC ,MLU ) ,CS ) / RRSe ) * ( ( RMSe / RCSe ) * ( ( RMSe / RCSe ) * DS ) ) ) * ( RMSe / MLU ) ) + ( MLU / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,PN ) + Max( RRS,CRS ) ) * ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) )", "choosing": "( MUM + ( Min( MUC ,RMSe ) / ( ( ( RCSe * RCSe ) + ( MUR / MUR ) ) - Max( ( RCSe - MUC ),( MLU - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server * BR ) ,( FirstVNF_Mem / RRS ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( PN * FirstVNF_Mem_Server ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( ( RCSe - MUC ) + Max( ( DS - ( RRSe / RRSe ) ),( CS - DS ) ) ) * MUR ) / Min( ( Max( RRSe,MUR ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.6152304609218436, "obj2": 0.2713057612924074}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( Max( ( FirstVNF_CPU_Server + PN ),MDR ) ,Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_RAM ) ) + ( ( ARS * Max( FirstVNF_Mem_Server,RRS ) ) + MRS ) ) ) - ( MRS + PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,( RRSe * Min( MUM ,Max( Max( ( RMSe + RMSe ),Max( MLU,MUM ) ),MLU ) ) ) ) ),MUM )", "obj1": 0.7274549098196392, "obj2": 0.15931398344957265}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Max( ( ( FirstVNF_RAM / ( MDR * FirstVNF_RAM_Server ) ) * DDR ),( Const - CRS ) )", "choosing": "( ( MUR + DS ) / Min( Min( MUR ,MUM ) ,Min( ( ( ( CS - DS ) / RCSe ) - ( MUM * ( CS + RRSe ) ) ) ,RMSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.20920630284718206}, {"determining": "( ( ( Min( FirstVNF_RAM ,BR ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( ACS / FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM - ( DDR + DDR ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUR ),( RCSe / RMSe ) ) ) + ( Min( ( RCSe + RMSe ) ,( MLU - ( RRSe + DS ) ) ) / DS ) )", "obj1": 0.9599198396793587, "obj2": 0.01933790056298824}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 0.8777555110220441, "obj2": 0.08241133126442314}, {"determining": "( ( ( ( MDR * ( ( Max( CRS,ARS ) * FirstVNF_Mem ) + BR ) ) / FirstVNF_CPU ) * FirstVNF_RAM_Server ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "Max( ( ( MUM - MUR ) / Max( RMSe,RMSe ) ),Min( ( MLU - MLU ) ,DS ) )", "obj1": 0.9258517034068137, "obj2": 0.0675649253002923}, {"determining": "Min( Max( ( ARS * FirstVNF_Mem ),FirstVNF_RAM ) ,( FirstVNF_Mem + Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) ) ) )", "choosing": "( ( DS + ( MUM / ( MUR - ( MUM + MLU ) ) ) ) / ( MLU / CS ) )", "obj1": 0.8977955911823647, "obj2": 0.06911930163198471}, {"determining": "( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) ) / Min( Min( Max( FirstVNF_Mem,CRS ) ,Max( FirstVNF_Mem_Server,ARS ) ) ,( ( BR / BR ) - ( DDR + PN ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - ( DS * DS ) ) / ( Max( RRSe,DS ) - ( MUR * RCSe ) ) ) / Min( ( ( MUM / MUM ) + Min( MUR ,MUC ) ) ,( ( MUM * MUR ) + ( CS + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.7474949899799599, "obj2": 0.14422633340611932}, {"determining": "( ( AMS / BR ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( ( ( MLU * RMSe ) + RRSe ) * RMSe ) + RRSe )", "obj1": 0.9498997995991983, "obj2": 0.05319606155920293}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( ( ARS * FirstVNF_Mem_Server ) / ARS ) )", "choosing": "( Min( MLU ,DS ) / Max( RRSe,RCSe ) )", "obj1": 0.8697394789579158, "obj2": 0.10765923688273486}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) * FirstVNF_CPU_Server ) + ( DDR + PN ) )", "choosing": "( ( DS * RMSe ) + ( ( MLU - MUC ) + ( DS + CS ) ) )", "obj1": 0.9799599198396793, "obj2": 0.009795407663273666}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe * MUM ) * Min( ( ( RCSe * DS ) + Min( RRSe ,DS ) ) ,DS ) )", "obj1": 0.6653306613226453, "obj2": 0.228444802800824}, {"determining": "Max( ( BR / Min( MRS ,( ( Max( PN,( FirstVNF_RAM / DDR ) ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) ),( Const - CRS ) )", "choosing": "( ( ( MUR + MUC ) * ( Max( ( MLU - DS ),Max( CS,MUM ) ) / Max( Max( MUC,MLU ),Max( MUM,DS ) ) ) ) / Min( Min( MUR ,MUM ) ,RMSe ) )", "obj1": 0.6633266533066132, "obj2": 0.24745804848508127}, {"determining": "( Min( PN ,DDR ) / ( AMS - FirstVNF_RAM ) )", "choosing": "( MUM - Min( RCSe ,MUC ) )", "obj1": 0.8637274549098196, "obj2": 0.11505426602405755}, {"determining": "Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU + ( FirstVNF_RAM + AMS ) ) )", "choosing": "( ( RCSe * DS ) + Min( ( DS + CS ) ,DS ) )", "obj1": 0.6913827655310621, "obj2": 0.21208521447063244}, {"determining": "( ( BR - ( FirstVNF_CPU - ( FirstVNF_RAM + DDR ) ) ) + ( AMS / ARS ) )", "choosing": "( ( Min( ( ( MUM - MLU ) - CS ) ,MLU ) * CS ) / Max( ( RCSe * DS ),RCSe ) )", "obj1": 0.6452905811623246, "obj2": 0.24873701377697527}, {"determining": "Min( Min( Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( ( RCSe * CS ),( RMSe - MUM ) ) / ( ( RCSe * MLU ) - Min( MUM ,RRSe ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6392785571142284, "obj2": 0.25529566742630866}, {"determining": "Min( ( RRS * BR ) ,( FirstVNF_CPU + Min( ( ( AMS / FirstVNF_Mem_Server ) - MDR ) ,DDR ) ) )", "choosing": "( ( RCSe * DS ) + Min( ( MUM - Min( RCSe ,( MLU * Max( MUR,RMSe ) ) ) ) ,( ( ( MUR * Max( MUR,Max( MUM,Max( DS,MUM ) ) ) ) - ( MLU * ( ( RMSe * MUC ) - DS ) ) ) - ( MUR * MLU ) ) ) )", "obj1": 0.685370741482966, "obj2": 0.22234114992475715}, {"determining": "Max( Min( DDR ,RRS ),( Const - CRS ) )", "choosing": "( ( ( MUR + MUC ) * DS ) / Min( Min( MUR ,MUM ) ,RMSe ) )", "obj1": 0.6773547094188377, "obj2": 0.22265685361984866}, {"determining": "( ( AMS / BR ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + RRSe )", "obj1": 0.9478957915831663, "obj2": 0.054918397527513006}, {"determining": "( ( FirstVNF_RAM_Server / ( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) ) ) + ( DDR + PN ) )", "choosing": "( RRSe + MLU )", "obj1": 0.6332665330661322, "obj2": 0.2612537972248114}, {"determining": "( ( AMS / BR ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + RRSe )", "obj1": 0.9478957915831663, "obj2": 0.054918397527513006}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( Min( ( CRS - ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,RCSe ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.9939879759519038, "obj2": 0.006794936819028679}, {"determining": "( ( FirstVNF_RAM * ( ( RRS * AMS ) * ( FirstVNF_CPU / Const ) ) ) + Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) )", "choosing": "( ( RRSe - RMSe ) - ( DS - ( RCSe - RMSe ) ) )", "obj1": 0.627254509018036, "obj2": 0.2624816897897612}, {"determining": "( ( Max( ARS,Min( CRS ,FirstVNF_Mem_Server ) ) / RRS ) - Min( CRS ,AMS ) )", "choosing": "( ( Max( MLU,( Min( Max( MLU,CS ) ,Min( DS ,( ( DS + RRSe ) / MUR ) ) ) * MLU ) ) - MUM ) + ( RRSe - MLU ) )", "obj1": 0.6232464929859719, "obj2": 0.266582690395257}, {"determining": "( ( Min( ACS ,Max( BR,MDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUC / CS ) ) / Min( ( Max( RRSe,MUR ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.6212424849699398, "obj2": 0.2695482371964865}, {"determining": "( ( ( ( BR / ACS ) * Min( FirstVNF_Mem ,DDR ) ) - ( MDR + RRS ) ) - ( MDR / ( ( Max( FirstVNF_CPU,MRS ) - ( MDR + RRS ) ) - ( MDR / BR ) ) ) )", "choosing": "( DS + ( Max( ( ( MUC / ( DS - Max( MLU,DS ) ) ) / RCSe ),( MUC / ( DS - Max( MLU,( Min( DS ,MUC ) * ( MUR * DS ) ) ) ) ) ) + CS ) )", "obj1": 0.9979959919839679, "obj2": 0.0009446277924015417}, {"determining": "( ( Max( Max( ( BR / Min( MRS ,FirstVNF_RAM ) ),( Const - CRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),Min( RMSe ,DS ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( Min( MUC ,CS ),( MUC - ( RRSe - ( RCSe + RRSe ) ) ) ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.9939879759519038, "obj2": 0.006794936819028679}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "Min( ( CRS - ARS ) ,Max( ( Const - FirstVNF_CPU ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( ( ( CS - MUC ) / Min( RMSe ,MLU ) ) * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( Min( ( MRS - ( ( MDR / ACS ) + MDR ) ) ,FirstVNF_RAM ),AMS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,( RMSe * Min( MUM ,MLU ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( CRS * MDR ) / ACS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / Min( DS ,RRSe ) ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - Max( FirstVNF_Mem,DDR ) )", "choosing": "( ( RMSe / RMSe ) + Min( ( RCSe + CS ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( ( DDR / ( Max( ( DDR - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * AMS ) ) + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( ( MLU + Max( ( CS * MUC ),RCSe ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( Min( Max( CRS,DDR ) ,( ( AMS - Const ) * ( FirstVNF_CPU * AMS ) ) ) - Min( Const ,Const ) ) )", "choosing": "( RMSe * Min( ( ( Min( ( MUR + ( ( MLU * DS ) - Max( DS,MUM ) ) ) ,( DS / ( Max( MLU,CS ) * ( MLU / RRSe ) ) ) ) + CS ) + ( ( MUM / RMSe ) / RMSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ARS ) - Min( CRS ,AMS ) )", "choosing": "( ( MUM - MUM ) + ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( AMS,DDR ) ) / ( ( RRS - FirstVNF_RAM ) / ( MRS / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( RRSe * MUR ) ,Min( ( RRSe / DS ) ,Max( MUR,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( ( DS * MUC ) ,( DS + MLU ) ) ,( ( RRSe + MLU ) - ( DS * MUM ) ) ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) + Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( Min( ( DS * MUC ) ,( DS + MLU ) ) ,( RCSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( RCSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS + Const ) ,( FirstVNF_CPU_Server - BR ) ) * Min( ( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ,( PN / FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( Max( ( RMSe + CS ),( CS * MUC ) ) + MLU ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / ( ( MUR + MLU ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR * ( ( Max( CRS,ARS ) * ( AMS - FirstVNF_CPU_Server ) ) + BR ) ) / FirstVNF_CPU ) * FirstVNF_RAM_Server ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "Max( ( MLU / ( RMSe - MUM ) ),Min( ( MLU - MLU ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) ) ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( RRSe / MUR ) ) ,( ( MUM / RRSe ) * Max( ( RRSe * RMSe ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) ) ,( ( ( BR / MRS ) * MDR ) + ARS ) )", "choosing": "Max( Min( Max( ( RCSe * RRSe ),( RRSe / MUM ) ) ,( ( MUR * CS ) / Min( MUR ,RMSe ) ) ),( Min( ( RCSe / CS ) ,( RCSe + MUC ) ) + ( ( MUM * MUC ) + Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( DDR,PN ) / ( ARS * FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( MUM / RCSe ) - RCSe ) / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( Min( ( MRS - ( ( MDR / ACS ) + MDR ) ) ,FirstVNF_RAM ),AMS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,( RMSe * Min( MUM ,MLU ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + ( ( Min( ( FirstVNF_CPU_Server * BR ) ,Max( BR,MDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / MUC ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR + MDR ) + ( RRS - FirstVNF_Mem ) ) + Min( ( ACS / FirstVNF_Mem ) ,( FirstVNF_Mem - RRS ) ) ) * ( Min( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,BR ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUM * RRSe ) - Max( Min( ( DS / MUC ) ,( DS - MLU ) ),( ( MUM - MUM ) / MUM ) ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( Max( BR,MDR ) ,CRS ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( Min( MLU ,( MUR - MUM ) ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( MUR,( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,( BR - FirstVNF_Mem_Server ) ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,( MUR / CS ) ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * Max( ( RCSe / MUC ),( RRSe - RMSe ) ) ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Const + RRS ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),( RCSe * ( CS + RCSe ) ) ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( DS + ( MUM / ( MUR - RMSe ) ) ) / ( MLU / CS ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( ACS,MRS ) ) ) )", "choosing": "Max( ( MUM * ( DS + ( MUM / ( MUR - RMSe ) ) ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - DDR ) - FirstVNF_CPU_Server ) + Const ) * Min( RRS ,FirstVNF_RAM ) )", "choosing": "Min( ( Min( MLU ,( ( MLU * DS ) - ( ( ( Min( RRSe ,MUM ) + MLU ) * DS ) * ( ( Max( MUC,RRSe ) - RMSe ) * ( MUR * ( RMSe - RCSe ) ) ) ) ) ) - RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,MRS ) * RRS ) + AMS ) - Max( FirstVNF_Mem,AMS ) )", "choosing": "( ( MLU * Min( RMSe ,MLU ) ) + ( ( RRSe / RRSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( DS + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_CPU_Server ) + ( DDR + PN ) ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + DDR ) ) - ( MRS + PN ) )", "choosing": "Max( Min( RRSe ,CS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( ( FirstVNF_Mem_Server - CRS ) / MRS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( Max( MLU,( Min( ( MLU * RRSe ) ,Min( DS ,CS ) ) * MLU ) ) - MUM ) + ( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( ( FirstVNF_Mem_Server - PN ) / MRS ) )", "choosing": "( ( MLU * ( Max( MLU,( Min( RCSe ,Min( DS ,CS ) ) * MLU ) ) - MUM ) ) + Min( ( RCSe + CS ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - BR ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) )", "choosing": "Max( Min( RRSe ,( ( MLU * RMSe ) + ( MLU - Min( Min( RRSe ,DS ) ,Max( DS,RRSe ) ) ) ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem_Server - ( MDR * ( ( PN - Max( DDR,FirstVNF_RAM_Server ) ) - BR ) ) ) / MRS ) )", "choosing": "( ( Min( ( RCSe + CS ) ,( MLU * RRSe ) ) * RMSe ) + Min( ( RCSe + CS ) ,( Min( RRSe ,DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) )", "choosing": "( ( MLU * RMSe ) + Min( ( RCSe + CS ) ,( MLU * Min( ( RCSe + CS ) ,( MLU * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + AMS ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) )", "choosing": "( ( MLU * RMSe ) + Min( ( RCSe + CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / ( AMS - ( MDR / BR ) ) )", "choosing": "( ( ( DS + CS ) / RCSe ) - Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) - ( FirstVNF_RAM / BR ) )", "choosing": "( DS + ( DS + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS - ( MDR / BR ) )", "choosing": "( ( RRSe / RCSe ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( ( DDR / ( Max( ( DDR - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * AMS ) ) + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( ( MLU + Max( ( CS * MUC ),RCSe ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( ( DDR / ( Max( ( DDR - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * AMS ) ) + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( ( MLU + Max( ( CS * MUC ),RCSe ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,( Max( FirstVNF_CPU,MRS ) - ( MDR + RRS ) ) ) - ( MDR + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( Min( MUR ,Max( MLU,DS ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( BR - ( MDR + RRS ) ) )", "choosing": "( Max( ( Max( Min( MUR ,MUC ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) * Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( MDR + RRS ) ) - FirstVNF_Mem_Server )", "choosing": "( DS + ( Max( ( Min( MLU ,DS ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUM - MUM ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( ( MDR - ARS ) - Min( CRS ,AMS ) ) )", "choosing": "( RMSe * Min( ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ARS ) - Min( CRS ,( ARS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM - MUM ) + ( ( ( RMSe * Min( MLU ,DS ) ) * CS ) / Max( RRSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * CRS ) ,( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) * Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + PN ) - ARS ) - Min( CRS ,AMS ) )", "choosing": "( ( MUM - MUM ) + ( ( RMSe * CS ) / Max( RRSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,RRS ) ) ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - ARS ) / Const ) ,( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( Min( MUC ,MLU ) ,CS ) / RRSe ) * ( ( RMSe / RCSe ) * DS ) ) * ( RMSe / MLU ) ) + ( MLU / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - ARS ) / Const ) ,( Min( AMS ,DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( Min( MUC ,( RRSe / DS ) ) ,CS ) / RRSe ) * ( ( RMSe / RCSe ) * DS ) ) * ( RMSe / MLU ) ) + ( MLU / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_RAM - ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - ( RRSe + DS ) ) - ( MUR - Min( Min( ( DS * MUC ) ,( DS + MLU ) ) ,( ( MUR - Min( CS ,RCSe ) ) - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Const ) * Min( ( DDR * MRS ) ,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUM * Min( ( RCSe / MUR ) ,( ( Max( RCSe,MUM ) / RRSe ) / RMSe ) ) ) * ( RRSe * MUM ) ) - RRSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Const ) * ( ARS - ( ( ( FirstVNF_RAM + Const ) * ( ARS - CRS ) ) * ( ARS - CRS ) ) ) )", "choosing": "Min( ( Min( ( RRSe - RMSe ) ,RCSe ) - RMSe ) ,Min( ( RRSe - RMSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( Min( FirstVNF_Mem ,( ARS / PN ) ) + ( FirstVNF_CPU + Const ) ) * Min( ( MDR / MDR ) ,( MRS - Min( ( MRS + Const ) ,( FirstVNF_CPU_Server - BR ) ) ) ) )", "choosing": "( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + Max( ( Min( MUM ,( ( MUM / Min( RCSe ,MUR ) ) + MLU ) ) / MLU ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ( ( MRS - ARS ) / Const ) ,( BR + FirstVNF_Mem_Server ) ) - ARS ) / Const ) ,( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( Min( MUC ,MLU ) ,CS ) / RRSe ) * ( ( RMSe / RCSe ) * ( ( RMSe / RCSe ) * DS ) ) ) * ( RMSe / MLU ) ) + ( MLU / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( FirstVNF_RAM / ( MDR * FirstVNF_RAM_Server ) ) * DDR ),( Const - CRS ) ) + AMS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU * RMSe ) + ( CS + RRSe ) ) + ( CS + RCSe ) )", "obj1": 0.6092184368737475, "obj2": 0.282941796320721}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) + ( FirstVNF_RAM * ( Min( BR ,FirstVNF_Mem_Server ) - ( DDR + DDR ) ) ) )", "choosing": "( ( MLU - ( RRSe + RCSe ) ) - ( MUR - MUC ) )", "obj1": 0.8056112224448898, "obj2": 0.12007163906612431}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( Min( Max( CRS,DDR ) ,( ( AMS - Const ) * ( FirstVNF_CPU * AMS ) ) ) - Min( ( ( MDR - ARS ) - Min( CRS ,AMS ) ) ,Const ) ) )", "choosing": "( RMSe * Min( ( ( Min( ( MUR + ( ( MLU * DS ) - Max( DS,MUM ) ) ) ,( DS / ( Max( MLU,CS ) * ( MLU / RRSe ) ) ) ) + CS ) + ( ( MUM / RMSe ) / RMSe ) ) ,DS ) )", "obj1": 0.7114228456913828, "obj2": 0.17831898772536692}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU + ( FirstVNF_RAM + AMS ) ) )", "choosing": "( ( RCSe * DS ) + Min( ( DS + CS ) ,DS ) )", "obj1": 0.6913827655310621, "obj2": 0.21208521447063244}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( Min( Max( CRS,DDR ) ,( ( AMS - ( ( MDR - ARS ) - Min( CRS ,AMS ) ) ) * ( FirstVNF_CPU * AMS ) ) ) - Min( Const ,Const ) ) )", "choosing": "( RMSe * Min( ( ( Min( ( MUR + ( ( MLU * DS ) - Max( DS,MUM ) ) ) ,( DS / ( RMSe * CS ) ) ) + CS ) + ( ( MUM / RMSe ) / RMSe ) ) ,DS ) )", "obj1": 0.9418837675350702, "obj2": 0.04405487889750388}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( Max( ( FirstVNF_CPU_Server + PN ),MDR ) ,Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_RAM ) ) + ( ( ARS * Max( FirstVNF_Mem_Server,RRS ) ) + MRS ) ) ) - ( MRS + PN ) )", "choosing": "Max( Min( RRSe ,Max( RRSe,( RRSe * Min( MUM ,Max( Max( ( RMSe + RMSe ),Max( MLU,MUM ) ),MLU ) ) ) ) ),MUM )", "obj1": 0.7274549098196392, "obj2": 0.15931398344957265}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 0.8777555110220441, "obj2": 0.08241133126442314}, {"determining": "( Min( PN ,DDR ) / ( AMS - FirstVNF_RAM ) )", "choosing": "( MUM - Min( RCSe ,MUC ) )", "obj1": 0.8637274549098196, "obj2": 0.11505426602405755}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / ( ( PN + Min( MRS ,CRS ) ) + ( DDR + PN ) ) ) )", "choosing": "( ( MLU * RMSe ) + ( ( DS * RMSe ) + Max( MUR,( ( ( Min( ( MUM / MUR ) ,MUR ) - CS ) + Max( Max( ( MUC * MUR ),MUM ),( RRSe - CS ) ) ) / RRSe ) ) ) )", "obj1": 0.9198396793587175, "obj2": 0.062435147798362386}, {"determining": "Min( Max( ( ARS * FirstVNF_Mem ),FirstVNF_RAM ) ,( FirstVNF_Mem + Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) ) ) )", "choosing": "( ( DS + ( MUM / ( MUR - ( MUM + MLU ) ) ) ) / ( MLU / CS ) )", "obj1": 0.8977955911823647, "obj2": 0.06911930163198471}, {"determining": "( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) ) / Min( Min( Max( FirstVNF_Mem,CRS ) ,Max( FirstVNF_Mem_Server,ARS ) ) ,( ( BR / BR ) - ( DDR + PN ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - ( DS * DS ) ) / ( Max( RRSe,DS ) - ( MUR * RCSe ) ) ) / Min( ( ( MUM / MUM ) + Min( MUR ,MUC ) ) ,( ( MUM * MUR ) + ( CS + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.7474949899799599, "obj2": 0.14422633340611932}, {"determining": "Max( Min( ( FirstVNF_RAM_Server - MDR ) ,PN ),Min( ( MDR / MDR ) ,( MRS - Min( ( MRS + Const ) ,( FirstVNF_CPU_Server - BR ) ) ) ) )", "choosing": "( ( ( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) + ( MUM - DS ) ) - Max( ( MUM + Min( RMSe ,( RRSe + Min( ( ( DS + MUM ) - MLU ) ,( MLU - MUM ) ) ) ) ),( RCSe + DS ) ) )", "obj1": 0.6432865731462926, "obj2": 0.2286400173289189}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( ( ARS * FirstVNF_Mem_Server ) / ARS ) )", "choosing": "( Min( MLU ,DS ) / Max( RRSe,RCSe ) )", "obj1": 0.8697394789579158, "obj2": 0.10765923688273486}, {"determining": "Min( Min( Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( ( RCSe * CS ),( RMSe - MUM ) ) / ( ( RCSe * MLU ) - Min( MUM ,RRSe ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6392785571142284, "obj2": 0.25529566742630866}, {"determining": "( ( ( Min( FirstVNF_RAM ,BR ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( ACS / FirstVNF_CPU_Server ) ) ) * ( Max( Max( BR,FirstVNF_Mem_Server ),( AMS / MRS ) ) / ( FirstVNF_RAM * ( FirstVNF_RAM - ( DDR + DDR ) ) ) ) )", "choosing": "( ( MUR / Max( RMSe,Max( RMSe,( ( MLU - ( RRSe + DS ) ) - ( MUR - MUC ) ) ) ) ) + ( Min( ( RCSe + RMSe ) ,MLU ) / DS ) )", "obj1": 0.9519038076152304, "obj2": 0.024496692841013273}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) * FirstVNF_CPU_Server ) + ( DDR + PN ) )", "choosing": "( ( DS * RMSe ) + ( ( MLU - MUC ) + ( DS + CS ) ) )", "obj1": 0.9799599198396793, "obj2": 0.009795407663273666}, {"determining": "( ( ( Min( FirstVNF_RAM ,BR ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( ACS / FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM - ( DDR + DDR ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUR ),( RCSe / RMSe ) ) ) + ( Min( ( RCSe + RMSe ) ,( MLU - ( RRSe + DS ) ) ) / DS ) )", "obj1": 0.9599198396793587, "obj2": 0.01933790056298824}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe * MUM ) * Min( ( ( RCSe * DS ) + Min( RRSe ,DS ) ) ,DS ) )", "obj1": 0.6653306613226453, "obj2": 0.228444802800824}, {"determining": "Min( ( RRS * BR ) ,( FirstVNF_CPU + Min( ( ( AMS / FirstVNF_Mem_Server ) - MDR ) ,DDR ) ) )", "choosing": "( ( RCSe * DS ) + Min( ( MUM - Min( RCSe ,( MLU * Max( MUR,RMSe ) ) ) ) ,( ( ( MUR * Max( MUR,Max( MUM,Max( DS,MUM ) ) ) ) - ( MLU * ( ( RMSe * MUC ) - DS ) ) ) - ( MUR * MLU ) ) ) )", "obj1": 0.685370741482966, "obj2": 0.22234114992475715}, {"determining": "Max( Min( DDR ,RRS ),( Const - CRS ) )", "choosing": "( ( ( MUR + MUC ) * DS ) / Min( Min( MUR ,MUM ) ,RMSe ) )", "obj1": 0.6773547094188377, "obj2": 0.22265685361984866}, {"determining": "( ( Min( ( FirstVNF_CPU_Server * BR ) ,( FirstVNF_Mem / RRS ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( PN * FirstVNF_Mem_Server ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( ( RCSe - MUC ) + Max( ( DS - ( RRSe / RRSe ) ),( CS - DS ) ) ) * MUR ) / Min( ( Max( RRSe,MUR ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.6152304609218436, "obj2": 0.2713057612924074}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( Min( ( CRS - ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,RCSe ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.9939879759519038, "obj2": 0.006794936819028679}, {"determining": "( ( FirstVNF_RAM * ( ( RRS * AMS ) * ( FirstVNF_CPU / Const ) ) ) + Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) )", "choosing": "( ( RRSe - RMSe ) - ( DS - ( RCSe - RMSe ) ) )", "obj1": 0.627254509018036, "obj2": 0.2624816897897612}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( MDR + RRS ) ) - ( MDR / ( ( ( MDR + ( Max( FirstVNF_CPU_Server,( CRS + DDR ) ) + ( CRS / Min( Const ,CRS ) ) ) ) - ( MDR + ( Max( FirstVNF_CPU_Server,( CRS + DDR ) ) + ( CRS / Min( Const ,CRS ) ) ) ) ) - ( MDR / BR ) ) ) )", "choosing": "( DS + ( Max( ( ( MUC / ( DS - Max( MLU,Min( RCSe ,DS ) ) ) ) / RCSe ),( Min( RCSe ,DS ) / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 0.6352705410821643, "obj2": 0.26077290173332407}, {"determining": "( ( Min( ACS ,Max( BR,MDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUC / CS ) ) / Min( ( Max( RRSe,MUR ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.6212424849699398, "obj2": 0.2695482371964865}, {"determining": "( ( FirstVNF_RAM_Server / ( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) ) ) + ( DDR + PN ) )", "choosing": "( RRSe + MLU )", "obj1": 0.6332665330661322, "obj2": 0.2612537972248114}, {"determining": "( ( ( ( BR / ACS ) * Min( FirstVNF_Mem ,DDR ) ) - ( MDR + RRS ) ) - ( MDR / ( ( Max( FirstVNF_CPU,MRS ) - ( MDR + RRS ) ) - ( MDR / BR ) ) ) )", "choosing": "( DS + ( Max( ( ( MUC / ( DS - Max( MLU,DS ) ) ) / RCSe ),( MUC / ( DS - Max( MLU,( Min( DS ,MUC ) * ( MUR * DS ) ) ) ) ) ) + CS ) )", "obj1": 0.9979959919839679, "obj2": 0.0009446277924015417}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Max( MLU,( Min( ( RCSe * RRSe ) ,Min( DS ,CS ) ) * MLU ) ) + ( RRSe - MLU ) )", "obj1": 0.6192384769539078, "obj2": 0.2711994108816511}, {"determining": "( ( Max( ARS,Min( CRS ,FirstVNF_Mem_Server ) ) / RRS ) - Min( CRS ,AMS ) )", "choosing": "( ( Max( MLU,( Min( Max( MLU,CS ) ,Min( DS ,( ( DS + RRSe ) / MUR ) ) ) * MLU ) ) - MUM ) + ( RRSe - MLU ) )", "obj1": 0.6232464929859719, "obj2": 0.266582690395257}, {"determining": "( ( Max( ARS,Min( CRS ,FirstVNF_Mem_Server ) ) / RRS ) - Min( CRS ,AMS ) )", "choosing": "( ( Max( MLU,( Min( Max( MLU,CS ) ,Min( DS ,( ( DS + RRSe ) / MUR ) ) ) * MLU ) ) - MUM ) + ( RRSe - MLU ) )", "obj1": 0.6232464929859719, "obj2": 0.266582690395257}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( Min( MUC ,CS ),( MUC - ( RRSe - ( RCSe + RRSe ) ) ) ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.9939879759519038, "obj2": 0.006794936819028679}, {"determining": "( ( Max( Max( ( BR / Min( MRS ,FirstVNF_RAM ) ),( Const - CRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),Min( RMSe ,DS ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "( ( ( Min( PN ,PN ) + Max( RRS,CRS ) ) * ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) )", "choosing": "( MUM + ( Min( MUC ,RMSe ) / ( ( ( RCSe * RCSe ) + ( MUR / MUR ) ) - Max( ( RCSe - MUC ),( MLU - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( Const - FirstVNF_CPU ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( ( ( CS - MUC ) / Min( RMSe ,MLU ) ) * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( Min( ( MRS - ( ( MDR / ACS ) + MDR ) ) ,FirstVNF_RAM ),AMS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,( RMSe * Min( MUM ,MLU ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( CRS * MDR ) / ACS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / Min( DS ,RRSe ) ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - Max( FirstVNF_Mem,DDR ) )", "choosing": "( ( RMSe / RMSe ) + Min( ( RCSe + CS ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( ( DDR / ( Max( ( DDR - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * AMS ) ) + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( ( MLU + Max( ( CS * MUC ),RCSe ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( Min( Max( CRS,DDR ) ,( ( AMS - Const ) * ( FirstVNF_CPU * AMS ) ) ) - Min( Const ,Const ) ) )", "choosing": "( RMSe * Min( ( ( Min( ( MUR + ( ( MLU * DS ) - Max( DS,MUM ) ) ) ,( DS / ( Max( MLU,CS ) * ( MLU / RRSe ) ) ) ) + CS ) + ( ( MUM / RMSe ) / RMSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ARS ) - Min( CRS ,AMS ) )", "choosing": "( ( MUM - MUM ) + ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( AMS,DDR ) ) / ( ( RRS - FirstVNF_RAM ) / ( MRS / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( RRSe * MUR ) ,Min( ( RRSe / DS ) ,Max( MUR,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( ( DS * MUC ) ,( DS + MLU ) ) ,( ( RRSe + MLU ) - ( DS * MUM ) ) ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) + Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( Min( ( DS * MUC ) ,( DS + MLU ) ) ,( RCSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( RCSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS + Const ) ,( FirstVNF_CPU_Server - BR ) ) * Min( ( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ,( PN / FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( Max( ( RMSe + CS ),( CS * MUC ) ) + MLU ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / ( ( MUR + MLU ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR * ( ( Max( CRS,ARS ) * ( AMS - FirstVNF_CPU_Server ) ) + BR ) ) / FirstVNF_CPU ) * FirstVNF_RAM_Server ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "Max( ( MLU / ( RMSe - MUM ) ),Min( ( MLU - MLU ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) ) ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( RRSe / MUR ) ) ,( ( MUM / RRSe ) * Max( ( RRSe * RMSe ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) ) ,( ( ( BR / MRS ) * MDR ) + ARS ) )", "choosing": "Max( Min( Max( ( RCSe * RRSe ),( RRSe / MUM ) ) ,( ( MUR * CS ) / Min( MUR ,RMSe ) ) ),( Min( ( RCSe / CS ) ,( RCSe + MUC ) ) + ( ( MUM * MUC ) + Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( DDR,PN ) / ( ARS * FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( MUM / RCSe ) - RCSe ) / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( Min( ( MRS - ( ( MDR / ACS ) + MDR ) ) ,FirstVNF_RAM ),AMS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,( RMSe * Min( MUM ,MLU ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + ( ( Min( ( FirstVNF_CPU_Server * BR ) ,Max( BR,MDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / MUC ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR + MDR ) + ( RRS - FirstVNF_Mem ) ) + Min( ( ACS / FirstVNF_Mem ) ,( FirstVNF_Mem - RRS ) ) ) * ( Min( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,BR ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUM * RRSe ) - Max( Min( ( DS / MUC ) ,( DS - MLU ) ),( ( MUM - MUM ) / MUM ) ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( Max( BR,MDR ) ,CRS ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( Min( MLU ,( MUR - MUM ) ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( MUR,( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,( BR - FirstVNF_Mem_Server ) ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,( MUR / CS ) ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * Max( ( RCSe / MUC ),( RRSe - RMSe ) ) ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Const + RRS ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),( RCSe * ( CS + RCSe ) ) ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( DS + ( MUM / ( MUR - RMSe ) ) ) / ( MLU / CS ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( ACS,MRS ) ) ) )", "choosing": "Max( ( MUM * ( DS + ( MUM / ( MUR - RMSe ) ) ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - DDR ) - FirstVNF_CPU_Server ) + Const ) * Min( RRS ,FirstVNF_RAM ) )", "choosing": "Min( ( Min( MLU ,( ( MLU * DS ) - ( ( ( Min( RRSe ,MUM ) + MLU ) * DS ) * ( ( Max( MUC,RRSe ) - RMSe ) * ( MUR * ( RMSe - RCSe ) ) ) ) ) ) - RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,MRS ) * RRS ) + AMS ) - Max( FirstVNF_Mem,AMS ) )", "choosing": "( ( MLU * Min( RMSe ,MLU ) ) + ( ( RRSe / RRSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( DS + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_CPU_Server ) + ( DDR + PN ) ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + DDR ) ) - ( MRS + PN ) )", "choosing": "Max( Min( RRSe ,CS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( ( FirstVNF_Mem_Server - CRS ) / MRS ) ) - Min( CRS ,AMS ) )", "choosing": "( ( Max( MLU,( Min( ( MLU * RRSe ) ,Min( DS ,CS ) ) * MLU ) ) - MUM ) + ( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( ( FirstVNF_Mem_Server - PN ) / MRS ) )", "choosing": "( ( MLU * ( Max( MLU,( Min( RCSe ,Min( DS ,CS ) ) * MLU ) ) - MUM ) ) + Min( ( RCSe + CS ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - BR ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) )", "choosing": "Max( Min( RRSe ,( ( MLU * RMSe ) + ( MLU - Min( Min( RRSe ,DS ) ,Max( DS,RRSe ) ) ) ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem_Server - ( MDR * ( ( PN - Max( DDR,FirstVNF_RAM_Server ) ) - BR ) ) ) / MRS ) )", "choosing": "( ( Min( ( RCSe + CS ) ,( MLU * RRSe ) ) * RMSe ) + Min( ( RCSe + CS ) ,( Min( RRSe ,DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) )", "choosing": "( ( MLU * RMSe ) + Min( ( RCSe + CS ) ,( MLU * Min( ( RCSe + CS ) ,( MLU * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + AMS ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) ) - ( ( FirstVNF_Mem_Server - CRS ) / MRS ) )", "choosing": "( ( MLU * RMSe ) + Min( ( RCSe + CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / ( AMS - ( MDR / BR ) ) )", "choosing": "( ( ( DS + CS ) / RCSe ) - Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) - ( FirstVNF_RAM / BR ) )", "choosing": "( DS + ( DS + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS - ( MDR / BR ) )", "choosing": "( ( RRSe / RCSe ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( ( DDR / ( Max( ( DDR - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * AMS ) ) + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( ( MLU + Max( ( CS * MUC ),RCSe ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( ( DDR / ( Max( ( DDR - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * AMS ) ) + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( ( MLU + Max( ( CS * MUC ),RCSe ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,( Max( FirstVNF_CPU,MRS ) - ( MDR + RRS ) ) ) - ( MDR + RRS ) ) - ( MDR / BR ) )", "choosing": "( DS + ( Max( ( Max( Min( MUR ,Max( MLU,DS ) ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( BR - ( MDR + RRS ) ) )", "choosing": "( Max( ( Max( Min( MUR ,MUC ),MUM ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) * Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) - ( MDR + RRS ) ) - FirstVNF_Mem_Server )", "choosing": "( DS + ( Max( ( Min( MLU ,DS ) / RCSe ),( MUC / ( DS - Max( MLU,DS ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) - Min( CRS ,AMS ) )", "choosing": "( ( MUM - MUM ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( ( MDR - ARS ) - Min( CRS ,AMS ) ) )", "choosing": "( RMSe * Min( ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ARS ) - Min( CRS ,( ARS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM - MUM ) + ( ( ( RMSe * Min( MLU ,DS ) ) * CS ) / Max( RRSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * CRS ) ,( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) * Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + PN ) - ARS ) - Min( CRS ,AMS ) )", "choosing": "( ( MUM - MUM ) + ( ( RMSe * CS ) / Max( RRSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,RRS ) ) ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - ARS ) / Const ) ,( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( Min( MUC ,MLU ) ,CS ) / RRSe ) * ( ( RMSe / RCSe ) * DS ) ) * ( RMSe / MLU ) ) + ( MLU / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - ARS ) / Const ) ,( Min( AMS ,DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( Min( MUC ,( RRSe / DS ) ) ,CS ) / RRSe ) * ( ( RMSe / RCSe ) * DS ) ) * ( RMSe / MLU ) ) + ( MLU / RRSe ) )", "obj1": 1.0, "obj2": 0.0}]}